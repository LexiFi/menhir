State 0:
## Known stack suffix:
##
## LR(1) items:
iso_main' -> . iso_main [ # ]
## Transitions:
-- On TIsoType shift to state 1
-- On TIsoTopLevel shift to state 375
-- On TIsoStatement shift to state 899
-- On TIsoExpression shift to state 909
-- On TIsoDeclaration shift to state 919
-- On iso_main shift to state 930
## Reductions:

State 1:
## Known stack suffix:
## TIsoType
## LR(1) items:
iso_main -> TIsoType . ctype list(iso(ctype)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 366
-- On const_vol shift to state 158
## Reductions:

State 2:
## Known stack suffix:
## Tvolatile
## LR(1) items:
const_vol -> Tvolatile . [ Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tchar TTypeId TRuleName TMetaType TIdent ]
## Transitions:
## Reductions:
-- On Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tchar TTypeId TRuleName TMetaType TIdent
--   reduce production const_vol -> Tvolatile

State 3:
## Known stack suffix:
## Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ TRuleName TRightIso TOCro TMid0 TIso TIdent TComma TCPar0 TCPar TCBrace EOF ]
## Transitions:
-- On TMul shift to state 4
-- On nonempty_list(TMul) shift to state 6
## Reductions:

State 4:
## Known stack suffix:
## TMul
## LR(1) items:
nonempty_list(TMul) -> TMul . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
nonempty_list(TMul) -> TMul . nonempty_list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On nonempty_list(TMul) shift to state 5
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production nonempty_list(TMul) -> TMul

State 5:
## Known stack suffix:
## TMul nonempty_list(TMul)
## LR(1) items:
nonempty_list(TMul) -> TMul nonempty_list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production nonempty_list(TMul) -> TMul nonempty_list(TMul)

State 6:
## Known stack suffix:
## Tvoid nonempty_list(TMul)
## LR(1) items:
ctype -> Tvoid nonempty_list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype -> Tvoid nonempty_list(TMul)

State 7:
## Known stack suffix:
## Tunsigned
## LR(1) items:
ctype_qualif -> Tunsigned . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype_qualif -> Tunsigned

State 8:
## Known stack suffix:
## Tunion
## LR(1) items:
struct_or_union -> Tunion . [ TMetaId TIdent ]
## Transitions:
## Reductions:
-- On TMetaId TIdent
--   reduce production struct_or_union -> Tunion

State 9:
## Known stack suffix:
## Tstruct
## LR(1) items:
struct_or_union -> Tstruct . [ TMetaId TIdent ]
## Transitions:
## Reductions:
-- On TMetaId TIdent
--   reduce production struct_or_union -> Tstruct

State 10:
## Known stack suffix:
## Tsigned
## LR(1) items:
ctype_qualif -> Tsigned . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype_qualif -> Tsigned

State 11:
## Known stack suffix:
## Tshort
## LR(1) items:
generic_ctype -> Tshort . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tshort

State 12:
## Known stack suffix:
## Tlong
## LR(1) items:
generic_ctype -> Tlong . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tlong

State 13:
## Known stack suffix:
## Tint
## LR(1) items:
generic_ctype -> Tint . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tint

State 14:
## Known stack suffix:
## Tfloat
## LR(1) items:
generic_ctype -> Tfloat . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tfloat

State 15:
## Known stack suffix:
## Tdouble
## LR(1) items:
generic_ctype -> Tdouble . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tdouble

State 16:
## Known stack suffix:
## Tconst
## LR(1) items:
const_vol -> Tconst . [ Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tchar TTypeId TRuleName TMetaType TIdent ]
## Transitions:
## Reductions:
-- On Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tchar TTypeId TRuleName TMetaType TIdent
--   reduce production const_vol -> Tconst

State 17:
## Known stack suffix:
## Tchar
## LR(1) items:
generic_ctype -> Tchar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> Tchar

State 18:
## Known stack suffix:
## TTypeId
## LR(1) items:
generic_ctype -> TTypeId . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> TTypeId

State 19:
## Known stack suffix:
## TRuleName
## LR(1) items:
generic_ctype -> TRuleName . TDot TIdent [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TDot shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
generic_ctype -> TRuleName TDot . TIdent [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TIdent shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## TRuleName TDot TIdent
## LR(1) items:
generic_ctype -> TRuleName TDot TIdent . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> TRuleName TDot TIdent

State 22:
## Known stack suffix:
## TMetaType
## LR(1) items:
generic_ctype -> TMetaType . TOBrace struct_decl_list TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> TMetaType . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 23
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> TMetaType
** Conflict on TOBrace

State 23:
## Known stack suffix:
## TMetaType TOBrace
## LR(1) items:
generic_ctype -> TMetaType TOBrace . struct_decl_list TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TEllipsis shift to state 29
-- On struct_or_union shift to state 32
-- On struct_decl_list_start shift to state 37
-- On struct_decl_list shift to state 364
-- On struct_decl shift to state 40
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On edots_when(TEllipsis,struct_decl) shift to state 351
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On const_vol shift to state 357
## Reductions:

State 24:
## Known stack suffix:
## Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ TMetaId TIdent ]
fn_ctype -> Tvoid . list(TMul) [ TOPar ]
## Transitions:
-- On TMul shift to state 25
-- On nonempty_list(TMul) shift to state 6
-- On list(TMul) shift to state 27
## Reductions:
-- On TOPar
--   reduce production list(TMul) ->

State 25:
## Known stack suffix:
## TMul
## LR(1) items:
list(TMul) -> TMul . list(TMul) [ TOPar ]
nonempty_list(TMul) -> TMul . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
nonempty_list(TMul) -> TMul . nonempty_list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On nonempty_list(TMul) shift to state 5
-- On list(TMul) shift to state 26
## Reductions:
-- On TOPar
--   reduce production list(TMul) ->
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production nonempty_list(TMul) -> TMul
** Conflict on TOPar

State 26:
## Known stack suffix:
## TMul list(TMul)
## LR(1) items:
list(TMul) -> TMul list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(TMul) -> TMul list(TMul)

State 27:
## Known stack suffix:
## Tvoid list(TMul)
## LR(1) items:
fn_ctype -> Tvoid list(TMul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
## Transitions:
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl
--   reduce production fn_ctype -> Tvoid list(TMul)

State 28:
## Known stack suffix:
## TIdent
## LR(1) items:
pure_ident -> TIdent . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TUsing TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TMPtVirg TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TExtends TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDepends TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TUsing TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TMPtVirg TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TExtends TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDepends TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production pure_ident -> TIdent

State 29:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,struct_decl) -> TEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
edots_when(TEllipsis,struct_decl) -> TEllipsis . TWhen TNotEq struct_decl TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
## Transitions:
-- On TWhen shift to state 30
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace
--   reduce production edots_when(TEllipsis,struct_decl) -> TEllipsis

State 30:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,struct_decl) -> TEllipsis TWhen . TNotEq struct_decl TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
## Transitions:
-- On TNotEq shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,struct_decl) -> TEllipsis TWhen TNotEq . struct_decl TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On struct_decl shift to state 362
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On const_vol shift to state 357
## Reductions:

State 32:
## Known stack suffix:
## struct_or_union
## LR(1) items:
generic_ctype -> struct_or_union . ident [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> struct_or_union . ident TOBrace struct_decl_list TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 35
## Reductions:

State 33:
## Known stack suffix:
## TMetaId
## LR(1) items:
ident -> TMetaId . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production ident -> TMetaId

State 34:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident -> pure_ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TCBrace TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production ident -> pure_ident

State 35:
## Known stack suffix:
## struct_or_union ident
## LR(1) items:
generic_ctype -> struct_or_union ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> struct_or_union ident . TOBrace struct_decl_list TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 36
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> struct_or_union ident
** Conflict on TOBrace

State 36:
## Known stack suffix:
## struct_or_union ident TOBrace
## LR(1) items:
generic_ctype -> struct_or_union ident TOBrace . struct_decl_list TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TEllipsis shift to state 29
-- On struct_or_union shift to state 32
-- On struct_decl_list_start shift to state 37
-- On struct_decl_list shift to state 38
-- On struct_decl shift to state 40
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On edots_when(TEllipsis,struct_decl) shift to state 351
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On const_vol shift to state 357
## Reductions:

State 37:
## Known stack suffix:
## struct_decl_list_start
## LR(1) items:
struct_decl_list -> struct_decl_list_start . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production struct_decl_list -> struct_decl_list_start

State 38:
## Known stack suffix:
## struct_or_union ident TOBrace struct_decl_list
## LR(1) items:
generic_ctype -> struct_or_union ident TOBrace struct_decl_list . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## struct_or_union ident TOBrace struct_decl_list TCBrace
## LR(1) items:
generic_ctype -> struct_or_union ident TOBrace struct_decl_list TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> struct_or_union ident TOBrace struct_decl_list TCBrace

State 40:
## Known stack suffix:
## struct_decl
## LR(1) items:
struct_decl_list_start -> struct_decl . [ TCBrace ]
struct_decl_list_start -> struct_decl . struct_decl_list_start [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TEllipsis shift to state 29
-- On struct_or_union shift to state 32
-- On struct_decl_list_start shift to state 41
-- On struct_decl shift to state 40
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On edots_when(TEllipsis,struct_decl) shift to state 351
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On const_vol shift to state 357
## Reductions:
-- On TCBrace
--   reduce production struct_decl_list_start -> struct_decl

State 41:
## Known stack suffix:
## struct_decl struct_decl_list_start
## LR(1) items:
struct_decl_list_start -> struct_decl struct_decl_list_start . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production struct_decl_list_start -> struct_decl struct_decl_list_start

State 42:
## Known stack suffix:
## pure_ident
## LR(1) items:
struct_decl -> pure_ident . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 307
## Reductions:

State 43:
## Known stack suffix:
## ident
## LR(1) items:
d_ident -> ident . list(array_dec) [ TPtVirg TEq TComma TCPar ]
## Transitions:
-- On TOCro shift to state 44
-- On list(array_dec) shift to state 304
-- On array_dec shift to state 305
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production list(array_dec) ->

State 44:
## Known stack suffix:
## TOCro
## LR(1) items:
array_dec -> TOCro . option(eexpr) TCCro [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 302
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TCCro
--   reduce production option(eexpr) ->

State 45:
## Known stack suffix:
## TTilde
## LR(1) items:
unary_op -> TTilde . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TTilde

State 46:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TString . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TString

State 47:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof . unary_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
unary_expr(eexpr,dot_expressions) -> TSizeof . TOPar ctype TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 298
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 301
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
## Reductions:

State 48:
## Known stack suffix:
## TPlus
## LR(1) items:
unary_op -> TPlus . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TPlus

State 49:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 . midzero_list(eexpr) TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On midzero_list(eexpr) shift to state 296
-- On func_ident shift to state 85
-- On eexpr shift to state 139
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 50:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar cast_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 278
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 293
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 51:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
nest_expressions -> TOEllipsis . option(whenexp) expr_dots(TEllipsis) TCEllipsis [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TComma TCPar0 TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TWhen shift to state 52
-- On whenexp shift to state 283
-- On option(whenexp) shift to state 284
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd
--   reduce production option(whenexp) ->

State 52:
## Known stack suffix:
## TWhen
## LR(1) items:
whenexp -> TWhen . TNotEq eexpr TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd ]
## Transitions:
-- On TNotEq shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## TWhen TNotEq
## LR(1) items:
whenexp -> TWhen TNotEq . eexpr TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 281
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 54:
## Known stack suffix:
## TMul
## LR(1) items:
unary_op -> TMul . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TMul

State 55:
## Known stack suffix:
## TMinus
## LR(1) items:
unary_op -> TMinus . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TMinus

State 56:
## Known stack suffix:
## TMetaLocalFunc
## LR(1) items:
func_ident -> TMetaLocalFunc . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production func_ident -> TMetaLocalFunc

State 57:
## Known stack suffix:
## TMetaId
## LR(1) items:
func_ident -> TMetaId . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production func_ident -> TMetaId

State 58:
## Known stack suffix:
## TMetaFunc
## LR(1) items:
func_ident -> TMetaFunc . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production func_ident -> TMetaFunc

State 59:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaExp . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TMetaExp

State 60:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaErr . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TMetaErr

State 61:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaConst . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TMetaConst

State 62:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TInt . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TInt

State 63:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TInc . unary_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 64
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 280
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
## Reductions:

State 64:
## Known stack suffix:
## TOPar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 278
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 65:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TFloat . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TFloat

State 66:
## Known stack suffix:
## TEllipsis
## LR(1) items:
dot_expressions -> TEllipsis . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production dot_expressions -> TEllipsis

State 67:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TDec . unary_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 64
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 277
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
## Reductions:

State 68:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TChar . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TChar

State 69:
## Known stack suffix:
## TBang
## LR(1) items:
unary_op -> TBang . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TBang

State 70:
## Known stack suffix:
## TAnd
## LR(1) items:
unary_op -> TAnd . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDec TChar TBang TAnd
--   reduce production unary_op -> TAnd

State 71:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> unary_op . unary_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 64
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 72
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
## Reductions:

State 72:
## Known stack suffix:
## unary_op unary_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> unary_op unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> unary_op unary_expr(eexpr,dot_expressions)

State 73:
## Known stack suffix:
## pure_ident
## LR(1) items:
func_ident -> pure_ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDotDot TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCEllipsis TCCro TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production func_ident -> pure_ident

State 74:
## Known stack suffix:
## primary_expr(eexpr,dot_expressions)
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> primary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> primary_expr(eexpr,dot_expressions)

State 75:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions)
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOCro eexpr TCCro [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDot ident [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TPtrOp ident [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TInc [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDec [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOPar eexpr_list_option TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
unary_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 76
-- On TOPar shift to state 78
-- On TOCro shift to state 270
-- On TInc shift to state 273
-- On TDot shift to state 274
-- On TDec shift to state 276
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions)

State 76:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TPtrOp
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp . ident [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TPtrOp ident
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp ident . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp ident

State 78:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar . eexpr_list_option TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 241
-- On eexpr_list_option shift to state 268
-- On eexpr_list shift to state 244
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option ->

State 79:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TString . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TString

State 80:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof . unary_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
unary_expr(eexpr,nest_expressions) -> TSizeof . TOPar ctype TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 145
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 267
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
## Reductions:

State 81:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 . midzero_list(eexpr) TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On midzero_list(eexpr) shift to state 137
-- On func_ident shift to state 85
-- On eexpr shift to state 139
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 82:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . TAssign assign_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . TEq assign_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TEq shift to state 83
-- On TAssign shift to state 135
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions)

State 83:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq . assign_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On assign_expr(eexpr,dot_expressions) shift to state 89
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 84:
## Known stack suffix:
## nest_expressions
## LR(1) items:
dot_expressions -> nest_expressions . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production dot_expressions -> nest_expressions

State 85:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> func_ident . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> func_ident

State 86:
## Known stack suffix:
## dot_expressions
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> dot_expressions . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> dot_expressions

State 87:
## Known stack suffix:
## cond_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> cond_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production assign_expr(eexpr,dot_expressions) -> cond_expr(eexpr,dot_expressions)

State 88:
## Known stack suffix:
## cast_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> cast_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> cast_expr(eexpr,dot_expressions)

State 89:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq assign_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq assign_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq assign_expr(eexpr,dot_expressions)

State 90:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TWhy option(eexpr) TDotDot cond_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TXor shift to state 91
-- On TWhy shift to state 122
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TOrLog shift to state 129
-- On TOr shift to state 131
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
-- On TAndLog shift to state 133
-- On TAnd shift to state 120
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions)

State 91:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TXor
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 93
## Reductions:

State 92:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions)
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions)

State 93:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TXor arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
-- On TAnd shift to state 120
## Reductions:
-- On TXor TWhy TPtVirg TOrLog TOr TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor arith_expr(eexpr,dot_expressions)

State 94:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TSupEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSupEq . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TSupEq arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSupEq arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSupEq arith_expr(eexpr,dot_expressions)

State 96:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShr
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShr . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShr arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShr arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShr arith_expr(eexpr,dot_expressions)

State 98:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TPlus
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TPlus arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus arith_expr(eexpr,dot_expressions)

State 100:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMul
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMul arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul arith_expr(eexpr,dot_expressions)

State 102:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMod
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMod . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMod arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMod arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMod arith_expr(eexpr,dot_expressions)

State 104:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TDiv
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDiv . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TDiv arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDiv arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDiv arith_expr(eexpr,dot_expressions)

State 106:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMinus
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMinus arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus arith_expr(eexpr,dot_expressions)

State 108:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShl
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShl . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShl arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShl arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShl arith_expr(eexpr,dot_expressions)

State 110:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TSup
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSup . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TSup arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSup arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TSup arith_expr(eexpr,dot_expressions)

State 112:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TNotEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TNotEq arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq arith_expr(eexpr,dot_expressions)

State 114:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TInfEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInfEq . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TInfEq arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInfEq arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInfEq arith_expr(eexpr,dot_expressions)

State 116:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TInf
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInf . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TInf arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInf arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TSupEq TSup TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TInf arith_expr(eexpr,dot_expressions)

State 118:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TEqEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TEqEq arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TPtVirg TOrLog TOr TNotEq TMid0 TLineEnd TEqEq TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq arith_expr(eexpr,dot_expressions)

State 120:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAnd
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAnd arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
## Reductions:
-- On TXor TWhy TPtVirg TOrLog TOr TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd arith_expr(eexpr,dot_expressions)

State 122:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy . option(eexpr) TDotDot cond_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 123
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 123:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr)
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) . TDotDot cond_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TDotDot shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot . cond_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 125
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 125:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,dot_expressions)
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,dot_expressions)

State 126:
## Known stack suffix:
## eexpr
## LR(1) items:
option(eexpr) -> eexpr . [ TPtVirg TDotDot TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TDotDot TCPar TCCro
--   reduce production option(eexpr) -> eexpr

State 127:
## Known stack suffix:
## basic_expr(eexpr,dot_expressions)
## LR(1) items:
eexpr -> basic_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production eexpr -> basic_expr(eexpr,dot_expressions)

State 128:
## Known stack suffix:
## assign_expr(eexpr,dot_expressions)
## LR(1) items:
basic_expr(eexpr,dot_expressions) -> assign_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production basic_expr(eexpr,dot_expressions) -> assign_expr(eexpr,dot_expressions)

State 129:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOrLog
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOrLog arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 91
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TOr shift to state 131
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
-- On TAndLog shift to state 133
-- On TAnd shift to state 120
## Reductions:
-- On TWhy TPtVirg TOrLog TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog arith_expr(eexpr,dot_expressions)

State 131:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOr
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOr arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 91
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
-- On TAnd shift to state 120
## Reductions:
-- On TWhy TPtVirg TOrLog TOr TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr arith_expr(eexpr,dot_expressions)

State 133:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAndLog
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog . arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On arith_expr(eexpr,dot_expressions) shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAndLog arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDiv arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMod arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShl arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInf arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSup arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TInfEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TSupEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog arith_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 91
-- On TSupEq shift to state 94
-- On TSup shift to state 110
-- On TShr shift to state 96
-- On TShl shift to state 108
-- On TPlus shift to state 98
-- On TOr shift to state 131
-- On TNotEq shift to state 112
-- On TMul shift to state 100
-- On TMod shift to state 102
-- On TMinus shift to state 106
-- On TInfEq shift to state 114
-- On TInf shift to state 116
-- On TEqEq shift to state 118
-- On TDiv shift to state 104
-- On TAnd shift to state 120
## Reductions:
-- On TWhy TPtVirg TOrLog TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro TAndLog
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog arith_expr(eexpr,dot_expressions)

State 135:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TAssign
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TAssign . assign_expr(eexpr,dot_expressions) [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On assign_expr(eexpr,dot_expressions) shift to state 136
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 136:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TAssign assign_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TAssign assign_expr(eexpr,dot_expressions) . [ TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TLineEnd TEllipsis TDotDot TCPar0 TCPar TCCro
--   reduce production assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TAssign assign_expr(eexpr,dot_expressions)

State 137:
## Known stack suffix:
## TOPar0 midzero_list(eexpr)
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr) . TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## TOPar0 midzero_list(eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr) TCPar0 . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr) TCPar0

State 139:
## Known stack suffix:
## eexpr
## LR(1) items:
midzero_list(eexpr) -> eexpr . list(mzl(eexpr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 140
-- On mzl(eexpr) shift to state 142
-- On list(mzl(eexpr)) shift to state 144
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->

State 140:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(eexpr) -> TMid0 . eexpr [ TMid0 TCPar0 ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 141
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 141:
## Known stack suffix:
## TMid0 eexpr
## LR(1) items:
mzl(eexpr) -> TMid0 eexpr . [ TMid0 TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TCPar0
--   reduce production mzl(eexpr) -> TMid0 eexpr

State 142:
## Known stack suffix:
## mzl(eexpr)
## LR(1) items:
list(mzl(eexpr)) -> mzl(eexpr) . list(mzl(eexpr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 140
-- On mzl(eexpr) shift to state 142
-- On list(mzl(eexpr)) shift to state 143
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->

State 143:
## Known stack suffix:
## mzl(eexpr) list(mzl(eexpr))
## LR(1) items:
list(mzl(eexpr)) -> mzl(eexpr) list(mzl(eexpr)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) -> mzl(eexpr) list(mzl(eexpr))

State 144:
## Known stack suffix:
## eexpr list(mzl(eexpr))
## LR(1) items:
midzero_list(eexpr) -> eexpr list(mzl(eexpr)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production midzero_list(eexpr) -> eexpr list(mzl(eexpr))

State 145:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar . ctype TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 149
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 156
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 146:
## Known stack suffix:
## generic_ctype
## LR(1) items:
ctype -> generic_ctype . list(TMul) [ TRuleName TRightIso TOCro TMid0 TIso TIdent TComma TCPar0 TCPar TCBrace EOF ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 148
## Reductions:
-- On TRuleName TRightIso TOCro TMid0 TIso TIdent TComma TCPar0 TCPar TCBrace EOF
--   reduce production list(TMul) ->

State 147:
## Known stack suffix:
## TMul
## LR(1) items:
list(TMul) -> TMul . list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 26
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(TMul) ->
** Conflict on TMul

State 148:
## Known stack suffix:
## generic_ctype list(TMul)
## LR(1) items:
ctype -> generic_ctype list(TMul) . [ TRuleName TRightIso TOCro TMid0 TIso TIdent TComma TCPar0 TCPar TCBrace EOF ]
## Transitions:
## Reductions:
-- On TRuleName TRightIso TOCro TMid0 TIso TIdent TComma TCPar0 TCPar TCBrace EOF
--   reduce production ctype -> generic_ctype list(TMul)

State 149:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar eexpr . TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar eexpr TCPar . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TOPar eexpr TCPar

State 151:
## Known stack suffix:
## ctype_qualif
## LR(1) items:
generic_ctype -> ctype_qualif . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> ctype_qualif . Tchar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> ctype_qualif . Tshort [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> ctype_qualif . Tint [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
generic_ctype -> ctype_qualif . Tlong [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tshort shift to state 152
-- On Tlong shift to state 153
-- On Tint shift to state 154
-- On Tchar shift to state 155
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> ctype_qualif
** Conflict on Tshort Tlong Tint Tchar

State 152:
## Known stack suffix:
## ctype_qualif Tshort
## LR(1) items:
generic_ctype -> ctype_qualif Tshort . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> ctype_qualif Tshort

State 153:
## Known stack suffix:
## ctype_qualif Tlong
## LR(1) items:
generic_ctype -> ctype_qualif Tlong . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> ctype_qualif Tlong

State 154:
## Known stack suffix:
## ctype_qualif Tint
## LR(1) items:
generic_ctype -> ctype_qualif Tint . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> ctype_qualif Tint

State 155:
## Known stack suffix:
## ctype_qualif Tchar
## LR(1) items:
generic_ctype -> ctype_qualif Tchar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> ctype_qualif Tchar

State 156:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype . TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype TCPar . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype TCPar

State 158:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . generic_ctype list(TMul) [ TRuleName TRightIso TOCro TMid0 TMetaId TIso TIdent TComma TCPar0 TCPar TCBrace EOF ]
ctype -> const_vol . Tvoid nonempty_list(TMul) [ TRuleName TRightIso TOCro TMid0 TMetaId TIso TIdent TComma TCPar0 TCPar TCBrace EOF ]
## Transitions:
-- On Tvoid shift to state 159
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On generic_ctype shift to state 161
-- On ctype_qualif shift to state 151
## Reductions:

State 159:
## Known stack suffix:
## const_vol Tvoid
## LR(1) items:
ctype -> const_vol Tvoid . nonempty_list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 4
-- On nonempty_list(TMul) shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## const_vol Tvoid nonempty_list(TMul)
## LR(1) items:
ctype -> const_vol Tvoid nonempty_list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype -> const_vol Tvoid nonempty_list(TMul)

State 161:
## Known stack suffix:
## const_vol generic_ctype
## LR(1) items:
ctype -> const_vol generic_ctype . list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 162
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(TMul) ->
** Conflict on TMul

State 162:
## Known stack suffix:
## const_vol generic_ctype list(TMul)
## LR(1) items:
ctype -> const_vol generic_ctype list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype -> const_vol generic_ctype list(TMul)

State 163:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaExp . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TMetaExp

State 164:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaErr . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TMetaErr

State 165:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaConst . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TMetaConst

State 166:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TInt . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TInt

State 167:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TInc . unary_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 168
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 266
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
## Reductions:

State 168:
## Known stack suffix:
## TOPar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 149
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 169:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TFloat . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TFloat

State 170:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TDec . unary_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 168
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 265
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
## Reductions:

State 171:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TChar . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> TChar

State 172:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> unary_op . unary_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 168
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 173
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
## Reductions:

State 173:
## Known stack suffix:
## unary_op unary_expr(eexpr,nest_expressions)
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> unary_op unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> unary_op unary_expr(eexpr,nest_expressions)

State 174:
## Known stack suffix:
## primary_expr(eexpr,nest_expressions)
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> primary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> primary_expr(eexpr,nest_expressions)

State 175:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions)
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TOCro eexpr TCCro [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TDot ident [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TPtrOp ident [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TInc [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TDec [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TOPar eexpr_list_option TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
unary_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TPtrOp shift to state 176
-- On TOPar shift to state 178
-- On TOCro shift to state 258
-- On TInc shift to state 261
-- On TDot shift to state 262
-- On TDec shift to state 264
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions)

State 176:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TPtrOp
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp . ident [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 177
## Reductions:

State 177:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TPtrOp ident
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp ident . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp ident

State 178:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar . eexpr_list_option TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 241
-- On eexpr_list_option shift to state 242
-- On eexpr_list shift to state 244
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option ->

State 179:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar . ctype TCPar cast_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
primary_expr(eexpr,nest_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 149
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 180
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 180:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype . TCPar cast_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar . cast_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 185
## Reductions:

State 182:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions)
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions)

State 183:
## Known stack suffix:
## nest_expressions
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> nest_expressions . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> nest_expressions

State 184:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> func_ident . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production primary_expr(eexpr,nest_expressions) -> func_ident

State 185:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,nest_expressions)
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar cast_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar cast_expr(eexpr,nest_expressions)

State 186:
## Known stack suffix:
## TMetaExpList
## LR(1) items:
aexpr -> TMetaExpList . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production aexpr -> TMetaExpList

State 187:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
edots_when(TEllipsis,eexpr) -> TEllipsis . TWhen TNotEq eexpr TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
## Transitions:
-- On TWhen shift to state 188
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd
--   reduce production edots_when(TEllipsis,eexpr) -> TEllipsis

State 188:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen . TNotEq eexpr TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
## Transitions:
-- On TNotEq shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq . eexpr TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 190
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 190:
## Known stack suffix:
## TEllipsis TWhen TNotEq eexpr
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr . TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
## Transitions:
-- On TLineEnd shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## TEllipsis TWhen TNotEq eexpr TLineEnd
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr TLineEnd . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TComma TChar TCPar TBang TAnd
--   reduce production edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr TLineEnd

State 192:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . TAssign assign_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . TEq assign_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TEq shift to state 193
-- On TAssign shift to state 238
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions)

State 193:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TEq
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq . assign_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On assign_expr(eexpr,nest_expressions) shift to state 196
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 194:
## Known stack suffix:
## cond_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> cond_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production assign_expr(eexpr,nest_expressions) -> cond_expr(eexpr,nest_expressions)

State 195:
## Known stack suffix:
## cast_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> cast_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> cast_expr(eexpr,nest_expressions)

State 196:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TEq assign_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq assign_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq assign_expr(eexpr,nest_expressions)

State 197:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TWhy option(eexpr) TDotDot cond_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TXor shift to state 198
-- On TWhy shift to state 228
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TOrLog shift to state 232
-- On TOr shift to state 234
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
-- On TAndLog shift to state 236
-- On TAnd shift to state 226
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions)

State 198:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TXor
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TXor arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
-- On TAnd shift to state 226
## Reductions:
-- On TXor TWhy TRightIso TOrLog TOr TIso TEllipsis TComma TCPar TCEllipsis TCCro TAndLog EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor arith_expr(eexpr,nest_expressions)

State 200:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TSupEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSupEq . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TSupEq arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSupEq arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSupEq arith_expr(eexpr,nest_expressions)

State 202:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShr
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShr . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShr arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShr arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShr arith_expr(eexpr,nest_expressions)

State 204:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TPlus
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 205
## Reductions:

State 205:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TPlus arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMinus TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus arith_expr(eexpr,nest_expressions)

State 206:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMul
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMul arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul arith_expr(eexpr,nest_expressions)

State 208:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMod
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMod . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMod arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMod arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMod arith_expr(eexpr,nest_expressions)

State 210:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TDiv
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDiv . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TDiv arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDiv arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDiv arith_expr(eexpr,nest_expressions)

State 212:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMinus
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMinus arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMinus TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus arith_expr(eexpr,nest_expressions)

State 214:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShl
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShl . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShl arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShl arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShl arith_expr(eexpr,nest_expressions)

State 216:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TSup
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSup . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TSup arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSup arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TSup arith_expr(eexpr,nest_expressions)

State 218:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TNotEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TNotEq arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TOrLog TOr TNotEq TIso TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq arith_expr(eexpr,nest_expressions)

State 220:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TInfEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInfEq . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TInfEq arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInfEq arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInfEq arith_expr(eexpr,nest_expressions)

State 222:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TInf
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInf . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TInf arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInf arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TSupEq TSup TRightIso TOrLog TOr TNotEq TIso TInfEq TInf TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TInf arith_expr(eexpr,nest_expressions)

State 224:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TEqEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TEqEq arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TOrLog TOr TNotEq TIso TEqEq TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq arith_expr(eexpr,nest_expressions)

State 226:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAnd
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAnd arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TOrLog TOr TIso TEllipsis TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd arith_expr(eexpr,nest_expressions)

State 228:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy . option(eexpr) TDotDot cond_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 229
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 229:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr)
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) . TDotDot cond_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TDotDot shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot . cond_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cond_expr(eexpr,nest_expressions) shift to state 231
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 231:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,nest_expressions)
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot cond_expr(eexpr,nest_expressions)

State 232:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOrLog
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOrLog arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 198
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TOr shift to state 234
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
-- On TAndLog shift to state 236
-- On TAnd shift to state 226
## Reductions:
-- On TWhy TRightIso TOrLog TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog arith_expr(eexpr,nest_expressions)

State 234:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOr
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOr arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 198
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
-- On TAnd shift to state 226
## Reductions:
-- On TWhy TRightIso TOrLog TOr TIso TEllipsis TComma TCPar TCEllipsis TCCro TAndLog EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr arith_expr(eexpr,nest_expressions)

State 236:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAndLog
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog . arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 182
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On arith_expr(eexpr,nest_expressions) shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAndLog arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDiv arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMod arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShl arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInf arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSup arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TInfEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TSupEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog arith_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr(eexpr,nest_expressions) [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 198
-- On TSupEq shift to state 200
-- On TSup shift to state 216
-- On TShr shift to state 202
-- On TShl shift to state 214
-- On TPlus shift to state 204
-- On TOr shift to state 234
-- On TNotEq shift to state 218
-- On TMul shift to state 206
-- On TMod shift to state 208
-- On TMinus shift to state 212
-- On TInfEq shift to state 220
-- On TInf shift to state 222
-- On TEqEq shift to state 224
-- On TDiv shift to state 210
-- On TAnd shift to state 226
## Reductions:
-- On TWhy TRightIso TOrLog TIso TEllipsis TComma TCPar TCEllipsis TCCro TAndLog EOF
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog arith_expr(eexpr,nest_expressions)

State 238:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TAssign
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TAssign . assign_expr(eexpr,nest_expressions) [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On assign_expr(eexpr,nest_expressions) shift to state 239
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 239:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TAssign assign_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TAssign assign_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TAssign assign_expr(eexpr,nest_expressions)

State 240:
## Known stack suffix:
## generic_ctype
## LR(1) items:
aexpr -> generic_ctype . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production aexpr -> generic_ctype

State 241:
## Known stack suffix:
## eexpr_list_start
## LR(1) items:
eexpr_list -> eexpr_list_start . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production eexpr_list -> eexpr_list_start

State 242:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option . TCPar [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar

State 244:
## Known stack suffix:
## eexpr_list
## LR(1) items:
eexpr_list_option -> eexpr_list . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option -> eexpr_list

State 245:
## Known stack suffix:
## edots_when(TEllipsis,eexpr)
## LR(1) items:
eexpr_list_start -> edots_when(TEllipsis,eexpr) . list(comma_args(edots_when(TEllipsis,eexpr))) [ TCPar ]
## Transitions:
-- On TComma shift to state 246
-- On list(comma_args(edots_when(TEllipsis,eexpr))) shift to state 252
-- On comma_args(edots_when(TEllipsis,eexpr)) shift to state 253
## Reductions:
-- On TCPar
--   reduce production list(comma_args(edots_when(TEllipsis,eexpr))) ->

State 246:
## Known stack suffix:
## TComma
## LR(1) items:
comma_args(edots_when(TEllipsis,eexpr)) -> TComma . edots_when(TEllipsis,eexpr) [ TComma TCPar ]
comma_args(edots_when(TEllipsis,eexpr)) -> TComma . aexpr [ TComma TCPar ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On edots_when(TEllipsis,eexpr) shift to state 247
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 251
## Reductions:

State 247:
## Known stack suffix:
## TComma edots_when(TEllipsis,eexpr)
## LR(1) items:
comma_args(edots_when(TEllipsis,eexpr)) -> TComma edots_when(TEllipsis,eexpr) . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_args(edots_when(TEllipsis,eexpr)) -> TComma edots_when(TEllipsis,eexpr)

State 248:
## Known stack suffix:
## dexpr
## LR(1) items:
aexpr -> dexpr . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production aexpr -> dexpr

State 249:
## Known stack suffix:
## basic_expr(eexpr,nest_expressions)
## LR(1) items:
dexpr -> basic_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production dexpr -> basic_expr(eexpr,nest_expressions)

State 250:
## Known stack suffix:
## assign_expr(eexpr,nest_expressions)
## LR(1) items:
basic_expr(eexpr,nest_expressions) -> assign_expr(eexpr,nest_expressions) . [ TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso TEllipsis TComma TCPar TCEllipsis TCCro EOF
--   reduce production basic_expr(eexpr,nest_expressions) -> assign_expr(eexpr,nest_expressions)

State 251:
## Known stack suffix:
## TComma aexpr
## LR(1) items:
comma_args(edots_when(TEllipsis,eexpr)) -> TComma aexpr . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_args(edots_when(TEllipsis,eexpr)) -> TComma aexpr

State 252:
## Known stack suffix:
## edots_when(TEllipsis,eexpr) list(comma_args(edots_when(TEllipsis,eexpr)))
## LR(1) items:
eexpr_list_start -> edots_when(TEllipsis,eexpr) list(comma_args(edots_when(TEllipsis,eexpr))) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production eexpr_list_start -> edots_when(TEllipsis,eexpr) list(comma_args(edots_when(TEllipsis,eexpr)))

State 253:
## Known stack suffix:
## comma_args(edots_when(TEllipsis,eexpr))
## LR(1) items:
list(comma_args(edots_when(TEllipsis,eexpr))) -> comma_args(edots_when(TEllipsis,eexpr)) . list(comma_args(edots_when(TEllipsis,eexpr))) [ TCPar ]
## Transitions:
-- On TComma shift to state 246
-- On list(comma_args(edots_when(TEllipsis,eexpr))) shift to state 254
-- On comma_args(edots_when(TEllipsis,eexpr)) shift to state 253
## Reductions:
-- On TCPar
--   reduce production list(comma_args(edots_when(TEllipsis,eexpr))) ->

State 254:
## Known stack suffix:
## comma_args(edots_when(TEllipsis,eexpr)) list(comma_args(edots_when(TEllipsis,eexpr)))
## LR(1) items:
list(comma_args(edots_when(TEllipsis,eexpr))) -> comma_args(edots_when(TEllipsis,eexpr)) list(comma_args(edots_when(TEllipsis,eexpr))) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production list(comma_args(edots_when(TEllipsis,eexpr))) -> comma_args(edots_when(TEllipsis,eexpr)) list(comma_args(edots_when(TEllipsis,eexpr)))

State 255:
## Known stack suffix:
## aexpr
## LR(1) items:
eexpr_list_start -> aexpr . [ TCPar ]
eexpr_list_start -> aexpr . TComma eexpr_list_start [ TCPar ]
## Transitions:
-- On TComma shift to state 256
## Reductions:
-- On TCPar
--   reduce production eexpr_list_start -> aexpr

State 256:
## Known stack suffix:
## aexpr TComma
## LR(1) items:
eexpr_list_start -> aexpr TComma . eexpr_list_start [ TCPar ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 257
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:

State 257:
## Known stack suffix:
## aexpr TComma eexpr_list_start
## LR(1) items:
eexpr_list_start -> aexpr TComma eexpr_list_start . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production eexpr_list_start -> aexpr TComma eexpr_list_start

State 258:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro . eexpr TCCro [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 259
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 259:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr . TCCro [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCCro shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro

State 261:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TInc
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TInc . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TInc

State 262:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDot
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot . ident [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDot ident
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot ident . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot ident

State 264:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDec
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDec . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDot TDiv TDec TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDec

State 265:
## Known stack suffix:
## TDec unary_expr(eexpr,nest_expressions)
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TDec unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> TDec unary_expr(eexpr,nest_expressions)

State 266:
## Known stack suffix:
## TInc unary_expr(eexpr,nest_expressions)
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TInc unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> TInc unary_expr(eexpr,nest_expressions)

State 267:
## Known stack suffix:
## TSizeof unary_expr(eexpr,nest_expressions)
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof unary_expr(eexpr,nest_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPlus TOrLog TOr TNotEq TMul TMod TMinus TIso TInfEq TInf TEqEq TEq TEllipsis TDiv TComma TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,nest_expressions) -> TSizeof unary_expr(eexpr,nest_expressions)

State 268:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option . TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar

State 270:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro . eexpr TCCro [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 271
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 271:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr . TCCro [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TCCro shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro

State 273:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TInc
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TInc . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TInc

State 274:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDot
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot . ident [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDot ident
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot ident . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot ident

State 276:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDec
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDec . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDec

State 277:
## Known stack suffix:
## TDec unary_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TDec unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> TDec unary_expr(eexpr,dot_expressions)

State 278:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar eexpr . TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar eexpr TCPar . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TOPar eexpr TCPar

State 280:
## Known stack suffix:
## TInc unary_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TInc unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> TInc unary_expr(eexpr,dot_expressions)

State 281:
## Known stack suffix:
## TWhen TNotEq eexpr
## LR(1) items:
whenexp -> TWhen TNotEq eexpr . TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd ]
## Transitions:
-- On TLineEnd shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## TWhen TNotEq eexpr TLineEnd
## LR(1) items:
whenexp -> TWhen TNotEq eexpr TLineEnd . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd
--   reduce production whenexp -> TWhen TNotEq eexpr TLineEnd

State 283:
## Known stack suffix:
## whenexp
## LR(1) items:
option(whenexp) -> whenexp . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInt TInc TIdent TFloat TDec TChar TBang TAnd
--   reduce production option(whenexp) -> whenexp

State 284:
## Known stack suffix:
## TOEllipsis option(whenexp)
## LR(1) items:
nest_expressions -> TOEllipsis option(whenexp) . expr_dots(TEllipsis) TCEllipsis [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TComma TCPar0 TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) shift to state 285
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On expr_dots(TEllipsis) shift to state 286
-- On dexpr shift to state 288
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 285:
## Known stack suffix:
## no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr))
## LR(1) items:
expr_dots(TEllipsis) -> no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) . [ TCEllipsis ]
## Transitions:
## Reductions:
-- On TCEllipsis
--   reduce production expr_dots(TEllipsis) -> no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr))

State 286:
## Known stack suffix:
## TOEllipsis option(whenexp) expr_dots(TEllipsis)
## LR(1) items:
nest_expressions -> TOEllipsis option(whenexp) expr_dots(TEllipsis) . TCEllipsis [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TComma TCPar0 TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TCEllipsis shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## TOEllipsis option(whenexp) expr_dots(TEllipsis) TCEllipsis
## LR(1) items:
nest_expressions -> TOEllipsis option(whenexp) expr_dots(TEllipsis) TCEllipsis . [ TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TComma TCPar0 TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TRightIso TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TIso TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TComma TCPar0 TCPar TCEllipsis TCCro TAssign TAndLog TAnd EOF
--   reduce production nest_expressions -> TOEllipsis option(whenexp) expr_dots(TEllipsis) TCEllipsis

State 288:
## Known stack suffix:
## dexpr
## LR(1) items:
no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr . list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TCEllipsis ]
## Transitions:
-- On TEllipsis shift to state 187
-- On list(pair(edots_when(TEllipsis,eexpr),dexpr)) shift to state 289
-- On edots_when(TEllipsis,eexpr) shift to state 290
## Reductions:
-- On TCEllipsis
--   reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) ->

State 289:
## Known stack suffix:
## dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))
## LR(1) items:
no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) . [ TCEllipsis ]
## Transitions:
## Reductions:
-- On TCEllipsis
--   reduce production no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))

State 290:
## Known stack suffix:
## edots_when(TEllipsis,eexpr)
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) . dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TCEllipsis ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 291
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 291:
## Known stack suffix:
## edots_when(TEllipsis,eexpr) dexpr
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr . list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TCEllipsis ]
## Transitions:
-- On TEllipsis shift to state 187
-- On list(pair(edots_when(TEllipsis,eexpr),dexpr)) shift to state 292
-- On edots_when(TEllipsis,eexpr) shift to state 290
## Reductions:
-- On TCEllipsis
--   reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) ->

State 292:
## Known stack suffix:
## edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) . [ TCEllipsis ]
## Transitions:
## Reductions:
-- On TCEllipsis
--   reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))

State 293:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar cast_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . cast_expr(eexpr,dot_expressions) [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 92
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On dot_expressions shift to state 86
-- On cast_expr(eexpr,dot_expressions) shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,dot_expressions)
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar cast_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAndLog TAnd
--   reduce production cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar cast_expr(eexpr,dot_expressions)

State 296:
## Known stack suffix:
## TOPar0 midzero_list(eexpr)
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr) . TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TCPar0 shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## TOPar0 midzero_list(eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr) TCPar0 . [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr) TCPar0

State 298:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TInc TEqEq TEq TEllipsis TDotDot TDot TDiv TDec TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar . ctype TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 278
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 299
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 299:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype . TCPar [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype TCPar . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype TCPar

State 301:
## Known stack suffix:
## TSizeof unary_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof unary_expr(eexpr,dot_expressions) . [ TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TWhy TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TMid0 TLineEnd TInfEq TInf TEqEq TEq TEllipsis TDotDot TDiv TCPar0 TCPar TCCro TAssign TAndLog TAnd
--   reduce production unary_expr(eexpr,dot_expressions) -> TSizeof unary_expr(eexpr,dot_expressions)

State 302:
## Known stack suffix:
## TOCro option(eexpr)
## LR(1) items:
array_dec -> TOCro option(eexpr) . TCCro [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
-- On TCCro shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## TOCro option(eexpr) TCCro
## LR(1) items:
array_dec -> TOCro option(eexpr) TCCro . [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
## Reductions:
-- On TPtVirg TOCro TEq TComma TCPar
--   reduce production array_dec -> TOCro option(eexpr) TCCro

State 304:
## Known stack suffix:
## ident list(array_dec)
## LR(1) items:
d_ident -> ident list(array_dec) . [ TPtVirg TEq TComma TCPar ]
## Transitions:
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production d_ident -> ident list(array_dec)

State 305:
## Known stack suffix:
## array_dec
## LR(1) items:
list(array_dec) -> array_dec . list(array_dec) [ TPtVirg TEq TComma TCPar ]
## Transitions:
-- On TOCro shift to state 44
-- On list(array_dec) shift to state 306
-- On array_dec shift to state 305
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production list(array_dec) ->

State 306:
## Known stack suffix:
## array_dec list(array_dec)
## LR(1) items:
list(array_dec) -> array_dec list(array_dec) . [ TPtVirg TEq TComma TCPar ]
## Transitions:
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production list(array_dec) -> array_dec list(array_dec)

State 307:
## Known stack suffix:
## pure_ident d_ident
## LR(1) items:
struct_decl -> pure_ident d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TPtVirg shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## pure_ident d_ident TPtVirg
## LR(1) items:
struct_decl -> pure_ident d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace
--   reduce production struct_decl -> pure_ident d_ident TPtVirg

State 309:
## Known stack suffix:
## generic_ctype
## LR(1) items:
ctype -> generic_ctype . list(TMul) [ TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF ]
fn_ctype -> generic_ctype . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 310
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TPtVirg TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TFunDecl TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF
--   reduce production list(TMul) ->

State 310:
## Known stack suffix:
## generic_ctype list(TMul)
## LR(1) items:
ctype -> generic_ctype list(TMul) . [ TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF ]
fn_ctype -> generic_ctype list(TMul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
## Transitions:
## Reductions:
-- On TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF
--   reduce production ctype -> generic_ctype list(TMul)
-- On Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl
--   reduce production fn_ctype -> generic_ctype list(TMul)

State 311:
## Known stack suffix:
## fn_ctype
## LR(1) items:
struct_decl -> fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TOPar shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## fn_ctype TOPar
## LR(1) items:
struct_decl -> fn_ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TMul shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## fn_ctype TOPar TMul
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TCPar shift to state 315
## Reductions:

State 315:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TOPar shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 337
-- On decl_list(name_opt_decl) shift to state 348
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 317:
## Known stack suffix:
## Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ TMetaId TIdent TComma TCPar ]
decl -> Tvoid . [ TComma TCPar ]
fn_ctype -> Tvoid . list(TMul) [ TOPar ]
## Transitions:
-- On TMul shift to state 318
-- On nonempty_list(TMul) shift to state 6
-- On list(TMul) shift to state 27
## Reductions:
-- On TComma TCPar
--   reduce production decl -> Tvoid
-- On TOPar
--   reduce production list(TMul) ->

State 318:
## Known stack suffix:
## TMul
## LR(1) items:
list(TMul) -> TMul . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
nonempty_list(TMul) -> TMul . [ TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF ]
nonempty_list(TMul) -> TMul . nonempty_list(TMul) [ TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF ]
## Transitions:
-- On TMul shift to state 318
-- On nonempty_list(TMul) shift to state 5
-- On list(TMul) shift to state 26
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl
--   reduce production list(TMul) ->
-- On TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TComma TCPar0 TCPar TArobArob TArob EOF
--   reduce production nonempty_list(TMul) -> TMul

State 319:
## Known stack suffix:
## TMetaParamList
## LR(1) items:
one_dec(name_opt_decl) -> TMetaParamList . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production one_dec(name_opt_decl) -> TMetaParamList

State 320:
## Known stack suffix:
## TMetaParam
## LR(1) items:
decl -> TMetaParam . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production decl -> TMetaParam

State 321:
## Known stack suffix:
## TEllipsis
## LR(1) items:
decl_list_start(name_opt_decl) -> TEllipsis . list(comma_decls(TEllipsis,name_opt_decl)) [ TCPar ]
## Transitions:
-- On TComma shift to state 322
-- On list(comma_decls(TEllipsis,name_opt_decl)) shift to state 345
-- On comma_decls(TEllipsis,name_opt_decl) shift to state 346
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,name_opt_decl)) ->

State 322:
## Known stack suffix:
## TComma
## LR(1) items:
comma_decls(TEllipsis,name_opt_decl) -> TComma . TEllipsis [ TComma TCPar ]
comma_decls(TEllipsis,name_opt_decl) -> TComma . one_dec(name_opt_decl) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 323
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 324
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 323:
## Known stack suffix:
## TComma TEllipsis
## LR(1) items:
comma_decls(TEllipsis,name_opt_decl) -> TComma TEllipsis . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_decls(TEllipsis,name_opt_decl) -> TComma TEllipsis

State 324:
## Known stack suffix:
## TComma one_dec(name_opt_decl)
## LR(1) items:
comma_decls(TEllipsis,name_opt_decl) -> TComma one_dec(name_opt_decl) . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_decls(TEllipsis,name_opt_decl) -> TComma one_dec(name_opt_decl)

State 325:
## Known stack suffix:
## name_opt_decl
## LR(1) items:
one_dec(name_opt_decl) -> name_opt_decl . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production one_dec(name_opt_decl) -> name_opt_decl

State 326:
## Known stack suffix:
## fn_ctype
## LR(1) items:
decl -> fn_ctype . TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> fn_ctype . TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## fn_ctype TOPar
## LR(1) items:
decl -> fn_ctype TOPar . TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> fn_ctype TOPar . TMul TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMul shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## fn_ctype TOPar TMul
## LR(1) items:
decl -> fn_ctype TOPar TMul . ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> fn_ctype TOPar TMul . TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On TCPar shift to state 329
-- On pure_ident shift to state 34
-- On ident shift to state 340
## Reductions:

State 329:
## Known stack suffix:
## fn_ctype TOPar TMul TCPar
## LR(1) items:
name_opt_decl -> fn_ctype TOPar TMul TCPar . TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## fn_ctype TOPar TMul TCPar TOPar
## LR(1) items:
name_opt_decl -> fn_ctype TOPar TMul TCPar TOPar . decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 337
-- On decl_list(name_opt_decl) shift to state 338
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 331:
## Known stack suffix:
## one_dec(name_opt_decl)
## LR(1) items:
decl_list_start(name_opt_decl) -> one_dec(name_opt_decl) . [ TCPar ]
decl_list_start(name_opt_decl) -> one_dec(name_opt_decl) . TComma decl_list_start(name_opt_decl) [ TCPar ]
## Transitions:
-- On TComma shift to state 332
## Reductions:
-- On TCPar
--   reduce production decl_list_start(name_opt_decl) -> one_dec(name_opt_decl)

State 332:
## Known stack suffix:
## one_dec(name_opt_decl) TComma
## LR(1) items:
decl_list_start(name_opt_decl) -> one_dec(name_opt_decl) TComma . decl_list_start(name_opt_decl) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 333
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 333:
## Known stack suffix:
## one_dec(name_opt_decl) TComma decl_list_start(name_opt_decl)
## LR(1) items:
decl_list_start(name_opt_decl) -> one_dec(name_opt_decl) TComma decl_list_start(name_opt_decl) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list_start(name_opt_decl) -> one_dec(name_opt_decl) TComma decl_list_start(name_opt_decl)

State 334:
## Known stack suffix:
## decl
## LR(1) items:
name_opt_decl -> decl . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production name_opt_decl -> decl

State 335:
## Known stack suffix:
## ctype
## LR(1) items:
decl -> ctype . ident [ TComma TCPar ]
name_opt_decl -> ctype . [ TComma TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 336
## Reductions:
-- On TComma TCPar
--   reduce production name_opt_decl -> ctype

State 336:
## Known stack suffix:
## ctype ident
## LR(1) items:
decl -> ctype ident . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production decl -> ctype ident

State 337:
## Known stack suffix:
## decl_list_start(name_opt_decl)
## LR(1) items:
decl_list(name_opt_decl) -> decl_list_start(name_opt_decl) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list(name_opt_decl) -> decl_list_start(name_opt_decl)

State 338:
## Known stack suffix:
## fn_ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
name_opt_decl -> fn_ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) . TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## fn_ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
name_opt_decl -> fn_ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production name_opt_decl -> fn_ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar

State 340:
## Known stack suffix:
## fn_ctype TOPar TMul ident
## LR(1) items:
decl -> fn_ctype TOPar TMul ident . TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 341
## Reductions:

State 341:
## Known stack suffix:
## fn_ctype TOPar TMul ident TCPar
## LR(1) items:
decl -> fn_ctype TOPar TMul ident TCPar . TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## fn_ctype TOPar TMul ident TCPar TOPar
## LR(1) items:
decl -> fn_ctype TOPar TMul ident TCPar TOPar . decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 337
-- On decl_list(name_opt_decl) shift to state 343
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 343:
## Known stack suffix:
## fn_ctype TOPar TMul ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl -> fn_ctype TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) . TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 344
## Reductions:

State 344:
## Known stack suffix:
## fn_ctype TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl -> fn_ctype TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production decl -> fn_ctype TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar

State 345:
## Known stack suffix:
## TEllipsis list(comma_decls(TEllipsis,name_opt_decl))
## LR(1) items:
decl_list_start(name_opt_decl) -> TEllipsis list(comma_decls(TEllipsis,name_opt_decl)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list_start(name_opt_decl) -> TEllipsis list(comma_decls(TEllipsis,name_opt_decl))

State 346:
## Known stack suffix:
## comma_decls(TEllipsis,name_opt_decl)
## LR(1) items:
list(comma_decls(TEllipsis,name_opt_decl)) -> comma_decls(TEllipsis,name_opt_decl) . list(comma_decls(TEllipsis,name_opt_decl)) [ TCPar ]
## Transitions:
-- On TComma shift to state 322
-- On list(comma_decls(TEllipsis,name_opt_decl)) shift to state 347
-- On comma_decls(TEllipsis,name_opt_decl) shift to state 346
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,name_opt_decl)) ->

State 347:
## Known stack suffix:
## comma_decls(TEllipsis,name_opt_decl) list(comma_decls(TEllipsis,name_opt_decl))
## LR(1) items:
list(comma_decls(TEllipsis,name_opt_decl)) -> comma_decls(TEllipsis,name_opt_decl) list(comma_decls(TEllipsis,name_opt_decl)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,name_opt_decl)) -> comma_decls(TEllipsis,name_opt_decl) list(comma_decls(TEllipsis,name_opt_decl))

State 348:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TCPar shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TPtVirg shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
struct_decl -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace
--   reduce production struct_decl -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 351:
## Known stack suffix:
## edots_when(TEllipsis,struct_decl)
## LR(1) items:
struct_decl_list_start -> edots_when(TEllipsis,struct_decl) . continue_struct_decl_list [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On struct_decl shift to state 352
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On continue_struct_decl_list shift to state 361
-- On const_vol shift to state 357
## Reductions:
-- On TCBrace
--   reduce production continue_struct_decl_list ->

State 352:
## Known stack suffix:
## struct_decl
## LR(1) items:
continue_struct_decl_list -> struct_decl . struct_decl_list_start [ TCBrace ]
continue_struct_decl_list -> struct_decl . [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 24
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TEllipsis shift to state 29
-- On struct_or_union shift to state 32
-- On struct_decl_list_start shift to state 353
-- On struct_decl shift to state 40
-- On pure_ident shift to state 42
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 311
-- On edots_when(TEllipsis,struct_decl) shift to state 351
-- On ctype_qualif shift to state 151
-- On ctype shift to state 354
-- On const_vol shift to state 357
## Reductions:
-- On TCBrace
--   reduce production continue_struct_decl_list -> struct_decl

State 353:
## Known stack suffix:
## struct_decl struct_decl_list_start
## LR(1) items:
continue_struct_decl_list -> struct_decl struct_decl_list_start . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production continue_struct_decl_list -> struct_decl struct_decl_list_start

State 354:
## Known stack suffix:
## ctype
## LR(1) items:
struct_decl -> ctype . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 355
## Reductions:

State 355:
## Known stack suffix:
## ctype d_ident
## LR(1) items:
struct_decl -> ctype d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TPtVirg shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## ctype d_ident TPtVirg
## LR(1) items:
struct_decl -> ctype d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace
--   reduce production struct_decl -> ctype d_ident TPtVirg

State 357:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . generic_ctype list(TMul) [ TMetaId TIdent ]
ctype -> const_vol . Tvoid nonempty_list(TMul) [ TMetaId TIdent ]
struct_decl -> const_vol . pure_ident d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On Tvoid shift to state 159
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 358
-- On generic_ctype shift to state 161
-- On ctype_qualif shift to state 151
## Reductions:

State 358:
## Known stack suffix:
## const_vol pure_ident
## LR(1) items:
struct_decl -> const_vol pure_ident . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## const_vol pure_ident d_ident
## LR(1) items:
struct_decl -> const_vol pure_ident d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
-- On TPtVirg shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## const_vol pure_ident d_ident TPtVirg
## LR(1) items:
struct_decl -> const_vol pure_ident d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TLineEnd TIdent TEllipsis TCBrace
--   reduce production struct_decl -> const_vol pure_ident d_ident TPtVirg

State 361:
## Known stack suffix:
## edots_when(TEllipsis,struct_decl) continue_struct_decl_list
## LR(1) items:
struct_decl_list_start -> edots_when(TEllipsis,struct_decl) continue_struct_decl_list . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production struct_decl_list_start -> edots_when(TEllipsis,struct_decl) continue_struct_decl_list

State 362:
## Known stack suffix:
## TEllipsis TWhen TNotEq struct_decl
## LR(1) items:
edots_when(TEllipsis,struct_decl) -> TEllipsis TWhen TNotEq struct_decl . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
## Transitions:
-- On TLineEnd shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## TEllipsis TWhen TNotEq struct_decl TLineEnd
## LR(1) items:
edots_when(TEllipsis,struct_decl) -> TEllipsis TWhen TNotEq struct_decl TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypeId TRuleName TMetaType TIdent TCBrace
--   reduce production edots_when(TEllipsis,struct_decl) -> TEllipsis TWhen TNotEq struct_decl TLineEnd

State 364:
## Known stack suffix:
## TMetaType TOBrace struct_decl_list
## LR(1) items:
generic_ctype -> TMetaType TOBrace struct_decl_list . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## TMetaType TOBrace struct_decl_list TCBrace
## LR(1) items:
generic_ctype -> TMetaType TOBrace struct_decl_list TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCPar TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production generic_ctype -> TMetaType TOBrace struct_decl_list TCBrace

State 366:
## Known stack suffix:
## TIsoType ctype
## LR(1) items:
iso_main -> TIsoType ctype . list(iso(ctype)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 367
-- On TIso shift to state 369
-- On list(iso(ctype)) shift to state 371
-- On iso(ctype) shift to state 373
## Reductions:
-- On EOF
--   reduce production list(iso(ctype)) ->

State 367:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(ctype) -> TRightIso . ctype [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 368
-- On const_vol shift to state 158
## Reductions:

State 368:
## Known stack suffix:
## TRightIso ctype
## LR(1) items:
iso(ctype) -> TRightIso ctype . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(ctype) -> TRightIso ctype

State 369:
## Known stack suffix:
## TIso
## LR(1) items:
iso(ctype) -> TIso . ctype [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 370
-- On const_vol shift to state 158
## Reductions:

State 370:
## Known stack suffix:
## TIso ctype
## LR(1) items:
iso(ctype) -> TIso ctype . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(ctype) -> TIso ctype

State 371:
## Known stack suffix:
## TIsoType ctype list(iso(ctype))
## LR(1) items:
iso_main -> TIsoType ctype list(iso(ctype)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## TIsoType ctype list(iso(ctype)) EOF
## LR(1) items:
iso_main -> TIsoType ctype list(iso(ctype)) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_main -> TIsoType ctype list(iso(ctype)) EOF

State 373:
## Known stack suffix:
## iso(ctype)
## LR(1) items:
list(iso(ctype)) -> iso(ctype) . list(iso(ctype)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 367
-- On TIso shift to state 369
-- On list(iso(ctype)) shift to state 374
-- On iso(ctype) shift to state 373
## Reductions:
-- On EOF
--   reduce production list(iso(ctype)) ->

State 374:
## Known stack suffix:
## iso(ctype) list(iso(ctype))
## LR(1) items:
list(iso(ctype)) -> iso(ctype) list(iso(ctype)) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(iso(ctype)) -> iso(ctype) list(iso(ctype))

State 375:
## Known stack suffix:
## TIsoTopLevel
## LR(1) items:
iso_main -> TIsoTopLevel . xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis))) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On xstatement_dots(TEllipsis) shift to state 889
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 892
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 376:
## Known stack suffix:
## Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ TPtVirg TMid0 TMetaLocalFunc TMetaId TMetaFunc TIdent TError TEllipsis TCPar0 TArobArob TArob EOF ]
fn_ctype -> Tvoid . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
funproto -> Tvoid . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 318
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On pure_ident shift to state 73
-- On nonempty_list(TMul) shift to state 6
-- On list(TMul) shift to state 27
-- On func_ident shift to state 377
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl
--   reduce production list(TMul) ->

State 377:
## Known stack suffix:
## Tvoid func_ident
## LR(1) items:
funproto -> Tvoid func_ident . TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## Tvoid func_ident TOPar
## LR(1) items:
funproto -> Tvoid func_ident TOPar . decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 395
-- On decl_list(decl) shift to state 396
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 379:
## Known stack suffix:
## TMetaParamList
## LR(1) items:
one_dec(decl) -> TMetaParamList . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production one_dec(decl) -> TMetaParamList

State 380:
## Known stack suffix:
## TEllipsis
## LR(1) items:
decl_list_start(decl) -> TEllipsis . list(comma_decls(TEllipsis,decl)) [ TCPar ]
## Transitions:
-- On TComma shift to state 381
-- On list(comma_decls(TEllipsis,decl)) shift to state 389
-- On comma_decls(TEllipsis,decl) shift to state 390
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,decl)) ->

State 381:
## Known stack suffix:
## TComma
## LR(1) items:
comma_decls(TEllipsis,decl) -> TComma . TEllipsis [ TComma TCPar ]
comma_decls(TEllipsis,decl) -> TComma . one_dec(decl) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 382
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 383
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 382:
## Known stack suffix:
## TComma TEllipsis
## LR(1) items:
comma_decls(TEllipsis,decl) -> TComma TEllipsis . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_decls(TEllipsis,decl) -> TComma TEllipsis

State 383:
## Known stack suffix:
## TComma one_dec(decl)
## LR(1) items:
comma_decls(TEllipsis,decl) -> TComma one_dec(decl) . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production comma_decls(TEllipsis,decl) -> TComma one_dec(decl)

State 384:
## Known stack suffix:
## fn_ctype
## LR(1) items:
decl -> fn_ctype . TOPar TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 385
## Reductions:

State 385:
## Known stack suffix:
## fn_ctype TOPar
## LR(1) items:
decl -> fn_ctype TOPar . TMul ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMul shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## fn_ctype TOPar TMul
## LR(1) items:
decl -> fn_ctype TOPar TMul . ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 340
## Reductions:

State 387:
## Known stack suffix:
## decl
## LR(1) items:
one_dec(decl) -> decl . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production one_dec(decl) -> decl

State 388:
## Known stack suffix:
## ctype
## LR(1) items:
decl -> ctype . ident [ TComma TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 336
## Reductions:

State 389:
## Known stack suffix:
## TEllipsis list(comma_decls(TEllipsis,decl))
## LR(1) items:
decl_list_start(decl) -> TEllipsis list(comma_decls(TEllipsis,decl)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list_start(decl) -> TEllipsis list(comma_decls(TEllipsis,decl))

State 390:
## Known stack suffix:
## comma_decls(TEllipsis,decl)
## LR(1) items:
list(comma_decls(TEllipsis,decl)) -> comma_decls(TEllipsis,decl) . list(comma_decls(TEllipsis,decl)) [ TCPar ]
## Transitions:
-- On TComma shift to state 381
-- On list(comma_decls(TEllipsis,decl)) shift to state 391
-- On comma_decls(TEllipsis,decl) shift to state 390
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,decl)) ->

State 391:
## Known stack suffix:
## comma_decls(TEllipsis,decl) list(comma_decls(TEllipsis,decl))
## LR(1) items:
list(comma_decls(TEllipsis,decl)) -> comma_decls(TEllipsis,decl) list(comma_decls(TEllipsis,decl)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production list(comma_decls(TEllipsis,decl)) -> comma_decls(TEllipsis,decl) list(comma_decls(TEllipsis,decl))

State 392:
## Known stack suffix:
## one_dec(decl)
## LR(1) items:
decl_list_start(decl) -> one_dec(decl) . [ TCPar ]
decl_list_start(decl) -> one_dec(decl) . TComma decl_list_start(decl) [ TCPar ]
## Transitions:
-- On TComma shift to state 393
## Reductions:
-- On TCPar
--   reduce production decl_list_start(decl) -> one_dec(decl)

State 393:
## Known stack suffix:
## one_dec(decl) TComma
## LR(1) items:
decl_list_start(decl) -> one_dec(decl) TComma . decl_list_start(decl) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 394
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 394:
## Known stack suffix:
## one_dec(decl) TComma decl_list_start(decl)
## LR(1) items:
decl_list_start(decl) -> one_dec(decl) TComma decl_list_start(decl) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list_start(decl) -> one_dec(decl) TComma decl_list_start(decl)

State 395:
## Known stack suffix:
## decl_list_start(decl)
## LR(1) items:
decl_list(decl) -> decl_list_start(decl) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production decl_list(decl) -> decl_list_start(decl)

State 396:
## Known stack suffix:
## Tvoid func_ident TOPar decl_list(decl)
## LR(1) items:
funproto -> Tvoid func_ident TOPar decl_list(decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## Tvoid func_ident TOPar decl_list(decl) TCPar
## LR(1) items:
funproto -> Tvoid func_ident TOPar decl_list(decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg
## LR(1) items:
funproto -> Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production funproto -> Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg

State 399:
## Known stack suffix:
## Tstatic
## LR(1) items:
storage -> Tstatic . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl
--   reduce production storage -> Tstatic

State 400:
## Known stack suffix:
## Tregister
## LR(1) items:
storage -> Tregister . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl
--   reduce production storage -> Tregister

State 401:
## Known stack suffix:
## Textern
## LR(1) items:
storage -> Textern . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl
--   reduce production storage -> Textern

State 402:
## Known stack suffix:
## Tauto
## LR(1) items:
storage -> Tauto . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TTypeId TRuleName TMetaType TIdent TFunDecl
--   reduce production storage -> Tauto

State 403:
## Known stack suffix:
## TWhile
## LR(1) items:
statement -> TWhile . TOPar eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## TWhile TOPar
## LR(1) items:
statement -> TWhile TOPar . eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 405
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 405:
## Known stack suffix:
## TWhile TOPar eexpr
## LR(1) items:
statement -> TWhile TOPar eexpr . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## TWhile TOPar eexpr TCPar
## LR(1) items:
statement -> TWhile TOPar eexpr TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 888
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 407:
## Known stack suffix:
## TSwitch
## LR(1) items:
statement -> TSwitch . TOPar eexpr TCPar TOBrace list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## TSwitch TOPar
## LR(1) items:
statement -> TSwitch TOPar . eexpr TCPar TOBrace list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 409
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 409:
## Known stack suffix:
## TSwitch TOPar eexpr
## LR(1) items:
statement -> TSwitch TOPar eexpr . TCPar TOBrace list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar . TOBrace list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace . list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TDefault shift to state 412
-- On TCase shift to state 880
-- On list(case_line) shift to state 884
-- On case_line shift to state 886
## Reductions:
-- On TCBrace
--   reduce production list(case_line) ->

State 412:
## Known stack suffix:
## TDefault
## LR(1) items:
case_line -> TDefault . TDotDot pre_post_decl_statement_and_expression_opt [ TDefault TCase TCBrace ]
## Transitions:
-- On TDotDot shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## TDefault TDotDot
## LR(1) items:
case_line -> TDefault TDotDot . pre_post_decl_statement_and_expression_opt [ TDefault TCase TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt shift to state 879
-- On pre_post_decl_statement_and_expression shift to state 765
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TDefault TCase TCBrace
--   reduce production pre_post_decl_statement_and_expression_opt ->

State 414:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(expr,invalid) -> TString . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TString

State 415:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof . unary_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof . TOPar ctype TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 512
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 515
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
## Reductions:

State 416:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On midzero_list(expr) shift to state 502
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 504
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 417:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(expr,invalid) -> TOPar . ctype TCPar cast_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
primary_expr(expr,invalid) -> TOPar . eexpr TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 418
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 420
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 418:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(expr,invalid) -> TOPar eexpr . TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(expr,invalid) -> TOPar eexpr TCPar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TOPar eexpr TCPar

State 420:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype . TCPar cast_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 421
## Reductions:

State 421:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype TCPar . cast_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 453
## Reductions:

State 422:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(expr,invalid) -> TMetaExp . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TMetaExp

State 423:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(expr,invalid) -> TMetaErr . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TMetaErr

State 424:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(expr,invalid) -> TMetaConst . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TMetaConst

State 425:
## Known stack suffix:
## TInvalid
## LR(1) items:
invalid -> TInvalid . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TComma TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production invalid -> TInvalid

State 426:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(expr,invalid) -> TInt . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TInt

State 427:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(expr,invalid) -> TInc . unary_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 428
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 451
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
## Reductions:

State 428:
## Known stack suffix:
## TOPar
## LR(1) items:
primary_expr(expr,invalid) -> TOPar . eexpr TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 418
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 429:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(expr,invalid) -> TFloat . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TFloat

State 430:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(expr,invalid) -> TDec . unary_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 428
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 450
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
## Reductions:

State 431:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(expr,invalid) -> TChar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TChar

State 432:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(expr,invalid) -> unary_op . unary_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 428
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 433
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
## Reductions:

State 433:
## Known stack suffix:
## unary_op unary_expr(expr,invalid)
## LR(1) items:
unary_expr(expr,invalid) -> unary_op unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> unary_op unary_expr(expr,invalid)

State 434:
## Known stack suffix:
## primary_expr(expr,invalid)
## LR(1) items:
postfix_expr(expr,invalid) -> primary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> primary_expr(expr,invalid)

State 435:
## Known stack suffix:
## postfix_expr(expr,invalid)
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TOCro eexpr TCCro [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TDot ident [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TPtrOp ident [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TInc [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TDec [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TOPar eexpr_list_option TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> postfix_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtrOp shift to state 436
-- On TOPar shift to state 438
-- On TOCro shift to state 441
-- On TInc shift to state 444
-- On TDot shift to state 445
-- On TDec shift to state 447
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> postfix_expr(expr,invalid)
** Conflict on TOPar TInc TDec

State 436:
## Known stack suffix:
## postfix_expr(expr,invalid) TPtrOp
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp . ident [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 437
## Reductions:

State 437:
## Known stack suffix:
## postfix_expr(expr,invalid) TPtrOp ident
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp ident

State 438:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar . eexpr_list_option TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 241
-- On eexpr_list_option shift to state 439
-- On eexpr_list shift to state 244
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option ->

State 439:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option . TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar

State 441:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro . eexpr TCCro [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 442
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 442:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro eexpr
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr . TCCro [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCCro shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr TCCro . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr TCCro

State 444:
## Known stack suffix:
## postfix_expr(expr,invalid) TInc
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TInc . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TInc

State 445:
## Known stack suffix:
## postfix_expr(expr,invalid) TDot
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot . ident [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## postfix_expr(expr,invalid) TDot ident
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot ident

State 447:
## Known stack suffix:
## postfix_expr(expr,invalid) TDec
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDec . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDec

State 448:
## Known stack suffix:
## invalid
## LR(1) items:
primary_expr(expr,invalid) -> invalid . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> invalid

State 449:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(expr,invalid) -> func_ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> func_ident

State 450:
## Known stack suffix:
## TDec unary_expr(expr,invalid)
## LR(1) items:
unary_expr(expr,invalid) -> TDec unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> TDec unary_expr(expr,invalid)

State 451:
## Known stack suffix:
## TInc unary_expr(expr,invalid)
## LR(1) items:
unary_expr(expr,invalid) -> TInc unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> TInc unary_expr(expr,invalid)

State 452:
## Known stack suffix:
## unary_expr(expr,invalid)
## LR(1) items:
cast_expr(expr,invalid) -> unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(expr,invalid) -> unary_expr(expr,invalid)

State 453:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(expr,invalid)
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype TCPar cast_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(expr,invalid) -> TOPar ctype TCPar cast_expr(expr,invalid)

State 454:
## Known stack suffix:
## unary_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) . TAssign assign_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
assign_expr(expr,invalid) -> unary_expr(expr,invalid) . TEq assign_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
cast_expr(expr,invalid) -> unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TEq shift to state 455
-- On TAssign shift to state 500
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(expr,invalid) -> unary_expr(expr,invalid)

State 455:
## Known stack suffix:
## unary_expr(expr,invalid) TEq
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq . assign_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On assign_expr(expr,invalid) shift to state 458
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 456:
## Known stack suffix:
## cond_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> cond_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production assign_expr(expr,invalid) -> cond_expr(expr,invalid)

State 457:
## Known stack suffix:
## cast_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> cast_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> cast_expr(expr,invalid)

State 458:
## Known stack suffix:
## unary_expr(expr,invalid) TEq assign_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq assign_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq assign_expr(expr,invalid)

State 459:
## Known stack suffix:
## arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
cond_expr(expr,invalid) -> arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
cond_expr(expr,invalid) -> arith_expr(expr,invalid) . TWhy option(eexpr) TDotDot cond_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TXor shift to state 460
-- On TWhy shift to state 490
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TOrLog shift to state 494
-- On TOr shift to state 496
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
-- On TAndLog shift to state 498
-- On TAnd shift to state 488
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production cond_expr(expr,invalid) -> arith_expr(expr,invalid)
** Conflict on TPlus TMul TMinus TAnd

State 460:
## Known stack suffix:
## arith_expr(expr,invalid) TXor
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 461
## Reductions:

State 461:
## Known stack suffix:
## arith_expr(expr,invalid) TXor arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
-- On TAnd shift to state 488
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor arith_expr(expr,invalid)

State 462:
## Known stack suffix:
## arith_expr(expr,invalid) TSupEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSupEq . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 463
## Reductions:

State 463:
## Known stack suffix:
## arith_expr(expr,invalid) TSupEq arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSupEq arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSupEq arith_expr(expr,invalid)

State 464:
## Known stack suffix:
## arith_expr(expr,invalid) TShr
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShr . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 465
## Reductions:

State 465:
## Known stack suffix:
## arith_expr(expr,invalid) TShr arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShr arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShr arith_expr(expr,invalid)

State 466:
## Known stack suffix:
## arith_expr(expr,invalid) TPlus
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 467
## Reductions:

State 467:
## Known stack suffix:
## arith_expr(expr,invalid) TPlus arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus arith_expr(expr,invalid)

State 468:
## Known stack suffix:
## arith_expr(expr,invalid) TMul
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 469
## Reductions:

State 469:
## Known stack suffix:
## arith_expr(expr,invalid) TMul arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul arith_expr(expr,invalid)

State 470:
## Known stack suffix:
## arith_expr(expr,invalid) TMod
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMod . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## arith_expr(expr,invalid) TMod arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMod arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMod arith_expr(expr,invalid)

State 472:
## Known stack suffix:
## arith_expr(expr,invalid) TDiv
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDiv . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## arith_expr(expr,invalid) TDiv arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDiv arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDiv arith_expr(expr,invalid)

State 474:
## Known stack suffix:
## arith_expr(expr,invalid) TMinus
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## arith_expr(expr,invalid) TMinus arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus arith_expr(expr,invalid)

State 476:
## Known stack suffix:
## arith_expr(expr,invalid) TShl
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShl . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## arith_expr(expr,invalid) TShl arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShl arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShl arith_expr(expr,invalid)

State 478:
## Known stack suffix:
## arith_expr(expr,invalid) TSup
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSup . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 479
## Reductions:

State 479:
## Known stack suffix:
## arith_expr(expr,invalid) TSup arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSup arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TSup arith_expr(expr,invalid)

State 480:
## Known stack suffix:
## arith_expr(expr,invalid) TNotEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 481
## Reductions:

State 481:
## Known stack suffix:
## arith_expr(expr,invalid) TNotEq arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq arith_expr(expr,invalid)

State 482:
## Known stack suffix:
## arith_expr(expr,invalid) TInfEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInfEq . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 483
## Reductions:

State 483:
## Known stack suffix:
## arith_expr(expr,invalid) TInfEq arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInfEq arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInfEq arith_expr(expr,invalid)

State 484:
## Known stack suffix:
## arith_expr(expr,invalid) TInf
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInf . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 485
## Reductions:

State 485:
## Known stack suffix:
## arith_expr(expr,invalid) TInf arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInf arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TInf arith_expr(expr,invalid)

State 486:
## Known stack suffix:
## arith_expr(expr,invalid) TEqEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 487
## Reductions:

State 487:
## Known stack suffix:
## arith_expr(expr,invalid) TEqEq arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq arith_expr(expr,invalid)

State 488:
## Known stack suffix:
## arith_expr(expr,invalid) TAnd
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 489
## Reductions:

State 489:
## Known stack suffix:
## arith_expr(expr,invalid) TAnd arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd arith_expr(expr,invalid)

State 490:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy . option(eexpr) TDotDot cond_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 491
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 491:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr)
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) . TDotDot cond_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TDotDot shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot . cond_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cond_expr(expr,invalid) shift to state 493
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 493:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr) TDotDot cond_expr(expr,invalid)
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot cond_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot cond_expr(expr,invalid)

State 494:
## Known stack suffix:
## arith_expr(expr,invalid) TOrLog
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 495
## Reductions:

State 495:
## Known stack suffix:
## arith_expr(expr,invalid) TOrLog arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 460
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TOr shift to state 496
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
-- On TAndLog shift to state 498
-- On TAnd shift to state 488
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOPar0 TOPar TOEllipsis TOBrace TNothing TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog arith_expr(expr,invalid)

State 496:
## Known stack suffix:
## arith_expr(expr,invalid) TOr
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 497
## Reductions:

State 497:
## Known stack suffix:
## arith_expr(expr,invalid) TOr arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 460
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
-- On TAnd shift to state 488
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr arith_expr(expr,invalid)

State 498:
## Known stack suffix:
## arith_expr(expr,invalid) TAndLog
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog . arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 452
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cast_expr(expr,invalid) shift to state 457
-- On arith_expr(expr,invalid) shift to state 499
## Reductions:

State 499:
## Known stack suffix:
## arith_expr(expr,invalid) TAndLog arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDiv arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMod arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShl arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInf arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSup arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TInfEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TSupEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog arith_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 460
-- On TSupEq shift to state 462
-- On TSup shift to state 478
-- On TShr shift to state 464
-- On TShl shift to state 476
-- On TPlus shift to state 466
-- On TOr shift to state 496
-- On TNotEq shift to state 480
-- On TMul shift to state 468
-- On TMod shift to state 470
-- On TMinus shift to state 474
-- On TInfEq shift to state 482
-- On TInf shift to state 484
-- On TEqEq shift to state 486
-- On TDiv shift to state 472
-- On TAnd shift to state 488
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhy TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TOrLog TOPar0 TOPar TOEllipsis TOBrace TNothing TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog arith_expr(expr,invalid)

State 500:
## Known stack suffix:
## unary_expr(expr,invalid) TAssign
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TAssign . assign_expr(expr,invalid) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On assign_expr(expr,invalid) shift to state 501
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 501:
## Known stack suffix:
## unary_expr(expr,invalid) TAssign assign_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TAssign assign_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production assign_expr(expr,invalid) -> unary_expr(expr,invalid) TAssign assign_expr(expr,invalid)

State 502:
## Known stack suffix:
## TOPar0 midzero_list(expr)
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 midzero_list(expr) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 503
## Reductions:

State 503:
## Known stack suffix:
## TOPar0 midzero_list(expr) TCPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 midzero_list(expr) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production primary_expr(expr,invalid) -> TOPar0 midzero_list(expr) TCPar0

State 504:
## Known stack suffix:
## expr
## LR(1) items:
midzero_list(expr) -> expr . list(mzl(expr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 505
-- On mzl(expr) shift to state 509
-- On list(mzl(expr)) shift to state 511
## Reductions:
-- On TCPar0
--   reduce production list(mzl(expr)) ->

State 505:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(expr) -> TMid0 . expr [ TMid0 TCPar0 ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TChar shift to state 431
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 506
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 506:
## Known stack suffix:
## TMid0 expr
## LR(1) items:
mzl(expr) -> TMid0 expr . [ TMid0 TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TCPar0
--   reduce production mzl(expr) -> TMid0 expr

State 507:
## Known stack suffix:
## basic_expr(expr,invalid)
## LR(1) items:
expr -> basic_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production expr -> basic_expr(expr,invalid)

State 508:
## Known stack suffix:
## assign_expr(expr,invalid)
## LR(1) items:
basic_expr(expr,invalid) -> assign_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production basic_expr(expr,invalid) -> assign_expr(expr,invalid)

State 509:
## Known stack suffix:
## mzl(expr)
## LR(1) items:
list(mzl(expr)) -> mzl(expr) . list(mzl(expr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 505
-- On mzl(expr) shift to state 509
-- On list(mzl(expr)) shift to state 510
## Reductions:
-- On TCPar0
--   reduce production list(mzl(expr)) ->

State 510:
## Known stack suffix:
## mzl(expr) list(mzl(expr))
## LR(1) items:
list(mzl(expr)) -> mzl(expr) list(mzl(expr)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production list(mzl(expr)) -> mzl(expr) list(mzl(expr))

State 511:
## Known stack suffix:
## expr list(mzl(expr))
## LR(1) items:
midzero_list(expr) -> expr list(mzl(expr)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production midzero_list(expr) -> expr list(mzl(expr))

State 512:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
primary_expr(expr,invalid) -> TOPar . eexpr TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof TOPar . ctype TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 418
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 513
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 513:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof TOPar ctype . TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 514
## Reductions:

State 514:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof TOPar ctype TCPar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> TSizeof TOPar ctype TCPar

State 515:
## Known stack suffix:
## TSizeof unary_expr(expr,invalid)
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof unary_expr(expr,invalid) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> TSizeof unary_expr(expr,invalid)

State 516:
## Known stack suffix:
## TReturn
## LR(1) items:
statement -> TReturn . eexpr TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TReturn . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPtVirg shift to state 517
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 518
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 517:
## Known stack suffix:
## TReturn TPtVirg
## LR(1) items:
statement -> TReturn TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TReturn TPtVirg

State 518:
## Known stack suffix:
## TReturn eexpr
## LR(1) items:
statement -> TReturn eexpr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 519
## Reductions:

State 519:
## Known stack suffix:
## TReturn eexpr TPtVirg
## LR(1) items:
statement -> TReturn eexpr TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TReturn eexpr TPtVirg

State 520:
## Known stack suffix:
## TOPar0
## LR(1) items:
decl_statement -> TOPar0 . pre_post_decl_statement_and_expression_opt_mid TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMid0 shift to state 872
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt_mid shift to state 877
-- On pre_post_decl_statement_and_expression shift to state 874
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On midzero_list(expr) shift to state 502
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 563
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid ->

State 521:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
statement -> TOEllipsis . option(whenppdecs) statement_dots(TEllipsis) TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhen shift to state 522
-- On whenppdecs shift to state 868
-- On option(whenppdecs) shift to state 869
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd
--   reduce production option(whenppdecs) ->

State 522:
## Known stack suffix:
## TWhen
## LR(1) items:
whenppdecs -> TWhen . TNotEq pre_post_decl_statement_or_expression TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
-- On TNotEq shift to state 523
## Reductions:

State 523:
## Known stack suffix:
## TWhen TNotEq
## LR(1) items:
whenppdecs -> TWhen TNotEq . pre_post_decl_statement_or_expression TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TEllipsis shift to state 768
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_or_expression shift to state 866
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) shift to state 775
-- On opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) shift to state 776
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 825
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 831
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 524:
## Known stack suffix:
## TOBrace
## LR(1) items:
statement -> TOBrace . pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt shift to state 763
-- On pre_post_decl_statement_and_expression shift to state 765
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCBrace
--   reduce production pre_post_decl_statement_and_expression_opt ->

State 525:
## Known stack suffix:
## TMetaStmList
## LR(1) items:
decl_statement -> TMetaStmList . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_statement -> TMetaStmList

State 526:
## Known stack suffix:
## TMetaStm
## LR(1) items:
statement -> TMetaStm . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TMetaStm

State 527:
## Known stack suffix:
## TIf
## LR(1) items:
statement -> TIf . TOPar eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TIf . TOPar eexpr TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 528
## Reductions:

State 528:
## Known stack suffix:
## TIf TOPar
## LR(1) items:
statement -> TIf TOPar . eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TIf TOPar . eexpr TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 529
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 529:
## Known stack suffix:
## TIf TOPar eexpr
## LR(1) items:
statement -> TIf TOPar eexpr . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TIf TOPar eexpr . TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## TIf TOPar eexpr TCPar
## LR(1) items:
statement -> TIf TOPar eexpr TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TIf TOPar eexpr TCPar . single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 564
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 531:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr) TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDot TDiv TDec TAssign TAndLog TAnd ]
single_statement -> TOPar0 . midzero_list(statement) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 555
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On midzero_list(statement) shift to state 561
-- On midzero_list(expr) shift to state 502
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 563
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 532:
## Known stack suffix:
## TFor
## LR(1) items:
statement -> TFor . TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## TFor TOPar
## LR(1) items:
statement -> TFor TOPar . option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 534
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TPtVirg
--   reduce production option(eexpr) ->

State 534:
## Known stack suffix:
## TFor TOPar option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) . TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 535
## Reductions:

State 535:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg . option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 536
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TPtVirg
--   reduce production option(eexpr) ->

State 536:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) . TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg . option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On option(eexpr) shift to state 538
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 126
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:
-- On TCPar
--   reduce production option(eexpr) ->

State 538:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 539
## Reductions:

State 539:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 554
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 540:
## Known stack suffix:
## TDo
## LR(1) items:
statement -> TDo . single_statement TWhile TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 546
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 541:
## Known stack suffix:
## TContinue
## LR(1) items:
statement -> TContinue . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 542
## Reductions:

State 542:
## Known stack suffix:
## TContinue TPtVirg
## LR(1) items:
statement -> TContinue TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TContinue TPtVirg

State 543:
## Known stack suffix:
## TBreak
## LR(1) items:
statement -> TBreak . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 544
## Reductions:

State 544:
## Known stack suffix:
## TBreak TPtVirg
## LR(1) items:
statement -> TBreak TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TBreak TPtVirg

State 545:
## Known stack suffix:
## statement
## LR(1) items:
single_statement -> statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production single_statement -> statement

State 546:
## Known stack suffix:
## TDo single_statement
## LR(1) items:
statement -> TDo single_statement . TWhile TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 547
## Reductions:

State 547:
## Known stack suffix:
## TDo single_statement TWhile
## LR(1) items:
statement -> TDo single_statement TWhile . TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 548
## Reductions:

State 548:
## Known stack suffix:
## TDo single_statement TWhile TOPar
## LR(1) items:
statement -> TDo single_statement TWhile TOPar . eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 549
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 549:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 550
## Reductions:

State 550:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr TCPar
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 551
## Reductions:

State 551:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr TCPar TPtVirg
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TDo single_statement TWhile TOPar eexpr TCPar TPtVirg

State 552:
## Known stack suffix:
## expr
## LR(1) items:
statement -> expr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 553
## Reductions:

State 553:
## Known stack suffix:
## expr TPtVirg
## LR(1) items:
statement -> expr TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> expr TPtVirg

State 554:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement

State 555:
## Known stack suffix:
## statement
## LR(1) items:
midzero_list(statement) -> statement . list(mzl(statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 556
-- On mzl(statement) shift to state 558
-- On list(mzl(statement)) shift to state 560
## Reductions:
-- On TCPar0
--   reduce production list(mzl(statement)) ->

State 556:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(statement) -> TMid0 . statement [ TMid0 TCPar0 ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 416
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 557
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 557:
## Known stack suffix:
## TMid0 statement
## LR(1) items:
mzl(statement) -> TMid0 statement . [ TMid0 TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TCPar0
--   reduce production mzl(statement) -> TMid0 statement

State 558:
## Known stack suffix:
## mzl(statement)
## LR(1) items:
list(mzl(statement)) -> mzl(statement) . list(mzl(statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 556
-- On mzl(statement) shift to state 558
-- On list(mzl(statement)) shift to state 559
## Reductions:
-- On TCPar0
--   reduce production list(mzl(statement)) ->

State 559:
## Known stack suffix:
## mzl(statement) list(mzl(statement))
## LR(1) items:
list(mzl(statement)) -> mzl(statement) list(mzl(statement)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production list(mzl(statement)) -> mzl(statement) list(mzl(statement))

State 560:
## Known stack suffix:
## statement list(mzl(statement))
## LR(1) items:
midzero_list(statement) -> statement list(mzl(statement)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production midzero_list(statement) -> statement list(mzl(statement))

State 561:
## Known stack suffix:
## TOPar0 midzero_list(statement)
## LR(1) items:
single_statement -> TOPar0 midzero_list(statement) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## TOPar0 midzero_list(statement) TCPar0
## LR(1) items:
single_statement -> TOPar0 midzero_list(statement) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production single_statement -> TOPar0 midzero_list(statement) TCPar0

State 563:
## Known stack suffix:
## expr
## LR(1) items:
midzero_list(expr) -> expr . list(mzl(expr)) [ TCPar0 ]
statement -> expr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TEllipsis TDo TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TAnd ]
## Transitions:
-- On TPtVirg shift to state 553
-- On TMid0 shift to state 505
-- On mzl(expr) shift to state 509
-- On list(mzl(expr)) shift to state 511
## Reductions:
-- On TCPar0
--   reduce production list(mzl(expr)) ->

State 564:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
statement -> TIf TOPar eexpr TCPar single_statement . TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TElse shift to state 565
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TIf TOPar eexpr TCPar single_statement

State 565:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement TElse
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement TElse . single_statement [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 566
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 566:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement TElse single_statement
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement TElse single_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TIf TOPar eexpr TCPar single_statement TElse single_statement

State 567:
## Known stack suffix:
## TDeclarerId
## LR(1) items:
decl_var -> TDeclarerId . TOPar eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 568
## Reductions:

State 568:
## Known stack suffix:
## TDeclarerId TOPar
## LR(1) items:
decl_var -> TDeclarerId TOPar . eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 241
-- On eexpr_list_option shift to state 569
-- On eexpr_list shift to state 244
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option ->

State 569:
## Known stack suffix:
## TDeclarerId TOPar eexpr_list_option
## LR(1) items:
decl_var -> TDeclarerId TOPar eexpr_list_option . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 570
## Reductions:

State 570:
## Known stack suffix:
## TDeclarerId TOPar eexpr_list_option TCPar
## LR(1) items:
decl_var -> TDeclarerId TOPar eexpr_list_option TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 571
## Reductions:

State 571:
## Known stack suffix:
## TDeclarerId TOPar eexpr_list_option TCPar TPtVirg
## LR(1) items:
decl_var -> TDeclarerId TOPar eexpr_list_option TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> TDeclarerId TOPar eexpr_list_option TCPar TPtVirg

State 572:
## Known stack suffix:
## storage
## LR(1) items:
decl_var -> storage . ctype comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . ctype d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . const_vol pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . const_vol pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> storage . ctype func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> storage . Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 573
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 579
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 720
-- On ctype_qualif shift to state 151
-- On ctype shift to state 732
-- On const_vol shift to state 746
## Reductions:

State 573:
## Known stack suffix:
## storage Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ TMetaLocalFunc TMetaId TMetaFunc TIdent ]
fn_ctype -> Tvoid . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl ]
funproto -> storage Tvoid . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 318
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On pure_ident shift to state 73
-- On nonempty_list(TMul) shift to state 6
-- On list(TMul) shift to state 27
-- On func_ident shift to state 574
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TOPar TFunDecl
--   reduce production list(TMul) ->

State 574:
## Known stack suffix:
## storage Tvoid func_ident
## LR(1) items:
funproto -> storage Tvoid func_ident . TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 575
## Reductions:

State 575:
## Known stack suffix:
## storage Tvoid func_ident TOPar
## LR(1) items:
funproto -> storage Tvoid func_ident TOPar . decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 395
-- On decl_list(decl) shift to state 576
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 576:
## Known stack suffix:
## storage Tvoid func_ident TOPar decl_list(decl)
## LR(1) items:
funproto -> storage Tvoid func_ident TOPar decl_list(decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 577
## Reductions:

State 577:
## Known stack suffix:
## storage Tvoid func_ident TOPar decl_list(decl) TCPar
## LR(1) items:
funproto -> storage Tvoid func_ident TOPar decl_list(decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 578
## Reductions:

State 578:
## Known stack suffix:
## storage Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg
## LR(1) items:
funproto -> storage Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production funproto -> storage Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg

State 579:
## Known stack suffix:
## storage pure_ident
## LR(1) items:
decl_var -> storage pure_ident . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage pure_ident . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 581
-- On comma_list(d_ident) shift to state 718
## Reductions:

State 580:
## Known stack suffix:
## separated_nonempty_list(TComma,d_ident)
## LR(1) items:
comma_list(d_ident) -> separated_nonempty_list(TComma,d_ident) . [ TPtVirg ]
## Transitions:
## Reductions:
-- On TPtVirg
--   reduce production comma_list(d_ident) -> separated_nonempty_list(TComma,d_ident)

State 581:
## Known stack suffix:
## storage pure_ident d_ident
## LR(1) items:
decl_var -> storage pure_ident d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 582
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 582:
## Known stack suffix:
## storage pure_ident d_ident TEq
## LR(1) items:
decl_var -> storage pure_ident d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 713
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 583:
## Known stack suffix:
## TOBrace
## LR(1) items:
initialize -> TOBrace . initialize_list TCBrace [ TPtVirg TLineEnd ]
initialize -> TOBrace . TCBrace [ TPtVirg TLineEnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TCBrace shift to state 710
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize_list_start shift to state 690
-- On initialize_list shift to state 711
-- On initialize2 shift to state 693
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 696
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 584:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,invalid) -> TString . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TString

State 585:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof . unary_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof . TOPar ctype TCPar [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 589
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 623
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
## Reductions:

State 586:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 . midzero_list(eexpr) TCPar0 [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On midzero_list(eexpr) shift to state 587
-- On func_ident shift to state 85
-- On eexpr shift to state 139
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 587:
## Known stack suffix:
## TOPar0 midzero_list(eexpr)
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr) . TCPar0 [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TCPar0 shift to state 588
## Reductions:

State 588:
## Known stack suffix:
## TOPar0 midzero_list(eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr) TCPar0 . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr) TCPar0

State 589:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar . eexpr TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof TOPar . ctype TCPar [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 590
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 592
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 590:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar eexpr . TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 591
## Reductions:

State 591:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar eexpr TCPar . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TOPar eexpr TCPar

State 592:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof TOPar ctype . TCPar [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 593
## Reductions:

State 593:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof TOPar ctype TCPar . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> TSizeof TOPar ctype TCPar

State 594:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaExp . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TMetaExp

State 595:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaErr . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TMetaErr

State 596:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaConst . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TMetaConst

State 597:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,invalid) -> TInt . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TInt

State 598:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,invalid) -> TInc . unary_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 599
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 622
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
## Reductions:

State 599:
## Known stack suffix:
## TOPar
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar . eexpr TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 590
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 600:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,invalid) -> TFloat . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TFloat

State 601:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,invalid) -> TDec . unary_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 599
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 621
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
## Reductions:

State 602:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,invalid) -> TChar . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> TChar

State 603:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,invalid) -> unary_op . unary_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 599
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 604
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
## Reductions:

State 604:
## Known stack suffix:
## unary_op unary_expr(eexpr,invalid)
## LR(1) items:
unary_expr(eexpr,invalid) -> unary_op unary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> unary_op unary_expr(eexpr,invalid)

State 605:
## Known stack suffix:
## primary_expr(eexpr,invalid)
## LR(1) items:
postfix_expr(eexpr,invalid) -> primary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> primary_expr(eexpr,invalid)

State 606:
## Known stack suffix:
## postfix_expr(eexpr,invalid)
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TOCro eexpr TCCro [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TDot ident [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TPtrOp ident [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TInc [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TDec [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TOPar eexpr_list_option TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
unary_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 607
-- On TOPar shift to state 609
-- On TOCro shift to state 612
-- On TInc shift to state 615
-- On TDot shift to state 616
-- On TDec shift to state 618
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid)

State 607:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TPtrOp
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp . ident [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TPtrOp ident
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp ident . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp ident

State 609:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar . eexpr_list_option TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExpList shift to state 186
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TEllipsis shift to state 187
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On generic_ctype shift to state 240
-- On func_ident shift to state 184
-- On eexpr_list_start shift to state 241
-- On eexpr_list_option shift to state 610
-- On eexpr_list shift to state 244
-- On edots_when(TEllipsis,eexpr) shift to state 245
-- On dexpr shift to state 248
-- On ctype_qualif shift to state 151
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
-- On aexpr shift to state 255
## Reductions:
-- On TCPar
--   reduce production eexpr_list_option ->

State 610:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option . TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 611
## Reductions:

State 611:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar

State 612:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro . eexpr TCCro [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 613
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 613:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr . TCCro [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TCCro shift to state 614
## Reductions:

State 614:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr TCCro . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr TCCro

State 615:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TInc
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TInc . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TInc

State 616:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDot
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot . ident [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 617
## Reductions:

State 617:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDot ident
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot ident . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot ident

State 618:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDec
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDec . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDec

State 619:
## Known stack suffix:
## invalid
## LR(1) items:
primary_expr(eexpr,invalid) -> invalid . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> invalid

State 620:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,invalid) -> func_ident . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production primary_expr(eexpr,invalid) -> func_ident

State 621:
## Known stack suffix:
## TDec unary_expr(eexpr,invalid)
## LR(1) items:
unary_expr(eexpr,invalid) -> TDec unary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> TDec unary_expr(eexpr,invalid)

State 622:
## Known stack suffix:
## TInc unary_expr(eexpr,invalid)
## LR(1) items:
unary_expr(eexpr,invalid) -> TInc unary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> TInc unary_expr(eexpr,invalid)

State 623:
## Known stack suffix:
## TSizeof unary_expr(eexpr,invalid)
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof unary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> TSizeof unary_expr(eexpr,invalid)

State 624:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar . ctype TCPar cast_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
primary_expr(eexpr,invalid) -> TOPar . eexpr TCPar [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TRuleName shift to state 19
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On generic_ctype shift to state 146
-- On func_ident shift to state 85
-- On eexpr shift to state 590
-- On dot_expressions shift to state 86
-- On ctype_qualif shift to state 151
-- On ctype shift to state 625
-- On const_vol shift to state 158
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 625:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype . TCPar cast_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 626
## Reductions:

State 626:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype TCPar . cast_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 628
## Reductions:

State 627:
## Known stack suffix:
## unary_expr(eexpr,invalid)
## LR(1) items:
cast_expr(eexpr,invalid) -> unary_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production cast_expr(eexpr,invalid) -> unary_expr(eexpr,invalid)

State 628:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,invalid)
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype TCPar cast_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production cast_expr(eexpr,invalid) -> TOPar ctype TCPar cast_expr(eexpr,invalid)

State 629:
## Known stack suffix:
## TOCro
## LR(1) items:
initialize2 -> TOCro . eexpr TCCro TEq initialize2 [ TComma ]
initialize2 -> TOCro . eexpr TEllipsis eexpr TCCro TEq initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 630
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 630:
## Known stack suffix:
## TOCro eexpr
## LR(1) items:
initialize2 -> TOCro eexpr . TCCro TEq initialize2 [ TComma ]
initialize2 -> TOCro eexpr . TEllipsis eexpr TCCro TEq initialize2 [ TComma ]
## Transitions:
-- On TEllipsis shift to state 631
-- On TCCro shift to state 707
## Reductions:

State 631:
## Known stack suffix:
## TOCro eexpr TEllipsis
## LR(1) items:
initialize2 -> TOCro eexpr TEllipsis . eexpr TCCro TEq initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 632
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 632:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr
## LR(1) items:
initialize2 -> TOCro eexpr TEllipsis eexpr . TCCro TEq initialize2 [ TComma ]
## Transitions:
-- On TCCro shift to state 633
## Reductions:

State 633:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr TCCro
## LR(1) items:
initialize2 -> TOCro eexpr TEllipsis eexpr TCCro . TEq initialize2 [ TComma ]
## Transitions:
-- On TEq shift to state 634
## Reductions:

State 634:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr TCCro TEq
## LR(1) items:
initialize2 -> TOCro eexpr TEllipsis eexpr TCCro TEq . initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 706
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 635:
## Known stack suffix:
## TOBrace
## LR(1) items:
initialize2 -> TOBrace . initialize_list TCBrace [ TComma ]
initialize2 -> TOBrace . TCBrace [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TCBrace shift to state 689
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize_list_start shift to state 690
-- On initialize_list shift to state 691
-- On initialize2 shift to state 693
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 696
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 636:
## Known stack suffix:
## TMetaId
## LR(1) items:
func_ident -> TMetaId . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
ident -> TMetaId . [ TDotDot ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production func_ident -> TMetaId
-- On TDotDot
--   reduce production ident -> TMetaId

State 637:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
edots_when(TEllipsis,initialize) -> TEllipsis . TWhen TNotEq initialize TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
## Transitions:
-- On TWhen shift to state 638
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd
--   reduce production edots_when(TEllipsis,initialize) -> TEllipsis

State 638:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen . TNotEq initialize TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
## Transitions:
-- On TNotEq shift to state 639
## Reductions:

State 639:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq . initialize TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 640
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 640:
## Known stack suffix:
## TEllipsis TWhen TNotEq initialize
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize . TLineEnd [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
## Transitions:
-- On TLineEnd shift to state 641
## Reductions:

State 641:
## Known stack suffix:
## TEllipsis TWhen TNotEq initialize TLineEnd
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize TLineEnd . [ TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd ]
## Transitions:
## Reductions:
-- On TTilde TString TSizeof TPlus TOPar0 TOPar TOCro TOBrace TMul TMinus TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIdent TFloat TEllipsis TDot TDec TChar TCBrace TBang TAnd
--   reduce production edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize TLineEnd

State 642:
## Known stack suffix:
## eexpr
## LR(1) items:
initialize -> eexpr . [ TPtVirg TLineEnd ]
## Transitions:
## Reductions:
-- On TPtVirg TLineEnd
--   reduce production initialize -> eexpr

State 643:
## Known stack suffix:
## TDot
## LR(1) items:
initialize2 -> TDot . ident TEq initialize2 [ TComma ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 644
## Reductions:

State 644:
## Known stack suffix:
## TDot ident
## LR(1) items:
initialize2 -> TDot ident . TEq initialize2 [ TComma ]
## Transitions:
-- On TEq shift to state 645
## Reductions:

State 645:
## Known stack suffix:
## TDot ident TEq
## LR(1) items:
initialize2 -> TDot ident TEq . initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 647
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 646:
## Known stack suffix:
## pure_ident
## LR(1) items:
func_ident -> pure_ident . [ TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd ]
ident -> pure_ident . [ TDotDot ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TDot TDiv TDec TComma TAndLog TAnd
--   reduce production func_ident -> pure_ident
-- On TDotDot
--   reduce production ident -> pure_ident

State 647:
## Known stack suffix:
## TDot ident TEq initialize2
## LR(1) items:
initialize2 -> TDot ident TEq initialize2 . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> TDot ident TEq initialize2

State 648:
## Known stack suffix:
## ident
## LR(1) items:
initialize2 -> ident . TDotDot initialize2 [ TComma ]
## Transitions:
-- On TDotDot shift to state 649
## Reductions:

State 649:
## Known stack suffix:
## ident TDotDot
## LR(1) items:
initialize2 -> ident TDotDot . initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 650
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 650:
## Known stack suffix:
## ident TDotDot initialize2
## LR(1) items:
initialize2 -> ident TDotDot initialize2 . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> ident TDotDot initialize2

State 651:
## Known stack suffix:
## cast_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> cast_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> cast_expr(eexpr,invalid)

State 652:
## Known stack suffix:
## arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
initialize2 -> arith_expr(eexpr,invalid) . [ TComma ]
## Transitions:
-- On TXor shift to state 653
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TOrLog shift to state 683
-- On TOr shift to state 685
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
-- On TAndLog shift to state 687
-- On TAnd shift to state 681
## Reductions:
-- On TComma
--   reduce production initialize2 -> arith_expr(eexpr,invalid)

State 653:
## Known stack suffix:
## arith_expr(eexpr,invalid) TXor
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 654
## Reductions:

State 654:
## Known stack suffix:
## arith_expr(eexpr,invalid) TXor arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
-- On TAnd shift to state 681
## Reductions:
-- On TXor TOrLog TOr TComma TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor arith_expr(eexpr,invalid)

State 655:
## Known stack suffix:
## arith_expr(eexpr,invalid) TSupEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSupEq . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 656
## Reductions:

State 656:
## Known stack suffix:
## arith_expr(eexpr,invalid) TSupEq arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSupEq arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSupEq arith_expr(eexpr,invalid)

State 657:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShr
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShr . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 658
## Reductions:

State 658:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShr arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShr arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TShr TShl TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShr arith_expr(eexpr,invalid)

State 659:
## Known stack suffix:
## arith_expr(eexpr,invalid) TPlus
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 660
## Reductions:

State 660:
## Known stack suffix:
## arith_expr(eexpr,invalid) TPlus arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus arith_expr(eexpr,invalid)

State 661:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMul
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 662
## Reductions:

State 662:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMul arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul arith_expr(eexpr,invalid)

State 663:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMod
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMod . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 664
## Reductions:

State 664:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMod arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMod arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMod arith_expr(eexpr,invalid)

State 665:
## Known stack suffix:
## arith_expr(eexpr,invalid) TDiv
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDiv . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 666
## Reductions:

State 666:
## Known stack suffix:
## arith_expr(eexpr,invalid) TDiv arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDiv arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDiv arith_expr(eexpr,invalid)

State 667:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMinus
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 668
## Reductions:

State 668:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMinus arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus arith_expr(eexpr,invalid)

State 669:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShl
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShl . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 670
## Reductions:

State 670:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShl arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShl arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TShr TShl TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShl arith_expr(eexpr,invalid)

State 671:
## Known stack suffix:
## arith_expr(eexpr,invalid) TSup
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSup . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 672
## Reductions:

State 672:
## Known stack suffix:
## arith_expr(eexpr,invalid) TSup arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSup arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TSup arith_expr(eexpr,invalid)

State 673:
## Known stack suffix:
## arith_expr(eexpr,invalid) TNotEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 674
## Reductions:

State 674:
## Known stack suffix:
## arith_expr(eexpr,invalid) TNotEq arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TDiv shift to state 665
## Reductions:
-- On TXor TOrLog TOr TNotEq TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq arith_expr(eexpr,invalid)

State 675:
## Known stack suffix:
## arith_expr(eexpr,invalid) TInfEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInfEq . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 676
## Reductions:

State 676:
## Known stack suffix:
## arith_expr(eexpr,invalid) TInfEq arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInfEq arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInfEq arith_expr(eexpr,invalid)

State 677:
## Known stack suffix:
## arith_expr(eexpr,invalid) TInf
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInf . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 678
## Reductions:

State 678:
## Known stack suffix:
## arith_expr(eexpr,invalid) TInf arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInf arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TDiv shift to state 665
## Reductions:
-- On TXor TSupEq TSup TOrLog TOr TNotEq TInfEq TInf TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TInf arith_expr(eexpr,invalid)

State 679:
## Known stack suffix:
## arith_expr(eexpr,invalid) TEqEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 680
## Reductions:

State 680:
## Known stack suffix:
## arith_expr(eexpr,invalid) TEqEq arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TDiv shift to state 665
## Reductions:
-- On TXor TOrLog TOr TNotEq TEqEq TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq arith_expr(eexpr,invalid)

State 681:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAnd
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 682
## Reductions:

State 682:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAnd arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
## Reductions:
-- On TXor TOrLog TOr TComma TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd arith_expr(eexpr,invalid)

State 683:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOrLog
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 684
## Reductions:

State 684:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOrLog arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 653
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TOr shift to state 685
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
-- On TAndLog shift to state 687
-- On TAnd shift to state 681
## Reductions:
-- On TOrLog TComma
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog arith_expr(eexpr,invalid)

State 685:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOr
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 686
## Reductions:

State 686:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOr arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 653
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
-- On TAnd shift to state 681
## Reductions:
-- On TOrLog TOr TComma TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr arith_expr(eexpr,invalid)

State 687:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAndLog
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog . arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 688
## Reductions:

State 688:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAndLog arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDiv arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMod arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShl arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInf arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSup arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TInfEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TSupEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog arith_expr(eexpr,invalid) . [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr(eexpr,invalid) [ TXor TSupEq TSup TShr TShl TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TDiv TComma TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 653
-- On TSupEq shift to state 655
-- On TSup shift to state 671
-- On TShr shift to state 657
-- On TShl shift to state 669
-- On TPlus shift to state 659
-- On TOr shift to state 685
-- On TNotEq shift to state 673
-- On TMul shift to state 661
-- On TMod shift to state 663
-- On TMinus shift to state 667
-- On TInfEq shift to state 675
-- On TInf shift to state 677
-- On TEqEq shift to state 679
-- On TDiv shift to state 665
-- On TAnd shift to state 681
## Reductions:
-- On TOrLog TComma TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog arith_expr(eexpr,invalid)

State 689:
## Known stack suffix:
## TOBrace TCBrace
## LR(1) items:
initialize2 -> TOBrace TCBrace . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> TOBrace TCBrace

State 690:
## Known stack suffix:
## initialize_list_start
## LR(1) items:
initialize_list -> initialize_list_start . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production initialize_list -> initialize_list_start

State 691:
## Known stack suffix:
## TOBrace initialize_list
## LR(1) items:
initialize2 -> TOBrace initialize_list . TCBrace [ TComma ]
## Transitions:
-- On TCBrace shift to state 692
## Reductions:

State 692:
## Known stack suffix:
## TOBrace initialize_list TCBrace
## LR(1) items:
initialize2 -> TOBrace initialize_list TCBrace . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> TOBrace initialize_list TCBrace

State 693:
## Known stack suffix:
## initialize2
## LR(1) items:
initialize_list_start -> initialize2 . TComma [ TCBrace ]
initialize_list_start -> initialize2 . TComma initialize_list_start [ TCBrace ]
## Transitions:
-- On TComma shift to state 694
## Reductions:

State 694:
## Known stack suffix:
## initialize2 TComma
## LR(1) items:
initialize_list_start -> initialize2 TComma . [ TCBrace ]
initialize_list_start -> initialize2 TComma . initialize_list_start [ TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize_list_start shift to state 695
-- On initialize2 shift to state 693
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 696
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:
-- On TCBrace
--   reduce production initialize_list_start -> initialize2 TComma

State 695:
## Known stack suffix:
## initialize2 TComma initialize_list_start
## LR(1) items:
initialize_list_start -> initialize2 TComma initialize_list_start . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production initialize_list_start -> initialize2 TComma initialize_list_start

State 696:
## Known stack suffix:
## edots_when(TEllipsis,initialize)
## LR(1) items:
initialize_list_start -> edots_when(TEllipsis,initialize) . comma_initializers(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 697
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 699
-- On comma_initializers(edots_when(TEllipsis,initialize)) shift to state 705
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:
-- On TCBrace
--   reduce production comma_initializers(edots_when(TEllipsis,initialize)) ->

State 697:
## Known stack suffix:
## initialize2
## LR(1) items:
comma_initializers(edots_when(TEllipsis,initialize)) -> initialize2 . TComma comma_initializers(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 698
## Reductions:

State 698:
## Known stack suffix:
## initialize2 TComma
## LR(1) items:
comma_initializers(edots_when(TEllipsis,initialize)) -> initialize2 TComma . comma_initializers(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 697
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 699
-- On comma_initializers(edots_when(TEllipsis,initialize)) shift to state 704
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:
-- On TCBrace
--   reduce production comma_initializers(edots_when(TEllipsis,initialize)) ->

State 699:
## Known stack suffix:
## edots_when(TEllipsis,initialize)
## LR(1) items:
comma_initializers(edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) . comma_initializers2(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 700
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On comma_initializers2(edots_when(TEllipsis,initialize)) shift to state 703
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:
-- On TCBrace
--   reduce production comma_initializers2(edots_when(TEllipsis,initialize)) ->

State 700:
## Known stack suffix:
## initialize2
## LR(1) items:
comma_initializers2(edots_when(TEllipsis,initialize)) -> initialize2 . TComma comma_initializers(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## initialize2 TComma
## LR(1) items:
comma_initializers2(edots_when(TEllipsis,initialize)) -> initialize2 TComma . comma_initializers(edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TEllipsis shift to state 637
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 697
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On edots_when(TEllipsis,initialize) shift to state 699
-- On comma_initializers(edots_when(TEllipsis,initialize)) shift to state 702
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:
-- On TCBrace
--   reduce production comma_initializers(edots_when(TEllipsis,initialize)) ->

State 702:
## Known stack suffix:
## initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize))
## LR(1) items:
comma_initializers2(edots_when(TEllipsis,initialize)) -> initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production comma_initializers2(edots_when(TEllipsis,initialize)) -> initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize))

State 703:
## Known stack suffix:
## edots_when(TEllipsis,initialize) comma_initializers2(edots_when(TEllipsis,initialize))
## LR(1) items:
comma_initializers(edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) comma_initializers2(edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production comma_initializers(edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) comma_initializers2(edots_when(TEllipsis,initialize))

State 704:
## Known stack suffix:
## initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize))
## LR(1) items:
comma_initializers(edots_when(TEllipsis,initialize)) -> initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production comma_initializers(edots_when(TEllipsis,initialize)) -> initialize2 TComma comma_initializers(edots_when(TEllipsis,initialize))

State 705:
## Known stack suffix:
## edots_when(TEllipsis,initialize) comma_initializers(edots_when(TEllipsis,initialize))
## LR(1) items:
initialize_list_start -> edots_when(TEllipsis,initialize) comma_initializers(edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production initialize_list_start -> edots_when(TEllipsis,initialize) comma_initializers(edots_when(TEllipsis,initialize))

State 706:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr TCCro TEq initialize2
## LR(1) items:
initialize2 -> TOCro eexpr TEllipsis eexpr TCCro TEq initialize2 . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> TOCro eexpr TEllipsis eexpr TCCro TEq initialize2

State 707:
## Known stack suffix:
## TOCro eexpr TCCro
## LR(1) items:
initialize2 -> TOCro eexpr TCCro . TEq initialize2 [ TComma ]
## Transitions:
-- On TEq shift to state 708
## Reductions:

State 708:
## Known stack suffix:
## TOCro eexpr TCCro TEq
## LR(1) items:
initialize2 -> TOCro eexpr TCCro TEq . initialize2 [ TComma ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 584
-- On TSizeof shift to state 585
-- On TPlus shift to state 48
-- On TOPar0 shift to state 586
-- On TOPar shift to state 624
-- On TOCro shift to state 629
-- On TOBrace shift to state 635
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 636
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 594
-- On TMetaErr shift to state 595
-- On TMetaConst shift to state 596
-- On TInvalid shift to state 425
-- On TInt shift to state 597
-- On TInc shift to state 598
-- On TIdent shift to state 28
-- On TFloat shift to state 600
-- On TDot shift to state 643
-- On TDec shift to state 601
-- On TChar shift to state 602
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 603
-- On unary_expr(eexpr,invalid) shift to state 627
-- On pure_ident shift to state 646
-- On primary_expr(eexpr,invalid) shift to state 605
-- On postfix_expr(eexpr,invalid) shift to state 606
-- On invalid shift to state 619
-- On initialize2 shift to state 709
-- On ident shift to state 648
-- On func_ident shift to state 620
-- On cast_expr(eexpr,invalid) shift to state 651
-- On arith_expr(eexpr,invalid) shift to state 652
## Reductions:

State 709:
## Known stack suffix:
## TOCro eexpr TCCro TEq initialize2
## LR(1) items:
initialize2 -> TOCro eexpr TCCro TEq initialize2 . [ TComma ]
## Transitions:
## Reductions:
-- On TComma
--   reduce production initialize2 -> TOCro eexpr TCCro TEq initialize2

State 710:
## Known stack suffix:
## TOBrace TCBrace
## LR(1) items:
initialize -> TOBrace TCBrace . [ TPtVirg TLineEnd ]
## Transitions:
## Reductions:
-- On TPtVirg TLineEnd
--   reduce production initialize -> TOBrace TCBrace

State 711:
## Known stack suffix:
## TOBrace initialize_list
## LR(1) items:
initialize -> TOBrace initialize_list . TCBrace [ TPtVirg TLineEnd ]
## Transitions:
-- On TCBrace shift to state 712
## Reductions:

State 712:
## Known stack suffix:
## TOBrace initialize_list TCBrace
## LR(1) items:
initialize -> TOBrace initialize_list TCBrace . [ TPtVirg TLineEnd ]
## Transitions:
## Reductions:
-- On TPtVirg TLineEnd
--   reduce production initialize -> TOBrace initialize_list TCBrace

State 713:
## Known stack suffix:
## storage pure_ident d_ident TEq initialize
## LR(1) items:
decl_var -> storage pure_ident d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 714
## Reductions:

State 714:
## Known stack suffix:
## storage pure_ident d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage pure_ident d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage pure_ident d_ident TEq initialize TPtVirg

State 715:
## Known stack suffix:
## d_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident TComma . separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 716
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 717
## Reductions:

State 716:
## Known stack suffix:
## d_ident TComma separated_nonempty_list(TComma,d_ident)
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident TComma separated_nonempty_list(TComma,d_ident) . [ TPtVirg ]
## Transitions:
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident TComma separated_nonempty_list(TComma,d_ident)

State 717:
## Known stack suffix:
## d_ident
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 718:
## Known stack suffix:
## storage pure_ident comma_list(d_ident)
## LR(1) items:
decl_var -> storage pure_ident comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 719
## Reductions:

State 719:
## Known stack suffix:
## storage pure_ident comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> storage pure_ident comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage pure_ident comma_list(d_ident) TPtVirg

State 720:
## Known stack suffix:
## storage fn_ctype
## LR(1) items:
decl_var -> storage fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 721
## Reductions:

State 721:
## Known stack suffix:
## storage fn_ctype TOPar
## LR(1) items:
decl_var -> storage fn_ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 722
## Reductions:

State 722:
## Known stack suffix:
## storage fn_ctype TOPar TMul
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 723
## Reductions:

State 723:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 724
## Reductions:

State 724:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 725
## Reductions:

State 725:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 337
-- On decl_list(name_opt_decl) shift to state 726
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 726:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 727
## Reductions:

State 727:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 728
-- On TEq shift to state 729
## Reductions:

State 728:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 729:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 730
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 730:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 731
## Reductions:

State 731:
## Known stack suffix:
## storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 732:
## Known stack suffix:
## storage ctype
## LR(1) items:
decl_var -> storage ctype . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> storage ctype . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 733
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 734
-- On ident shift to state 43
-- On func_ident shift to state 735
-- On d_ident shift to state 740
-- On comma_list(d_ident) shift to state 744
## Reductions:

State 733:
## Known stack suffix:
## TMetaId
## LR(1) items:
func_ident -> TMetaId . [ TOPar ]
ident -> TMetaId . [ TPtVirg TOCro TEq TComma ]
## Transitions:
## Reductions:
-- On TOPar
--   reduce production func_ident -> TMetaId
-- On TPtVirg TOCro TEq TComma
--   reduce production ident -> TMetaId

State 734:
## Known stack suffix:
## pure_ident
## LR(1) items:
func_ident -> pure_ident . [ TOPar ]
ident -> pure_ident . [ TPtVirg TOCro TEq TComma ]
## Transitions:
## Reductions:
-- On TOPar
--   reduce production func_ident -> pure_ident
-- On TPtVirg TOCro TEq TComma
--   reduce production ident -> pure_ident

State 735:
## Known stack suffix:
## storage ctype func_ident
## LR(1) items:
funproto -> storage ctype func_ident . TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 736
## Reductions:

State 736:
## Known stack suffix:
## storage ctype func_ident TOPar
## LR(1) items:
funproto -> storage ctype func_ident TOPar . decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 395
-- On decl_list(decl) shift to state 737
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 737:
## Known stack suffix:
## storage ctype func_ident TOPar decl_list(decl)
## LR(1) items:
funproto -> storage ctype func_ident TOPar decl_list(decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 738
## Reductions:

State 738:
## Known stack suffix:
## storage ctype func_ident TOPar decl_list(decl) TCPar
## LR(1) items:
funproto -> storage ctype func_ident TOPar decl_list(decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 739
## Reductions:

State 739:
## Known stack suffix:
## storage ctype func_ident TOPar decl_list(decl) TCPar TPtVirg
## LR(1) items:
funproto -> storage ctype func_ident TOPar decl_list(decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production funproto -> storage ctype func_ident TOPar decl_list(decl) TCPar TPtVirg

State 740:
## Known stack suffix:
## storage ctype d_ident
## LR(1) items:
decl_var -> storage ctype d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 741
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 741:
## Known stack suffix:
## storage ctype d_ident TEq
## LR(1) items:
decl_var -> storage ctype d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 742
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 742:
## Known stack suffix:
## storage ctype d_ident TEq initialize
## LR(1) items:
decl_var -> storage ctype d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 743
## Reductions:

State 743:
## Known stack suffix:
## storage ctype d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage ctype d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage ctype d_ident TEq initialize TPtVirg

State 744:
## Known stack suffix:
## storage ctype comma_list(d_ident)
## LR(1) items:
decl_var -> storage ctype comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 745
## Reductions:

State 745:
## Known stack suffix:
## storage ctype comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> storage ctype comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage ctype comma_list(d_ident) TPtVirg

State 746:
## Known stack suffix:
## storage const_vol
## LR(1) items:
ctype -> const_vol . generic_ctype list(TMul) [ TMetaLocalFunc TMetaId TMetaFunc TIdent ]
ctype -> const_vol . Tvoid nonempty_list(TMul) [ TMetaLocalFunc TMetaId TMetaFunc TIdent ]
decl_var -> storage const_vol . pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage const_vol . pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvoid shift to state 159
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 747
-- On generic_ctype shift to state 161
-- On ctype_qualif shift to state 151
## Reductions:

State 747:
## Known stack suffix:
## storage const_vol pure_ident
## LR(1) items:
decl_var -> storage const_vol pure_ident . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage const_vol pure_ident . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 748
-- On comma_list(d_ident) shift to state 752
## Reductions:

State 748:
## Known stack suffix:
## storage const_vol pure_ident d_ident
## LR(1) items:
decl_var -> storage const_vol pure_ident d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 749
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 749:
## Known stack suffix:
## storage const_vol pure_ident d_ident TEq
## LR(1) items:
decl_var -> storage const_vol pure_ident d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 750
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 750:
## Known stack suffix:
## storage const_vol pure_ident d_ident TEq initialize
## LR(1) items:
decl_var -> storage const_vol pure_ident d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 751
## Reductions:

State 751:
## Known stack suffix:
## storage const_vol pure_ident d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage const_vol pure_ident d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage const_vol pure_ident d_ident TEq initialize TPtVirg

State 752:
## Known stack suffix:
## storage const_vol pure_ident comma_list(d_ident)
## LR(1) items:
decl_var -> storage const_vol pure_ident comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 753
## Reductions:

State 753:
## Known stack suffix:
## storage const_vol pure_ident comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> storage const_vol pure_ident comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> storage const_vol pure_ident comma_list(d_ident) TPtVirg

State 754:
## Known stack suffix:
## statement
## LR(1) items:
decl_statement -> statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_statement -> statement

State 755:
## Known stack suffix:
## pure_ident
## LR(1) items:
decl_var -> pure_ident . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> pure_ident . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
func_ident -> pure_ident . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 756
-- On comma_list(d_ident) shift to state 760
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TXor TWhy TWhile TTypeId TTilde TSwitch TSupEq TSup TString TSizeof TShr TShl TRuleName TRightIso TReturn TPtrOp TPtVirg TPlus TOrLog TOr TOPar0 TOPar TOEllipsis TOCro TOBrace TNothing TNotEq TMul TMod TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TInfEq TInf TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEqEq TEq TEllipsis TDot TDo TDiv TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TCEllipsis TBreak TBang TAssign TArobArob TArob TAndLog TAnd EOF
--   reduce production func_ident -> pure_ident
** Conflict on TMetaId TIdent

State 756:
## Known stack suffix:
## pure_ident d_ident
## LR(1) items:
decl_var -> pure_ident d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 757
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 757:
## Known stack suffix:
## pure_ident d_ident TEq
## LR(1) items:
decl_var -> pure_ident d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 758
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 758:
## Known stack suffix:
## pure_ident d_ident TEq initialize
## LR(1) items:
decl_var -> pure_ident d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 759
## Reductions:

State 759:
## Known stack suffix:
## pure_ident d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> pure_ident d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> pure_ident d_ident TEq initialize TPtVirg

State 760:
## Known stack suffix:
## pure_ident comma_list(d_ident)
## LR(1) items:
decl_var -> pure_ident comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 761
## Reductions:

State 761:
## Known stack suffix:
## pure_ident comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> pure_ident comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> pure_ident comma_list(d_ident) TPtVirg

State 762:
## Known stack suffix:
## pure_decl_statement_list
## LR(1) items:
loption(pure_decl_statement_list) -> pure_decl_statement_list . [ TEllipsis ]
pre_post_decl_statement_and_expression -> pure_decl_statement_list . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) -> pure_decl_statement_list
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production pre_post_decl_statement_and_expression -> pure_decl_statement_list

State 763:
## Known stack suffix:
## TOBrace pre_post_decl_statement_and_expression_opt
## LR(1) items:
statement -> TOBrace pre_post_decl_statement_and_expression_opt . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 764
## Reductions:

State 764:
## Known stack suffix:
## TOBrace pre_post_decl_statement_and_expression_opt TCBrace
## LR(1) items:
statement -> TOBrace pre_post_decl_statement_and_expression_opt TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TOBrace pre_post_decl_statement_and_expression_opt TCBrace

State 765:
## Known stack suffix:
## pre_post_decl_statement_and_expression
## LR(1) items:
pre_post_decl_statement_and_expression_opt -> pre_post_decl_statement_and_expression . [ TDefault TCase TCBrace ]
## Transitions:
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production pre_post_decl_statement_and_expression_opt -> pre_post_decl_statement_and_expression

State 766:
## Known stack suffix:
## nonempty_list(decl_statement)
## LR(1) items:
pure_decl_statement_list -> nonempty_list(decl_statement) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production pure_decl_statement_list -> nonempty_list(decl_statement)

State 767:
## Known stack suffix:
## loption(pure_decl_statement_list)
## LR(1) items:
pre_post_decl_statement_and_expression -> loption(pure_decl_statement_list) . required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On TEllipsis shift to state 768
-- On required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) shift to state 859
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 860
## Reductions:

State 768:
## Known stack suffix:
## TEllipsis
## LR(1) items:
dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) -> TEllipsis . list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhen shift to state 769
-- On whens(pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 856
-- On list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 858
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) ->

State 769:
## Known stack suffix:
## TWhen
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen . TNotEq pre_post_decl_statement_or_expression TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen . TEq rule_elem_statement TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TNotEq shift to state 770
-- On TEq shift to state 833
## Reductions:

State 770:
## Known stack suffix:
## TWhen TNotEq
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TNotEq . pre_post_decl_statement_or_expression TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TEllipsis shift to state 768
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_or_expression shift to state 773
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) shift to state 775
-- On opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) shift to state 776
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 825
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 831
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 771:
## Known stack suffix:
## TNothing
## LR(1) items:
exp_decl_statement_list -> TNothing . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production exp_decl_statement_list -> TNothing

State 772:
## Known stack suffix:
## pure_decl_statement_list
## LR(1) items:
exp_decl_statement_list -> pure_decl_statement_list . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production exp_decl_statement_list -> pure_decl_statement_list

State 773:
## Known stack suffix:
## TWhen TNotEq pre_post_decl_statement_or_expression
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TNotEq pre_post_decl_statement_or_expression . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 774
## Reductions:

State 774:
## Known stack suffix:
## TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd

State 775:
## Known stack suffix:
## opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list))
## LR(1) items:
opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) . [ TLineEnd ]
## Transitions:
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list))

State 776:
## Known stack suffix:
## opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)
## LR(1) items:
pre_post_decl_statement_or_expression -> opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) . [ TLineEnd ]
## Transitions:
## Reductions:
-- On TLineEnd
--   reduce production pre_post_decl_statement_or_expression -> opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)

State 777:
## Known stack suffix:
## funproto
## LR(1) items:
decl_var -> funproto . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> funproto

State 778:
## Known stack suffix:
## fn_ctype
## LR(1) items:
decl_var -> fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 779
## Reductions:

State 779:
## Known stack suffix:
## fn_ctype TOPar
## LR(1) items:
decl_var -> fn_ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 780
## Reductions:

State 780:
## Known stack suffix:
## fn_ctype TOPar TMul
## LR(1) items:
decl_var -> fn_ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 781
## Reductions:

State 781:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 782
## Reductions:

State 782:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 783
## Reductions:

State 783:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 319
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 321
-- On struct_or_union shift to state 32
-- On one_dec(name_opt_decl) shift to state 331
-- On name_opt_decl shift to state 325
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 326
-- On decl_list_start(name_opt_decl) shift to state 337
-- On decl_list(name_opt_decl) shift to state 784
-- On decl shift to state 334
-- On ctype_qualif shift to state 151
-- On ctype shift to state 335
-- On const_vol shift to state 158
## Reductions:

State 784:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 785
## Reductions:

State 785:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 786
-- On TEq shift to state 787
## Reductions:

State 786:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 787:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 788
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 788:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 789
## Reductions:

State 789:
## Known stack suffix:
## fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 790:
## Known stack suffix:
## expr
## LR(1) items:
exp_decl_statement_list -> expr . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
exp_decl_statement_list -> expr . TOEllipsis statement_dots(TEllipsis) TCEllipsis exp_decl_statement_list [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
exp_decl_statement_list -> expr . TOEllipsis statement_dots(TEllipsis) TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
statement -> expr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 553
-- On TOEllipsis shift to state 791
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production exp_decl_statement_list -> expr
** Conflict on TOEllipsis

State 791:
## Known stack suffix:
## expr TOEllipsis
## LR(1) items:
exp_decl_statement_list -> expr TOEllipsis . statement_dots(TEllipsis) TCEllipsis exp_decl_statement_list [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
exp_decl_statement_list -> expr TOEllipsis . statement_dots(TEllipsis) TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 792
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 792:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis)
## LR(1) items:
exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) . TCEllipsis exp_decl_statement_list [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) . TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCEllipsis shift to state 793
## Reductions:

State 793:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis) TCEllipsis
## LR(1) items:
exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis . exp_decl_statement_list [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 794
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis
** Conflict on Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd

State 794:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis) TCEllipsis exp_decl_statement_list
## LR(1) items:
exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis exp_decl_statement_list . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis exp_decl_statement_list

State 795:
## Known stack suffix:
## decl_var
## LR(1) items:
decl_statement -> decl_var . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_statement -> decl_var

State 796:
## Known stack suffix:
## decl_statement
## LR(1) items:
nonempty_list(decl_statement) -> decl_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
nonempty_list(decl_statement) -> decl_statement . nonempty_list(decl_statement) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 797
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production nonempty_list(decl_statement) -> decl_statement
** Conflict on Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd

State 797:
## Known stack suffix:
## decl_statement nonempty_list(decl_statement)
## LR(1) items:
nonempty_list(decl_statement) -> decl_statement nonempty_list(decl_statement) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production nonempty_list(decl_statement) -> decl_statement nonempty_list(decl_statement)

State 798:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> ctype . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 799
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 733
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 734
-- On ident shift to state 43
-- On func_ident shift to state 800
-- On d_ident shift to state 805
-- On comma_list(d_ident) shift to state 809
## Reductions:

State 799:
## Known stack suffix:
## ctype TPtVirg
## LR(1) items:
decl_var -> ctype TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> ctype TPtVirg

State 800:
## Known stack suffix:
## ctype func_ident
## LR(1) items:
funproto -> ctype func_ident . TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 801
## Reductions:

State 801:
## Known stack suffix:
## ctype func_ident TOPar
## LR(1) items:
funproto -> ctype func_ident TOPar . decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 395
-- On decl_list(decl) shift to state 802
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 802:
## Known stack suffix:
## ctype func_ident TOPar decl_list(decl)
## LR(1) items:
funproto -> ctype func_ident TOPar decl_list(decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 803
## Reductions:

State 803:
## Known stack suffix:
## ctype func_ident TOPar decl_list(decl) TCPar
## LR(1) items:
funproto -> ctype func_ident TOPar decl_list(decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 804
## Reductions:

State 804:
## Known stack suffix:
## ctype func_ident TOPar decl_list(decl) TCPar TPtVirg
## LR(1) items:
funproto -> ctype func_ident TOPar decl_list(decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production funproto -> ctype func_ident TOPar decl_list(decl) TCPar TPtVirg

State 805:
## Known stack suffix:
## ctype d_ident
## LR(1) items:
decl_var -> ctype d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 806
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 806:
## Known stack suffix:
## ctype d_ident TEq
## LR(1) items:
decl_var -> ctype d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 807
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 807:
## Known stack suffix:
## ctype d_ident TEq initialize
## LR(1) items:
decl_var -> ctype d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 808
## Reductions:

State 808:
## Known stack suffix:
## ctype d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> ctype d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> ctype d_ident TEq initialize TPtVirg

State 809:
## Known stack suffix:
## ctype comma_list(d_ident)
## LR(1) items:
decl_var -> ctype comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## ctype comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> ctype comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> ctype comma_list(d_ident) TPtVirg

State 811:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . generic_ctype list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TArobArob TArob TAnd EOF ]
ctype -> const_vol . Tvoid nonempty_list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> const_vol . pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> const_vol . pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvoid shift to state 159
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On pure_ident shift to state 812
-- On generic_ctype shift to state 161
-- On ctype_qualif shift to state 151
## Reductions:

State 812:
## Known stack suffix:
## const_vol pure_ident
## LR(1) items:
decl_var -> const_vol pure_ident . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> const_vol pure_ident . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 813
-- On comma_list(d_ident) shift to state 817
## Reductions:

State 813:
## Known stack suffix:
## const_vol pure_ident d_ident
## LR(1) items:
decl_var -> const_vol pure_ident d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 814
-- On TComma shift to state 715
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 814:
## Known stack suffix:
## const_vol pure_ident d_ident TEq
## LR(1) items:
decl_var -> const_vol pure_ident d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TOBrace shift to state 583
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On initialize shift to state 815
-- On func_ident shift to state 85
-- On eexpr shift to state 642
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 815:
## Known stack suffix:
## const_vol pure_ident d_ident TEq initialize
## LR(1) items:
decl_var -> const_vol pure_ident d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 816
## Reductions:

State 816:
## Known stack suffix:
## const_vol pure_ident d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> const_vol pure_ident d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> const_vol pure_ident d_ident TEq initialize TPtVirg

State 817:
## Known stack suffix:
## const_vol pure_ident comma_list(d_ident)
## LR(1) items:
decl_var -> const_vol pure_ident comma_list(d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## const_vol pure_ident comma_list(d_ident) TPtVirg
## LR(1) items:
decl_var -> const_vol pure_ident comma_list(d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_var -> const_vol pure_ident comma_list(d_ident) TPtVirg

State 819:
## Known stack suffix:
## no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement))
## LR(1) items:
statement_dots(TEllipsis) -> no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement_dots(TEllipsis) -> no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement))

State 820:
## Known stack suffix:
## exp_decl_statement_list
## LR(1) items:
no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) -> exp_decl_statement_list . list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) shift to state 821
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 822
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) ->
** Conflict on TEllipsis

State 821:
## Known stack suffix:
## exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list))
## LR(1) items:
no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) -> exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) -> exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list))

State 822:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 823
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 823:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) exp_decl_statement_list
## LR(1) items:
list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) exp_decl_statement_list . list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) shift to state 824
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 822
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) ->
** Conflict on TEllipsis

State 824:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list))
## LR(1) items:
list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TCEllipsis TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) exp_decl_statement_list list(pair(dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list))

State 825:
## Known stack suffix:
## exp_decl_statement_list
## LR(1) items:
opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list . [ TLineEnd ]
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) [ TLineEnd ]
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) [ TLineEnd ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 826
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_start_end(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list

State 826:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . [ TLineEnd ]
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) shift to state 827
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 828
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)

State 827:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)
## LR(1) items:
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) . [ TLineEnd ]
## Transitions:
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)

State 828:
## Known stack suffix:
## exp_decl_statement_list
## LR(1) items:
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list . [ TLineEnd ]
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) [ TLineEnd ]
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) [ TLineEnd ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 829
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list

State 829:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . [ TLineEnd ]
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) shift to state 830
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 828
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)

State 830:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)
## LR(1) items:
opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) . [ TLineEnd ]
## Transitions:
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)

State 831:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) shift to state 832
-- On nonempty_list(decl_statement) shift to state 766
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 828
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 832:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)
## LR(1) items:
opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list) . [ TLineEnd ]
## Transitions:
## Reductions:
-- On TLineEnd
--   reduce production opt_dot_start_end_pattern(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),exp_decl_statement_list,opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,exp_decl_statement_list)

State 833:
## Known stack suffix:
## TWhen TEq
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TEq . rule_elem_statement TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 834
-- On TPlus shift to state 48
-- On TOPar0 shift to state 838
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TContinue shift to state 839
-- On TChar shift to state 431
-- On TBreak shift to state 841
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On rule_elem_statement shift to state 854
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 846
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 834:
## Known stack suffix:
## TReturn
## LR(1) items:
rule_elem_statement -> TReturn . eexpr TPtVirg [ TMid0 TLineEnd TCPar0 ]
rule_elem_statement -> TReturn . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPtVirg shift to state 835
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 836
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 835:
## Known stack suffix:
## TReturn TPtVirg
## LR(1) items:
rule_elem_statement -> TReturn TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> TReturn TPtVirg

State 836:
## Known stack suffix:
## TReturn eexpr
## LR(1) items:
rule_elem_statement -> TReturn eexpr . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 837
## Reductions:

State 837:
## Known stack suffix:
## TReturn eexpr TPtVirg
## LR(1) items:
rule_elem_statement -> TReturn eexpr TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> TReturn eexpr TPtVirg

State 838:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr) TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TMid0 TInfEq TInf TInc TEqEq TEq TDot TDiv TDec TCPar0 TAssign TAndLog TAnd ]
rule_elem_statement -> TOPar0 . midzero_list(rule_elem_statement) TCPar0 [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 834
-- On TPlus shift to state 48
-- On TOPar0 shift to state 838
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TContinue shift to state 839
-- On TChar shift to state 431
-- On TBreak shift to state 841
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On rule_elem_statement shift to state 843
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On midzero_list(rule_elem_statement) shift to state 851
-- On midzero_list(expr) shift to state 502
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 853
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 839:
## Known stack suffix:
## TContinue
## LR(1) items:
rule_elem_statement -> TContinue . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 840
## Reductions:

State 840:
## Known stack suffix:
## TContinue TPtVirg
## LR(1) items:
rule_elem_statement -> TContinue TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> TContinue TPtVirg

State 841:
## Known stack suffix:
## TBreak
## LR(1) items:
rule_elem_statement -> TBreak . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 842
## Reductions:

State 842:
## Known stack suffix:
## TBreak TPtVirg
## LR(1) items:
rule_elem_statement -> TBreak TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> TBreak TPtVirg

State 843:
## Known stack suffix:
## rule_elem_statement
## LR(1) items:
midzero_list(rule_elem_statement) -> rule_elem_statement . list(mzl(rule_elem_statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 844
-- On mzl(rule_elem_statement) shift to state 848
-- On list(mzl(rule_elem_statement)) shift to state 850
## Reductions:
-- On TCPar0
--   reduce production list(mzl(rule_elem_statement)) ->

State 844:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(rule_elem_statement) -> TMid0 . rule_elem_statement [ TMid0 TCPar0 ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 834
-- On TPlus shift to state 48
-- On TOPar0 shift to state 838
-- On TOPar shift to state 417
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIdent shift to state 28
-- On TFloat shift to state 429
-- On TDec shift to state 430
-- On TContinue shift to state 839
-- On TChar shift to state 431
-- On TBreak shift to state 841
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On rule_elem_statement shift to state 845
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 846
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 845:
## Known stack suffix:
## TMid0 rule_elem_statement
## LR(1) items:
mzl(rule_elem_statement) -> TMid0 rule_elem_statement . [ TMid0 TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TCPar0
--   reduce production mzl(rule_elem_statement) -> TMid0 rule_elem_statement

State 846:
## Known stack suffix:
## expr
## LR(1) items:
rule_elem_statement -> expr . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 847
## Reductions:

State 847:
## Known stack suffix:
## expr TPtVirg
## LR(1) items:
rule_elem_statement -> expr TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> expr TPtVirg

State 848:
## Known stack suffix:
## mzl(rule_elem_statement)
## LR(1) items:
list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) . list(mzl(rule_elem_statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 844
-- On mzl(rule_elem_statement) shift to state 848
-- On list(mzl(rule_elem_statement)) shift to state 849
## Reductions:
-- On TCPar0
--   reduce production list(mzl(rule_elem_statement)) ->

State 849:
## Known stack suffix:
## mzl(rule_elem_statement) list(mzl(rule_elem_statement))
## LR(1) items:
list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) list(mzl(rule_elem_statement)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) list(mzl(rule_elem_statement))

State 850:
## Known stack suffix:
## rule_elem_statement list(mzl(rule_elem_statement))
## LR(1) items:
midzero_list(rule_elem_statement) -> rule_elem_statement list(mzl(rule_elem_statement)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production midzero_list(rule_elem_statement) -> rule_elem_statement list(mzl(rule_elem_statement))

State 851:
## Known stack suffix:
## TOPar0 midzero_list(rule_elem_statement)
## LR(1) items:
rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement) . TCPar0 [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TCPar0 shift to state 852
## Reductions:

State 852:
## Known stack suffix:
## TOPar0 midzero_list(rule_elem_statement) TCPar0
## LR(1) items:
rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement) TCPar0 . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TLineEnd TCPar0
--   reduce production rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement) TCPar0

State 853:
## Known stack suffix:
## expr
## LR(1) items:
midzero_list(expr) -> expr . list(mzl(expr)) [ TCPar0 ]
rule_elem_statement -> expr . TPtVirg [ TMid0 TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 847
-- On TMid0 shift to state 505
-- On mzl(expr) shift to state 509
-- On list(mzl(expr)) shift to state 511
## Reductions:
-- On TCPar0
--   reduce production list(mzl(expr)) ->

State 854:
## Known stack suffix:
## TWhen TEq rule_elem_statement
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TEq rule_elem_statement . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## TWhen TEq rule_elem_statement TLineEnd
## LR(1) items:
whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TEq rule_elem_statement TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TWhen TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production whens(pre_post_decl_statement_or_expression,rule_elem_statement) -> TWhen TEq rule_elem_statement TLineEnd

State 856:
## Known stack suffix:
## whens(pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) -> whens(pre_post_decl_statement_or_expression,rule_elem_statement) . list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TWhen shift to state 769
-- On whens(pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 856
-- On list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 857
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) ->

State 857:
## Known stack suffix:
## whens(pre_post_decl_statement_or_expression,rule_elem_statement) list(whens(pre_post_decl_statement_or_expression,rule_elem_statement))
## LR(1) items:
list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) -> whens(pre_post_decl_statement_or_expression,rule_elem_statement) list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) -> whens(pre_post_decl_statement_or_expression,rule_elem_statement) list(whens(pre_post_decl_statement_or_expression,rule_elem_statement))

State 858:
## Known stack suffix:
## TEllipsis list(whens(pre_post_decl_statement_or_expression,rule_elem_statement))
## LR(1) items:
dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) -> TEllipsis list(whens(pre_post_decl_statement_or_expression,rule_elem_statement)) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TDo TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) -> TEllipsis list(whens(pre_post_decl_statement_or_expression,rule_elem_statement))

State 859:
## Known stack suffix:
## loption(pure_decl_statement_list) required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)
## LR(1) items:
pre_post_decl_statement_and_expression -> loption(pure_decl_statement_list) required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production pre_post_decl_statement_and_expression -> loption(pure_decl_statement_list) required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)

State 860:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 861
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) shift to state 862
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 863
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) ->

State 861:
## Known stack suffix:
## pure_decl_statement_list
## LR(1) items:
exp_decl_statement_list -> pure_decl_statement_list . [ TEllipsis ]
no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> pure_decl_statement_list . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Reductions:
-- On TEllipsis
--   reduce production exp_decl_statement_list -> pure_decl_statement_list
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> pure_decl_statement_list

State 862:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)
## LR(1) items:
required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production required_dot_start_with_ender(exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)

State 863:
## Known stack suffix:
## exp_decl_statement_list
## LR(1) items:
no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 864
## Reductions:

State 864:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 861
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) shift to state 865
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 863
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) ->

State 865:
## Known stack suffix:
## exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)
## LR(1) items:
no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list) -> exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,pure_decl_statement_list)

State 866:
## Known stack suffix:
## TWhen TNotEq pre_post_decl_statement_or_expression
## LR(1) items:
whenppdecs -> TWhen TNotEq pre_post_decl_statement_or_expression . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
-- On TLineEnd shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd
## LR(1) items:
whenppdecs -> TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd
--   reduce production whenppdecs -> TWhen TNotEq pre_post_decl_statement_or_expression TLineEnd

State 868:
## Known stack suffix:
## whenppdecs
## LR(1) items:
option(whenppdecs) -> whenppdecs . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd
--   reduce production option(whenppdecs) -> whenppdecs

State 869:
## Known stack suffix:
## TOEllipsis option(whenppdecs)
## LR(1) items:
statement -> TOEllipsis option(whenppdecs) . statement_dots(TEllipsis) TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 870
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 870:
## Known stack suffix:
## TOEllipsis option(whenppdecs) statement_dots(TEllipsis)
## LR(1) items:
statement -> TOEllipsis option(whenppdecs) statement_dots(TEllipsis) . TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCEllipsis shift to state 871
## Reductions:

State 871:
## Known stack suffix:
## TOEllipsis option(whenppdecs) statement_dots(TEllipsis) TCEllipsis
## LR(1) items:
statement -> TOEllipsis option(whenppdecs) statement_dots(TEllipsis) TCEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TOEllipsis option(whenppdecs) statement_dots(TEllipsis) TCEllipsis

State 872:
## Known stack suffix:
## TMid0
## LR(1) items:
pre_post_decl_statement_and_expression_opt_mid -> TMid0 . pre_post_decl_statement_and_expression_opt_mid [ TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMid0 shift to state 872
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt_mid shift to state 873
-- On pre_post_decl_statement_and_expression shift to state 874
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid ->

State 873:
## Known stack suffix:
## TMid0 pre_post_decl_statement_and_expression_opt_mid
## LR(1) items:
pre_post_decl_statement_and_expression_opt_mid -> TMid0 pre_post_decl_statement_and_expression_opt_mid . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid -> TMid0 pre_post_decl_statement_and_expression_opt_mid

State 874:
## Known stack suffix:
## pre_post_decl_statement_and_expression
## LR(1) items:
pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression . [ TCPar0 ]
pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression . TMid0 pre_post_decl_statement_and_expression_opt_mid [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 875
## Reductions:
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression

State 875:
## Known stack suffix:
## pre_post_decl_statement_and_expression TMid0
## LR(1) items:
pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression TMid0 . pre_post_decl_statement_and_expression_opt_mid [ TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMid0 shift to state 872
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt_mid shift to state 876
-- On pre_post_decl_statement_and_expression shift to state 874
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid ->

State 876:
## Known stack suffix:
## pre_post_decl_statement_and_expression TMid0 pre_post_decl_statement_and_expression_opt_mid
## LR(1) items:
pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression TMid0 pre_post_decl_statement_and_expression_opt_mid . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid -> pre_post_decl_statement_and_expression TMid0 pre_post_decl_statement_and_expression_opt_mid

State 877:
## Known stack suffix:
## TOPar0 pre_post_decl_statement_and_expression_opt_mid
## LR(1) items:
decl_statement -> TOPar0 pre_post_decl_statement_and_expression_opt_mid . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 878
## Reductions:

State 878:
## Known stack suffix:
## TOPar0 pre_post_decl_statement_and_expression_opt_mid TCPar0
## LR(1) items:
decl_statement -> TOPar0 pre_post_decl_statement_and_expression_opt_mid TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production decl_statement -> TOPar0 pre_post_decl_statement_and_expression_opt_mid TCPar0

State 879:
## Known stack suffix:
## TDefault TDotDot pre_post_decl_statement_and_expression_opt
## LR(1) items:
case_line -> TDefault TDotDot pre_post_decl_statement_and_expression_opt . [ TDefault TCase TCBrace ]
## Transitions:
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production case_line -> TDefault TDotDot pre_post_decl_statement_and_expression_opt

State 880:
## Known stack suffix:
## TCase
## LR(1) items:
case_line -> TCase . eexpr TDotDot pre_post_decl_statement_and_expression_opt [ TDefault TCase TCBrace ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 46
-- On TSizeof shift to state 47
-- On TPlus shift to state 48
-- On TOPar0 shift to state 49
-- On TOPar shift to state 50
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 59
-- On TMetaErr shift to state 60
-- On TMetaConst shift to state 61
-- On TInt shift to state 62
-- On TInc shift to state 63
-- On TIdent shift to state 28
-- On TFloat shift to state 65
-- On TEllipsis shift to state 66
-- On TDec shift to state 67
-- On TChar shift to state 68
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 71
-- On unary_expr(eexpr,dot_expressions) shift to state 82
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,dot_expressions) shift to state 74
-- On postfix_expr(eexpr,dot_expressions) shift to state 75
-- On nest_expressions shift to state 84
-- On func_ident shift to state 85
-- On eexpr shift to state 881
-- On dot_expressions shift to state 86
-- On cond_expr(eexpr,dot_expressions) shift to state 87
-- On cast_expr(eexpr,dot_expressions) shift to state 88
-- On basic_expr(eexpr,dot_expressions) shift to state 127
-- On assign_expr(eexpr,dot_expressions) shift to state 128
-- On arith_expr(eexpr,dot_expressions) shift to state 90
## Reductions:

State 881:
## Known stack suffix:
## TCase eexpr
## LR(1) items:
case_line -> TCase eexpr . TDotDot pre_post_decl_statement_and_expression_opt [ TDefault TCase TCBrace ]
## Transitions:
-- On TDotDot shift to state 882
## Reductions:

State 882:
## Known stack suffix:
## TCase eexpr TDotDot
## LR(1) items:
case_line -> TCase eexpr TDotDot . pre_post_decl_statement_and_expression_opt [ TDefault TCase TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt shift to state 883
-- On pre_post_decl_statement_and_expression shift to state 765
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TDefault TCase TCBrace
--   reduce production pre_post_decl_statement_and_expression_opt ->

State 883:
## Known stack suffix:
## TCase eexpr TDotDot pre_post_decl_statement_and_expression_opt
## LR(1) items:
case_line -> TCase eexpr TDotDot pre_post_decl_statement_and_expression_opt . [ TDefault TCase TCBrace ]
## Transitions:
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production case_line -> TCase eexpr TDotDot pre_post_decl_statement_and_expression_opt

State 884:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace list(case_line)
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace list(case_line) . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 885
## Reductions:

State 885:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace list(case_line) TCBrace
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace list(case_line) TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TSwitch TOPar eexpr TCPar TOBrace list(case_line) TCBrace

State 886:
## Known stack suffix:
## case_line
## LR(1) items:
list(case_line) -> case_line . list(case_line) [ TCBrace ]
## Transitions:
-- On TDefault shift to state 412
-- On TCase shift to state 880
-- On list(case_line) shift to state 887
-- On case_line shift to state 886
## Reductions:
-- On TCBrace
--   reduce production list(case_line) ->

State 887:
## Known stack suffix:
## case_line list(case_line)
## LR(1) items:
list(case_line) -> case_line list(case_line) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production list(case_line) -> case_line list(case_line)

State 888:
## Known stack suffix:
## TWhile TOPar eexpr TCPar single_statement
## LR(1) items:
statement -> TWhile TOPar eexpr TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TRightIso TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TLineEnd TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAnd EOF
--   reduce production statement -> TWhile TOPar eexpr TCPar single_statement

State 889:
## Known stack suffix:
## TIsoTopLevel xstatement_dots(TEllipsis)
## LR(1) items:
iso_main -> TIsoTopLevel xstatement_dots(TEllipsis) . list(iso(xstatement_dots(TEllipsis))) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 890
-- On TIso shift to state 893
-- On list(iso(xstatement_dots(TEllipsis))) shift to state 895
-- On iso(xstatement_dots(TEllipsis)) shift to state 897
## Reductions:
-- On EOF
--   reduce production list(iso(xstatement_dots(TEllipsis))) ->

State 890:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(xstatement_dots(TEllipsis)) -> TRightIso . xstatement_dots(TEllipsis) [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On xstatement_dots(TEllipsis) shift to state 891
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 892
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 891:
## Known stack suffix:
## TRightIso xstatement_dots(TEllipsis)
## LR(1) items:
iso(xstatement_dots(TEllipsis)) -> TRightIso xstatement_dots(TEllipsis) . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(xstatement_dots(TEllipsis)) -> TRightIso xstatement_dots(TEllipsis)

State 892:
## Known stack suffix:
## statement_dots(TEllipsis)
## LR(1) items:
xstatement_dots(TEllipsis) -> statement_dots(TEllipsis) . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production xstatement_dots(TEllipsis) -> statement_dots(TEllipsis)

State 893:
## Known stack suffix:
## TIso
## LR(1) items:
iso(xstatement_dots(TEllipsis)) -> TIso . xstatement_dots(TEllipsis) [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On xstatement_dots(TEllipsis) shift to state 894
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 892
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 894:
## Known stack suffix:
## TIso xstatement_dots(TEllipsis)
## LR(1) items:
iso(xstatement_dots(TEllipsis)) -> TIso xstatement_dots(TEllipsis) . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(xstatement_dots(TEllipsis)) -> TIso xstatement_dots(TEllipsis)

State 895:
## Known stack suffix:
## TIsoTopLevel xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis)))
## LR(1) items:
iso_main -> TIsoTopLevel xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis))) . EOF [ # ]
## Transitions:
-- On EOF shift to state 896
## Reductions:

State 896:
## Known stack suffix:
## TIsoTopLevel xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis))) EOF
## LR(1) items:
iso_main -> TIsoTopLevel xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis))) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_main -> TIsoTopLevel xstatement_dots(TEllipsis) list(iso(xstatement_dots(TEllipsis))) EOF

State 897:
## Known stack suffix:
## iso(xstatement_dots(TEllipsis))
## LR(1) items:
list(iso(xstatement_dots(TEllipsis))) -> iso(xstatement_dots(TEllipsis)) . list(iso(xstatement_dots(TEllipsis))) [ EOF ]
## Transitions:
-- On TRightIso shift to state 890
-- On TIso shift to state 893
-- On list(iso(xstatement_dots(TEllipsis))) shift to state 898
-- On iso(xstatement_dots(TEllipsis)) shift to state 897
## Reductions:
-- On EOF
--   reduce production list(iso(xstatement_dots(TEllipsis))) ->

State 898:
## Known stack suffix:
## iso(xstatement_dots(TEllipsis)) list(iso(xstatement_dots(TEllipsis)))
## LR(1) items:
list(iso(xstatement_dots(TEllipsis))) -> iso(xstatement_dots(TEllipsis)) list(iso(xstatement_dots(TEllipsis))) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(iso(xstatement_dots(TEllipsis))) -> iso(xstatement_dots(TEllipsis)) list(iso(xstatement_dots(TEllipsis)))

State 899:
## Known stack suffix:
## TIsoStatement
## LR(1) items:
iso_main -> TIsoStatement . single_statement list(iso(single_statement)) EOF [ # ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 900
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 900:
## Known stack suffix:
## TIsoStatement single_statement
## LR(1) items:
iso_main -> TIsoStatement single_statement . list(iso(single_statement)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 901
-- On TIso shift to state 903
-- On list(iso(single_statement)) shift to state 905
-- On iso(single_statement) shift to state 907
## Reductions:
-- On EOF
--   reduce production list(iso(single_statement)) ->

State 901:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(single_statement) -> TRightIso . single_statement [ TRightIso TIso EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 902
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 902:
## Known stack suffix:
## TRightIso single_statement
## LR(1) items:
iso(single_statement) -> TRightIso single_statement . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(single_statement) -> TRightIso single_statement

State 903:
## Known stack suffix:
## TIso
## LR(1) items:
iso(single_statement) -> TIso . single_statement [ TRightIso TIso EOF ]
## Transitions:
-- On TWhile shift to state 403
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 531
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On statement shift to state 545
-- On single_statement shift to state 904
-- On pure_ident shift to state 73
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On invalid shift to state 448
-- On func_ident shift to state 449
-- On expr shift to state 552
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 904:
## Known stack suffix:
## TIso single_statement
## LR(1) items:
iso(single_statement) -> TIso single_statement . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(single_statement) -> TIso single_statement

State 905:
## Known stack suffix:
## TIsoStatement single_statement list(iso(single_statement))
## LR(1) items:
iso_main -> TIsoStatement single_statement list(iso(single_statement)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 906
## Reductions:

State 906:
## Known stack suffix:
## TIsoStatement single_statement list(iso(single_statement)) EOF
## LR(1) items:
iso_main -> TIsoStatement single_statement list(iso(single_statement)) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_main -> TIsoStatement single_statement list(iso(single_statement)) EOF

State 907:
## Known stack suffix:
## iso(single_statement)
## LR(1) items:
list(iso(single_statement)) -> iso(single_statement) . list(iso(single_statement)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 901
-- On TIso shift to state 903
-- On list(iso(single_statement)) shift to state 908
-- On iso(single_statement) shift to state 907
## Reductions:
-- On EOF
--   reduce production list(iso(single_statement)) ->

State 908:
## Known stack suffix:
## iso(single_statement) list(iso(single_statement))
## LR(1) items:
list(iso(single_statement)) -> iso(single_statement) list(iso(single_statement)) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(iso(single_statement)) -> iso(single_statement) list(iso(single_statement))

State 909:
## Known stack suffix:
## TIsoExpression
## LR(1) items:
iso_main -> TIsoExpression . dexpr list(iso(dexpr)) EOF [ # ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 910
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 910:
## Known stack suffix:
## TIsoExpression dexpr
## LR(1) items:
iso_main -> TIsoExpression dexpr . list(iso(dexpr)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 911
-- On TIso shift to state 913
-- On list(iso(dexpr)) shift to state 915
-- On iso(dexpr) shift to state 917
## Reductions:
-- On EOF
--   reduce production list(iso(dexpr)) ->

State 911:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(dexpr) -> TRightIso . dexpr [ TRightIso TIso EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 912
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 912:
## Known stack suffix:
## TRightIso dexpr
## LR(1) items:
iso(dexpr) -> TRightIso dexpr . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(dexpr) -> TRightIso dexpr

State 913:
## Known stack suffix:
## TIso
## LR(1) items:
iso(dexpr) -> TIso . dexpr [ TRightIso TIso EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 914
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 914:
## Known stack suffix:
## TIso dexpr
## LR(1) items:
iso(dexpr) -> TIso dexpr . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(dexpr) -> TIso dexpr

State 915:
## Known stack suffix:
## TIsoExpression dexpr list(iso(dexpr))
## LR(1) items:
iso_main -> TIsoExpression dexpr list(iso(dexpr)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 916
## Reductions:

State 916:
## Known stack suffix:
## TIsoExpression dexpr list(iso(dexpr)) EOF
## LR(1) items:
iso_main -> TIsoExpression dexpr list(iso(dexpr)) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_main -> TIsoExpression dexpr list(iso(dexpr)) EOF

State 917:
## Known stack suffix:
## iso(dexpr)
## LR(1) items:
list(iso(dexpr)) -> iso(dexpr) . list(iso(dexpr)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 911
-- On TIso shift to state 913
-- On list(iso(dexpr)) shift to state 918
-- On iso(dexpr) shift to state 917
## Reductions:
-- On EOF
--   reduce production list(iso(dexpr)) ->

State 918:
## Known stack suffix:
## iso(dexpr) list(iso(dexpr))
## LR(1) items:
list(iso(dexpr)) -> iso(dexpr) list(iso(dexpr)) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(iso(dexpr)) -> iso(dexpr) list(iso(dexpr))

State 919:
## Known stack suffix:
## TIsoDeclaration
## LR(1) items:
iso_main -> TIsoDeclaration . decl_var list(iso(decl_var)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TDeclarerId shift to state 567
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On pure_ident shift to state 920
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fn_ctype shift to state 778
-- On decl_var shift to state 921
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
## Reductions:

State 920:
## Known stack suffix:
## pure_ident
## LR(1) items:
decl_var -> pure_ident . comma_list(d_ident) TPtVirg [ TRightIso TIso EOF ]
decl_var -> pure_ident . d_ident TEq initialize TPtVirg [ TRightIso TIso EOF ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 34
-- On ident shift to state 43
-- On d_ident shift to state 756
-- On comma_list(d_ident) shift to state 760
## Reductions:

State 921:
## Known stack suffix:
## TIsoDeclaration decl_var
## LR(1) items:
iso_main -> TIsoDeclaration decl_var . list(iso(decl_var)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 922
-- On TIso shift to state 924
-- On list(iso(decl_var)) shift to state 926
-- On iso(decl_var) shift to state 928
## Reductions:
-- On EOF
--   reduce production list(iso(decl_var)) ->

State 922:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(decl_var) -> TRightIso . decl_var [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TDeclarerId shift to state 567
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On pure_ident shift to state 920
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fn_ctype shift to state 778
-- On decl_var shift to state 923
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
## Reductions:

State 923:
## Known stack suffix:
## TRightIso decl_var
## LR(1) items:
iso(decl_var) -> TRightIso decl_var . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(decl_var) -> TRightIso decl_var

State 924:
## Known stack suffix:
## TIso
## LR(1) items:
iso(decl_var) -> TIso . decl_var [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On TDeclarerId shift to state 567
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On pure_ident shift to state 920
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fn_ctype shift to state 778
-- On decl_var shift to state 925
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
## Reductions:

State 925:
## Known stack suffix:
## TIso decl_var
## LR(1) items:
iso(decl_var) -> TIso decl_var . [ TRightIso TIso EOF ]
## Transitions:
## Reductions:
-- On TRightIso TIso EOF
--   reduce production iso(decl_var) -> TIso decl_var

State 926:
## Known stack suffix:
## TIsoDeclaration decl_var list(iso(decl_var))
## LR(1) items:
iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 927
## Reductions:

State 927:
## Known stack suffix:
## TIsoDeclaration decl_var list(iso(decl_var)) EOF
## LR(1) items:
iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) EOF

State 928:
## Known stack suffix:
## iso(decl_var)
## LR(1) items:
list(iso(decl_var)) -> iso(decl_var) . list(iso(decl_var)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 922
-- On TIso shift to state 924
-- On list(iso(decl_var)) shift to state 929
-- On iso(decl_var) shift to state 928
## Reductions:
-- On EOF
--   reduce production list(iso(decl_var)) ->

State 929:
## Known stack suffix:
## iso(decl_var) list(iso(decl_var))
## LR(1) items:
list(iso(decl_var)) -> iso(decl_var) list(iso(decl_var)) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production list(iso(decl_var)) -> iso(decl_var) list(iso(decl_var))

State 930:
## Known stack suffix:
## iso_main
## LR(1) items:
iso_main' -> iso_main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept iso_main

State 931:
## Known stack suffix:
##
## LR(1) items:
iso_meta_main' -> . iso_meta_main [ # ]
## Transitions:
-- On TWhy0 shift to state 932
-- On TPlus0 shift to state 933
-- On TBang0 shift to state 934
-- On metadec shift to state 935
-- On iso_meta_main shift to state 936
-- On arity shift to state 937
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production arity ->

State 932:
## Known stack suffix:
## TWhy0
## LR(1) items:
arity -> TWhy0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production arity -> TWhy0

State 933:
## Known stack suffix:
## TPlus0
## LR(1) items:
arity -> TPlus0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production arity -> TPlus0

State 934:
## Known stack suffix:
## TBang0
## LR(1) items:
arity -> TBang0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production arity -> TBang0

State 935:
## Known stack suffix:
## metadec
## LR(1) items:
iso_meta_main -> metadec . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production iso_meta_main -> metadec

State 936:
## Known stack suffix:
## iso_meta_main
## LR(1) items:
iso_meta_main' -> iso_meta_main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept iso_meta_main

State 937:
## Known stack suffix:
## arity
## LR(1) items:
metadec -> arity . pure TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TType comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TParameter comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TParameter Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TError comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TExpression comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TExpression Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TStatement comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TStatement Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TLocal TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TConstant comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TTypedef comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TDeclarer comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TPure shift to state 938
-- On TContext shift to state 939
-- On pure shift to state 940
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TConstant
--   reduce production pure ->

State 938:
## Known stack suffix:
## TPure
## LR(1) items:
pure -> TPure . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TConstant ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TConstant
--   reduce production pure -> TPure

State 939:
## Known stack suffix:
## TContext
## LR(1) items:
pure -> TContext . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TConstant ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TConstant
--   reduce production pure -> TContext

State 940:
## Known stack suffix:
## arity pure
## LR(1) items:
metadec -> arity pure . TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TFresh TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TType comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TParameter comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TParameter Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TError comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TExpression comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TExpression Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TStatement comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TStatement Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TLocal TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TConstant comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TTypedef comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TDeclarer comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypedef shift to state 941
-- On TTypeId shift to state 18
-- On TType shift to state 952
-- On TStatement shift to state 955
-- On TRuleName shift to state 19
-- On TParameter shift to state 961
-- On TOBrace shift to state 967
-- On TMetaType shift to state 22
-- On TLocal shift to state 975
-- On TIdentifier shift to state 979
-- On TFunction shift to state 982
-- On TFresh shift to state 985
-- On TExpression shift to state 989
-- On TError shift to state 998
-- On TDeclarer shift to state 1001
-- On TConstant shift to state 1004
-- On struct_or_union shift to state 32
-- On meta_exp_type shift to state 1014
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1011
-- On const_vol shift to state 158
## Reductions:

State 941:
## Known stack suffix:
## arity pure TTypedef
## LR(1) items:
metadec -> arity pure TTypedef . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 950
## Reductions:

State 942:
## Known stack suffix:
## TRuleName
## LR(1) items:
pure_ident_or_meta_ident -> TRuleName . TDot pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TDot shift to state 943
## Reductions:

State 943:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
pure_ident_or_meta_ident -> TRuleName TDot . pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TIdent shift to state 28
-- On pure_ident shift to state 944
## Reductions:

State 944:
## Known stack suffix:
## TRuleName TDot pure_ident
## LR(1) items:
pure_ident_or_meta_ident -> TRuleName TDot pure_ident . [ TMPtVirg TComma ]
## Transitions:
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_or_meta_ident -> TRuleName TDot pure_ident

State 945:
## Known stack suffix:
## separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
comma_list(pure_ident_or_meta_ident) -> separated_nonempty_list(TComma,pure_ident_or_meta_ident) . [ TMPtVirg ]
## Transitions:
## Reductions:
-- On TMPtVirg
--   reduce production comma_list(pure_ident_or_meta_ident) -> separated_nonempty_list(TComma,pure_ident_or_meta_ident)

State 946:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 947
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident

State 947:
## Known stack suffix:
## pure_ident_or_meta_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident) [ TMPtVirg ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 948
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
## Reductions:

State 948:
## Known stack suffix:
## pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident) . [ TMPtVirg ]
## Transitions:
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident)

State 949:
## Known stack suffix:
## pure_ident
## LR(1) items:
pure_ident_or_meta_ident -> pure_ident . [ TMPtVirg TComma ]
## Transitions:
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_or_meta_ident -> pure_ident

State 950:
## Known stack suffix:
## arity pure TTypedef comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TTypedef comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 951
## Reductions:

State 951:
## Known stack suffix:
## arity pure TTypedef comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TTypedef comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TTypedef comma_list(pure_ident_or_meta_ident) TMPtVirg

State 952:
## Known stack suffix:
## arity pure TType
## LR(1) items:
metadec -> arity pure TType . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 953
## Reductions:

State 953:
## Known stack suffix:
## arity pure TType comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TType comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 954
## Reductions:

State 954:
## Known stack suffix:
## arity pure TType comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TType comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TType comma_list(pure_ident_or_meta_ident) TMPtVirg

State 955:
## Known stack suffix:
## arity pure TStatement
## LR(1) items:
metadec -> arity pure TStatement . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TStatement . Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 956
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 959
## Reductions:

State 956:
## Known stack suffix:
## arity pure TStatement Tlist
## LR(1) items:
metadec -> arity pure TStatement Tlist . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 957
## Reductions:

State 957:
## Known stack suffix:
## arity pure TStatement Tlist comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TStatement Tlist comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 958
## Reductions:

State 958:
## Known stack suffix:
## arity pure TStatement Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TStatement Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TStatement Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg

State 959:
## Known stack suffix:
## arity pure TStatement comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TStatement comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## arity pure TStatement comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TStatement comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TStatement comma_list(pure_ident_or_meta_ident) TMPtVirg

State 961:
## Known stack suffix:
## arity pure TParameter
## LR(1) items:
metadec -> arity pure TParameter . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TParameter . Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 962
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 965
## Reductions:

State 962:
## Known stack suffix:
## arity pure TParameter Tlist
## LR(1) items:
metadec -> arity pure TParameter Tlist . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 963
## Reductions:

State 963:
## Known stack suffix:
## arity pure TParameter Tlist comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TParameter Tlist comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 964
## Reductions:

State 964:
## Known stack suffix:
## arity pure TParameter Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TParameter Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TParameter Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg

State 965:
## Known stack suffix:
## arity pure TParameter comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TParameter comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## arity pure TParameter comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TParameter comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TParameter comma_list(pure_ident_or_meta_ident) TMPtVirg

State 967:
## Known stack suffix:
## TOBrace
## LR(1) items:
meta_exp_type -> TOBrace . comma_list(ctype) TCBrace list(TMul) [ TRuleName TOCro TIdent ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On separated_nonempty_list(TComma,ctype) shift to state 968
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 969
-- On const_vol shift to state 158
-- On comma_list(ctype) shift to state 972
## Reductions:

State 968:
## Known stack suffix:
## separated_nonempty_list(TComma,ctype)
## LR(1) items:
comma_list(ctype) -> separated_nonempty_list(TComma,ctype) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production comma_list(ctype) -> separated_nonempty_list(TComma,ctype)

State 969:
## Known stack suffix:
## ctype
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype . [ TCBrace ]
separated_nonempty_list(TComma,ctype) -> ctype . TComma separated_nonempty_list(TComma,ctype) [ TCBrace ]
## Transitions:
-- On TComma shift to state 970
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,ctype) -> ctype

State 970:
## Known stack suffix:
## ctype TComma
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype TComma . separated_nonempty_list(TComma,ctype) [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On separated_nonempty_list(TComma,ctype) shift to state 971
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 969
-- On const_vol shift to state 158
## Reductions:

State 971:
## Known stack suffix:
## ctype TComma separated_nonempty_list(TComma,ctype)
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype TComma separated_nonempty_list(TComma,ctype) . [ TCBrace ]
## Transitions:
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,ctype) -> ctype TComma separated_nonempty_list(TComma,ctype)

State 972:
## Known stack suffix:
## TOBrace comma_list(ctype)
## LR(1) items:
meta_exp_type -> TOBrace comma_list(ctype) . TCBrace list(TMul) [ TRuleName TOCro TIdent ]
## Transitions:
-- On TCBrace shift to state 973
## Reductions:

State 973:
## Known stack suffix:
## TOBrace comma_list(ctype) TCBrace
## LR(1) items:
meta_exp_type -> TOBrace comma_list(ctype) TCBrace . list(TMul) [ TRuleName TOCro TIdent ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 974
## Reductions:
-- On TRuleName TOCro TIdent
--   reduce production list(TMul) ->

State 974:
## Known stack suffix:
## TOBrace comma_list(ctype) TCBrace list(TMul)
## LR(1) items:
meta_exp_type -> TOBrace comma_list(ctype) TCBrace list(TMul) . [ TRuleName TOCro TIdent ]
## Transitions:
## Reductions:
-- On TRuleName TOCro TIdent
--   reduce production meta_exp_type -> TOBrace comma_list(ctype) TCBrace list(TMul)

State 975:
## Known stack suffix:
## arity pure TLocal
## LR(1) items:
metadec -> arity pure TLocal . TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TFunction shift to state 976
## Reductions:

State 976:
## Known stack suffix:
## arity pure TLocal TFunction
## LR(1) items:
metadec -> arity pure TLocal TFunction . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 977
## Reductions:

State 977:
## Known stack suffix:
## arity pure TLocal TFunction comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TLocal TFunction comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 978
## Reductions:

State 978:
## Known stack suffix:
## arity pure TLocal TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TLocal TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TLocal TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg

State 979:
## Known stack suffix:
## arity pure TIdentifier
## LR(1) items:
metadec -> arity pure TIdentifier . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 980
## Reductions:

State 980:
## Known stack suffix:
## arity pure TIdentifier comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TIdentifier comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 981
## Reductions:

State 981:
## Known stack suffix:
## arity pure TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg

State 982:
## Known stack suffix:
## arity pure TFunction
## LR(1) items:
metadec -> arity pure TFunction . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 983
## Reductions:

State 983:
## Known stack suffix:
## arity pure TFunction comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TFunction comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 984
## Reductions:

State 984:
## Known stack suffix:
## arity pure TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TFunction comma_list(pure_ident_or_meta_ident) TMPtVirg

State 985:
## Known stack suffix:
## arity pure TFresh
## LR(1) items:
metadec -> arity pure TFresh . TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TIdentifier shift to state 986
## Reductions:

State 986:
## Known stack suffix:
## arity pure TFresh TIdentifier
## LR(1) items:
metadec -> arity pure TFresh TIdentifier . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 987
## Reductions:

State 987:
## Known stack suffix:
## arity pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 988
## Reductions:

State 988:
## Known stack suffix:
## arity pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TFresh TIdentifier comma_list(pure_ident_or_meta_ident) TMPtVirg

State 989:
## Known stack suffix:
## arity pure TExpression
## LR(1) items:
metadec -> arity pure TExpression . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TExpression . Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TExpression . nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 990
-- On TRuleName shift to state 942
-- On TMul shift to state 4
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On nonempty_list(TMul) shift to state 993
-- On comma_list(pure_ident_or_meta_ident) shift to state 996
## Reductions:

State 990:
## Known stack suffix:
## arity pure TExpression Tlist
## LR(1) items:
metadec -> arity pure TExpression Tlist . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 991
## Reductions:

State 991:
## Known stack suffix:
## arity pure TExpression Tlist comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TExpression Tlist comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 992
## Reductions:

State 992:
## Known stack suffix:
## arity pure TExpression Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TExpression Tlist comma_list(pure_ident_or_meta_ident) TMPtVirg

State 993:
## Known stack suffix:
## arity pure TExpression nonempty_list(TMul)
## LR(1) items:
metadec -> arity pure TExpression nonempty_list(TMul) . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 994
## Reductions:

State 994:
## Known stack suffix:
## arity pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 995
## Reductions:

State 995:
## Known stack suffix:
## arity pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TExpression nonempty_list(TMul) comma_list(pure_ident_or_meta_ident) TMPtVirg

State 996:
## Known stack suffix:
## arity pure TExpression comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TExpression comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 997
## Reductions:

State 997:
## Known stack suffix:
## arity pure TExpression comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TExpression comma_list(pure_ident_or_meta_ident) TMPtVirg

State 998:
## Known stack suffix:
## arity pure TError
## LR(1) items:
metadec -> arity pure TError . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 999
## Reductions:

State 999:
## Known stack suffix:
## arity pure TError comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TError comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1000
## Reductions:

State 1000:
## Known stack suffix:
## arity pure TError comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TError comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TError comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1001:
## Known stack suffix:
## arity pure TDeclarer
## LR(1) items:
metadec -> arity pure TDeclarer . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 1002
## Reductions:

State 1002:
## Known stack suffix:
## arity pure TDeclarer comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TDeclarer comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## arity pure TDeclarer comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TDeclarer comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TDeclarer comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1004:
## Known stack suffix:
## arity pure TConstant
## LR(1) items:
metadec -> arity pure TConstant . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TConstant . meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 1005
-- On TOBrace shift to state 967
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On meta_exp_type shift to state 1008
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1011
-- On const_vol shift to state 158
-- On comma_list(pure_ident_or_meta_ident) shift to state 1012
## Reductions:

State 1005:
## Known stack suffix:
## TRuleName
## LR(1) items:
generic_ctype -> TRuleName . TDot TIdent [ TRuleName TMul TIdent ]
pure_ident_or_meta_ident -> TRuleName . TDot pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TDot shift to state 1006
## Reductions:

State 1006:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
generic_ctype -> TRuleName TDot . TIdent [ TRuleName TMul TIdent ]
pure_ident_or_meta_ident -> TRuleName TDot . pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TIdent shift to state 1007
-- On pure_ident shift to state 944
## Reductions:

State 1007:
## Known stack suffix:
## TRuleName TDot TIdent
## LR(1) items:
generic_ctype -> TRuleName TDot TIdent . [ TRuleName TMul TIdent ]
pure_ident -> TIdent . [ TMPtVirg TComma ]
## Transitions:
## Reductions:
-- On TRuleName TMul TIdent
--   reduce production generic_ctype -> TRuleName TDot TIdent
-- On TMPtVirg TComma
--   reduce production pure_ident -> TIdent

State 1008:
## Known stack suffix:
## arity pure TConstant meta_exp_type
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 1009
## Reductions:

State 1009:
## Known stack suffix:
## arity pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1010
## Reductions:

State 1010:
## Known stack suffix:
## arity pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TConstant meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1011:
## Known stack suffix:
## ctype
## LR(1) items:
meta_exp_type -> ctype . [ TRuleName TOCro TIdent ]
## Transitions:
## Reductions:
-- On TRuleName TOCro TIdent
--   reduce production meta_exp_type -> ctype

State 1012:
## Known stack suffix:
## arity pure TConstant comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TConstant comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1013
## Reductions:

State 1013:
## Known stack suffix:
## arity pure TConstant comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TConstant comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure TConstant comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1014:
## Known stack suffix:
## arity pure meta_exp_type
## LR(1) items:
metadec -> arity pure meta_exp_type . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure meta_exp_type . TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TOCro shift to state 1015
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 1019
## Reductions:

State 1015:
## Known stack suffix:
## arity pure meta_exp_type TOCro
## LR(1) items:
metadec -> arity pure meta_exp_type TOCro . TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1016
## Reductions:

State 1016:
## Known stack suffix:
## arity pure meta_exp_type TOCro TCCro
## LR(1) items:
metadec -> arity pure meta_exp_type TOCro TCCro . comma_list(pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TRuleName shift to state 942
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 945
-- On pure_ident_or_meta_ident shift to state 946
-- On pure_ident shift to state 949
-- On comma_list(pure_ident_or_meta_ident) shift to state 1017
## Reductions:

State 1017:
## Known stack suffix:
## arity pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1018
## Reductions:

State 1018:
## Known stack suffix:
## arity pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure meta_exp_type TOCro TCCro comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1019:
## Known stack suffix:
## arity pure meta_exp_type comma_list(pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure meta_exp_type comma_list(pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1020
## Reductions:

State 1020:
## Known stack suffix:
## arity pure meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production metadec -> arity pure meta_exp_type comma_list(pure_ident_or_meta_ident) TMPtVirg

State 1021:
## Known stack suffix:
##
## LR(1) items:
meta_main' -> . meta_main [ # ]
## Transitions:
-- On TWhy0 shift to state 932
-- On TPlus0 shift to state 933
-- On TBang0 shift to state 934
-- On metadec shift to state 1022
-- On meta_main shift to state 1023
-- On arity shift to state 937
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tsigned Tshort Tlong Tint Tfloat Tdouble Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TParameter TOBrace TMetaType TLocal TIdentifier TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production arity ->

State 1022:
## Known stack suffix:
## metadec
## LR(1) items:
meta_main -> metadec . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production meta_main -> metadec

State 1023:
## Known stack suffix:
## meta_main
## LR(1) items:
meta_main' -> meta_main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept meta_main

State 1024:
## Known stack suffix:
##
## LR(1) items:
minus_main' -> . minus_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1025
-- On minus_main shift to state 1027
-- On minus_body shift to state 1028
-- On loption(filespec) shift to state 1032
-- On filespec shift to state 1134
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production loption(filespec) ->

State 1025:
## Known stack suffix:
## TMinusFile
## LR(1) items:
filespec -> TMinusFile . TPlusFile [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPlusFile shift to state 1026
## Reductions:

State 1026:
## Known stack suffix:
## TMinusFile TPlusFile
## LR(1) items:
filespec -> TMinusFile TPlusFile . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production filespec -> TMinusFile TPlusFile

State 1027:
## Known stack suffix:
## minus_main
## LR(1) items:
minus_main' -> minus_main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept minus_main

State 1028:
## Known stack suffix:
## minus_body
## LR(1) items:
minus_main -> minus_body . EOF [ # ]
minus_main -> minus_body . TArobArob [ # ]
minus_main -> minus_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1029
-- On TArob shift to state 1030
-- On EOF shift to state 1031
## Reductions:

State 1029:
## Known stack suffix:
## minus_body TArobArob
## LR(1) items:
minus_main -> minus_body TArobArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production minus_main -> minus_body TArobArob

State 1030:
## Known stack suffix:
## minus_body TArob
## LR(1) items:
minus_main -> minus_body TArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production minus_main -> minus_body TArob

State 1031:
## Known stack suffix:
## minus_body EOF
## LR(1) items:
minus_main -> minus_body EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production minus_main -> minus_body EOF

State 1032:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
minus_body -> loption(filespec) . list(includes) loption(minus_function_decl_statement_or_expression) loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On TIncludeNL shift to state 1033
-- On TIncludeL shift to state 1034
-- On TDefineParam shift to state 1035
-- On TDefine shift to state 1050
-- On list(includes) shift to state 1051
-- On includes shift to state 1126
-- On defineop shift to state 1128
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(includes) ->

State 1033:
## Known stack suffix:
## TIncludeNL
## LR(1) items:
includes -> TIncludeNL . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production includes -> TIncludeNL

State 1034:
## Known stack suffix:
## TIncludeL
## LR(1) items:
includes -> TIncludeL . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production includes -> TIncludeL

State 1035:
## Known stack suffix:
## TDefineParam
## LR(1) items:
defineop -> TDefineParam . define_param_list_option TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On TEllipsis shift to state 1036
-- On pure_ident shift to state 34
-- On ident shift to state 1043
-- On define_param_list_start shift to state 1046
-- On define_param_list_option shift to state 1047
-- On define_param_list shift to state 1049
## Reductions:
-- On TCPar
--   reduce production define_param_list_option ->

State 1036:
## Known stack suffix:
## TEllipsis
## LR(1) items:
define_param_list_start -> TEllipsis . list(dp_comma_args(TEllipsis)) [ TCPar ]
## Transitions:
-- On TComma shift to state 1037
-- On list(dp_comma_args(TEllipsis)) shift to state 1040
-- On dp_comma_args(TEllipsis) shift to state 1041
## Reductions:
-- On TCPar
--   reduce production list(dp_comma_args(TEllipsis)) ->

State 1037:
## Known stack suffix:
## TComma
## LR(1) items:
dp_comma_args(TEllipsis) -> TComma . TEllipsis [ TComma TCPar ]
dp_comma_args(TEllipsis) -> TComma . ident [ TComma TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On TEllipsis shift to state 1038
-- On pure_ident shift to state 34
-- On ident shift to state 1039
## Reductions:

State 1038:
## Known stack suffix:
## TComma TEllipsis
## LR(1) items:
dp_comma_args(TEllipsis) -> TComma TEllipsis . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production dp_comma_args(TEllipsis) -> TComma TEllipsis

State 1039:
## Known stack suffix:
## TComma ident
## LR(1) items:
dp_comma_args(TEllipsis) -> TComma ident . [ TComma TCPar ]
## Transitions:
## Reductions:
-- On TComma TCPar
--   reduce production dp_comma_args(TEllipsis) -> TComma ident

State 1040:
## Known stack suffix:
## TEllipsis list(dp_comma_args(TEllipsis))
## LR(1) items:
define_param_list_start -> TEllipsis list(dp_comma_args(TEllipsis)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production define_param_list_start -> TEllipsis list(dp_comma_args(TEllipsis))

State 1041:
## Known stack suffix:
## dp_comma_args(TEllipsis)
## LR(1) items:
list(dp_comma_args(TEllipsis)) -> dp_comma_args(TEllipsis) . list(dp_comma_args(TEllipsis)) [ TCPar ]
## Transitions:
-- On TComma shift to state 1037
-- On list(dp_comma_args(TEllipsis)) shift to state 1042
-- On dp_comma_args(TEllipsis) shift to state 1041
## Reductions:
-- On TCPar
--   reduce production list(dp_comma_args(TEllipsis)) ->

State 1042:
## Known stack suffix:
## dp_comma_args(TEllipsis) list(dp_comma_args(TEllipsis))
## LR(1) items:
list(dp_comma_args(TEllipsis)) -> dp_comma_args(TEllipsis) list(dp_comma_args(TEllipsis)) . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production list(dp_comma_args(TEllipsis)) -> dp_comma_args(TEllipsis) list(dp_comma_args(TEllipsis))

State 1043:
## Known stack suffix:
## ident
## LR(1) items:
define_param_list_start -> ident . [ TCPar ]
define_param_list_start -> ident . TComma define_param_list_start [ TCPar ]
## Transitions:
-- On TComma shift to state 1044
## Reductions:
-- On TCPar
--   reduce production define_param_list_start -> ident

State 1044:
## Known stack suffix:
## ident TComma
## LR(1) items:
define_param_list_start -> ident TComma . define_param_list_start [ TCPar ]
## Transitions:
-- On TMetaId shift to state 33
-- On TIdent shift to state 28
-- On TEllipsis shift to state 1036
-- On pure_ident shift to state 34
-- On ident shift to state 1043
-- On define_param_list_start shift to state 1045
## Reductions:

State 1045:
## Known stack suffix:
## ident TComma define_param_list_start
## LR(1) items:
define_param_list_start -> ident TComma define_param_list_start . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production define_param_list_start -> ident TComma define_param_list_start

State 1046:
## Known stack suffix:
## define_param_list_start
## LR(1) items:
define_param_list -> define_param_list_start . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production define_param_list -> define_param_list_start

State 1047:
## Known stack suffix:
## TDefineParam define_param_list_option
## LR(1) items:
defineop -> TDefineParam define_param_list_option . TCPar [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
-- On TCPar shift to state 1048
## Reductions:

State 1048:
## Known stack suffix:
## TDefineParam define_param_list_option TCPar
## LR(1) items:
defineop -> TDefineParam define_param_list_option TCPar . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd
--   reduce production defineop -> TDefineParam define_param_list_option TCPar

State 1049:
## Known stack suffix:
## define_param_list
## LR(1) items:
define_param_list_option -> define_param_list . [ TCPar ]
## Transitions:
## Reductions:
-- On TCPar
--   reduce production define_param_list_option -> define_param_list

State 1050:
## Known stack suffix:
## TDefine
## LR(1) items:
defineop -> TDefine . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TDo TDeclarerId TDec TContinue TChar TBreak TBang TAnd
--   reduce production defineop -> TDefine

State 1051:
## Known stack suffix:
## loption(filespec) list(includes)
## LR(1) items:
minus_body -> loption(filespec) list(includes) . loption(minus_function_decl_statement_or_expression) loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TEllipsis shift to state 768
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) shift to state 1081
-- On opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1082
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On minus_function_decl_statement_or_expression shift to state 1084
-- On loption(minus_function_decl_statement_or_expression) shift to state 1085
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1099
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 1124
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TArobArob TArob EOF
--   reduce production loption(minus_function_decl_statement_or_expression) ->

State 1052:
## Known stack suffix:
## Tinline
## LR(1) items:
fninfo -> Tinline . fninfo [ TFunDecl ]
## Transitions:
-- On Tvoid shift to state 1053
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On storage shift to state 1055
-- On generic_ctype shift to state 1056
-- On fninfo shift to state 1068
-- On fn_ctype shift to state 1059
-- On ctype_qualif shift to state 151
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1053:
## Known stack suffix:
## Tvoid
## LR(1) items:
fn_ctype -> Tvoid . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 27
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl
--   reduce production list(TMul) ->

State 1054:
## Known stack suffix:
## Tattr
## LR(1) items:
fninfo -> Tattr . fninfo [ TFunDecl ]
## Transitions:
-- On Tvoid shift to state 1053
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On storage shift to state 1055
-- On generic_ctype shift to state 1056
-- On fninfo shift to state 1067
-- On fn_ctype shift to state 1059
-- On ctype_qualif shift to state 151
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1055:
## Known stack suffix:
## storage
## LR(1) items:
fninfo -> storage . fninfo [ TFunDecl ]
## Transitions:
-- On Tvoid shift to state 1053
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On storage shift to state 1055
-- On generic_ctype shift to state 1056
-- On fninfo shift to state 1058
-- On fn_ctype shift to state 1059
-- On ctype_qualif shift to state 151
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1056:
## Known stack suffix:
## generic_ctype
## LR(1) items:
fn_ctype -> generic_ctype . list(TMul) [ Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 1057
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl
--   reduce production list(TMul) ->

State 1057:
## Known stack suffix:
## generic_ctype list(TMul)
## LR(1) items:
fn_ctype -> generic_ctype list(TMul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl ]
## Transitions:
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TFunDecl
--   reduce production fn_ctype -> generic_ctype list(TMul)

State 1058:
## Known stack suffix:
## storage fninfo
## LR(1) items:
fninfo -> storage fninfo . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo -> storage fninfo

State 1059:
## Known stack suffix:
## fn_ctype
## LR(1) items:
fninfo -> fn_ctype . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1066
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1060:
## Known stack suffix:
## Tinline
## LR(1) items:
fninfo_nt -> Tinline . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1065
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1061:
## Known stack suffix:
## Tattr
## LR(1) items:
fninfo_nt -> Tattr . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1064
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1062:
## Known stack suffix:
## storage
## LR(1) items:
fninfo_nt -> storage . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1063
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1063:
## Known stack suffix:
## storage fninfo_nt
## LR(1) items:
fninfo_nt -> storage fninfo_nt . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt -> storage fninfo_nt

State 1064:
## Known stack suffix:
## Tattr fninfo_nt
## LR(1) items:
fninfo_nt -> Tattr fninfo_nt . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt -> Tattr fninfo_nt

State 1065:
## Known stack suffix:
## Tinline fninfo_nt
## LR(1) items:
fninfo_nt -> Tinline fninfo_nt . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt -> Tinline fninfo_nt

State 1066:
## Known stack suffix:
## fn_ctype fninfo_nt
## LR(1) items:
fninfo -> fn_ctype fninfo_nt . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo -> fn_ctype fninfo_nt

State 1067:
## Known stack suffix:
## Tattr fninfo
## LR(1) items:
fninfo -> Tattr fninfo . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo -> Tattr fninfo

State 1068:
## Known stack suffix:
## Tinline fninfo
## LR(1) items:
fninfo -> Tinline fninfo . [ TFunDecl ]
## Transitions:
## Reductions:
-- On TFunDecl
--   reduce production fninfo -> Tinline fninfo

State 1069:
## Known stack suffix:
## TOPar0
## LR(1) items:
decl_statement -> TOPar0 . pre_post_decl_statement_and_expression_opt_mid TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fun_exp_decl_statement_list -> TOPar0 . midzero_list(ctype) TCPar0 [ TError TEllipsis TArobArob TArob EOF ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr) TCPar0 [ TXor TWhy TSupEq TSup TShr TShl TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOEllipsis TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TError TEqEq TEq TEllipsis TDot TDiv TDec TAssign TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMid0 shift to state 872
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt_mid shift to state 877
-- On pre_post_decl_statement_and_expression shift to state 874
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On midzero_list(expr) shift to state 502
-- On midzero_list(ctype) shift to state 1070
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 563
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1072
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCPar0
--   reduce production pre_post_decl_statement_and_expression_opt_mid ->

State 1070:
## Known stack suffix:
## TOPar0 midzero_list(ctype)
## LR(1) items:
fun_exp_decl_statement_list -> TOPar0 midzero_list(ctype) . TCPar0 [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TCPar0 shift to state 1071
## Reductions:

State 1071:
## Known stack suffix:
## TOPar0 midzero_list(ctype) TCPar0
## LR(1) items:
fun_exp_decl_statement_list -> TOPar0 midzero_list(ctype) TCPar0 . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> TOPar0 midzero_list(ctype) TCPar0

State 1072:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TEllipsis TDo TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TAnd ]
decl_var -> ctype . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TEllipsis TDo TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TAnd ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TEllipsis TDo TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TAnd ]
funproto -> ctype . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tfloat Textern Tdouble Tconst Tchar Tauto TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFor TFloat TEllipsis TDo TDeclarerId TDec TContinue TChar TCPar0 TBreak TBang TAnd ]
midzero_list(ctype) -> ctype . list(mzl(ctype)) [ TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 799
-- On TMid0 shift to state 1073
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 733
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 734
-- On mzl(ctype) shift to state 1075
-- On list(mzl(ctype)) shift to state 1077
-- On ident shift to state 43
-- On func_ident shift to state 800
-- On d_ident shift to state 805
-- On comma_list(d_ident) shift to state 809
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 1073:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(ctype) -> TMid0 . ctype [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On struct_or_union shift to state 32
-- On generic_ctype shift to state 146
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1074
-- On const_vol shift to state 158
## Reductions:

State 1074:
## Known stack suffix:
## TMid0 ctype
## LR(1) items:
mzl(ctype) -> TMid0 ctype . [ TMid0 TCPar0 ]
## Transitions:
## Reductions:
-- On TMid0 TCPar0
--   reduce production mzl(ctype) -> TMid0 ctype

State 1075:
## Known stack suffix:
## mzl(ctype)
## LR(1) items:
list(mzl(ctype)) -> mzl(ctype) . list(mzl(ctype)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1073
-- On mzl(ctype) shift to state 1075
-- On list(mzl(ctype)) shift to state 1076
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 1076:
## Known stack suffix:
## mzl(ctype) list(mzl(ctype))
## LR(1) items:
list(mzl(ctype)) -> mzl(ctype) list(mzl(ctype)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) -> mzl(ctype) list(mzl(ctype))

State 1077:
## Known stack suffix:
## ctype list(mzl(ctype))
## LR(1) items:
midzero_list(ctype) -> ctype list(mzl(ctype)) . [ TCPar0 ]
## Transitions:
## Reductions:
-- On TCPar0
--   reduce production midzero_list(ctype) -> ctype list(mzl(ctype))

State 1078:
## Known stack suffix:
## TNothing
## LR(1) items:
fun_exp_decl_statement_list -> TNothing . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> TNothing

State 1079:
## Known stack suffix:
## storage
## LR(1) items:
decl_var -> storage . ctype comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . ctype d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . const_vol pure_ident comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . const_vol pure_ident d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage . fn_ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fninfo -> storage . fninfo [ TFunDecl ]
funproto -> storage . ctype func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> storage . Tvoid func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 573
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TIdent shift to state 28
-- On struct_or_union shift to state 32
-- On storage shift to state 1055
-- On pure_ident shift to state 579
-- On generic_ctype shift to state 309
-- On fninfo shift to state 1058
-- On fn_ctype shift to state 1080
-- On ctype_qualif shift to state 151
-- On ctype shift to state 732
-- On const_vol shift to state 746
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1080:
## Known stack suffix:
## storage fn_ctype
## LR(1) items:
decl_var -> storage fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> storage fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fninfo -> fn_ctype . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On TOPar shift to state 721
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1066
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1081:
## Known stack suffix:
## opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list))
## LR(1) items:
opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list))

State 1082:
## Known stack suffix:
## opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
minus_function_decl_statement_or_expression -> opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production minus_function_decl_statement_or_expression -> opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1083:
## Known stack suffix:
## nonempty_list(fun_decl_statement)
## LR(1) items:
fun_exp_decl_statement_list -> nonempty_list(fun_decl_statement) . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> nonempty_list(fun_decl_statement)

State 1084:
## Known stack suffix:
## minus_function_decl_statement_or_expression
## LR(1) items:
loption(minus_function_decl_statement_or_expression) -> minus_function_decl_statement_or_expression . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production loption(minus_function_decl_statement_or_expression) -> minus_function_decl_statement_or_expression

State 1085:
## Known stack suffix:
## loption(filespec) list(includes) loption(minus_function_decl_statement_or_expression)
## LR(1) items:
minus_body -> loption(filespec) list(includes) loption(minus_function_decl_statement_or_expression) . loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On TError shift to state 1086
-- On loption(error_words) shift to state 1096
-- On error_words shift to state 1097
## Reductions:
-- On TArobArob TArob EOF
--   reduce production loption(error_words) ->

State 1086:
## Known stack suffix:
## TError
## LR(1) items:
error_words -> TError . TWords TEq TOCro comma_list(dexpr) TCCro [ TArobArob TArob EOF ]
## Transitions:
-- On TWords shift to state 1087
## Reductions:

State 1087:
## Known stack suffix:
## TError TWords
## LR(1) items:
error_words -> TError TWords . TEq TOCro comma_list(dexpr) TCCro [ TArobArob TArob EOF ]
## Transitions:
-- On TEq shift to state 1088
## Reductions:

State 1088:
## Known stack suffix:
## TError TWords TEq
## LR(1) items:
error_words -> TError TWords TEq . TOCro comma_list(dexpr) TCCro [ TArobArob TArob EOF ]
## Transitions:
-- On TOCro shift to state 1089
## Reductions:

State 1089:
## Known stack suffix:
## TError TWords TEq TOCro
## LR(1) items:
error_words -> TError TWords TEq TOCro . comma_list(dexpr) TCCro [ TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On separated_nonempty_list(TComma,dexpr) shift to state 1090
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 1091
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On comma_list(dexpr) shift to state 1094
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 1090:
## Known stack suffix:
## separated_nonempty_list(TComma,dexpr)
## LR(1) items:
comma_list(dexpr) -> separated_nonempty_list(TComma,dexpr) . [ TCCro ]
## Transitions:
## Reductions:
-- On TCCro
--   reduce production comma_list(dexpr) -> separated_nonempty_list(TComma,dexpr)

State 1091:
## Known stack suffix:
## dexpr
## LR(1) items:
separated_nonempty_list(TComma,dexpr) -> dexpr . [ TCCro ]
separated_nonempty_list(TComma,dexpr) -> dexpr . TComma separated_nonempty_list(TComma,dexpr) [ TCCro ]
## Transitions:
-- On TComma shift to state 1092
## Reductions:
-- On TCCro
--   reduce production separated_nonempty_list(TComma,dexpr) -> dexpr

State 1092:
## Known stack suffix:
## dexpr TComma
## LR(1) items:
separated_nonempty_list(TComma,dexpr) -> dexpr TComma . separated_nonempty_list(TComma,dexpr) [ TCCro ]
## Transitions:
-- On TTilde shift to state 45
-- On TString shift to state 79
-- On TSizeof shift to state 80
-- On TPlus shift to state 48
-- On TOPar0 shift to state 81
-- On TOPar shift to state 179
-- On TOEllipsis shift to state 51
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 163
-- On TMetaErr shift to state 164
-- On TMetaConst shift to state 165
-- On TInt shift to state 166
-- On TInc shift to state 167
-- On TIdent shift to state 28
-- On TFloat shift to state 169
-- On TDec shift to state 170
-- On TChar shift to state 171
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 172
-- On unary_expr(eexpr,nest_expressions) shift to state 192
-- On separated_nonempty_list(TComma,dexpr) shift to state 1093
-- On pure_ident shift to state 73
-- On primary_expr(eexpr,nest_expressions) shift to state 174
-- On postfix_expr(eexpr,nest_expressions) shift to state 175
-- On nest_expressions shift to state 183
-- On func_ident shift to state 184
-- On dexpr shift to state 1091
-- On cond_expr(eexpr,nest_expressions) shift to state 194
-- On cast_expr(eexpr,nest_expressions) shift to state 195
-- On basic_expr(eexpr,nest_expressions) shift to state 249
-- On assign_expr(eexpr,nest_expressions) shift to state 250
-- On arith_expr(eexpr,nest_expressions) shift to state 197
## Reductions:

State 1093:
## Known stack suffix:
## dexpr TComma separated_nonempty_list(TComma,dexpr)
## LR(1) items:
separated_nonempty_list(TComma,dexpr) -> dexpr TComma separated_nonempty_list(TComma,dexpr) . [ TCCro ]
## Transitions:
## Reductions:
-- On TCCro
--   reduce production separated_nonempty_list(TComma,dexpr) -> dexpr TComma separated_nonempty_list(TComma,dexpr)

State 1094:
## Known stack suffix:
## TError TWords TEq TOCro comma_list(dexpr)
## LR(1) items:
error_words -> TError TWords TEq TOCro comma_list(dexpr) . TCCro [ TArobArob TArob EOF ]
## Transitions:
-- On TCCro shift to state 1095
## Reductions:

State 1095:
## Known stack suffix:
## TError TWords TEq TOCro comma_list(dexpr) TCCro
## LR(1) items:
error_words -> TError TWords TEq TOCro comma_list(dexpr) TCCro . [ TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TArobArob TArob EOF
--   reduce production error_words -> TError TWords TEq TOCro comma_list(dexpr) TCCro

State 1096:
## Known stack suffix:
## loption(filespec) list(includes) loption(minus_function_decl_statement_or_expression) loption(error_words)
## LR(1) items:
minus_body -> loption(filespec) list(includes) loption(minus_function_decl_statement_or_expression) loption(error_words) . [ TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TArobArob TArob EOF
--   reduce production minus_body -> loption(filespec) list(includes) loption(minus_function_decl_statement_or_expression) loption(error_words)

State 1097:
## Known stack suffix:
## error_words
## LR(1) items:
loption(error_words) -> error_words . [ TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TArobArob TArob EOF
--   reduce production loption(error_words) -> error_words

State 1098:
## Known stack suffix:
## fundecl
## LR(1) items:
fun_decl_statement -> fundecl . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production fun_decl_statement -> fundecl

State 1099:
## Known stack suffix:
## fun_exp_decl_statement_list
## LR(1) items:
opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . [ TError TArobArob TArob EOF ]
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) [ TError TArobArob TArob EOF ]
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 1100
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_start_end(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list

State 1100:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . [ TError TArobArob TArob EOF ]
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1101
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1102
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)

State 1101:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1102:
## Known stack suffix:
## fun_exp_decl_statement_list
## LR(1) items:
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . [ TError TArobArob TArob EOF ]
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) [ TError TArobArob TArob EOF ]
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 1103
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list

State 1103:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . [ TError TArobArob TArob EOF ]
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1104
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1102
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)

State 1104:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1105:
## Known stack suffix:
## fun_decl_statement
## LR(1) items:
nonempty_list(fun_decl_statement) -> fun_decl_statement . [ TError TEllipsis TArobArob TArob EOF ]
nonempty_list(fun_decl_statement) -> fun_decl_statement . nonempty_list(fun_decl_statement) [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(fun_decl_statement) shift to state 1106
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production nonempty_list(fun_decl_statement) -> fun_decl_statement

State 1106:
## Known stack suffix:
## fun_decl_statement nonempty_list(fun_decl_statement)
## LR(1) items:
nonempty_list(fun_decl_statement) -> fun_decl_statement nonempty_list(fun_decl_statement) . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production nonempty_list(fun_decl_statement) -> fun_decl_statement nonempty_list(fun_decl_statement)

State 1107:
## Known stack suffix:
## fninfo
## LR(1) items:
fundecl -> fninfo . TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TFunDecl shift to state 1108
## Reductions:

State 1108:
## Known stack suffix:
## fninfo TFunDecl
## LR(1) items:
fundecl -> fninfo TFunDecl . func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On pure_ident shift to state 73
-- On func_ident shift to state 1109
## Reductions:

State 1109:
## Known stack suffix:
## fninfo TFunDecl func_ident
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident . TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1110
## Reductions:

State 1110:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar . decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 317
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On TTypeId shift to state 18
-- On TRuleName shift to state 19
-- On TMetaType shift to state 22
-- On TMetaParamList shift to state 379
-- On TMetaParam shift to state 320
-- On TEllipsis shift to state 380
-- On struct_or_union shift to state 32
-- On one_dec(decl) shift to state 392
-- On generic_ctype shift to state 309
-- On fn_ctype shift to state 384
-- On decl_list_start(decl) shift to state 395
-- On decl_list(decl) shift to state 1111
-- On decl shift to state 387
-- On ctype_qualif shift to state 151
-- On ctype shift to state 388
-- On const_vol shift to state 158
## Reductions:

State 1111:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar decl_list(decl)
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) . TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1112
## Reductions:

State 1112:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar . TOBrace pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 1113
## Reductions:

State 1113:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace . pre_post_decl_statement_and_expression_opt TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 762
-- On primary_expr(expr,invalid) shift to state 434
-- On pre_post_decl_statement_and_expression_opt shift to state 1114
-- On pre_post_decl_statement_and_expression shift to state 765
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On loption(pure_decl_statement_list) shift to state 767
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 552
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TEllipsis
--   reduce production loption(pure_decl_statement_list) ->
-- On TCBrace
--   reduce production pre_post_decl_statement_and_expression_opt ->

State 1114:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 1115
## Reductions:

State 1115:
## Known stack suffix:
## fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace
## LR(1) items:
fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production fundecl -> fninfo TFunDecl func_ident TOPar decl_list(decl) TCPar TOBrace pre_post_decl_statement_and_expression_opt TCBrace

State 1116:
## Known stack suffix:
## fn_ctype
## LR(1) items:
decl_var -> fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> fn_ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fninfo -> fn_ctype . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 399
-- On Tregister shift to state 400
-- On Tinline shift to state 1060
-- On Textern shift to state 401
-- On Tauto shift to state 402
-- On Tattr shift to state 1061
-- On TOPar shift to state 779
-- On storage shift to state 1062
-- On fninfo_nt shift to state 1066
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1117:
## Known stack suffix:
## decl_statement
## LR(1) items:
fun_decl_statement -> decl_statement . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production fun_decl_statement -> decl_statement

State 1118:
## Known stack suffix:
## expr
## LR(1) items:
fun_exp_decl_statement_list -> expr . [ TError TEllipsis TArobArob TArob EOF ]
fun_exp_decl_statement_list -> expr . TOEllipsis statement_dots(TEllipsis) TCEllipsis fun_exp_decl_statement_list [ TError TEllipsis TArobArob TArob EOF ]
fun_exp_decl_statement_list -> expr . TOEllipsis statement_dots(TEllipsis) TCEllipsis [ TError TEllipsis TArobArob TArob EOF ]
statement -> expr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 553
-- On TOEllipsis shift to state 1119
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> expr

State 1119:
## Known stack suffix:
## expr TOEllipsis
## LR(1) items:
fun_exp_decl_statement_list -> expr TOEllipsis . statement_dots(TEllipsis) TCEllipsis fun_exp_decl_statement_list [ TError TEllipsis TArobArob TArob EOF ]
fun_exp_decl_statement_list -> expr TOEllipsis . statement_dots(TEllipsis) TCEllipsis [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 1120
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 798
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 1120:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis)
## LR(1) items:
fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) . TCEllipsis fun_exp_decl_statement_list [ TError TEllipsis TArobArob TArob EOF ]
fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) . TCEllipsis [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TCEllipsis shift to state 1121
## Reductions:

State 1121:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis) TCEllipsis
## LR(1) items:
fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis . fun_exp_decl_statement_list [ TError TEllipsis TArobArob TArob EOF ]
fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1122
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis

State 1122:
## Known stack suffix:
## expr TOEllipsis statement_dots(TEllipsis) TCEllipsis fun_exp_decl_statement_list
## LR(1) items:
fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis fun_exp_decl_statement_list . [ TError TEllipsis TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> expr TOEllipsis statement_dots(TEllipsis) TCEllipsis fun_exp_decl_statement_list

State 1123:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fun_exp_decl_statement_list -> ctype . [ TError TEllipsis TArobArob TArob EOF ]
funproto -> ctype . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 799
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 733
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 734
-- On ident shift to state 43
-- On func_ident shift to state 800
-- On d_ident shift to state 805
-- On comma_list(d_ident) shift to state 809
## Reductions:
-- On TError TEllipsis TArobArob TArob EOF
--   reduce production fun_exp_decl_statement_list -> ctype

State 1124:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1125
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1102
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1125:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production opt_dot_start_end_pattern(fun_exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement),fun_exp_decl_statement_list,opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) opt_dot_end_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1126:
## Known stack suffix:
## includes
## LR(1) items:
list(includes) -> includes . list(includes) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TIncludeNL shift to state 1033
-- On TIncludeL shift to state 1034
-- On TDefineParam shift to state 1035
-- On TDefine shift to state 1050
-- On list(includes) shift to state 1127
-- On includes shift to state 1126
-- On defineop shift to state 1128
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(includes) ->

State 1127:
## Known stack suffix:
## includes list(includes)
## LR(1) items:
list(includes) -> includes list(includes) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(includes) -> includes list(includes)

State 1128:
## Known stack suffix:
## defineop
## LR(1) items:
includes -> defineop . ctype [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
includes -> defineop . statement_dots(TEllipsis) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 1129
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 520
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 771
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 572
-- On statement_dots(TEllipsis) shift to state 1130
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On pure_decl_statement_list shift to state 772
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(decl_statement) shift to state 766
-- On no_dot_start_end(exp_decl_statement_list,dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)) shift to state 819
-- On invalid shift to state 448
-- On generic_ctype shift to state 1131
-- On funproto shift to state 777
-- On func_ident shift to state 449
-- On fn_ctype shift to state 778
-- On expr shift to state 790
-- On exp_decl_statement_list shift to state 820
-- On decl_var shift to state 795
-- On decl_statement shift to state 796
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1133
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:

State 1129:
## Known stack suffix:
## Tvoid
## LR(1) items:
ctype -> Tvoid . nonempty_list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fn_ctype -> Tvoid . list(TMul) [ TOPar ]
funproto -> Tvoid . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TMul shift to state 25
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On pure_ident shift to state 73
-- On nonempty_list(TMul) shift to state 6
-- On list(TMul) shift to state 27
-- On func_ident shift to state 377
## Reductions:
-- On TOPar
--   reduce production list(TMul) ->

State 1130:
## Known stack suffix:
## defineop statement_dots(TEllipsis)
## LR(1) items:
includes -> defineop statement_dots(TEllipsis) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production includes -> defineop statement_dots(TEllipsis)

State 1131:
## Known stack suffix:
## generic_ctype
## LR(1) items:
ctype -> generic_ctype . list(TMul) [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fn_ctype -> generic_ctype . list(TMul) [ TOPar ]
## Transitions:
-- On TMul shift to state 147
-- On list(TMul) shift to state 1132
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(TMul) ->
** Conflict on TMul

State 1132:
## Known stack suffix:
## generic_ctype list(TMul)
## LR(1) items:
ctype -> generic_ctype list(TMul) . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
fn_ctype -> generic_ctype list(TMul) . [ TOPar ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPtVirg TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production ctype -> generic_ctype list(TMul)
-- On TOPar
--   reduce production fn_ctype -> generic_ctype list(TMul)
** Conflict on TOPar

State 1133:
## Known stack suffix:
## defineop ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . comma_list(d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
funproto -> ctype . func_ident TOPar decl_list(decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
includes -> defineop ctype . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 799
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 733
-- On TMetaFunc shift to state 58
-- On TIdent shift to state 28
-- On separated_nonempty_list(TComma,d_ident) shift to state 580
-- On pure_ident shift to state 734
-- On ident shift to state 43
-- On func_ident shift to state 800
-- On d_ident shift to state 805
-- On comma_list(d_ident) shift to state 809
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production includes -> defineop ctype
** Conflict on TMetaLocalFunc TMetaId TMetaFunc TIdent

State 1134:
## Known stack suffix:
## filespec
## LR(1) items:
loption(filespec) -> filespec . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF ]
## Transitions:
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production loption(filespec) -> filespec

State 1135:
## Known stack suffix:
##
## LR(1) items:
never_used' -> . never_used [ # ]
## Transitions:
-- On TPragma shift to state 1136
-- On never_used shift to state 1137
## Reductions:

State 1136:
## Known stack suffix:
## TPragma
## LR(1) items:
never_used -> TPragma . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production never_used -> TPragma

State 1137:
## Known stack suffix:
## never_used
## LR(1) items:
never_used' -> never_used . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept never_used

State 1138:
## Known stack suffix:
##
## LR(1) items:
plus_main' -> . plus_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1025
-- On plus_main shift to state 1139
-- On plus_body shift to state 1140
-- On loption(filespec) shift to state 1144
-- On filespec shift to state 1134
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDefineParam TDefine TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production loption(filespec) ->

State 1139:
## Known stack suffix:
## plus_main
## LR(1) items:
plus_main' -> plus_main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept plus_main

State 1140:
## Known stack suffix:
## plus_body
## LR(1) items:
plus_main -> plus_body . EOF [ # ]
plus_main -> plus_body . TArobArob [ # ]
plus_main -> plus_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1141
-- On TArob shift to state 1142
-- On EOF shift to state 1143
## Reductions:

State 1141:
## Known stack suffix:
## plus_body TArobArob
## LR(1) items:
plus_main -> plus_body TArobArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production plus_main -> plus_body TArobArob

State 1142:
## Known stack suffix:
## plus_body TArob
## LR(1) items:
plus_main -> plus_body TArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production plus_main -> plus_body TArob

State 1143:
## Known stack suffix:
## plus_body EOF
## LR(1) items:
plus_main -> plus_body EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production plus_main -> plus_body EOF

State 1144:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
plus_body -> loption(filespec) . list(includes) loption(plus_function_decl_statement_or_expression) loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On TIncludeNL shift to state 1033
-- On TIncludeL shift to state 1034
-- On TDefineParam shift to state 1035
-- On TDefine shift to state 1050
-- On list(includes) shift to state 1145
-- On includes shift to state 1126
-- On defineop shift to state 1128
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tsigned Tshort Tregister Tlong Tint Tinline Tfloat Textern Tdouble Tconst Tchar Tauto Tattr TWhile TTypeId TTilde TSwitch TString TSizeof TRuleName TReturn TPlus TOPar0 TOPar TOEllipsis TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalFunc TMetaId TMetaFunc TMetaExp TMetaErr TMetaConst TInvalid TInt TInc TIf TIdent TFunDecl TFor TFloat TError TEllipsis TDo TDeclarerId TDec TContinue TChar TBreak TBang TArobArob TArob TAnd EOF
--   reduce production list(includes) ->

State 1145:
## Known stack suffix:
## loption(filespec) list(includes)
## LR(1) items:
plus_body -> loption(filespec) list(includes) . loption(plus_function_decl_statement_or_expression) loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On plus_function_decl_statement_or_expression shift to state 1146
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On loption(plus_function_decl_statement_or_expression) shift to state 1147
-- On loption(fun_exp_decl_statement_list) shift to state 1149
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1156
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TEllipsis
--   reduce production loption(fun_exp_decl_statement_list) ->
-- On TError TArobArob TArob EOF
--   reduce production loption(plus_function_decl_statement_or_expression) ->

State 1146:
## Known stack suffix:
## plus_function_decl_statement_or_expression
## LR(1) items:
loption(plus_function_decl_statement_or_expression) -> plus_function_decl_statement_or_expression . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production loption(plus_function_decl_statement_or_expression) -> plus_function_decl_statement_or_expression

State 1147:
## Known stack suffix:
## loption(filespec) list(includes) loption(plus_function_decl_statement_or_expression)
## LR(1) items:
plus_body -> loption(filespec) list(includes) loption(plus_function_decl_statement_or_expression) . loption(error_words) [ TArobArob TArob EOF ]
## Transitions:
-- On TError shift to state 1086
-- On loption(error_words) shift to state 1148
-- On error_words shift to state 1097
## Reductions:
-- On TArobArob TArob EOF
--   reduce production loption(error_words) ->

State 1148:
## Known stack suffix:
## loption(filespec) list(includes) loption(plus_function_decl_statement_or_expression) loption(error_words)
## LR(1) items:
plus_body -> loption(filespec) list(includes) loption(plus_function_decl_statement_or_expression) loption(error_words) . [ TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TArobArob TArob EOF
--   reduce production plus_body -> loption(filespec) list(includes) loption(plus_function_decl_statement_or_expression) loption(error_words)

State 1149:
## Known stack suffix:
## loption(fun_exp_decl_statement_list)
## LR(1) items:
plus_function_decl_statement_or_expression -> loption(fun_exp_decl_statement_list) . required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1150
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 1151
## Reductions:

State 1150:
## Known stack suffix:
## loption(fun_exp_decl_statement_list) required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
plus_function_decl_statement_or_expression -> loption(fun_exp_decl_statement_list) required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production plus_function_decl_statement_or_expression -> loption(fun_exp_decl_statement_list) required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1151:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1152
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1153
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TArobArob TArob EOF
--   reduce production no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) ->

State 1152:
## Known stack suffix:
## dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production required_dot_start_with_ender(fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1153:
## Known stack suffix:
## fun_exp_decl_statement_list
## LR(1) items:
no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . [ TError TArobArob TArob EOF ]
no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On TEllipsis shift to state 768
-- On dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) shift to state 1154
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list

State 1154:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement)
## LR(1) items:
no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) . no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) [ TError TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 376
-- On Tunsigned shift to state 7
-- On Tunion shift to state 8
-- On Tstruct shift to state 9
-- On Tstatic shift to state 399
-- On Tsigned shift to state 10
-- On Tshort shift to state 11
-- On Tregister shift to state 400
-- On Tlong shift to state 12
-- On Tint shift to state 13
-- On Tinline shift to state 1052
-- On Tfloat shift to state 14
-- On Textern shift to state 401
-- On Tdouble shift to state 15
-- On Tconst shift to state 16
-- On Tchar shift to state 17
-- On Tauto shift to state 402
-- On Tattr shift to state 1054
-- On TWhile shift to state 403
-- On TTypeId shift to state 18
-- On TTilde shift to state 45
-- On TSwitch shift to state 407
-- On TString shift to state 414
-- On TSizeof shift to state 415
-- On TRuleName shift to state 19
-- On TReturn shift to state 516
-- On TPlus shift to state 48
-- On TOPar0 shift to state 1069
-- On TOPar shift to state 417
-- On TOEllipsis shift to state 521
-- On TOBrace shift to state 524
-- On TNothing shift to state 1078
-- On TMul shift to state 54
-- On TMinus shift to state 55
-- On TMetaType shift to state 22
-- On TMetaStmList shift to state 525
-- On TMetaStm shift to state 526
-- On TMetaLocalFunc shift to state 56
-- On TMetaId shift to state 57
-- On TMetaFunc shift to state 58
-- On TMetaExp shift to state 422
-- On TMetaErr shift to state 423
-- On TMetaConst shift to state 424
-- On TInvalid shift to state 425
-- On TInt shift to state 426
-- On TInc shift to state 427
-- On TIf shift to state 527
-- On TIdent shift to state 28
-- On TFor shift to state 532
-- On TFloat shift to state 429
-- On TDo shift to state 540
-- On TDeclarerId shift to state 567
-- On TDec shift to state 430
-- On TContinue shift to state 541
-- On TChar shift to state 431
-- On TBreak shift to state 543
-- On TBang shift to state 69
-- On TAnd shift to state 70
-- On unary_op shift to state 432
-- On unary_expr(expr,invalid) shift to state 454
-- On struct_or_union shift to state 32
-- On storage shift to state 1079
-- On statement shift to state 754
-- On pure_ident shift to state 755
-- On primary_expr(expr,invalid) shift to state 434
-- On postfix_expr(expr,invalid) shift to state 435
-- On nonempty_list(fun_decl_statement) shift to state 1083
-- On no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) shift to state 1155
-- On invalid shift to state 448
-- On generic_ctype shift to state 309
-- On funproto shift to state 777
-- On fundecl shift to state 1098
-- On func_ident shift to state 449
-- On fun_exp_decl_statement_list shift to state 1153
-- On fun_decl_statement shift to state 1105
-- On fninfo shift to state 1107
-- On fn_ctype shift to state 1116
-- On expr shift to state 1118
-- On decl_var shift to state 795
-- On decl_statement shift to state 1117
-- On ctype_qualif shift to state 151
-- On ctype shift to state 1123
-- On const_vol shift to state 811
-- On cond_expr(expr,invalid) shift to state 456
-- On cast_expr(expr,invalid) shift to state 457
-- On basic_expr(expr,invalid) shift to state 507
-- On assign_expr(expr,invalid) shift to state 508
-- On arith_expr(expr,invalid) shift to state 459
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TError TArobArob TArob EOF
--   reduce production no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) ->

State 1155:
## Known stack suffix:
## fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)
## LR(1) items:
no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TError TArobArob TArob EOF
--   reduce production no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list) -> fun_exp_decl_statement_list dots_when(TEllipsis,pre_post_decl_statement_or_expression,rule_elem_statement) no_dot_start_dots(TEllipsis,fun_exp_decl_statement_list,pre_post_decl_statement_or_expression,rule_elem_statement,fun_exp_decl_statement_list)

State 1156:
## Known stack suffix:
## fun_exp_decl_statement_list
## LR(1) items:
loption(fun_exp_decl_statement_list) -> fun_exp_decl_statement_list . [ TEllipsis ]
plus_function_decl_statement_or_expression -> fun_exp_decl_statement_list . [ TError TArobArob TArob EOF ]
## Transitions:
## Reductions:
-- On TEllipsis
--   reduce production loption(fun_exp_decl_statement_list) -> fun_exp_decl_statement_list
-- On TError TArobArob TArob EOF
--   reduce production plus_function_decl_statement_or_expression -> fun_exp_decl_statement_list

State 1157:
## Known stack suffix:
##
## LR(1) items:
rule_name' -> . rule_name [ # ]
## Transitions:
-- On TIdent shift to state 28
-- On rule_name shift to state 1158
-- On pure_ident shift to state 1159
## Reductions:

State 1158:
## Known stack suffix:
## rule_name
## LR(1) items:
rule_name' -> rule_name . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept rule_name

State 1159:
## Known stack suffix:
## pure_ident
## LR(1) items:
rule_name -> pure_ident . extends depends TArob [ # ]
rule_name -> pure_ident . extends depends choose_iso TArob [ # ]
## Transitions:
-- On TExtends shift to state 1160
-- On extends shift to state 1162
## Reductions:
-- On TUsing TDepends TArob
--   reduce production extends ->

State 1160:
## Known stack suffix:
## TExtends
## LR(1) items:
extends -> TExtends . TRuleName [ TUsing TDepends TArob ]
## Transitions:
-- On TRuleName shift to state 1161
## Reductions:

State 1161:
## Known stack suffix:
## TExtends TRuleName
## LR(1) items:
extends -> TExtends TRuleName . [ TUsing TDepends TArob ]
## Transitions:
## Reductions:
-- On TUsing TDepends TArob
--   reduce production extends -> TExtends TRuleName

State 1162:
## Known stack suffix:
## pure_ident extends
## LR(1) items:
rule_name -> pure_ident extends . depends TArob [ # ]
rule_name -> pure_ident extends . depends choose_iso TArob [ # ]
## Transitions:
-- On TDepends shift to state 1163
-- On depends shift to state 1172
## Reductions:
-- On TUsing TArob
--   reduce production depends ->

State 1163:
## Known stack suffix:
## TDepends
## LR(1) items:
depends -> TDepends . TOn separated_nonempty_list(TAndLog,pnrule) [ TUsing TArob ]
## Transitions:
-- On TOn shift to state 1164
## Reductions:

State 1164:
## Known stack suffix:
## TDepends TOn
## LR(1) items:
depends -> TDepends TOn . separated_nonempty_list(TAndLog,pnrule) [ TUsing TArob ]
## Transitions:
-- On TRuleName shift to state 1165
-- On TBang shift to state 1166
-- On separated_nonempty_list(TAndLog,pnrule) shift to state 1168
-- On pnrule shift to state 1169
## Reductions:

State 1165:
## Known stack suffix:
## TRuleName
## LR(1) items:
pnrule -> TRuleName . [ TUsing TArob TAndLog ]
## Transitions:
## Reductions:
-- On TUsing TArob TAndLog
--   reduce production pnrule -> TRuleName

State 1166:
## Known stack suffix:
## TBang
## LR(1) items:
pnrule -> TBang . TRuleName [ TUsing TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 1167
## Reductions:

State 1167:
## Known stack suffix:
## TBang TRuleName
## LR(1) items:
pnrule -> TBang TRuleName . [ TUsing TArob TAndLog ]
## Transitions:
## Reductions:
-- On TUsing TArob TAndLog
--   reduce production pnrule -> TBang TRuleName

State 1168:
## Known stack suffix:
## TDepends TOn separated_nonempty_list(TAndLog,pnrule)
## LR(1) items:
depends -> TDepends TOn separated_nonempty_list(TAndLog,pnrule) . [ TUsing TArob ]
## Transitions:
## Reductions:
-- On TUsing TArob
--   reduce production depends -> TDepends TOn separated_nonempty_list(TAndLog,pnrule)

State 1169:
## Known stack suffix:
## pnrule
## LR(1) items:
separated_nonempty_list(TAndLog,pnrule) -> pnrule . [ TUsing TArob ]
separated_nonempty_list(TAndLog,pnrule) -> pnrule . TAndLog separated_nonempty_list(TAndLog,pnrule) [ TUsing TArob ]
## Transitions:
-- On TAndLog shift to state 1170
## Reductions:
-- On TUsing TArob
--   reduce production separated_nonempty_list(TAndLog,pnrule) -> pnrule

State 1170:
## Known stack suffix:
## pnrule TAndLog
## LR(1) items:
separated_nonempty_list(TAndLog,pnrule) -> pnrule TAndLog . separated_nonempty_list(TAndLog,pnrule) [ TUsing TArob ]
## Transitions:
-- On TRuleName shift to state 1165
-- On TBang shift to state 1166
-- On separated_nonempty_list(TAndLog,pnrule) shift to state 1171
-- On pnrule shift to state 1169
## Reductions:

State 1171:
## Known stack suffix:
## pnrule TAndLog separated_nonempty_list(TAndLog,pnrule)
## LR(1) items:
separated_nonempty_list(TAndLog,pnrule) -> pnrule TAndLog separated_nonempty_list(TAndLog,pnrule) . [ TUsing TArob ]
## Transitions:
## Reductions:
-- On TUsing TArob
--   reduce production separated_nonempty_list(TAndLog,pnrule) -> pnrule TAndLog separated_nonempty_list(TAndLog,pnrule)

State 1172:
## Known stack suffix:
## pure_ident extends depends
## LR(1) items:
rule_name -> pure_ident extends depends . TArob [ # ]
rule_name -> pure_ident extends depends . choose_iso TArob [ # ]
## Transitions:
-- On TUsing shift to state 1173
-- On TArob shift to state 1175
-- On choose_iso shift to state 1176
## Reductions:

State 1173:
## Known stack suffix:
## TUsing
## LR(1) items:
choose_iso -> TUsing . TString [ TArob ]
## Transitions:
-- On TString shift to state 1174
## Reductions:

State 1174:
## Known stack suffix:
## TUsing TString
## LR(1) items:
choose_iso -> TUsing TString . [ TArob ]
## Transitions:
## Reductions:
-- On TArob
--   reduce production choose_iso -> TUsing TString

State 1175:
## Known stack suffix:
## pure_ident extends depends TArob
## LR(1) items:
rule_name -> pure_ident extends depends TArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production rule_name -> pure_ident extends depends TArob

State 1176:
## Known stack suffix:
## pure_ident extends depends choose_iso
## LR(1) items:
rule_name -> pure_ident extends depends choose_iso . TArob [ # ]
## Transitions:
-- On TArob shift to state 1177
## Reductions:

State 1177:
## Known stack suffix:
## pure_ident extends depends choose_iso TArob
## LR(1) items:
rule_name -> pure_ident extends depends choose_iso TArob . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production rule_name -> pure_ident extends depends choose_iso TArob

