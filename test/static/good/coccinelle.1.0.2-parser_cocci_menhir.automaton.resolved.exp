State 0:
## Known stack suffix:
##
## LR(1) items:
include_main' -> . include_main [ # ]
## Transitions:
-- On TVirtual shift to state 1
-- On TUsing shift to state 7
-- On TIncludeL shift to state 10
-- On list(incl) shift to state 11
-- On include_main shift to state 14
-- On incl shift to state 15
## Reductions:
-- On TArobArob TArob
--   reduce production list(incl) ->

State 1:
## Known stack suffix:
## TVirtual
## LR(1) items:
incl -> TVirtual . separated_nonempty_list(TComma,pure_ident) [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
-- On TIdent shift to state 2
-- On separated_nonempty_list(TComma,pure_ident) shift to state 3
-- On pure_ident shift to state 4
## Reductions:

State 2:
## Known stack suffix:
## TIdent
## LR(1) items:
pure_ident -> TIdent . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TVirtual TUsing TTypedef TType TTildeExclEq TTildeEq TSymbol TSymId TSub TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TMPtVirg TLogOp TLocal TLineEnd TIterator TIso TInitialiser TIncludeL TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TForall TExtends TExpression TExists TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDisable TDepends TDeclarer TDec TCppConcatOp TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident -> TIdent

State 3:
## Known stack suffix:
## TVirtual separated_nonempty_list(TComma,pure_ident)
## LR(1) items:
incl -> TVirtual separated_nonempty_list(TComma,pure_ident) . [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production incl -> TVirtual separated_nonempty_list(TComma,pure_ident)

State 4:
## Known stack suffix:
## pure_ident
## LR(1) items:
separated_nonempty_list(TComma,pure_ident) -> pure_ident . [ TVirtual TUsing TType TMPtVirg TIncludeL TIdentifier TForall TExpression TExists TCBrace TArobArob TArob ]
separated_nonempty_list(TComma,pure_ident) -> pure_ident . TComma separated_nonempty_list(TComma,pure_ident) [ TVirtual TUsing TType TMPtVirg TIncludeL TIdentifier TForall TExpression TExists TCBrace TArobArob TArob ]
## Transitions:
-- On TComma shift to state 5
## Reductions:
-- On TVirtual TUsing TType TMPtVirg TIncludeL TIdentifier TForall TExpression TExists TCBrace TArobArob TArob
--   reduce production separated_nonempty_list(TComma,pure_ident) -> pure_ident

State 5:
## Known stack suffix:
## pure_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident) -> pure_ident TComma . separated_nonempty_list(TComma,pure_ident) [ TVirtual TUsing TType TMPtVirg TIncludeL TIdentifier TForall TExpression TExists TCBrace TArobArob TArob ]
## Transitions:
-- On TIdent shift to state 2
-- On separated_nonempty_list(TComma,pure_ident) shift to state 6
-- On pure_ident shift to state 4
## Reductions:

State 6:
## Known stack suffix:
## pure_ident TComma separated_nonempty_list(TComma,pure_ident)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident) -> pure_ident TComma separated_nonempty_list(TComma,pure_ident) . [ TVirtual TUsing TType TMPtVirg TIncludeL TIdentifier TForall TExpression TExists TCBrace TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident) -> pure_ident TComma separated_nonempty_list(TComma,pure_ident)

State 7:
## Known stack suffix:
## TUsing
## LR(1) items:
incl -> TUsing . TString [ TVirtual TUsing TIncludeL TArobArob TArob ]
incl -> TUsing . TPathIsoFile [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
-- On TString shift to state 8
-- On TPathIsoFile shift to state 9
## Reductions:

State 8:
## Known stack suffix:
## TUsing TString
## LR(1) items:
incl -> TUsing TString . [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production incl -> TUsing TString

State 9:
## Known stack suffix:
## TUsing TPathIsoFile
## LR(1) items:
incl -> TUsing TPathIsoFile . [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production incl -> TUsing TPathIsoFile

State 10:
## Known stack suffix:
## TIncludeL
## LR(1) items:
incl -> TIncludeL . [ TVirtual TUsing TIncludeL TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production incl -> TIncludeL

State 11:
## Known stack suffix:
## list(incl)
## LR(1) items:
include_main -> list(incl) . TArob [ # ]
include_main -> list(incl) . TArobArob [ # ]
## Transitions:
-- On TArobArob shift to state 12
-- On TArob shift to state 13
## Reductions:

State 12:
## Known stack suffix:
## list(incl) TArobArob
## LR(1) items:
include_main -> list(incl) TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production include_main -> list(incl) TArobArob

State 13:
## Known stack suffix:
## list(incl) TArob
## LR(1) items:
include_main -> list(incl) TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production include_main -> list(incl) TArob

State 14:
## Known stack suffix:
## include_main
## LR(1) items:
include_main' -> include_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept include_main

State 15:
## Known stack suffix:
## incl
## LR(1) items:
list(incl) -> incl . list(incl) [ TArobArob TArob ]
## Transitions:
-- On TVirtual shift to state 1
-- On TUsing shift to state 7
-- On TIncludeL shift to state 10
-- On list(incl) shift to state 16
-- On incl shift to state 15
## Reductions:
-- On TArobArob TArob
--   reduce production list(incl) ->

State 16:
## Known stack suffix:
## incl list(incl)
## LR(1) items:
list(incl) -> incl list(incl) . [ TArobArob TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(incl) -> incl list(incl)

State 17:
## Known stack suffix:
##
## LR(1) items:
iso_main' -> . iso_main [ # ]
## Transitions:
-- On TIsoType shift to state 18
-- On TIsoTopLevel shift to state 694
-- On TIsoToTestExpression shift to state 1394
-- On TIsoTestExpression shift to state 1404
-- On TIsoStatement shift to state 1408
-- On TIsoExpression shift to state 1421
-- On TIsoDeclaration shift to state 1425
-- On TIsoArgExpression shift to state 1435
-- On iso_main shift to state 1439
## Reductions:

State 18:
## Known stack suffix:
## TIsoType
## LR(1) items:
iso_main -> TIsoType . ctype list(iso(ctype)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 685
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 19:
## Known stack suffix:
## Tvolatile
## LR(1) items:
const_vol -> Tvolatile . [ Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tchar Tauto Tattr TTypeId TSymId TRuleName TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production const_vol -> Tvolatile

State 20:
## Known stack suffix:
## Tvoid
## LR(1) items:
non_signable_types -> Tvoid . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tvoid

State 21:
## Known stack suffix:
## Tunsigned
## LR(1) items:
all_basic_types -> Tunsigned . signable_types [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
ctype -> Tunsigned . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tshort shift to state 22
-- On Tlong shift to state 24
-- On Tint shift to state 28
-- On Tchar shift to state 29
-- On TRuleName shift to state 30
-- On TMetaType shift to state 33
-- On signable_types shift to state 34
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production ctype -> Tunsigned

State 22:
## Known stack suffix:
## Tshort
## LR(1) items:
signable_types -> Tshort . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tshort . Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tint shift to state 23
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production signable_types -> Tshort

State 23:
## Known stack suffix:
## Tshort Tint
## LR(1) items:
signable_types -> Tshort Tint . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> Tshort Tint

State 24:
## Known stack suffix:
## Tlong
## LR(1) items:
signable_types -> Tlong . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tlong [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tlong Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tlong shift to state 25
-- On Tint shift to state 27
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production signable_types -> Tlong

State 25:
## Known stack suffix:
## Tlong Tlong
## LR(1) items:
signable_types -> Tlong Tlong . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong Tlong . Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tint shift to state 26
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production signable_types -> Tlong Tlong

State 26:
## Known stack suffix:
## Tlong Tlong Tint
## LR(1) items:
signable_types -> Tlong Tlong Tint . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> Tlong Tlong Tint

State 27:
## Known stack suffix:
## Tlong Tint
## LR(1) items:
signable_types -> Tlong Tint . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> Tlong Tint

State 28:
## Known stack suffix:
## Tint
## LR(1) items:
signable_types -> Tint . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> Tint

State 29:
## Known stack suffix:
## Tchar
## LR(1) items:
signable_types -> Tchar . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> Tchar

State 30:
## Known stack suffix:
## TRuleName
## LR(1) items:
signable_types -> TRuleName . TDot TIdent [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TDot shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
signable_types -> TRuleName TDot . TIdent [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TIdent shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## TRuleName TDot TIdent
## LR(1) items:
signable_types -> TRuleName TDot TIdent . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> TRuleName TDot TIdent

State 33:
## Known stack suffix:
## TMetaType
## LR(1) items:
signable_types -> TMetaType . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signable_types -> TMetaType

State 34:
## Known stack suffix:
## Tunsigned signable_types
## LR(1) items:
all_basic_types -> Tunsigned signable_types . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production all_basic_types -> Tunsigned signable_types

State 35:
## Known stack suffix:
## Tunion
## LR(1) items:
struct_or_union -> Tunion . [ TTypeId TSymId TOPar0 TOBrace TMetaId TMeta TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> Tunion

State 36:
## Known stack suffix:
## Tstruct
## LR(1) items:
struct_or_union -> Tstruct . [ TTypeId TSymId TOPar0 TOBrace TMetaId TMeta TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> Tstruct

State 37:
## Known stack suffix:
## Tssize_t
## LR(1) items:
non_signable_types -> Tssize_t . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tssize_t

State 38:
## Known stack suffix:
## Tsize_t
## LR(1) items:
non_signable_types -> Tsize_t . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tsize_t

State 39:
## Known stack suffix:
## Tsigned
## LR(1) items:
all_basic_types -> Tsigned . signable_types [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
ctype -> Tsigned . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tshort shift to state 22
-- On Tlong shift to state 24
-- On Tint shift to state 28
-- On Tchar shift to state 29
-- On TRuleName shift to state 30
-- On TMetaType shift to state 33
-- On signable_types shift to state 40
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production ctype -> Tsigned

State 40:
## Known stack suffix:
## Tsigned signable_types
## LR(1) items:
all_basic_types -> Tsigned signable_types . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production all_basic_types -> Tsigned signable_types

State 41:
## Known stack suffix:
## Tptrdiff_t
## LR(1) items:
non_signable_types -> Tptrdiff_t . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tptrdiff_t

State 42:
## Known stack suffix:
## Tlong
## LR(1) items:
non_signable_types -> Tlong . Tdouble [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tlong [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> Tlong . Tlong Tint [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tlong shift to state 25
-- On Tint shift to state 27
-- On Tdouble shift to state 43
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production signable_types -> Tlong

State 43:
## Known stack suffix:
## Tlong Tdouble
## LR(1) items:
non_signable_types -> Tlong Tdouble . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tlong Tdouble

State 44:
## Known stack suffix:
## Tfloat
## LR(1) items:
non_signable_types -> Tfloat . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tfloat

State 45:
## Known stack suffix:
## Tenum
## LR(1) items:
non_signable_types -> Tenum . ident [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tenum . TOBrace enum_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tenum . ident TOBrace enum_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOBrace shift to state 47
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 95
## Reductions:

State 46:
## Known stack suffix:
## TSymId
## LR(1) items:
wrapped_sym_ident -> TSymId . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TMPtVirg TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production wrapped_sym_ident -> TSymId

State 47:
## Known stack suffix:
## Tenum TOBrace
## LR(1) items:
non_signable_types -> Tenum TOBrace . enum_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 92
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On enum_decl_list shift to state 93
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:

State 48:
## Known stack suffix:
## TOPar0
## LR(1) items:
disj_ident -> TOPar0 . midzero_list(disj_ident,disj_ident) TCPar0 [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On midzero_list(disj_ident,disj_ident) shift to state 53
-- On mident shift to state 55
-- On disj_ident shift to state 56
## Reductions:

State 49:
## Known stack suffix:
## TMetaId
## LR(1) items:
mident -> TMetaId . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mident -> TMetaId

State 50:
## Known stack suffix:
## TMeta
## LR(1) items:
mident -> TMeta . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mident -> TMeta

State 51:
## Known stack suffix:
## wrapped_sym_ident
## LR(1) items:
mident -> wrapped_sym_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mident -> wrapped_sym_ident

State 52:
## Known stack suffix:
## pure_ident
## LR(1) items:
mident -> pure_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mident -> pure_ident

State 53:
## Known stack suffix:
## TOPar0 midzero_list(disj_ident,disj_ident)
## LR(1) items:
disj_ident -> TOPar0 midzero_list(disj_ident,disj_ident) . TCPar0 [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## TOPar0 midzero_list(disj_ident,disj_ident) TCPar0
## LR(1) items:
disj_ident -> TOPar0 midzero_list(disj_ident,disj_ident) TCPar0 . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production disj_ident -> TOPar0 midzero_list(disj_ident,disj_ident) TCPar0

State 55:
## Known stack suffix:
## mident
## LR(1) items:
disj_ident -> mident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production disj_ident -> mident

State 56:
## Known stack suffix:
## disj_ident
## LR(1) items:
midzero_list(disj_ident,disj_ident) -> disj_ident . list(mzl(disj_ident)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 57
-- On mzl(disj_ident) shift to state 59
-- On list(mzl(disj_ident)) shift to state 61
## Reductions:
-- On TCPar0
--   reduce production list(mzl(disj_ident)) ->

State 57:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(disj_ident) -> TMid0 . disj_ident [ TMid0 TCPar0 ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## TMid0 disj_ident
## LR(1) items:
mzl(disj_ident) -> TMid0 disj_ident . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(disj_ident) -> TMid0 disj_ident

State 59:
## Known stack suffix:
## mzl(disj_ident)
## LR(1) items:
list(mzl(disj_ident)) -> mzl(disj_ident) . list(mzl(disj_ident)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 57
-- On mzl(disj_ident) shift to state 59
-- On list(mzl(disj_ident)) shift to state 60
## Reductions:
-- On TCPar0
--   reduce production list(mzl(disj_ident)) ->

State 60:
## Known stack suffix:
## mzl(disj_ident) list(mzl(disj_ident))
## LR(1) items:
list(mzl(disj_ident)) -> mzl(disj_ident) list(mzl(disj_ident)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(disj_ident)) -> mzl(disj_ident) list(mzl(disj_ident))

State 61:
## Known stack suffix:
## disj_ident list(mzl(disj_ident))
## LR(1) items:
midzero_list(disj_ident,disj_ident) -> disj_ident list(mzl(disj_ident)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(disj_ident,disj_ident) -> disj_ident list(mzl(disj_ident))

State 62:
## Known stack suffix:
## TNothing
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing . nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 80
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:

State 63:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,enum_decl_one) -> TEllipsis . [ TComma TCBrace ]
edots_when(TEllipsis,enum_decl_one) -> TEllipsis . TWhen TNotEq enum_decl_one TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TWhen shift to state 64
## Reductions:
-- On TComma TCBrace
--   reduce production edots_when(TEllipsis,enum_decl_one) -> TEllipsis

State 64:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,enum_decl_one) -> TEllipsis TWhen . TNotEq enum_decl_one TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TNotEq shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,enum_decl_one) -> TEllipsis TWhen TNotEq . enum_decl_one TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On enum_decl_one shift to state 66
-- On disj_ident shift to state 68
## Reductions:

State 66:
## Known stack suffix:
## TEllipsis TWhen TNotEq enum_decl_one
## LR(1) items:
edots_when(TEllipsis,enum_decl_one) -> TEllipsis TWhen TNotEq enum_decl_one . TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TLineEnd shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## TEllipsis TWhen TNotEq enum_decl_one TLineEnd
## LR(1) items:
edots_when(TEllipsis,enum_decl_one) -> TEllipsis TWhen TNotEq enum_decl_one TLineEnd . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production edots_when(TEllipsis,enum_decl_one) -> TEllipsis TWhen TNotEq enum_decl_one TLineEnd

State 68:
## Known stack suffix:
## disj_ident
## LR(1) items:
enum_decl_one -> disj_ident . [ TLineEnd TComma TCBrace ]
enum_decl_one -> disj_ident . TEq enum_val [ TLineEnd TComma TCBrace ]
## Transitions:
-- On TEq shift to state 69
## Reductions:
-- On TLineEnd TComma TCBrace
--   reduce production enum_decl_one -> disj_ident

State 69:
## Known stack suffix:
## disj_ident TEq
## LR(1) items:
enum_decl_one -> disj_ident TEq . enum_val [ TLineEnd TComma TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaIdExp shift to state 70
-- On TMetaId shift to state 71
-- On TMetaExp shift to state 72
-- On TMetaConst shift to state 73
-- On TMeta shift to state 74
-- On TInt shift to state 75
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 78
-- On enum_val shift to state 79
## Reductions:

State 70:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
enum_val -> TMetaIdExp . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> TMetaIdExp

State 71:
## Known stack suffix:
## TMetaId
## LR(1) items:
ident -> TMetaId . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> TMetaId

State 72:
## Known stack suffix:
## TMetaExp
## LR(1) items:
enum_val -> TMetaExp . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> TMetaExp

State 73:
## Known stack suffix:
## TMetaConst
## LR(1) items:
enum_val -> TMetaConst . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> TMetaConst

State 74:
## Known stack suffix:
## TMeta
## LR(1) items:
enum_val -> TMeta . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> TMeta

State 75:
## Known stack suffix:
## TInt
## LR(1) items:
enum_val -> TInt . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> TInt

State 76:
## Known stack suffix:
## wrapped_sym_ident
## LR(1) items:
ident -> wrapped_sym_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> wrapped_sym_ident

State 77:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident -> pure_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TXor TWords TWhy TTypedef TType TSymbol TSymId TStatement TShROp TShLOp TRuleName TRightIso TPure TPtrOp TPtVirg TPosition TPlus TParameter TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar0 TOPar TOEllipsis TOCro TOBrace TNotEq TName TMul TMinus TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMetaBinaryOp TMetaAssignOp TMeta TLogOp TLocal TLineEnd TIterator TIso TInitialiser TInc TIf TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TDeclarer TDec TContext TConstant TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> pure_ident

State 78:
## Known stack suffix:
## ident
## LR(1) items:
enum_val -> ident . [ TLineEnd TComma TCPar TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_val -> ident

State 79:
## Known stack suffix:
## disj_ident TEq enum_val
## LR(1) items:
enum_decl_one -> disj_ident TEq enum_val . [ TLineEnd TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_decl_one -> disj_ident TEq enum_val

State 80:
## Known stack suffix:
## TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 81:
## Known stack suffix:
## enum_decl_one
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . TComma [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 82
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one

State 82:
## Known stack suffix:
## enum_decl_one TComma
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma . [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma . nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 83
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma

State 83:
## Known stack suffix:
## enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 84:
## Known stack suffix:
## edots_when(TEllipsis,enum_decl_one)
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) . [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) . TComma [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) . TComma continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 85
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one)

State 85:
## Known stack suffix:
## edots_when(TEllipsis,enum_decl_one) TComma
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) TComma . [ TCBrace ]
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) TComma . continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 86
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On enum_decl_one shift to state 88
-- On disj_ident shift to state 68
-- On continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 91
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) TComma

State 86:
## Known stack suffix:
## TNothing
## LR(1) items:
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing . nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 87
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:

State 87:
## Known stack suffix:
## TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> TNothing nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 88:
## Known stack suffix:
## enum_decl_one
## LR(1) items:
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . [ TCBrace ]
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . TComma [ TCBrace ]
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one . TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 89
## Reductions:
-- On TCBrace
--   reduce production continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one

State 89:
## Known stack suffix:
## enum_decl_one TComma
## LR(1) items:
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma . [ TCBrace ]
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma . nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 90
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:
-- On TCBrace
--   reduce production continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma

State 90:
## Known stack suffix:
## enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> enum_decl_one TComma nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 91:
## Known stack suffix:
## edots_when(TEllipsis,enum_decl_one) TComma continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) TComma continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) -> edots_when(TEllipsis,enum_decl_one) TComma continue_list(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 92:
## Known stack suffix:
## nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))
## LR(1) items:
enum_decl_list -> nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_decl_list -> nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one))

State 93:
## Known stack suffix:
## Tenum TOBrace enum_decl_list
## LR(1) items:
non_signable_types -> Tenum TOBrace enum_decl_list . TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## Tenum TOBrace enum_decl_list TCBrace
## LR(1) items:
non_signable_types -> Tenum TOBrace enum_decl_list TCBrace . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tenum TOBrace enum_decl_list TCBrace

State 95:
## Known stack suffix:
## Tenum ident
## LR(1) items:
non_signable_types -> Tenum ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tenum ident . TOBrace enum_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TOBrace shift to state 96
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production non_signable_types -> Tenum ident

State 96:
## Known stack suffix:
## Tenum ident TOBrace
## LR(1) items:
non_signable_types -> Tenum ident TOBrace . enum_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TNothing shift to state 62
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 63
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(enum_decl_one,edots_when(TEllipsis,enum_decl_one)) shift to state 92
-- On mident shift to state 55
-- On enum_decl_one shift to state 81
-- On enum_decl_list shift to state 97
-- On edots_when(TEllipsis,enum_decl_one) shift to state 84
-- On disj_ident shift to state 68
## Reductions:

State 97:
## Known stack suffix:
## Tenum ident TOBrace enum_decl_list
## LR(1) items:
non_signable_types -> Tenum ident TOBrace enum_decl_list . TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## Tenum ident TOBrace enum_decl_list TCBrace
## LR(1) items:
non_signable_types -> Tenum ident TOBrace enum_decl_list TCBrace . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tenum ident TOBrace enum_decl_list TCBrace

State 99:
## Known stack suffix:
## Tdouble
## LR(1) items:
non_signable_types -> Tdouble . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tdouble

State 100:
## Known stack suffix:
## Tdecimal
## LR(1) items:
non_signable_types -> Tdecimal . TOPar enum_val TComma enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tdecimal . TOPar enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TOPar shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## Tdecimal TOPar
## LR(1) items:
non_signable_types -> Tdecimal TOPar . enum_val TComma enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tdecimal TOPar . enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaIdExp shift to state 70
-- On TMetaId shift to state 71
-- On TMetaExp shift to state 72
-- On TMetaConst shift to state 73
-- On TMeta shift to state 74
-- On TInt shift to state 75
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 78
-- On enum_val shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## Tdecimal TOPar enum_val
## LR(1) items:
non_signable_types -> Tdecimal TOPar enum_val . TComma enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> Tdecimal TOPar enum_val . TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TComma shift to state 103
-- On TCPar shift to state 106
## Reductions:

State 103:
## Known stack suffix:
## Tdecimal TOPar enum_val TComma
## LR(1) items:
non_signable_types -> Tdecimal TOPar enum_val TComma . enum_val TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaIdExp shift to state 70
-- On TMetaId shift to state 71
-- On TMetaExp shift to state 72
-- On TMetaConst shift to state 73
-- On TMeta shift to state 74
-- On TInt shift to state 75
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 78
-- On enum_val shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## Tdecimal TOPar enum_val TComma enum_val
## LR(1) items:
non_signable_types -> Tdecimal TOPar enum_val TComma enum_val . TCPar [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCPar shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## Tdecimal TOPar enum_val TComma enum_val TCPar
## LR(1) items:
non_signable_types -> Tdecimal TOPar enum_val TComma enum_val TCPar . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tdecimal TOPar enum_val TComma enum_val TCPar

State 106:
## Known stack suffix:
## Tdecimal TOPar enum_val TCPar
## LR(1) items:
non_signable_types -> Tdecimal TOPar enum_val TCPar . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> Tdecimal TOPar enum_val TCPar

State 107:
## Known stack suffix:
## Tconst
## LR(1) items:
const_vol -> Tconst . [ Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tchar Tauto Tattr TTypeId TSymId TRuleName TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production const_vol -> Tconst

State 108:
## Known stack suffix:
## TTypeId
## LR(1) items:
non_signable_types -> TTypeId . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> TTypeId

State 109:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On midzero_list(ctype,ctype) shift to state 268
-- On ctype shift to state 276
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 110:
## Known stack suffix:
## TMetaType
## LR(1) items:
non_signable_types -> TMetaType . TOBrace struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
signable_types -> TMetaType . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TOBrace shift to state 111
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production signable_types -> TMetaType

State 111:
## Known stack suffix:
## TMetaType TOBrace
## LR(1) items:
non_signable_types -> TMetaType TOBrace . struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On TEllipsis shift to state 121
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl_list_start shift to state 660
-- On struct_decl_list shift to state 683
-- On struct_decl shift to state 663
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On edots_when(TEllipsis,struct_decl_one) shift to state 665
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 112:
## Known stack suffix:
## TSymId
## LR(1) items:
pure_ident_or_symbol -> TSymId . [ TSymId TPtVirg TOPar0 TMetaId TMeta TIdent TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_symbol -> TSymId

State 113:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ TSymId TOPar0 TOPar TMid0 TMetaId TMeta TIdent TCPar0 ]
struct_decl_one -> TOPar0 . midzero_list(struct_decl_one,struct_decl_one) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 674
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On midzero_list(struct_decl_one,struct_decl_one) shift to state 680
-- On midzero_list(ctype,ctype) shift to state 268
-- On ctype shift to state 682
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 114:
## Known stack suffix:
## TMetaFieldList
## LR(1) items:
struct_decl_one -> TMetaFieldList . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> TMetaFieldList

State 115:
## Known stack suffix:
## TMetaField
## LR(1) items:
struct_decl_one -> TMetaField . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> TMetaField

State 116:
## Known stack suffix:
## TMeta
## LR(1) items:
struct_decl_one -> TMeta . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> TMeta

State 117:
## Known stack suffix:
## struct_or_union
## LR(1) items:
non_signable_types -> struct_or_union . type_ident [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> struct_or_union . TOBrace struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> struct_or_union . type_ident TOBrace struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TTypeId shift to state 118
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOBrace shift to state 119
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On type_ident shift to state 669
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 673
## Reductions:

State 118:
## Known stack suffix:
## TTypeId
## LR(1) items:
type_ident -> TTypeId . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TOBrace TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_ident -> TTypeId

State 119:
## Known stack suffix:
## struct_or_union TOBrace
## LR(1) items:
non_signable_types -> struct_or_union TOBrace . struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On TEllipsis shift to state 121
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl_list_start shift to state 660
-- On struct_decl_list shift to state 661
-- On struct_decl shift to state 663
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On edots_when(TEllipsis,struct_decl_one) shift to state 665
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 120:
## Known stack suffix:
## TNothing
## LR(1) items:
struct_decl -> TNothing . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TEllipsis TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl -> TNothing

State 121:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,struct_decl_one) -> TEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
edots_when(TEllipsis,struct_decl_one) -> TEllipsis . TWhen TNotEq struct_decl_one TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
## Transitions:
-- On TWhen shift to state 122
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace
--   reduce production edots_when(TEllipsis,struct_decl_one) -> TEllipsis

State 122:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,struct_decl_one) -> TEllipsis TWhen . TNotEq struct_decl_one TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
## Transitions:
-- On TNotEq shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,struct_decl_one) -> TEllipsis TWhen TNotEq . struct_decl_one TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 124
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 124:
## Known stack suffix:
## TEllipsis TWhen TNotEq struct_decl_one
## LR(1) items:
edots_when(TEllipsis,struct_decl_one) -> TEllipsis TWhen TNotEq struct_decl_one . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
## Transitions:
-- On TLineEnd shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## TEllipsis TWhen TNotEq struct_decl_one TLineEnd
## LR(1) items:
edots_when(TEllipsis,struct_decl_one) -> TEllipsis TWhen TNotEq struct_decl_one TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production edots_when(TEllipsis,struct_decl_one) -> TEllipsis TWhen TNotEq struct_decl_one TLineEnd

State 126:
## Known stack suffix:
## signable_types
## LR(1) items:
all_basic_types -> signable_types . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production all_basic_types -> signable_types

State 127:
## Known stack suffix:
## pure_ident_or_symbol
## LR(1) items:
struct_decl_one -> pure_ident_or_symbol . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 607
## Reductions:

State 128:
## Known stack suffix:
## disj_ident
## LR(1) items:
d_ident -> disj_ident . list(array_dec) [ TPtVirg TEq TComma TCPar ]
## Transitions:
-- On TOCro shift to state 129
-- On list(array_dec) shift to state 604
-- On array_dec shift to state 605
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production list(array_dec) ->

State 129:
## Known stack suffix:
## TOCro
## LR(1) items:
array_dec -> TOCro . option(eexpr) TCCro [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 602
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TCCro
--   reduce production option(eexpr) ->

State 130:
## Known stack suffix:
## TTilde
## LR(1) items:
unary_op -> TTilde . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TTilde

State 131:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TString . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TString

State 132:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr(eexpr,dot_expressions) -> TSizeof . TOPar ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 598
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 601
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 133:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr_bis -> TSizeof . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr_bis -> TSizeof . TOPar ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 594
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 597
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 134:
## Known stack suffix:
## TPlus
## LR(1) items:
unary_op -> TPlus . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TPlus

State 135:
## Known stack suffix:
## TPOEllipsis
## LR(1) items:
nest_expressions -> TPOEllipsis . expr_dots(TEllipsis) TPCEllipsis [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On pre_basic_expr(eexpr,nest_expressions) shift to state 415
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) shift to state 418
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On expr_dots(TEllipsis) shift to state 592
-- On dexpr shift to state 421
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 431
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 136:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TString . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TString

State 137:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof . unary_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
unary_expr(eexpr,nest_expressions) -> TSizeof . TOPar ctype TCPar [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 588
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 591
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 138:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 . midzero_list(eexpr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On midzero_list(eexpr,eexpr) shift to state 583
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 270
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 139:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar cast_expr(eexpr,dot_expressions) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 585
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 140:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TCPar0 TCPar ]
primary_expr(eexpr,dot_expressions) -> TOPar0 . midzero_list(eexpr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TCPar TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On midzero_list(eexpr,eexpr) shift to state 583
-- On midzero_list(ctype,ctype) shift to state 268
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 270
-- On dot_expressions shift to state 184
-- On ctype shift to state 276
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 141:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
nest_expressions -> TOEllipsis . expr_dots(TEllipsis) TCEllipsis [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On pre_basic_expr(eexpr,nest_expressions) shift to state 415
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) shift to state 418
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On expr_dots(TEllipsis) shift to state 581
-- On dexpr shift to state 421
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 431
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 142:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 . midzero_list(eexpr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On midzero_list(eexpr,eexpr) shift to state 266
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 270
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 143:
## Known stack suffix:
## TMul
## LR(1) items:
unary_op -> TMul . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TMul

State 144:
## Known stack suffix:
## TMinus
## LR(1) items:
unary_op -> TMinus . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TMinus

State 145:
## Known stack suffix:
## TMetaLocalIdExp
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaLocalIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaLocalIdExp

State 146:
## Known stack suffix:
## TMetaLocalFunc
## LR(1) items:
func_ident -> TMetaLocalFunc . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production func_ident -> TMetaLocalFunc

State 147:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaIdExp

State 148:
## Known stack suffix:
## TMetaGlobalIdExp
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaGlobalIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaGlobalIdExp

State 149:
## Known stack suffix:
## TMetaFunc
## LR(1) items:
func_ident -> TMetaFunc . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production func_ident -> TMetaFunc

State 150:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaExp

State 151:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaErr . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaErr

State 152:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TMetaConst . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TMetaConst

State 153:
## Known stack suffix:
## TMeta
## LR(1) items:
nest_expressions -> TMeta . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_expressions -> TMeta

State 154:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TInt . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TInt

State 155:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TInc . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 580
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 156:
## Known stack suffix:
## TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 578
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 157:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TFloat . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TFloat

State 158:
## Known stack suffix:
## TEllipsis
## LR(1) items:
dot_expressions -> TEllipsis . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dot_expressions -> TEllipsis

State 159:
## Known stack suffix:
## TDecimalCst
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TDecimalCst . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TDecimalCst

State 160:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TDec . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 577
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 161:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr_bis -> TInc . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 576
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 162:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr_bis -> TDec . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 575
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 163:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TChar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TChar

State 164:
## Known stack suffix:
## TBang
## LR(1) items:
unary_op -> TBang . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TBang

State 165:
## Known stack suffix:
## TAndLog
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TAndLog . ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## TAndLog ident
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TAndLog ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TAndLog ident

State 167:
## Known stack suffix:
## TAnd
## LR(1) items:
unary_op -> TAnd . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInvalid TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TAnd

State 168:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr_bis -> unary_op . cast_expr(eexpr,dot_expressions) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 574
## Reductions:

State 169:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> unary_op . cast_expr(eexpr,dot_expressions) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 573
## Reductions:

State 170:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions)
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions)

State 171:
## Known stack suffix:
## primary_expr(eexpr,dot_expressions)
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> primary_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> primary_expr(eexpr,dot_expressions)

State 172:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions)
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOCro eexpr TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDot disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TPtrOp disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TInc [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDec [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOPar eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtrOp shift to state 173
-- On TOPar shift to state 175
-- On TOCro shift to state 318
-- On TInc shift to state 321
-- On TDot shift to state 322
-- On TDec shift to state 324
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions)

State 173:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TPtrOp
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp . disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TPtrOp disj_ident
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp disj_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TPtrOp disj_ident

State 175:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar . eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 571
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 176:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ TComma TCPar ]
primary_expr(eexpr,nest_expressions) -> TOPar0 . midzero_list(eexpr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On midzero_list(eexpr,eexpr) shift to state 266
-- On midzero_list(ctype,ctype) shift to state 268
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 270
-- On dot_expressions shift to state 184
-- On ctype shift to state 276
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 177:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . TOpAssign assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . TEq assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . TMetaAssignOp assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOpAssign shift to state 178
-- On TMetaAssignOp shift to state 261
-- On TEq shift to state 263
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions)

State 178:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TOpAssign
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TOpAssign . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 260
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 179:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr_bis -> unary_expr(eexpr,dot_expressions) . TOpAssign assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
assign_expr_bis -> unary_expr(eexpr,dot_expressions) . TEq assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOpAssign shift to state 180
-- On TEq shift to state 258
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions)

State 180:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TOpAssign
## LR(1) items:
assign_expr_bis -> unary_expr(eexpr,dot_expressions) TOpAssign . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 187
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 181:
## Known stack suffix:
## nest_expressions
## LR(1) items:
dot_expressions -> nest_expressions . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dot_expressions -> nest_expressions

State 182:
## Known stack suffix:
## ident
## LR(1) items:
func_ident -> ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production func_ident -> ident

State 183:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> func_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> func_ident

State 184:
## Known stack suffix:
## dot_expressions
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> dot_expressions . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> dot_expressions

State 185:
## Known stack suffix:
## cond_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr_bis -> cond_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr_bis -> cond_expr(eexpr,dot_expressions)

State 186:
## Known stack suffix:
## cast_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> cast_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,dot_expressions) -> cast_expr(eexpr,dot_expressions)

State 187:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis
## LR(1) items:
assign_expr_bis -> unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr_bis -> unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis

State 188:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TOrLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TMetaBinaryOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) . TWhy option(eexpr) TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TXor shift to state 189
-- On TWhy shift to state 212
-- On TShROp shift to state 224
-- On TShLOp shift to state 226
-- On TPlus shift to state 228
-- On TOrLog shift to state 230
-- On TOr shift to state 238
-- On TNotEq shift to state 240
-- On TMul shift to state 242
-- On TMinus shift to state 244
-- On TMetaBinaryOp shift to state 246
-- On TLogOp shift to state 248
-- On TEqEq shift to state 250
-- On TDmOp shift to state 252
-- On TAndLog shift to state 254
-- On TAnd shift to state 256
## Reductions:
-- On TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF
--   reduce production cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions)

State 189:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TXor
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 191
## Reductions:

State 190:
## Known stack suffix:
## cast_expr(eexpr,dot_expressions)
## LR(1) items:
arith_expr_bis -> cast_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr_bis -> cast_expr(eexpr,dot_expressions)

State 191:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TXor arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TXor arith_expr_bis

State 192:
## Known stack suffix:
## arith_expr_bis TShROp
## LR(1) items:
arith_expr_bis -> arith_expr_bis TShROp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## arith_expr_bis TShROp arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TShROp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TShROp arith_expr_bis

State 194:
## Known stack suffix:
## arith_expr_bis TPlus
## LR(1) items:
arith_expr_bis -> arith_expr_bis TPlus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## arith_expr_bis TPlus arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TPlus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TPlus arith_expr_bis

State 196:
## Known stack suffix:
## arith_expr_bis TMul
## LR(1) items:
arith_expr_bis -> arith_expr_bis TMul . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## arith_expr_bis TMul arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TMul arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr_bis -> arith_expr_bis TMul arith_expr_bis

State 198:
## Known stack suffix:
## arith_expr_bis TDmOp
## LR(1) items:
arith_expr_bis -> arith_expr_bis TDmOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## arith_expr_bis TDmOp arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TDmOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr_bis -> arith_expr_bis TDmOp arith_expr_bis

State 200:
## Known stack suffix:
## arith_expr_bis TMinus
## LR(1) items:
arith_expr_bis -> arith_expr_bis TMinus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## arith_expr_bis TMinus arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TMinus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TMinus arith_expr_bis

State 202:
## Known stack suffix:
## arith_expr_bis TShLOp
## LR(1) items:
arith_expr_bis -> arith_expr_bis TShLOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## arith_expr_bis TShLOp arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TShLOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TShLOp arith_expr_bis

State 204:
## Known stack suffix:
## arith_expr_bis TNotEq
## LR(1) items:
arith_expr_bis -> arith_expr_bis TNotEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 205
## Reductions:

State 205:
## Known stack suffix:
## arith_expr_bis TNotEq arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TNotEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TNotEq arith_expr_bis

State 206:
## Known stack suffix:
## arith_expr_bis TLogOp
## LR(1) items:
arith_expr_bis -> arith_expr_bis TLogOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## arith_expr_bis TLogOp arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TLogOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TLogOp arith_expr_bis

State 208:
## Known stack suffix:
## arith_expr_bis TEqEq
## LR(1) items:
arith_expr_bis -> arith_expr_bis TEqEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## arith_expr_bis TEqEq arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TEqEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TEqEq arith_expr_bis

State 210:
## Known stack suffix:
## arith_expr_bis TAnd
## LR(1) items:
arith_expr_bis -> arith_expr_bis TAnd . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## arith_expr_bis TAnd arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TAnd arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr_bis -> arith_expr_bis TAnd arith_expr_bis

State 212:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy . option(eexpr) TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 218
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 213:
## Known stack suffix:
## pre_basic_expr(eexpr,dot_expressions)
## LR(1) items:
eexpr -> pre_basic_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TCPar0 TCPar TCCro TArobArob TArob EOF ]
pre_basic_expr(eexpr,dot_expressions) -> pre_basic_expr(eexpr,dot_expressions) . TComma basic_expr(eexpr,dot_expressions) [ TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCCro TArobArob TArob EOF ]
## Transitions:
-- On TComma shift to state 214
## Reductions:
-- On TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TCPar0 TCPar TCCro TArobArob TArob EOF
--   reduce production eexpr -> pre_basic_expr(eexpr,dot_expressions)

State 214:
## Known stack suffix:
## pre_basic_expr(eexpr,dot_expressions) TComma
## LR(1) items:
pre_basic_expr(eexpr,dot_expressions) -> pre_basic_expr(eexpr,dot_expressions) TComma . basic_expr(eexpr,dot_expressions) [ TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 216
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 215:
## Known stack suffix:
## cond_expr(eexpr,dot_expressions)
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> cond_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,dot_expressions) -> cond_expr(eexpr,dot_expressions)

State 216:
## Known stack suffix:
## pre_basic_expr(eexpr,dot_expressions) TComma basic_expr(eexpr,dot_expressions)
## LR(1) items:
pre_basic_expr(eexpr,dot_expressions) -> pre_basic_expr(eexpr,dot_expressions) TComma basic_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(eexpr,dot_expressions) -> pre_basic_expr(eexpr,dot_expressions) TComma basic_expr(eexpr,dot_expressions)

State 217:
## Known stack suffix:
## assign_expr(eexpr,dot_expressions)
## LR(1) items:
basic_expr(eexpr,dot_expressions) -> assign_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_expr(eexpr,dot_expressions) -> assign_expr(eexpr,dot_expressions)

State 218:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr)
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) . TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TDotDot shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot . eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eargexpr shift to state 220
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 221
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 220:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot eargexpr
## LR(1) items:
cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot eargexpr . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TWhy option(eexpr) TDotDot eargexpr

State 221:
## Known stack suffix:
## basic_expr(eexpr,dot_expressions)
## LR(1) items:
eargexpr -> basic_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production eargexpr -> basic_expr(eexpr,dot_expressions)

State 222:
## Known stack suffix:
## eexpr
## LR(1) items:
option(eexpr) -> eexpr . [ TPtVirg TDotDot TCPar TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(eexpr) -> eexpr

State 223:
## Known stack suffix:
## basic_expr(eexpr,dot_expressions)
## LR(1) items:
pre_basic_expr(eexpr,dot_expressions) -> basic_expr(eexpr,dot_expressions) . [ TRightIso TPtVirg TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(eexpr,dot_expressions) -> basic_expr(eexpr,dot_expressions)

State 224:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShROp
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShROp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShROp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShROp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShROp arith_expr_bis

State 226:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShLOp
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShLOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TShLOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShLOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TShLOp arith_expr_bis

State 228:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TPlus
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TPlus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TPlus arith_expr_bis

State 230:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOrLog
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOrLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAndLog shift to state 236
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOrLog arith_expr_bis

State 232:
## Known stack suffix:
## arith_expr_bis TXor
## LR(1) items:
arith_expr_bis -> arith_expr_bis TXor . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## arith_expr_bis TXor arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TXor arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog EOF
--   reduce production arith_expr_bis -> arith_expr_bis TXor arith_expr_bis

State 234:
## Known stack suffix:
## arith_expr_bis TOr
## LR(1) items:
arith_expr_bis -> arith_expr_bis TOr . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## arith_expr_bis TOr arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TOr arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog EOF
--   reduce production arith_expr_bis -> arith_expr_bis TOr arith_expr_bis

State 236:
## Known stack suffix:
## arith_expr_bis TAndLog
## LR(1) items:
arith_expr_bis -> arith_expr_bis TAndLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## arith_expr_bis TAndLog arith_expr_bis
## LR(1) items:
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis TAndLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog EOF
--   reduce production arith_expr_bis -> arith_expr_bis TAndLog arith_expr_bis

State 238:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOr
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TOr arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TOr arith_expr_bis

State 240:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TNotEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TNotEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TNotEq arith_expr_bis

State 242:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMul
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMul arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMul arith_expr_bis

State 244:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMinus
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMinus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMinus arith_expr_bis

State 246:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMetaBinaryOp
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMetaBinaryOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TMetaBinaryOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMetaBinaryOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TMetaBinaryOp arith_expr_bis

State 248:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TLogOp
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TLogOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TLogOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TLogOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TLogOp arith_expr_bis

State 250:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TEqEq
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TEqEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TEqEq arith_expr_bis

State 252:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TDmOp
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDmOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TDmOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDmOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TDmOp arith_expr_bis

State 254:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAndLog
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAndLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAndLog arith_expr_bis

State 256:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAnd
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## arith_expr(eexpr,dot_expressions) TAnd arith_expr_bis
## LR(1) items:
arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(eexpr,dot_expressions) -> arith_expr(eexpr,dot_expressions) TAnd arith_expr_bis

State 258:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq
## LR(1) items:
assign_expr_bis -> unary_expr(eexpr,dot_expressions) TEq . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 259
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 259:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq assign_expr_bis
## LR(1) items:
assign_expr_bis -> unary_expr(eexpr,dot_expressions) TEq assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr_bis -> unary_expr(eexpr,dot_expressions) TEq assign_expr_bis

State 260:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TOpAssign assign_expr_bis

State 261:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TMetaAssignOp
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TMetaAssignOp . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 262
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 262:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TMetaAssignOp assign_expr_bis
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TMetaAssignOp assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TMetaAssignOp assign_expr_bis

State 263:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 264
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 264:
## Known stack suffix:
## unary_expr(eexpr,dot_expressions) TEq assign_expr_bis
## LR(1) items:
assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TDotDot TComma TCPar0 TCPar TCEllipsis TCCro TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,dot_expressions) -> unary_expr(eexpr,dot_expressions) TEq assign_expr_bis

State 265:
## Known stack suffix:
## non_signable_types
## LR(1) items:
all_basic_types -> non_signable_types . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production all_basic_types -> non_signable_types

State 266:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr)
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr,eexpr) . TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCPar0 shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0 . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0

State 268:
## Known stack suffix:
## TOPar0 midzero_list(ctype,ctype)
## LR(1) items:
ctype -> TOPar0 midzero_list(ctype,ctype) . TCPar0 [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCPar0 shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## TOPar0 midzero_list(ctype,ctype) TCPar0
## LR(1) items:
ctype -> TOPar0 midzero_list(ctype,ctype) TCPar0 . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctype -> TOPar0 midzero_list(ctype,ctype) TCPar0

State 270:
## Known stack suffix:
## eexpr
## LR(1) items:
midzero_list(eexpr,eexpr) -> eexpr . list(mzl(eexpr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 271
-- On mzl(eexpr) shift to state 273
-- On list(mzl(eexpr)) shift to state 275
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->

State 271:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(eexpr) -> TMid0 . eexpr [ TMid0 TCPar0 ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 272
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 272:
## Known stack suffix:
## TMid0 eexpr
## LR(1) items:
mzl(eexpr) -> TMid0 eexpr . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(eexpr) -> TMid0 eexpr

State 273:
## Known stack suffix:
## mzl(eexpr)
## LR(1) items:
list(mzl(eexpr)) -> mzl(eexpr) . list(mzl(eexpr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 271
-- On mzl(eexpr) shift to state 273
-- On list(mzl(eexpr)) shift to state 274
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->

State 274:
## Known stack suffix:
## mzl(eexpr) list(mzl(eexpr))
## LR(1) items:
list(mzl(eexpr)) -> mzl(eexpr) list(mzl(eexpr)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(eexpr)) -> mzl(eexpr) list(mzl(eexpr))

State 275:
## Known stack suffix:
## eexpr list(mzl(eexpr))
## LR(1) items:
midzero_list(eexpr,eexpr) -> eexpr list(mzl(eexpr)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(eexpr,eexpr) -> eexpr list(mzl(eexpr))

State 276:
## Known stack suffix:
## ctype
## LR(1) items:
midzero_list(ctype,ctype) -> ctype . list(mzl(ctype)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 277
-- On mzl(ctype) shift to state 290
-- On list(mzl(ctype)) shift to state 292
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 277:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(ctype) -> TMid0 . ctype [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 278
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 278:
## Known stack suffix:
## TMid0 ctype
## LR(1) items:
mzl(ctype) -> TMid0 ctype . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(ctype) -> TMid0 ctype

State 279:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 280:
## Known stack suffix:
## Tunsigned
## LR(1) items:
all_basic_types -> Tunsigned . signable_types [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tshort shift to state 22
-- On Tlong shift to state 24
-- On Tint shift to state 28
-- On Tchar shift to state 29
-- On TRuleName shift to state 30
-- On TMetaType shift to state 33
-- On signable_types shift to state 34
## Reductions:

State 281:
## Known stack suffix:
## Tsigned
## LR(1) items:
all_basic_types -> Tsigned . signable_types [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tshort shift to state 22
-- On Tlong shift to state 24
-- On Tint shift to state 28
-- On Tchar shift to state 29
-- On TRuleName shift to state 30
-- On TMetaType shift to state 33
-- On signable_types shift to state 40
## Reductions:

State 282:
## Known stack suffix:
## const_vol all_basic_types
## LR(1) items:
ctype -> const_vol all_basic_types . list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TMul shift to state 283
-- On mul shift to state 285
-- On list(mul) shift to state 287
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production list(mul) ->

State 283:
## Known stack suffix:
## TMul
## LR(1) items:
mul -> TMul . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
mul -> TMul . const_vol [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tconst shift to state 107
-- On const_vol shift to state 284
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production mul -> TMul

State 284:
## Known stack suffix:
## TMul const_vol
## LR(1) items:
mul -> TMul const_vol . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMul TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mul -> TMul const_vol

State 285:
## Known stack suffix:
## mul
## LR(1) items:
list(mul) -> mul . list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TMul shift to state 283
-- On mul shift to state 285
-- On list(mul) shift to state 286
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production list(mul) ->

State 286:
## Known stack suffix:
## mul list(mul)
## LR(1) items:
list(mul) -> mul list(mul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mul) -> mul list(mul)

State 287:
## Known stack suffix:
## const_vol all_basic_types list(mul)
## LR(1) items:
ctype -> const_vol all_basic_types list(mul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctype -> const_vol all_basic_types list(mul)

State 288:
## Known stack suffix:
## all_basic_types
## LR(1) items:
ctype -> all_basic_types . list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TMul shift to state 283
-- On mul shift to state 285
-- On list(mul) shift to state 289
## Reductions:
-- On Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production list(mul) ->

State 289:
## Known stack suffix:
## all_basic_types list(mul)
## LR(1) items:
ctype -> all_basic_types list(mul) . [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TRightIso TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIso TIdent TFunDecl TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctype -> all_basic_types list(mul)

State 290:
## Known stack suffix:
## mzl(ctype)
## LR(1) items:
list(mzl(ctype)) -> mzl(ctype) . list(mzl(ctype)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 277
-- On mzl(ctype) shift to state 290
-- On list(mzl(ctype)) shift to state 291
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 291:
## Known stack suffix:
## mzl(ctype) list(mzl(ctype))
## LR(1) items:
list(mzl(ctype)) -> mzl(ctype) list(mzl(ctype)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(ctype)) -> mzl(ctype) list(mzl(ctype))

State 292:
## Known stack suffix:
## ctype list(mzl(ctype))
## LR(1) items:
midzero_list(ctype,ctype) -> ctype list(mzl(ctype)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(ctype,ctype) -> ctype list(mzl(ctype))

State 293:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar . ctype TCPar cast_expr(eexpr,nest_expressions) [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
primary_expr(eexpr,nest_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 294
-- On dot_expressions shift to state 184
-- On ctype shift to state 296
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 294:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar eexpr . TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TOPar eexpr TCPar . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TOPar eexpr TCPar

State 296:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype . TCPar cast_expr(eexpr,nest_expressions) [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar . cast_expr(eexpr,nest_expressions) [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 298
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 333
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On cast_expr(eexpr,nest_expressions) shift to state 570
## Reductions:

State 298:
## Known stack suffix:
## TOPar ctype TCPar TOBrace
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> TOPar ctype TCPar TOBrace . initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 568
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 299:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(eexpr,invalid) -> TString . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TString

State 300:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof . unary_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof . TOPar ctype TCPar [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 301
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 567
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 301:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof TOPar . ctype TCPar [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 304
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 302:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar eexpr . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar eexpr TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TOPar eexpr TCPar

State 304:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof TOPar ctype . TCPar [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
unary_expr(eexpr,invalid) -> TSizeof TOPar ctype TCPar . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:
-- On TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> TSizeof TOPar ctype TCPar

State 306:
## Known stack suffix:
## TOPar ctype TCPar TOBrace
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar TOBrace . initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 565
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 307:
## Known stack suffix:
## TPOEllipsis
## LR(1) items:
nest_expressions_only -> TPOEllipsis . expr_dots(TEllipsis) TPCEllipsis [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On pre_basic_expr(eexpr,nest_expressions) shift to state 415
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) shift to state 418
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On expr_dots(TEllipsis) shift to state 419
-- On dexpr shift to state 421
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 431
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 308:
## Known stack suffix:
## TMetaLocalIdExp
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaLocalIdExp . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaLocalIdExp

State 309:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaIdExp . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaIdExp

State 310:
## Known stack suffix:
## TMetaGlobalIdExp
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaGlobalIdExp . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaGlobalIdExp

State 311:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaExp . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaExp

State 312:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaErr . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaErr

State 313:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TMetaConst . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TMetaConst

State 314:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TInt . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TInt

State 315:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TInc . unary_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 316
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 316:
## Known stack suffix:
## TInc unary_expr_bis
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TInc unary_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,nest_expressions) -> TInc unary_expr_bis

State 317:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions)
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOCro eexpr TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDot disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TPtrOp disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TInc [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TDec [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) . TOPar eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr_bis -> postfix_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtrOp shift to state 173
-- On TOPar shift to state 175
-- On TOCro shift to state 318
-- On TInc shift to state 321
-- On TDot shift to state 322
-- On TDec shift to state 324
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr_bis -> postfix_expr(eexpr,dot_expressions)

State 318:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro . eexpr TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 319
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 319:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr . TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCCro shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOCro eexpr TCCro

State 321:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TInc
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TInc . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TInc

State 322:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDot
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot . disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDot disj_ident
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot disj_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDot disj_ident

State 324:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TDec
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDec . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TDec

State 325:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TFloat . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TFloat

State 326:
## Known stack suffix:
## TDecimalCst
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TDecimalCst . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TDecimalCst

State 327:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TDec . unary_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 328
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 328:
## Known stack suffix:
## TDec unary_expr_bis
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TDec unary_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,nest_expressions) -> TDec unary_expr_bis

State 329:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TChar . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TChar

State 330:
## Known stack suffix:
## TAndLog
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TAndLog . ident [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## TAndLog ident
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> TAndLog ident . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> TAndLog ident

State 332:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> unary_op . cast_expr(eexpr,nest_expressions) [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 333
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On cast_expr(eexpr,nest_expressions) shift to state 414
## Reductions:

State 333:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions)
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions)

State 334:
## Known stack suffix:
## primary_expr(eexpr,nest_expressions)
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> primary_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> primary_expr(eexpr,nest_expressions)

State 335:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions)
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TOCro eexpr TCCro [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TDot disj_ident [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TPtrOp disj_ident [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TInc [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TDec [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . TOPar eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
unary_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 336
-- On TOPar shift to state 338
-- On TOCro shift to state 407
-- On TInc shift to state 410
-- On TDot shift to state 411
-- On TDec shift to state 413
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production unary_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions)

State 336:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TPtrOp
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp . disj_ident [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 337
## Reductions:

State 337:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TPtrOp disj_ident
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp disj_ident . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TPtrOp disj_ident

State 338:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar . eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 405
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 339:
## Known stack suffix:
## TNothing
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> TNothing . nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 402
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:

State 340:
## Known stack suffix:
## TMetaExpList
## LR(1) items:
aexpr -> TMetaExpList . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aexpr -> TMetaExpList

State 341:
## Known stack suffix:
## TEllipsis
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis . [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis . TComma [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis . TComma continue_list(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 342
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(aexpr,TEllipsis) -> TEllipsis

State 342:
## Known stack suffix:
## TEllipsis TComma
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis TComma . [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis TComma . continue_list(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 343
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On continue_list(aexpr,TEllipsis) shift to state 398
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 399
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(aexpr,TEllipsis) -> TEllipsis TComma

State 343:
## Known stack suffix:
## TNothing
## LR(1) items:
continue_list(aexpr,TEllipsis) -> TNothing . nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 351
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:

State 344:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . TOpAssign assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . TEq assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . TMetaAssignOp assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TOpAssign shift to state 345
-- On TMetaAssignOp shift to state 347
-- On TEq shift to state 349
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production cast_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions)

State 345:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TOpAssign
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TOpAssign . assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 346
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 346:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TOpAssign assign_expr_bis
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TOpAssign assign_expr_bis . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TOpAssign assign_expr_bis

State 347:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TMetaAssignOp
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TMetaAssignOp . assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 348
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 348:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TMetaAssignOp assign_expr_bis
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TMetaAssignOp assign_expr_bis . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TMetaAssignOp assign_expr_bis

State 349:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TEq
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq . assign_expr_bis [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 350
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 350:
## Known stack suffix:
## unary_expr(eexpr,nest_expressions) TEq assign_expr_bis
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq assign_expr_bis . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,nest_expressions) -> unary_expr(eexpr,nest_expressions) TEq assign_expr_bis

State 351:
## Known stack suffix:
## TNothing nonempty_list_start(aexpr,TEllipsis)
## LR(1) items:
continue_list(aexpr,TEllipsis) -> TNothing nonempty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(aexpr,TEllipsis) -> TNothing nonempty_list_start(aexpr,TEllipsis)

State 352:
## Known stack suffix:
## nest_expressions
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> nest_expressions . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> nest_expressions

State 353:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,nest_expressions) -> func_ident . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,nest_expressions) -> func_ident

State 354:
## Known stack suffix:
## dargexpr
## LR(1) items:
aexpr -> dargexpr . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aexpr -> dargexpr

State 355:
## Known stack suffix:
## ctype
## LR(1) items:
aexpr -> ctype . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aexpr -> ctype

State 356:
## Known stack suffix:
## cond_expr(eexpr,nest_expressions)
## LR(1) items:
assign_expr(eexpr,nest_expressions) -> cond_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(eexpr,nest_expressions) -> cond_expr(eexpr,nest_expressions)

State 357:
## Known stack suffix:
## cast_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> cast_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,nest_expressions) -> cast_expr(eexpr,nest_expressions)

State 358:
## Known stack suffix:
## basic_expr(eexpr,nest_expressions)
## LR(1) items:
dargexpr -> basic_expr(eexpr,nest_expressions) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dargexpr -> basic_expr(eexpr,nest_expressions)

State 359:
## Known stack suffix:
## assign_expr(eexpr,nest_expressions)
## LR(1) items:
basic_expr(eexpr,nest_expressions) -> assign_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_expr(eexpr,nest_expressions) -> assign_expr(eexpr,nest_expressions)

State 360:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions)
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TOrLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TMetaBinaryOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) . TWhy option(eexpr) TDotDot eargexpr [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TXor shift to state 361
-- On TWhy shift to state 363
-- On TShROp shift to state 367
-- On TShLOp shift to state 369
-- On TPlus shift to state 371
-- On TOrLog shift to state 373
-- On TOr shift to state 375
-- On TNotEq shift to state 377
-- On TMul shift to state 379
-- On TMinus shift to state 381
-- On TMetaBinaryOp shift to state 383
-- On TLogOp shift to state 385
-- On TEqEq shift to state 387
-- On TDmOp shift to state 389
-- On TAndLog shift to state 391
-- On TAnd shift to state 393
## Reductions:
-- On TPCEllipsis TEllipsis TComma TCPar TCEllipsis
--   reduce production cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions)

State 361:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TXor
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 362
## Reductions:

State 362:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TXor arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TXor TWhy TPCEllipsis TOrLog TOr TMetaBinaryOp TEllipsis TComma TCPar TCEllipsis TAndLog
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TXor arith_expr_bis

State 363:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy . option(eexpr) TDotDot eargexpr [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 364
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 364:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr)
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) . TDotDot eargexpr [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TDotDot shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot . eargexpr [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eargexpr shift to state 366
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 221
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 366:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot eargexpr
## LR(1) items:
cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot eargexpr . [ TPCEllipsis TEllipsis TComma TCPar TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TWhy option(eexpr) TDotDot eargexpr

State 367:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShROp
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShROp . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 368
## Reductions:

State 368:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShROp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShROp arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TPCEllipsis TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShROp arith_expr_bis

State 369:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShLOp
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShLOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TShLOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShLOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TPCEllipsis TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TShLOp arith_expr_bis

State 371:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TPlus
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TPlus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TPlus arith_expr_bis

State 373:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOrLog
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOrLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAndLog shift to state 236
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TPCEllipsis TOrLog TMetaBinaryOp TEllipsis TComma TCPar TCEllipsis
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOrLog arith_expr_bis

State 375:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOr
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TOr arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TPCEllipsis TOrLog TOr TMetaBinaryOp TEllipsis TComma TCPar TCEllipsis TAndLog
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TOr arith_expr_bis

State 377:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TNotEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TNotEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TPCEllipsis TOrLog TOr TNotEq TMetaBinaryOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TNotEq arith_expr_bis

State 379:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMul
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 380
## Reductions:

State 380:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMul arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMul arith_expr_bis

State 381:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMinus
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMinus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMinus arith_expr_bis

State 383:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMetaBinaryOp
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMetaBinaryOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 384
## Reductions:

State 384:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TMetaBinaryOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMetaBinaryOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TMetaBinaryOp arith_expr_bis

State 385:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TLogOp
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TLogOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TLogOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TLogOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TPCEllipsis TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TLogOp arith_expr_bis

State 387:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TEqEq
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 388
## Reductions:

State 388:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TEqEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TPCEllipsis TOrLog TOr TNotEq TMetaBinaryOp TEqEq TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TEqEq arith_expr_bis

State 389:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TDmOp
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDmOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 390
## Reductions:

State 390:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TDmOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDmOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TDmOp arith_expr_bis

State 391:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAndLog
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 392
## Reductions:

State 392:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAndLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TPCEllipsis TOrLog TMetaBinaryOp TEllipsis TComma TCPar TCEllipsis TAndLog
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAndLog arith_expr_bis

State 393:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAnd
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd . arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## arith_expr(eexpr,nest_expressions) TAnd arith_expr_bis
## LR(1) items:
arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd arith_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TPCEllipsis TOrLog TOr TMetaBinaryOp TEllipsis TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production arith_expr(eexpr,nest_expressions) -> arith_expr(eexpr,nest_expressions) TAnd arith_expr_bis

State 395:
## Known stack suffix:
## aexpr
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> aexpr . [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> aexpr . TComma [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> aexpr . TComma nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 396
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(aexpr,TEllipsis) -> aexpr

State 396:
## Known stack suffix:
## aexpr TComma
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> aexpr TComma . [ TCPar ]
nonempty_list_start(aexpr,TEllipsis) -> aexpr TComma . nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 397
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(aexpr,TEllipsis) -> aexpr TComma

State 397:
## Known stack suffix:
## aexpr TComma nonempty_list_start(aexpr,TEllipsis)
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> aexpr TComma nonempty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(aexpr,TEllipsis) -> aexpr TComma nonempty_list_start(aexpr,TEllipsis)

State 398:
## Known stack suffix:
## TEllipsis TComma continue_list(aexpr,TEllipsis)
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> TEllipsis TComma continue_list(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(aexpr,TEllipsis) -> TEllipsis TComma continue_list(aexpr,TEllipsis)

State 399:
## Known stack suffix:
## aexpr
## LR(1) items:
continue_list(aexpr,TEllipsis) -> aexpr . [ TCPar ]
continue_list(aexpr,TEllipsis) -> aexpr . TComma [ TCPar ]
continue_list(aexpr,TEllipsis) -> aexpr . TComma nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 400
## Reductions:
-- On TCPar
--   reduce production continue_list(aexpr,TEllipsis) -> aexpr

State 400:
## Known stack suffix:
## aexpr TComma
## LR(1) items:
continue_list(aexpr,TEllipsis) -> aexpr TComma . [ TCPar ]
continue_list(aexpr,TEllipsis) -> aexpr TComma . nonempty_list_start(aexpr,TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 401
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production continue_list(aexpr,TEllipsis) -> aexpr TComma

State 401:
## Known stack suffix:
## aexpr TComma nonempty_list_start(aexpr,TEllipsis)
## LR(1) items:
continue_list(aexpr,TEllipsis) -> aexpr TComma nonempty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(aexpr,TEllipsis) -> aexpr TComma nonempty_list_start(aexpr,TEllipsis)

State 402:
## Known stack suffix:
## TNothing nonempty_list_start(aexpr,TEllipsis)
## LR(1) items:
nonempty_list_start(aexpr,TEllipsis) -> TNothing nonempty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(aexpr,TEllipsis) -> TNothing nonempty_list_start(aexpr,TEllipsis)

State 403:
## Known stack suffix:
## nonempty_list_start(aexpr,TEllipsis)
## LR(1) items:
empty_list_start(aexpr,TEllipsis) -> nonempty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production empty_list_start(aexpr,TEllipsis) -> nonempty_list_start(aexpr,TEllipsis)

State 404:
## Known stack suffix:
## empty_list_start(aexpr,TEllipsis)
## LR(1) items:
eexpr_list_option -> empty_list_start(aexpr,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production eexpr_list_option -> empty_list_start(aexpr,TEllipsis)

State 405:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option . TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOPar eexpr_list_option TCPar

State 407:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro . eexpr TCCro [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 408
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 408:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr . TCCro [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCCro shift to state 409
## Reductions:

State 409:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TOCro eexpr TCCro

State 410:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TInc
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TInc . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TInc

State 411:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDot
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot . disj_ident [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 412
## Reductions:

State 412:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDot disj_ident
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot disj_ident . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDot disj_ident

State 413:
## Known stack suffix:
## postfix_expr(eexpr,nest_expressions) TDec
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDec . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> postfix_expr(eexpr,nest_expressions) TDec

State 414:
## Known stack suffix:
## unary_op cast_expr(eexpr,nest_expressions)
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> unary_op cast_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,nest_expressions) -> unary_op cast_expr(eexpr,nest_expressions)

State 415:
## Known stack suffix:
## pre_basic_expr(eexpr,nest_expressions)
## LR(1) items:
dexpr -> pre_basic_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TCEllipsis ]
pre_basic_expr(eexpr,nest_expressions) -> pre_basic_expr(eexpr,nest_expressions) . TComma basic_expr(eexpr,nest_expressions) [ TPCEllipsis TEllipsis TComma TCEllipsis ]
## Transitions:
-- On TComma shift to state 416
## Reductions:
-- On TPCEllipsis TEllipsis TCEllipsis
--   reduce production dexpr -> pre_basic_expr(eexpr,nest_expressions)

State 416:
## Known stack suffix:
## pre_basic_expr(eexpr,nest_expressions) TComma
## LR(1) items:
pre_basic_expr(eexpr,nest_expressions) -> pre_basic_expr(eexpr,nest_expressions) TComma . basic_expr(eexpr,nest_expressions) [ TPCEllipsis TEllipsis TComma TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 417
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 417:
## Known stack suffix:
## pre_basic_expr(eexpr,nest_expressions) TComma basic_expr(eexpr,nest_expressions)
## LR(1) items:
pre_basic_expr(eexpr,nest_expressions) -> pre_basic_expr(eexpr,nest_expressions) TComma basic_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TComma TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(eexpr,nest_expressions) -> pre_basic_expr(eexpr,nest_expressions) TComma basic_expr(eexpr,nest_expressions)

State 418:
## Known stack suffix:
## no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr))
## LR(1) items:
expr_dots(TEllipsis) -> no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) . [ TPCEllipsis TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr_dots(TEllipsis) -> no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr))

State 419:
## Known stack suffix:
## TPOEllipsis expr_dots(TEllipsis)
## LR(1) items:
nest_expressions_only -> TPOEllipsis expr_dots(TEllipsis) . TPCEllipsis [ TComma TCBrace ]
## Transitions:
-- On TPCEllipsis shift to state 420
## Reductions:

State 420:
## Known stack suffix:
## TPOEllipsis expr_dots(TEllipsis) TPCEllipsis
## LR(1) items:
nest_expressions_only -> TPOEllipsis expr_dots(TEllipsis) TPCEllipsis . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_expressions_only -> TPOEllipsis expr_dots(TEllipsis) TPCEllipsis

State 421:
## Known stack suffix:
## dexpr
## LR(1) items:
no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr . list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TPCEllipsis TCEllipsis ]
## Transitions:
-- On TEllipsis shift to state 422
-- On list(pair(edots_when(TEllipsis,eexpr),dexpr)) shift to state 427
-- On edots_when(TEllipsis,eexpr) shift to state 428
## Reductions:
-- On TPCEllipsis TCEllipsis
--   reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) ->

State 422:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
edots_when(TEllipsis,eexpr) -> TEllipsis . TWhen TNotEq eexpr TLineEnd [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
-- On TWhen shift to state 423
## Reductions:
-- On TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd
--   reduce production edots_when(TEllipsis,eexpr) -> TEllipsis

State 423:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen . TNotEq eexpr TLineEnd [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
-- On TNotEq shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq . eexpr TLineEnd [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 425
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 425:
## Known stack suffix:
## TEllipsis TWhen TNotEq eexpr
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr . TLineEnd [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
-- On TLineEnd shift to state 426
## Reductions:

State 426:
## Known stack suffix:
## TEllipsis TWhen TNotEq eexpr TLineEnd
## LR(1) items:
edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr TLineEnd . [ TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TDecimalCst TDec TChar TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production edots_when(TEllipsis,eexpr) -> TEllipsis TWhen TNotEq eexpr TLineEnd

State 427:
## Known stack suffix:
## dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))
## LR(1) items:
no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) . [ TPCEllipsis TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) -> dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))

State 428:
## Known stack suffix:
## edots_when(TEllipsis,eexpr)
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) . dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TPCEllipsis TCEllipsis ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On pre_basic_expr(eexpr,nest_expressions) shift to state 415
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On dexpr shift to state 429
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 431
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 429:
## Known stack suffix:
## edots_when(TEllipsis,eexpr) dexpr
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr . list(pair(edots_when(TEllipsis,eexpr),dexpr)) [ TPCEllipsis TCEllipsis ]
## Transitions:
-- On TEllipsis shift to state 422
-- On list(pair(edots_when(TEllipsis,eexpr),dexpr)) shift to state 430
-- On edots_when(TEllipsis,eexpr) shift to state 428
## Reductions:
-- On TPCEllipsis TCEllipsis
--   reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) ->

State 430:
## Known stack suffix:
## edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))
## LR(1) items:
list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr)) . [ TPCEllipsis TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(pair(edots_when(TEllipsis,eexpr),dexpr)) -> edots_when(TEllipsis,eexpr) dexpr list(pair(edots_when(TEllipsis,eexpr),dexpr))

State 431:
## Known stack suffix:
## basic_expr(eexpr,nest_expressions)
## LR(1) items:
pre_basic_expr(eexpr,nest_expressions) -> basic_expr(eexpr,nest_expressions) . [ TPCEllipsis TEllipsis TComma TCEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(eexpr,nest_expressions) -> basic_expr(eexpr,nest_expressions)

State 432:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 . midzero_list(eexpr,eexpr) TCPar0 [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On midzero_list(eexpr,eexpr) shift to state 433
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 270
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 433:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr)
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr,eexpr) . TCPar0 [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCPar0 shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0 . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0

State 435:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar . ctype TCPar cast_expr(eexpr,invalid) [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
primary_expr(eexpr,invalid) -> TOPar . eexpr TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 436
-- On dot_expressions shift to state 184
-- On ctype shift to state 438
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 436:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar eexpr . TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 437
## Reductions:

State 437:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(eexpr,invalid) -> TOPar eexpr TCPar . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TOPar eexpr TCPar

State 438:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype . TCPar cast_expr(eexpr,invalid) [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype TCPar . cast_expr(eexpr,invalid) [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOBrace shift to state 440
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On invalid shift to state 495
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On cast_expr(eexpr,invalid) shift to state 564
## Reductions:

State 440:
## Known stack suffix:
## TOPar ctype TCPar TOBrace
## LR(1) items:
postfix_expr(eexpr,invalid) -> TOPar ctype TCPar TOBrace . initialize_list TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 562
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 441:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
nest_expressions_only -> TOEllipsis . expr_dots(TEllipsis) TCEllipsis [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 142
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On pre_basic_expr(eexpr,nest_expressions) shift to state 415
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On no_dot_start_end(dexpr,edots_when(TEllipsis,eexpr)) shift to state 418
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On expr_dots(TEllipsis) shift to state 442
-- On dexpr shift to state 421
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 431
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
## Reductions:

State 442:
## Known stack suffix:
## TOEllipsis expr_dots(TEllipsis)
## LR(1) items:
nest_expressions_only -> TOEllipsis expr_dots(TEllipsis) . TCEllipsis [ TComma TCBrace ]
## Transitions:
-- On TCEllipsis shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## TOEllipsis expr_dots(TEllipsis) TCEllipsis
## LR(1) items:
nest_expressions_only -> TOEllipsis expr_dots(TEllipsis) TCEllipsis . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_expressions_only -> TOEllipsis expr_dots(TEllipsis) TCEllipsis

State 444:
## Known stack suffix:
## TOCro
## LR(1) items:
designator -> TOCro . eexpr TCCro [ TOCro TEq TDot ]
designator -> TOCro . eexpr TEllipsis eexpr TCCro [ TOCro TEq TDot ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 445
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 445:
## Known stack suffix:
## TOCro eexpr
## LR(1) items:
designator -> TOCro eexpr . TCCro [ TOCro TEq TDot ]
designator -> TOCro eexpr . TEllipsis eexpr TCCro [ TOCro TEq TDot ]
## Transitions:
-- On TEllipsis shift to state 446
-- On TCCro shift to state 449
## Reductions:

State 446:
## Known stack suffix:
## TOCro eexpr TEllipsis
## LR(1) items:
designator -> TOCro eexpr TEllipsis . eexpr TCCro [ TOCro TEq TDot ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 447
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 447:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr
## LR(1) items:
designator -> TOCro eexpr TEllipsis eexpr . TCCro [ TOCro TEq TDot ]
## Transitions:
-- On TCCro shift to state 448
## Reductions:

State 448:
## Known stack suffix:
## TOCro eexpr TEllipsis eexpr TCCro
## LR(1) items:
designator -> TOCro eexpr TEllipsis eexpr TCCro . [ TOCro TEq TDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> TOCro eexpr TEllipsis eexpr TCCro

State 449:
## Known stack suffix:
## TOCro eexpr TCCro
## LR(1) items:
designator -> TOCro eexpr TCCro . [ TOCro TEq TDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> TOCro eexpr TCCro

State 450:
## Known stack suffix:
## TOBrace
## LR(1) items:
initialize2 -> TOBrace . initialize_list TCBrace [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 560
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 451:
## Known stack suffix:
## TNothing
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> TNothing . nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 559
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->

State 452:
## Known stack suffix:
## TMetaLocalIdExp
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaLocalIdExp . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaLocalIdExp

State 453:
## Known stack suffix:
## TMetaInitList
## LR(1) items:
initialize2 -> TMetaInitList . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> TMetaInitList

State 454:
## Known stack suffix:
## TMetaInit
## LR(1) items:
initialize2 -> TMetaInit . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> TMetaInit

State 455:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaIdExp . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaIdExp

State 456:
## Known stack suffix:
## TMetaId
## LR(1) items:
ident -> TMetaId . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TCBrace TArobArob TArob TAndLog TAnd EOF ]
mident -> TMetaId . [ TDotDot ]
## Transitions:
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production ident -> TMetaId
-- On TDotDot
--   reduce production mident -> TMetaId

State 457:
## Known stack suffix:
## TMetaGlobalIdExp
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaGlobalIdExp . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaGlobalIdExp

State 458:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaExp . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaExp

State 459:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaErr . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaErr

State 460:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(eexpr,invalid) -> TMetaConst . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TMetaConst

State 461:
## Known stack suffix:
## TInvalid
## LR(1) items:
invalid -> TInvalid . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production invalid -> TInvalid

State 462:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(eexpr,invalid) -> TInt . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TInt

State 463:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(eexpr,invalid) -> TInc . unary_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 464
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 464:
## Known stack suffix:
## TInc unary_expr_bis
## LR(1) items:
unary_expr(eexpr,invalid) -> TInc unary_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,invalid) -> TInc unary_expr_bis

State 465:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(eexpr,invalid) -> TFloat . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TFloat

State 466:
## Known stack suffix:
## TEllipsis
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis . [ TComma TCBrace ]
edots_when(TEllipsis,initialize) -> TEllipsis . TWhen TNotEq initialize TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TWhen shift to state 467
## Reductions:
-- On TComma TCBrace
--   reduce production edots_when(TEllipsis,initialize) -> TEllipsis

State 467:
## Known stack suffix:
## TEllipsis TWhen
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen . TNotEq initialize TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TNotEq shift to state 468
## Reductions:

State 468:
## Known stack suffix:
## TEllipsis TWhen TNotEq
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq . initialize TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 556
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 469:
## Known stack suffix:
## TOBrace
## LR(1) items:
initialize -> TOBrace . initialize_list TCBrace [ TPtVirg TLineEnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 541
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 470:
## Known stack suffix:
## TDot
## LR(1) items:
designator -> TDot . disj_ident [ TOCro TEq TDot ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## TDot disj_ident
## LR(1) items:
designator -> TDot disj_ident . [ TOCro TEq TDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> TDot disj_ident

State 472:
## Known stack suffix:
## TDecimalCst
## LR(1) items:
primary_expr(eexpr,invalid) -> TDecimalCst . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TDecimalCst

State 473:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(eexpr,invalid) -> TDec . unary_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 474
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 474:
## Known stack suffix:
## TDec unary_expr_bis
## LR(1) items:
unary_expr(eexpr,invalid) -> TDec unary_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,invalid) -> TDec unary_expr_bis

State 475:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(eexpr,invalid) -> TChar . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TChar

State 476:
## Known stack suffix:
## TAndLog
## LR(1) items:
primary_expr(eexpr,invalid) -> TAndLog . ident [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## TAndLog ident
## LR(1) items:
primary_expr(eexpr,invalid) -> TAndLog ident . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> TAndLog ident

State 478:
## Known stack suffix:
## wrapped_sym_ident
## LR(1) items:
ident -> wrapped_sym_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TCBrace TArobArob TArob TAndLog TAnd EOF ]
mident -> wrapped_sym_ident . [ TDotDot ]
## Transitions:
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production ident -> wrapped_sym_ident
-- On TDotDot
--   reduce production mident -> wrapped_sym_ident

State 479:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(eexpr,invalid) -> unary_op . cast_expr(eexpr,invalid) [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On invalid shift to state 495
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On cast_expr(eexpr,invalid) shift to state 497
## Reductions:

State 480:
## Known stack suffix:
## unary_expr(eexpr,invalid)
## LR(1) items:
cast_expr(eexpr,invalid) -> unary_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,invalid) -> unary_expr(eexpr,invalid)

State 481:
## Known stack suffix:
## primary_expr(eexpr,invalid)
## LR(1) items:
postfix_expr(eexpr,invalid) -> primary_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> primary_expr(eexpr,invalid)

State 482:
## Known stack suffix:
## postfix_expr(eexpr,invalid)
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TOCro eexpr TCCro [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TDot disj_ident [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TPtrOp disj_ident [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TInc [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TDec [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . TOPar eexpr_list_option TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
unary_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 483
-- On TOPar shift to state 485
-- On TOCro shift to state 488
-- On TInc shift to state 491
-- On TDot shift to state 492
-- On TDec shift to state 494
## Reductions:
-- On TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd
--   reduce production unary_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid)

State 483:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TPtrOp
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp . disj_ident [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TPtrOp disj_ident
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp disj_ident . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TPtrOp disj_ident

State 485:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar . eexpr_list_option TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 486
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 486:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option . TCPar [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 487
## Reductions:

State 487:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOPar eexpr_list_option TCPar

State 488:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro . eexpr TCCro [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 489
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 489:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro eexpr
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr . TCCro [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCCro shift to state 490
## Reductions:

State 490:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr TCCro . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TOCro eexpr TCCro

State 491:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TInc
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TInc . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TInc

State 492:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDot
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot . disj_ident [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 493
## Reductions:

State 493:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDot disj_ident
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot disj_ident . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDot disj_ident

State 494:
## Known stack suffix:
## postfix_expr(eexpr,invalid) TDec
## LR(1) items:
postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDec . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> postfix_expr(eexpr,invalid) TDec

State 495:
## Known stack suffix:
## invalid
## LR(1) items:
primary_expr(eexpr,invalid) -> invalid . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> invalid

State 496:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(eexpr,invalid) -> func_ident . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,invalid) -> func_ident

State 497:
## Known stack suffix:
## unary_op cast_expr(eexpr,invalid)
## LR(1) items:
unary_expr(eexpr,invalid) -> unary_op cast_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,invalid) -> unary_op cast_expr(eexpr,invalid)

State 498:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident -> pure_ident . [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TCBrace TAndLog TAnd ]
mident -> pure_ident . [ TDotDot ]
## Transitions:
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TCBrace TAndLog TAnd
--   reduce production ident -> pure_ident
-- On TDotDot
--   reduce production mident -> pure_ident

State 499:
## Known stack suffix:
## nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
empty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 500:
## Known stack suffix:
## nest_expressions_only
## LR(1) items:
initialize2 -> nest_expressions_only . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> nest_expressions_only

State 501:
## Known stack suffix:
## mident
## LR(1) items:
initialize2 -> mident . TDotDot initialize2 [ TComma TCBrace ]
## Transitions:
-- On TDotDot shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## mident TDotDot
## LR(1) items:
initialize2 -> mident TDotDot . initialize2 [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 540
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->

State 503:
## Known stack suffix:
## list(designator)
## LR(1) items:
initialize2 -> list(designator) . TEq initialize2 [ TComma TCBrace ]
## Transitions:
-- On TEq shift to state 504
## Reductions:

State 504:
## Known stack suffix:
## list(designator) TEq
## LR(1) items:
initialize2 -> list(designator) TEq . initialize2 [ TComma TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 505
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->

State 505:
## Known stack suffix:
## list(designator) TEq initialize2
## LR(1) items:
initialize2 -> list(designator) TEq initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> list(designator) TEq initialize2

State 506:
## Known stack suffix:
## designator
## LR(1) items:
list(designator) -> designator . list(designator) [ TEq ]
## Transitions:
-- On TOCro shift to state 444
-- On TDot shift to state 470
-- On list(designator) shift to state 507
-- On designator shift to state 506
## Reductions:
-- On TEq
--   reduce production list(designator) ->

State 507:
## Known stack suffix:
## designator list(designator)
## LR(1) items:
list(designator) -> designator list(designator) . [ TEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(designator) -> designator list(designator)

State 508:
## Known stack suffix:
## cast_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> cast_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,invalid) -> cast_expr(eexpr,invalid)

State 509:
## Known stack suffix:
## arith_expr(eexpr,invalid)
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TOrLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) . TMetaBinaryOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
initialize2 -> arith_expr(eexpr,invalid) . [ TComma TCBrace ]
## Transitions:
-- On TXor shift to state 510
-- On TShROp shift to state 512
-- On TShLOp shift to state 514
-- On TPlus shift to state 516
-- On TOrLog shift to state 518
-- On TOr shift to state 520
-- On TNotEq shift to state 522
-- On TMul shift to state 524
-- On TMinus shift to state 526
-- On TMetaBinaryOp shift to state 528
-- On TLogOp shift to state 530
-- On TEqEq shift to state 532
-- On TDmOp shift to state 534
-- On TAndLog shift to state 536
-- On TAnd shift to state 538
## Reductions:
-- On TComma TCBrace
--   reduce production initialize2 -> arith_expr(eexpr,invalid)

State 510:
## Known stack suffix:
## arith_expr(eexpr,invalid) TXor
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 511
## Reductions:

State 511:
## Known stack suffix:
## arith_expr(eexpr,invalid) TXor arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TXor TOrLog TOr TMetaBinaryOp TComma TCBrace TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TXor arith_expr_bis

State 512:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShROp
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShROp . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 513
## Reductions:

State 513:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShROp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShROp arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TShROp TShLOp TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShROp arith_expr_bis

State 514:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShLOp
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShLOp . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 515
## Reductions:

State 515:
## Known stack suffix:
## arith_expr(eexpr,invalid) TShLOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShLOp arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TShROp TShLOp TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TShLOp arith_expr_bis

State 516:
## Known stack suffix:
## arith_expr(eexpr,invalid) TPlus
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 517
## Reductions:

State 517:
## Known stack suffix:
## arith_expr(eexpr,invalid) TPlus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TPlus arith_expr_bis

State 518:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOrLog
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 519
## Reductions:

State 519:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOrLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAndLog shift to state 236
-- On TAnd shift to state 210
## Reductions:
-- On TOrLog TMetaBinaryOp TComma TCBrace
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOrLog arith_expr_bis

State 520:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOr
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 521
## Reductions:

State 521:
## Known stack suffix:
## arith_expr(eexpr,invalid) TOr arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TOrLog TOr TMetaBinaryOp TComma TCBrace TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TOr arith_expr_bis

State 522:
## Known stack suffix:
## arith_expr(eexpr,invalid) TNotEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 523
## Reductions:

State 523:
## Known stack suffix:
## arith_expr(eexpr,invalid) TNotEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TOrLog TOr TNotEq TMetaBinaryOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TNotEq arith_expr_bis

State 524:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMul
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 525
## Reductions:

State 525:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMul arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMul arith_expr_bis

State 526:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMinus
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 527
## Reductions:

State 527:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMinus arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMinus arith_expr_bis

State 528:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMetaBinaryOp
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMetaBinaryOp . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## arith_expr(eexpr,invalid) TMetaBinaryOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMetaBinaryOp arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMinus TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TMetaBinaryOp arith_expr_bis

State 530:
## Known stack suffix:
## arith_expr(eexpr,invalid) TLogOp
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TLogOp . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 531
## Reductions:

State 531:
## Known stack suffix:
## arith_expr(eexpr,invalid) TLogOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TLogOp arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TOrLog TOr TNotEq TMetaBinaryOp TLogOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TLogOp arith_expr_bis

State 532:
## Known stack suffix:
## arith_expr(eexpr,invalid) TEqEq
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## arith_expr(eexpr,invalid) TEqEq arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TOrLog TOr TNotEq TMetaBinaryOp TEqEq TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TEqEq arith_expr_bis

State 534:
## Known stack suffix:
## arith_expr(eexpr,invalid) TDmOp
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDmOp . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 535
## Reductions:

State 535:
## Known stack suffix:
## arith_expr(eexpr,invalid) TDmOp arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDmOp arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TDmOp arith_expr_bis

State 536:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAndLog
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAndLog arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TOrLog TMetaBinaryOp TComma TCBrace TAndLog
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAndLog arith_expr_bis

State 538:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAnd
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd . arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 539
## Reductions:

State 539:
## Known stack suffix:
## arith_expr(eexpr,invalid) TAnd arith_expr_bis
## LR(1) items:
arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd arith_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TOrLog TOr TMetaBinaryOp TComma TCBrace TAndLog TAnd
--   reduce production arith_expr(eexpr,invalid) -> arith_expr(eexpr,invalid) TAnd arith_expr_bis

State 540:
## Known stack suffix:
## mident TDotDot initialize2
## LR(1) items:
initialize2 -> mident TDotDot initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> mident TDotDot initialize2

State 541:
## Known stack suffix:
## TOBrace initialize_list
## LR(1) items:
initialize -> TOBrace initialize_list . TCBrace [ TPtVirg TLineEnd ]
## Transitions:
-- On TCBrace shift to state 542
## Reductions:

State 542:
## Known stack suffix:
## TOBrace initialize_list TCBrace
## LR(1) items:
initialize -> TOBrace initialize_list TCBrace . [ TPtVirg TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize -> TOBrace initialize_list TCBrace

State 543:
## Known stack suffix:
## initialize2
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . TComma [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 544
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2

State 544:
## Known stack suffix:
## initialize2 TComma
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma . [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma . nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 545
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->
-- On TCBrace
--   reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma

State 545:
## Known stack suffix:
## initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 546:
## Known stack suffix:
## edots_when(TEllipsis,initialize)
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) . [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) . TComma [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) . TComma continue_list(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 547
## Reductions:
-- On TCBrace
--   reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize)

State 547:
## Known stack suffix:
## edots_when(TEllipsis,initialize) TComma
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) TComma . [ TCBrace ]
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) TComma . continue_list(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 548
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 550
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On designator shift to state 506
-- On continue_list(initialize2,edots_when(TEllipsis,initialize)) shift to state 553
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->
-- On TCBrace
--   reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) TComma

State 548:
## Known stack suffix:
## TNothing
## LR(1) items:
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> TNothing . nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 549
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TEq
--   reduce production list(designator) ->

State 549:
## Known stack suffix:
## TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(initialize2,edots_when(TEllipsis,initialize)) -> TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 550:
## Known stack suffix:
## initialize2
## LR(1) items:
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . [ TCBrace ]
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . TComma [ TCBrace ]
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 . TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TComma shift to state 551
## Reductions:
-- On TCBrace
--   reduce production continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2

State 551:
## Known stack suffix:
## initialize2 TComma
## LR(1) items:
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma . [ TCBrace ]
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma . nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) [ TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 552
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma
-- On TEq
--   reduce production list(designator) ->

State 552:
## Known stack suffix:
## initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(initialize2,edots_when(TEllipsis,initialize)) -> initialize2 TComma nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 553:
## Known stack suffix:
## edots_when(TEllipsis,initialize) TComma continue_list(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) TComma continue_list(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> edots_when(TEllipsis,initialize) TComma continue_list(initialize2,edots_when(TEllipsis,initialize))

State 554:
## Known stack suffix:
## empty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
initialize_list -> empty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize_list -> empty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 555:
## Known stack suffix:
## TMetaInit
## LR(1) items:
initialize -> TMetaInit . [ TPtVirg TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize -> TMetaInit

State 556:
## Known stack suffix:
## TEllipsis TWhen TNotEq initialize
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize . TLineEnd [ TComma TCBrace ]
## Transitions:
-- On TLineEnd shift to state 557
## Reductions:

State 557:
## Known stack suffix:
## TEllipsis TWhen TNotEq initialize TLineEnd
## LR(1) items:
edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize TLineEnd . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production edots_when(TEllipsis,initialize) -> TEllipsis TWhen TNotEq initialize TLineEnd

State 558:
## Known stack suffix:
## eexpr
## LR(1) items:
initialize -> eexpr . [ TPtVirg TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize -> eexpr

State 559:
## Known stack suffix:
## TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))
## LR(1) items:
nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) -> TNothing nonempty_list_start(initialize2,edots_when(TEllipsis,initialize))

State 560:
## Known stack suffix:
## TOBrace initialize_list
## LR(1) items:
initialize2 -> TOBrace initialize_list . TCBrace [ TComma TCBrace ]
## Transitions:
-- On TCBrace shift to state 561
## Reductions:

State 561:
## Known stack suffix:
## TOBrace initialize_list TCBrace
## LR(1) items:
initialize2 -> TOBrace initialize_list TCBrace . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> TOBrace initialize_list TCBrace

State 562:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list
## LR(1) items:
postfix_expr(eexpr,invalid) -> TOPar ctype TCPar TOBrace initialize_list . TCBrace [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
-- On TCBrace shift to state 563
## Reductions:

State 563:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list TCBrace
## LR(1) items:
postfix_expr(eexpr,invalid) -> TOPar ctype TCPar TOBrace initialize_list TCBrace . [ TXor TShROp TShLOp TPtrOp TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TLogOp TInc TEqEq TDot TDmOp TDec TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,invalid) -> TOPar ctype TCPar TOBrace initialize_list TCBrace

State 564:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,invalid)
## LR(1) items:
cast_expr(eexpr,invalid) -> TOPar ctype TCPar cast_expr(eexpr,invalid) . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,invalid) -> TOPar ctype TCPar cast_expr(eexpr,invalid)

State 565:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar TOBrace initialize_list . TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 566
## Reductions:

State 566:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list TCBrace
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar TOBrace initialize_list TCBrace . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar TOBrace initialize_list TCBrace

State 567:
## Known stack suffix:
## TSizeof unary_expr_bis
## LR(1) items:
unary_expr(eexpr,invalid) -> TSizeof unary_expr_bis . [ TXor TShROp TShLOp TPlus TOrLog TOr TNotEq TMul TMinus TMetaBinaryOp TLogOp TEqEq TDmOp TComma TCBrace TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,invalid) -> TSizeof unary_expr_bis

State 568:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> TOPar ctype TCPar TOBrace initialize_list . TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCBrace shift to state 569
## Reductions:

State 569:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list TCBrace
## LR(1) items:
postfix_expr(eexpr,nest_expressions) -> TOPar ctype TCPar TOBrace initialize_list TCBrace . [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,nest_expressions) -> TOPar ctype TCPar TOBrace initialize_list TCBrace

State 570:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,nest_expressions)
## LR(1) items:
cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar cast_expr(eexpr,nest_expressions) . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,nest_expressions) -> TOPar ctype TCPar cast_expr(eexpr,nest_expressions)

State 571:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 572
## Reductions:

State 572:
## Known stack suffix:
## postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(eexpr,dot_expressions) -> postfix_expr(eexpr,dot_expressions) TOPar eexpr_list_option TCPar

State 573:
## Known stack suffix:
## unary_op cast_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> unary_op cast_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,dot_expressions) -> unary_op cast_expr(eexpr,dot_expressions)

State 574:
## Known stack suffix:
## unary_op cast_expr(eexpr,dot_expressions)
## LR(1) items:
unary_expr_bis -> unary_op cast_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr_bis -> unary_op cast_expr(eexpr,dot_expressions)

State 575:
## Known stack suffix:
## TDec unary_expr_bis
## LR(1) items:
unary_expr_bis -> TDec unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr_bis -> TDec unary_expr_bis

State 576:
## Known stack suffix:
## TInc unary_expr_bis
## LR(1) items:
unary_expr_bis -> TInc unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr_bis -> TInc unary_expr_bis

State 577:
## Known stack suffix:
## TDec unary_expr_bis
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TDec unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,dot_expressions) -> TDec unary_expr_bis

State 578:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 579
## Reductions:

State 579:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:

State 580:
## Known stack suffix:
## TInc unary_expr_bis
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TInc unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,dot_expressions) -> TInc unary_expr_bis

State 581:
## Known stack suffix:
## TOEllipsis expr_dots(TEllipsis)
## LR(1) items:
nest_expressions -> TOEllipsis expr_dots(TEllipsis) . TCEllipsis [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCEllipsis shift to state 582
## Reductions:

State 582:
## Known stack suffix:
## TOEllipsis expr_dots(TEllipsis) TCEllipsis
## LR(1) items:
nest_expressions -> TOEllipsis expr_dots(TEllipsis) TCEllipsis . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_expressions -> TOEllipsis expr_dots(TEllipsis) TCEllipsis

State 583:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr)
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr,eexpr) . TCPar0 [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 584
## Reductions:

State 584:
## Known stack suffix:
## TOPar0 midzero_list(eexpr,eexpr) TCPar0
## LR(1) items:
primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0 . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(eexpr,dot_expressions) -> TOPar0 midzero_list(eexpr,eexpr) TCPar0

State 585:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar cast_expr(eexpr,dot_expressions) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 586
## Reductions:

State 586:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . cast_expr(eexpr,dot_expressions) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 306
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 587
## Reductions:

State 587:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(eexpr,dot_expressions)
## LR(1) items:
cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar cast_expr(eexpr,dot_expressions) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(eexpr,dot_expressions) -> TOPar ctype TCPar cast_expr(eexpr,dot_expressions)

State 588:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar . ctype TCPar [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 589
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 589:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype . TCPar [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 590
## Reductions:

State 590:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TPtrOp TPlus TPCEllipsis TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar TCEllipsis TAndLog TAnd ]
unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype TCPar . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:
-- On TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd
--   reduce production unary_expr(eexpr,nest_expressions) -> TSizeof TOPar ctype TCPar

State 591:
## Known stack suffix:
## TSizeof unary_expr_bis
## LR(1) items:
unary_expr(eexpr,nest_expressions) -> TSizeof unary_expr_bis . [ TXor TWhy TShROp TShLOp TPlus TPCEllipsis TOrLog TOr TOpAssign TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TEqEq TEq TEllipsis TDmOp TComma TCPar TCEllipsis TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,nest_expressions) -> TSizeof unary_expr_bis

State 592:
## Known stack suffix:
## TPOEllipsis expr_dots(TEllipsis)
## LR(1) items:
nest_expressions -> TPOEllipsis expr_dots(TEllipsis) . TPCEllipsis [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPCEllipsis shift to state 593
## Reductions:

State 593:
## Known stack suffix:
## TPOEllipsis expr_dots(TEllipsis) TPCEllipsis
## LR(1) items:
nest_expressions -> TPOEllipsis expr_dots(TEllipsis) TPCEllipsis . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_expressions -> TPOEllipsis expr_dots(TEllipsis) TPCEllipsis

State 594:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr_bis -> TSizeof TOPar . ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 595
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 595:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr_bis -> TSizeof TOPar ctype . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 596
## Reductions:

State 596:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr_bis -> TSizeof TOPar ctype TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr_bis -> TSizeof TOPar ctype TCPar

State 597:
## Known stack suffix:
## TSizeof unary_expr_bis
## LR(1) items:
unary_expr_bis -> TSizeof unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr_bis -> TSizeof unary_expr_bis

State 598:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar . ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 599
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 599:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 600
## Reductions:

State 600:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(eexpr,dot_expressions) -> TSizeof TOPar ctype TCPar

State 601:
## Known stack suffix:
## TSizeof unary_expr_bis
## LR(1) items:
unary_expr(eexpr,dot_expressions) -> TSizeof unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDotDot TDmOp TComma TCPar0 TCPar TCEllipsis TCCro TCBrace TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(eexpr,dot_expressions) -> TSizeof unary_expr_bis

State 602:
## Known stack suffix:
## TOCro option(eexpr)
## LR(1) items:
array_dec -> TOCro option(eexpr) . TCCro [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
-- On TCCro shift to state 603
## Reductions:

State 603:
## Known stack suffix:
## TOCro option(eexpr) TCCro
## LR(1) items:
array_dec -> TOCro option(eexpr) TCCro . [ TPtVirg TOCro TEq TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_dec -> TOCro option(eexpr) TCCro

State 604:
## Known stack suffix:
## disj_ident list(array_dec)
## LR(1) items:
d_ident -> disj_ident list(array_dec) . [ TPtVirg TEq TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production d_ident -> disj_ident list(array_dec)

State 605:
## Known stack suffix:
## array_dec
## LR(1) items:
list(array_dec) -> array_dec . list(array_dec) [ TPtVirg TEq TComma TCPar ]
## Transitions:
-- On TOCro shift to state 129
-- On list(array_dec) shift to state 606
-- On array_dec shift to state 605
## Reductions:
-- On TPtVirg TEq TComma TCPar
--   reduce production list(array_dec) ->

State 606:
## Known stack suffix:
## array_dec list(array_dec)
## LR(1) items:
list(array_dec) -> array_dec list(array_dec) . [ TPtVirg TEq TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(array_dec) -> array_dec list(array_dec)

State 607:
## Known stack suffix:
## pure_ident_or_symbol d_ident
## LR(1) items:
struct_decl_one -> pure_ident_or_symbol d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TPtVirg shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
struct_decl_one -> pure_ident_or_symbol d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> pure_ident_or_symbol d_ident TPtVirg

State 609:
## Known stack suffix:
## pure_ident
## LR(1) items:
pure_ident_or_symbol -> pure_ident . [ TSymId TPtVirg TOPar0 TMetaId TMeta TIdent TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_symbol -> pure_ident

State 610:
## Known stack suffix:
## ctype
## LR(1) items:
struct_decl_one -> ctype . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
struct_decl_one -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 611
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 653
## Reductions:

State 611:
## Known stack suffix:
## ctype TOPar
## LR(1) items:
struct_decl_one -> ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TMul shift to state 612
## Reductions:

State 612:
## Known stack suffix:
## ctype TOPar TMul
## LR(1) items:
struct_decl_one -> ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## ctype TOPar TMul d_ident
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TCPar shift to state 614
## Reductions:

State 614:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TOPar shift to state 615
## Reductions:

State 615:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 650
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 616:
## Known stack suffix:
## TNothing
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TNothing . nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 649
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 617:
## Known stack suffix:
## TMetaParamList
## LR(1) items:
one_dec(name_opt_decl) -> TMetaParamList . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dec(name_opt_decl) -> TMetaParamList

State 618:
## Known stack suffix:
## TMetaParam
## LR(1) items:
decl -> TMetaParam . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> TMetaParam

State 619:
## Known stack suffix:
## TMeta
## LR(1) items:
decl -> TMeta . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> TMeta

State 620:
## Known stack suffix:
## TEllipsis
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis . [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis . TComma [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis . TComma continue_list(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 621
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis

State 621:
## Known stack suffix:
## TEllipsis TComma
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis TComma . [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis TComma . continue_list(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 622
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 645
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On decl shift to state 627
-- On ctype shift to state 628
-- On continue_list(one_dec(name_opt_decl),TEllipsis) shift to state 648
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis TComma

State 622:
## Known stack suffix:
## TNothing
## LR(1) items:
continue_list(one_dec(name_opt_decl),TEllipsis) -> TNothing . nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 644
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 623:
## Known stack suffix:
## one_dec(name_opt_decl)
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . TComma [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 624
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl)

State 624:
## Known stack suffix:
## one_dec(name_opt_decl) TComma
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma . [ TCPar ]
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma . nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 625
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma

State 625:
## Known stack suffix:
## one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis)

State 626:
## Known stack suffix:
## name_opt_decl
## LR(1) items:
one_dec(name_opt_decl) -> name_opt_decl . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dec(name_opt_decl) -> name_opt_decl

State 627:
## Known stack suffix:
## decl
## LR(1) items:
name_opt_decl -> decl . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production name_opt_decl -> decl

State 628:
## Known stack suffix:
## ctype
## LR(1) items:
decl -> ctype . disj_ident list(array_dec) [ TComma TCPar ]
decl -> ctype . [ TComma TCPar ]
decl -> ctype . TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> ctype . TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 629
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 642
## Reductions:
-- On TComma TCPar
--   reduce production decl -> ctype

State 629:
## Known stack suffix:
## ctype TOPar
## LR(1) items:
decl -> ctype TOPar . TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> ctype TOPar . TMul TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMul shift to state 630
## Reductions:

State 630:
## Known stack suffix:
## ctype TOPar TMul
## LR(1) items:
decl -> ctype TOPar TMul . disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
name_opt_decl -> ctype TOPar TMul . TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TCPar shift to state 631
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 637
## Reductions:

State 631:
## Known stack suffix:
## ctype TOPar TMul TCPar
## LR(1) items:
name_opt_decl -> ctype TOPar TMul TCPar . TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 632
## Reductions:

State 632:
## Known stack suffix:
## ctype TOPar TMul TCPar TOPar
## LR(1) items:
name_opt_decl -> ctype TOPar TMul TCPar TOPar . decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 635
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 633:
## Known stack suffix:
## nonempty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
empty_list_start(one_dec(name_opt_decl),TEllipsis) -> nonempty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) -> nonempty_list_start(one_dec(name_opt_decl),TEllipsis)

State 634:
## Known stack suffix:
## empty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
decl_list(name_opt_decl) -> empty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_list(name_opt_decl) -> empty_list_start(one_dec(name_opt_decl),TEllipsis)

State 635:
## Known stack suffix:
## ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
name_opt_decl -> ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) . TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 636
## Reductions:

State 636:
## Known stack suffix:
## ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
name_opt_decl -> ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production name_opt_decl -> ctype TOPar TMul TCPar TOPar decl_list(name_opt_decl) TCPar

State 637:
## Known stack suffix:
## ctype TOPar TMul disj_ident
## LR(1) items:
decl -> ctype TOPar TMul disj_ident . TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 638
## Reductions:

State 638:
## Known stack suffix:
## ctype TOPar TMul disj_ident TCPar
## LR(1) items:
decl -> ctype TOPar TMul disj_ident TCPar . TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TOPar shift to state 639
## Reductions:

State 639:
## Known stack suffix:
## ctype TOPar TMul disj_ident TCPar TOPar
## LR(1) items:
decl -> ctype TOPar TMul disj_ident TCPar TOPar . decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 640
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 640:
## Known stack suffix:
## ctype TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl -> ctype TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) . TCPar [ TComma TCPar ]
## Transitions:
-- On TCPar shift to state 641
## Reductions:

State 641:
## Known stack suffix:
## ctype TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl -> ctype TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> ctype TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar

State 642:
## Known stack suffix:
## ctype disj_ident
## LR(1) items:
decl -> ctype disj_ident . list(array_dec) [ TComma TCPar ]
## Transitions:
-- On TOCro shift to state 129
-- On list(array_dec) shift to state 643
-- On array_dec shift to state 605
## Reductions:
-- On TComma TCPar
--   reduce production list(array_dec) ->

State 643:
## Known stack suffix:
## ctype disj_ident list(array_dec)
## LR(1) items:
decl -> ctype disj_ident list(array_dec) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl -> ctype disj_ident list(array_dec)

State 644:
## Known stack suffix:
## TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
continue_list(one_dec(name_opt_decl),TEllipsis) -> TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(one_dec(name_opt_decl),TEllipsis) -> TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis)

State 645:
## Known stack suffix:
## one_dec(name_opt_decl)
## LR(1) items:
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . [ TCPar ]
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . TComma [ TCPar ]
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) . TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 646
## Reductions:
-- On TCPar
--   reduce production continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl)

State 646:
## Known stack suffix:
## one_dec(name_opt_decl) TComma
## LR(1) items:
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma . [ TCPar ]
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma . nonempty_list_start(one_dec(name_opt_decl),TEllipsis) [ TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 647
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma

State 647:
## Known stack suffix:
## one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(one_dec(name_opt_decl),TEllipsis) -> one_dec(name_opt_decl) TComma nonempty_list_start(one_dec(name_opt_decl),TEllipsis)

State 648:
## Known stack suffix:
## TEllipsis TComma continue_list(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis TComma continue_list(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TEllipsis TComma continue_list(one_dec(name_opt_decl),TEllipsis)

State 649:
## Known stack suffix:
## TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis)
## LR(1) items:
nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(one_dec(name_opt_decl),TEllipsis) -> TNothing nonempty_list_start(one_dec(name_opt_decl),TEllipsis)

State 650:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TCPar shift to state 651
## Reductions:

State 651:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TPtVirg shift to state 652
## Reductions:

State 652:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
struct_decl_one -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 653:
## Known stack suffix:
## ctype d_ident
## LR(1) items:
struct_decl_one -> ctype d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TPtVirg shift to state 654
## Reductions:

State 654:
## Known stack suffix:
## ctype d_ident TPtVirg
## LR(1) items:
struct_decl_one -> ctype d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> ctype d_ident TPtVirg

State 655:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ TSymId TOPar0 TOPar TMid0 TMetaId TMeta TIdent TCPar0 ]
struct_decl_one -> const_vol . pure_ident_or_symbol d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 656
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 656:
## Known stack suffix:
## const_vol pure_ident_or_symbol
## LR(1) items:
struct_decl_one -> const_vol pure_ident_or_symbol . d_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 657
## Reductions:

State 657:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident
## LR(1) items:
struct_decl_one -> const_vol pure_ident_or_symbol d_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TPtVirg shift to state 658
## Reductions:

State 658:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
struct_decl_one -> const_vol pure_ident_or_symbol d_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> const_vol pure_ident_or_symbol d_ident TPtVirg

State 659:
## Known stack suffix:
## struct_decl_one
## LR(1) items:
struct_decl -> struct_decl_one . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMetaType TMetaFieldList TMetaField TMeta TIdent TEllipsis TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl -> struct_decl_one

State 660:
## Known stack suffix:
## struct_decl_list_start
## LR(1) items:
struct_decl_list -> struct_decl_list_start . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_list -> struct_decl_list_start

State 661:
## Known stack suffix:
## struct_or_union TOBrace struct_decl_list
## LR(1) items:
non_signable_types -> struct_or_union TOBrace struct_decl_list . TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 662
## Reductions:

State 662:
## Known stack suffix:
## struct_or_union TOBrace struct_decl_list TCBrace
## LR(1) items:
non_signable_types -> struct_or_union TOBrace struct_decl_list TCBrace . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> struct_or_union TOBrace struct_decl_list TCBrace

State 663:
## Known stack suffix:
## struct_decl
## LR(1) items:
struct_decl_list_start -> struct_decl . [ TCBrace ]
struct_decl_list_start -> struct_decl . struct_decl_list_start [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On TEllipsis shift to state 121
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl_list_start shift to state 664
-- On struct_decl shift to state 663
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On edots_when(TEllipsis,struct_decl_one) shift to state 665
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:
-- On TCBrace
--   reduce production struct_decl_list_start -> struct_decl

State 664:
## Known stack suffix:
## struct_decl struct_decl_list_start
## LR(1) items:
struct_decl_list_start -> struct_decl struct_decl_list_start . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_list_start -> struct_decl struct_decl_list_start

State 665:
## Known stack suffix:
## edots_when(TEllipsis,struct_decl_one)
## LR(1) items:
struct_decl_list_start -> edots_when(TEllipsis,struct_decl_one) . continue_struct_decl_list [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl shift to state 666
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On ctype shift to state 610
-- On continue_struct_decl_list shift to state 668
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:
-- On TCBrace
--   reduce production continue_struct_decl_list ->

State 666:
## Known stack suffix:
## struct_decl
## LR(1) items:
continue_struct_decl_list -> struct_decl . struct_decl_list_start [ TCBrace ]
continue_struct_decl_list -> struct_decl . [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On TEllipsis shift to state 121
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl_list_start shift to state 667
-- On struct_decl shift to state 663
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On edots_when(TEllipsis,struct_decl_one) shift to state 665
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:
-- On TCBrace
--   reduce production continue_struct_decl_list -> struct_decl

State 667:
## Known stack suffix:
## struct_decl struct_decl_list_start
## LR(1) items:
continue_struct_decl_list -> struct_decl struct_decl_list_start . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_struct_decl_list -> struct_decl struct_decl_list_start

State 668:
## Known stack suffix:
## edots_when(TEllipsis,struct_decl_one) continue_struct_decl_list
## LR(1) items:
struct_decl_list_start -> edots_when(TEllipsis,struct_decl_one) continue_struct_decl_list . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_list_start -> edots_when(TEllipsis,struct_decl_one) continue_struct_decl_list

State 669:
## Known stack suffix:
## struct_or_union type_ident
## LR(1) items:
non_signable_types -> struct_or_union type_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
non_signable_types -> struct_or_union type_ident . TOBrace struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TOBrace shift to state 670
## Reductions:
-- On Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF
--   reduce production non_signable_types -> struct_or_union type_ident

State 670:
## Known stack suffix:
## struct_or_union type_ident TOBrace
## LR(1) items:
non_signable_types -> struct_or_union type_ident TOBrace . struct_decl_list TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TNothing shift to state 120
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On TEllipsis shift to state 121
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 659
-- On struct_decl_list_start shift to state 660
-- On struct_decl_list shift to state 671
-- On struct_decl shift to state 663
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On edots_when(TEllipsis,struct_decl_one) shift to state 665
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 671:
## Known stack suffix:
## struct_or_union type_ident TOBrace struct_decl_list
## LR(1) items:
non_signable_types -> struct_or_union type_ident TOBrace struct_decl_list . TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 672
## Reductions:

State 672:
## Known stack suffix:
## struct_or_union type_ident TOBrace struct_decl_list TCBrace
## LR(1) items:
non_signable_types -> struct_or_union type_ident TOBrace struct_decl_list TCBrace . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> struct_or_union type_ident TOBrace struct_decl_list TCBrace

State 673:
## Known stack suffix:
## disj_ident
## LR(1) items:
type_ident -> disj_ident . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TOBrace TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_ident -> disj_ident

State 674:
## Known stack suffix:
## struct_decl_one
## LR(1) items:
midzero_list(struct_decl_one,struct_decl_one) -> struct_decl_one . list(mzl(struct_decl_one)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 675
-- On mzl(struct_decl_one) shift to state 677
-- On list(mzl(struct_decl_one)) shift to state 679
## Reductions:
-- On TCPar0
--   reduce production list(mzl(struct_decl_one)) ->

State 675:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(struct_decl_one) -> TMid0 . struct_decl_one [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 113
-- On TMetaType shift to state 110
-- On TMetaFieldList shift to state 114
-- On TMetaField shift to state 115
-- On TMeta shift to state 116
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On struct_decl_one shift to state 676
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 127
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On ctype shift to state 610
-- On const_vol shift to state 655
-- On all_basic_types shift to state 288
## Reductions:

State 676:
## Known stack suffix:
## TMid0 struct_decl_one
## LR(1) items:
mzl(struct_decl_one) -> TMid0 struct_decl_one . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(struct_decl_one) -> TMid0 struct_decl_one

State 677:
## Known stack suffix:
## mzl(struct_decl_one)
## LR(1) items:
list(mzl(struct_decl_one)) -> mzl(struct_decl_one) . list(mzl(struct_decl_one)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 675
-- On mzl(struct_decl_one) shift to state 677
-- On list(mzl(struct_decl_one)) shift to state 678
## Reductions:
-- On TCPar0
--   reduce production list(mzl(struct_decl_one)) ->

State 678:
## Known stack suffix:
## mzl(struct_decl_one) list(mzl(struct_decl_one))
## LR(1) items:
list(mzl(struct_decl_one)) -> mzl(struct_decl_one) list(mzl(struct_decl_one)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(struct_decl_one)) -> mzl(struct_decl_one) list(mzl(struct_decl_one))

State 679:
## Known stack suffix:
## struct_decl_one list(mzl(struct_decl_one))
## LR(1) items:
midzero_list(struct_decl_one,struct_decl_one) -> struct_decl_one list(mzl(struct_decl_one)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(struct_decl_one,struct_decl_one) -> struct_decl_one list(mzl(struct_decl_one))

State 680:
## Known stack suffix:
## TOPar0 midzero_list(struct_decl_one,struct_decl_one)
## LR(1) items:
struct_decl_one -> TOPar0 midzero_list(struct_decl_one,struct_decl_one) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
-- On TCPar0 shift to state 681
## Reductions:

State 681:
## Known stack suffix:
## TOPar0 midzero_list(struct_decl_one,struct_decl_one) TCPar0
## LR(1) items:
struct_decl_one -> TOPar0 midzero_list(struct_decl_one,struct_decl_one) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TSymId TRuleName TOPar0 TNothing TMid0 TMetaType TMetaFieldList TMetaField TMeta TLineEnd TIdent TEllipsis TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_decl_one -> TOPar0 midzero_list(struct_decl_one,struct_decl_one) TCPar0

State 682:
## Known stack suffix:
## ctype
## LR(1) items:
midzero_list(ctype,ctype) -> ctype . list(mzl(ctype)) [ TCPar0 ]
struct_decl_one -> ctype . d_ident TPtVirg [ TMid0 TCPar0 ]
struct_decl_one -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TMid0 TCPar0 ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 611
-- On TMid0 shift to state 277
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mzl(ctype) shift to state 290
-- On mident shift to state 55
-- On list(mzl(ctype)) shift to state 292
-- On disj_ident shift to state 128
-- On d_ident shift to state 653
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 683:
## Known stack suffix:
## TMetaType TOBrace struct_decl_list
## LR(1) items:
non_signable_types -> TMetaType TOBrace struct_decl_list . TCBrace [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 684
## Reductions:

State 684:
## Known stack suffix:
## TMetaType TOBrace struct_decl_list TCBrace
## LR(1) items:
non_signable_types -> TMetaType TOBrace struct_decl_list TCBrace . [ Tstatic Tregister Tlist Tinline Textern Tauto Tattr TWords TTypedef TType TSymbol TSymId TStatement TRuleName TRightIso TPure TPtVirg TPosition TParameter TOPar0 TOPar TOCro TName TMul TMid0 TMetaType TMetaLocalFunc TMetaId TMetaFunc TMeta TLocal TLineEnd TIterator TIso TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFunDecl TFresh TExpression TError TDeclarer TContext TConstant TComma TCPar0 TCPar TCBrace TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_signable_types -> TMetaType TOBrace struct_decl_list TCBrace

State 685:
## Known stack suffix:
## TIsoType ctype
## LR(1) items:
iso_main -> TIsoType ctype . list(iso(ctype)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 686
-- On TIso shift to state 688
-- On list(iso(ctype)) shift to state 690
-- On iso(ctype) shift to state 692
## Reductions:
-- On EOF
--   reduce production list(iso(ctype)) ->

State 686:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(ctype) -> TRightIso . ctype [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 687
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 687:
## Known stack suffix:
## TRightIso ctype
## LR(1) items:
iso(ctype) -> TRightIso ctype . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(ctype) -> TRightIso ctype

State 688:
## Known stack suffix:
## TIso
## LR(1) items:
iso(ctype) -> TIso . ctype [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 689
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 689:
## Known stack suffix:
## TIso ctype
## LR(1) items:
iso(ctype) -> TIso ctype . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(ctype) -> TIso ctype

State 690:
## Known stack suffix:
## TIsoType ctype list(iso(ctype))
## LR(1) items:
iso_main -> TIsoType ctype list(iso(ctype)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 691
## Reductions:

State 691:
## Known stack suffix:
## TIsoType ctype list(iso(ctype)) EOF
## LR(1) items:
iso_main -> TIsoType ctype list(iso(ctype)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoType ctype list(iso(ctype)) EOF

State 692:
## Known stack suffix:
## iso(ctype)
## LR(1) items:
list(iso(ctype)) -> iso(ctype) . list(iso(ctype)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 686
-- On TIso shift to state 688
-- On list(iso(ctype)) shift to state 693
-- On iso(ctype) shift to state 692
## Reductions:
-- On EOF
--   reduce production list(iso(ctype)) ->

State 693:
## Known stack suffix:
## iso(ctype) list(iso(ctype))
## LR(1) items:
list(iso(ctype)) -> iso(ctype) list(iso(ctype)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(iso(ctype)) -> iso(ctype) list(iso(ctype))

State 694:
## Known stack suffix:
## TIsoTopLevel
## LR(1) items:
iso_main -> TIsoTopLevel . nest_start list(iso(nest_start)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1385
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 695:
## Known stack suffix:
## Ttypedef
## LR(1) items:
decl_var -> Ttypedef . typedef_ctype separated_nonempty_list(TComma,typedef_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 696
-- On TMetaType shift to state 110
-- On TMeta shift to state 707
-- On typedef_ctype shift to state 708
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On const_vol shift to state 717
-- On all_basic_types shift to state 722
## Reductions:

State 696:
## Known stack suffix:
## TOPar0
## LR(1) items:
typedef_ctype -> TOPar0 . midzero_list(mctype,mctype) TCPar0 [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMeta shift to state 697
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On midzero_list(mctype,mctype) shift to state 698
-- On mctype shift to state 700
-- On ctype shift to state 703
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 697:
## Known stack suffix:
## TMeta
## LR(1) items:
mctype -> TMeta . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mctype -> TMeta

State 698:
## Known stack suffix:
## TOPar0 midzero_list(mctype,mctype)
## LR(1) items:
typedef_ctype -> TOPar0 midzero_list(mctype,mctype) . TCPar0 [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TCPar0 shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## TOPar0 midzero_list(mctype,mctype) TCPar0
## LR(1) items:
typedef_ctype -> TOPar0 midzero_list(mctype,mctype) TCPar0 . [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ctype -> TOPar0 midzero_list(mctype,mctype) TCPar0

State 700:
## Known stack suffix:
## mctype
## LR(1) items:
midzero_list(mctype,mctype) -> mctype . list(mzl(mctype)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 701
-- On mzl(mctype) shift to state 704
-- On list(mzl(mctype)) shift to state 706
## Reductions:
-- On TCPar0
--   reduce production list(mzl(mctype)) ->

State 701:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(mctype) -> TMid0 . mctype [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMeta shift to state 697
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On mctype shift to state 702
-- On ctype shift to state 703
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 702:
## Known stack suffix:
## TMid0 mctype
## LR(1) items:
mzl(mctype) -> TMid0 mctype . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(mctype) -> TMid0 mctype

State 703:
## Known stack suffix:
## ctype
## LR(1) items:
mctype -> ctype . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mctype -> ctype

State 704:
## Known stack suffix:
## mzl(mctype)
## LR(1) items:
list(mzl(mctype)) -> mzl(mctype) . list(mzl(mctype)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 701
-- On mzl(mctype) shift to state 704
-- On list(mzl(mctype)) shift to state 705
## Reductions:
-- On TCPar0
--   reduce production list(mzl(mctype)) ->

State 705:
## Known stack suffix:
## mzl(mctype) list(mzl(mctype))
## LR(1) items:
list(mzl(mctype)) -> mzl(mctype) list(mzl(mctype)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(mctype)) -> mzl(mctype) list(mzl(mctype))

State 706:
## Known stack suffix:
## mctype list(mzl(mctype))
## LR(1) items:
midzero_list(mctype,mctype) -> mctype list(mzl(mctype)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(mctype,mctype) -> mctype list(mzl(mctype))

State 707:
## Known stack suffix:
## TMeta
## LR(1) items:
typedef_ctype -> TMeta . [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ctype -> TMeta

State 708:
## Known stack suffix:
## Ttypedef typedef_ctype
## LR(1) items:
decl_var -> Ttypedef typedef_ctype . separated_nonempty_list(TComma,typedef_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 112
-- On TMetaType shift to state 709
-- On TMeta shift to state 710
-- On TIdent shift to state 2
-- On typedef_ident shift to state 711
-- On separated_nonempty_list(TComma,typedef_ident) shift to state 715
-- On pure_ident_or_symbol shift to state 714
-- On pure_ident shift to state 609
## Reductions:

State 709:
## Known stack suffix:
## TMetaType
## LR(1) items:
typedef_ident -> TMetaType . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ident -> TMetaType

State 710:
## Known stack suffix:
## TMeta
## LR(1) items:
typedef_ident -> TMeta . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ident -> TMeta

State 711:
## Known stack suffix:
## typedef_ident
## LR(1) items:
separated_nonempty_list(TComma,typedef_ident) -> typedef_ident . [ TPtVirg ]
separated_nonempty_list(TComma,typedef_ident) -> typedef_ident . TComma separated_nonempty_list(TComma,typedef_ident) [ TPtVirg ]
## Transitions:
-- On TComma shift to state 712
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,typedef_ident) -> typedef_ident

State 712:
## Known stack suffix:
## typedef_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,typedef_ident) -> typedef_ident TComma . separated_nonempty_list(TComma,typedef_ident) [ TPtVirg ]
## Transitions:
-- On TSymId shift to state 112
-- On TMetaType shift to state 709
-- On TMeta shift to state 710
-- On TIdent shift to state 2
-- On typedef_ident shift to state 711
-- On separated_nonempty_list(TComma,typedef_ident) shift to state 713
-- On pure_ident_or_symbol shift to state 714
-- On pure_ident shift to state 609
## Reductions:

State 713:
## Known stack suffix:
## typedef_ident TComma separated_nonempty_list(TComma,typedef_ident)
## LR(1) items:
separated_nonempty_list(TComma,typedef_ident) -> typedef_ident TComma separated_nonempty_list(TComma,typedef_ident) . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,typedef_ident) -> typedef_ident TComma separated_nonempty_list(TComma,typedef_ident)

State 714:
## Known stack suffix:
## pure_ident_or_symbol
## LR(1) items:
typedef_ident -> pure_ident_or_symbol . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ident -> pure_ident_or_symbol

State 715:
## Known stack suffix:
## Ttypedef typedef_ctype separated_nonempty_list(TComma,typedef_ident)
## LR(1) items:
decl_var -> Ttypedef typedef_ctype separated_nonempty_list(TComma,typedef_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 716
## Reductions:

State 716:
## Known stack suffix:
## Ttypedef typedef_ctype separated_nonempty_list(TComma,typedef_ident) TPtVirg
## LR(1) items:
decl_var -> Ttypedef typedef_ctype separated_nonempty_list(TComma,typedef_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> Ttypedef typedef_ctype separated_nonempty_list(TComma,typedef_ident) TPtVirg

State 717:
## Known stack suffix:
## const_vol
## LR(1) items:
typedef_ctype -> const_vol . all_basic_types list(TMul) [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 718
## Reductions:

State 718:
## Known stack suffix:
## const_vol all_basic_types
## LR(1) items:
typedef_ctype -> const_vol all_basic_types . list(TMul) [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 721
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 719:
## Known stack suffix:
## TMul
## LR(1) items:
list(TMul) -> TMul . list(TMul) [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 720
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 720:
## Known stack suffix:
## TMul list(TMul)
## LR(1) items:
list(TMul) -> TMul list(TMul) . [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(TMul) -> TMul list(TMul)

State 721:
## Known stack suffix:
## const_vol all_basic_types list(TMul)
## LR(1) items:
typedef_ctype -> const_vol all_basic_types list(TMul) . [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ctype -> const_vol all_basic_types list(TMul)

State 722:
## Known stack suffix:
## all_basic_types
## LR(1) items:
typedef_ctype -> all_basic_types . list(TMul) [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 723
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 723:
## Known stack suffix:
## all_basic_types list(TMul)
## LR(1) items:
typedef_ctype -> all_basic_types list(TMul) . [ Tlist TWords TTypedef TType TSymbol TSymId TStatement TRuleName TPure TPosition TParameter TOCro TName TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_ctype -> all_basic_types list(TMul)

State 724:
## Known stack suffix:
## Tstatic
## LR(1) items:
storage -> Tstatic . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TTypeId TSymId TRuleName TOPar0 TMetaType TMetaDeclarer TIdent TFunDecl TDeclarerId ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage -> Tstatic

State 725:
## Known stack suffix:
## Tregister
## LR(1) items:
storage -> Tregister . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TTypeId TSymId TRuleName TOPar0 TMetaType TMetaDeclarer TIdent TFunDecl TDeclarerId ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage -> Tregister

State 726:
## Known stack suffix:
## Tinline
## LR(1) items:
funproto -> Tinline . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> Tinline . storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 729
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 750
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 727:
## Known stack suffix:
## Textern
## LR(1) items:
storage -> Textern . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TTypeId TSymId TRuleName TOPar0 TMetaType TMetaDeclarer TIdent TFunDecl TDeclarerId ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage -> Textern

State 728:
## Known stack suffix:
## Tauto
## LR(1) items:
storage -> Tauto . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TTypeId TSymId TRuleName TOPar0 TMetaType TMetaDeclarer TIdent TFunDecl TDeclarerId ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage -> Tauto

State 729:
## Known stack suffix:
## Tinline storage
## LR(1) items:
funproto -> Tinline storage . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 730
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 730:
## Known stack suffix:
## Tinline storage ctype
## LR(1) items:
funproto -> Tinline storage ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 733
-- On disj_ident shift to state 749
## Reductions:

State 731:
## Known stack suffix:
## TMetaLocalFunc
## LR(1) items:
fn_ident -> TMetaLocalFunc . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fn_ident -> TMetaLocalFunc

State 732:
## Known stack suffix:
## TMetaFunc
## LR(1) items:
fn_ident -> TMetaFunc . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fn_ident -> TMetaFunc

State 733:
## Known stack suffix:
## Tinline storage ctype fn_ident
## LR(1) items:
funproto -> Tinline storage ctype fn_ident . TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 734
## Reductions:

State 734:
## Known stack suffix:
## Tinline storage ctype fn_ident TOPar
## LR(1) items:
funproto -> Tinline storage ctype fn_ident TOPar . arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) shift to state 738
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 745
-- On arg_list(name_opt_decl) shift to state 746
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) ->

State 735:
## Known stack suffix:
## TVAEllipsis
## LR(1) items:
argorellipsis(one_arg(name_opt_decl)) -> TVAEllipsis . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(name_opt_decl)) -> TVAEllipsis

State 736:
## Known stack suffix:
## TMetaParamList
## LR(1) items:
one_arg(name_opt_decl) -> TMetaParamList . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_arg(name_opt_decl) -> TMetaParamList

State 737:
## Known stack suffix:
## TEllipsis
## LR(1) items:
argorellipsis(one_arg(name_opt_decl)) -> TEllipsis . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(name_opt_decl)) -> TEllipsis

State 738:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl)))
## LR(1) items:
arg_list(name_opt_decl) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) . [ TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) . TComma argorellipsis(one_arg(name_opt_decl)) [ TComma TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) . TComma TNothing argorellipsis(one_arg(name_opt_decl)) [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 739
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl)))

State 739:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma . argorellipsis(one_arg(name_opt_decl)) [ TComma TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma . TNothing argorellipsis(one_arg(name_opt_decl)) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 740
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 744
-- On all_basic_types shift to state 288
## Reductions:

State 740:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma TNothing
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma TNothing . argorellipsis(one_arg(name_opt_decl)) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 743
-- On all_basic_types shift to state 288
## Reductions:

State 741:
## Known stack suffix:
## one_arg(name_opt_decl)
## LR(1) items:
argorellipsis(one_arg(name_opt_decl)) -> one_arg(name_opt_decl) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(name_opt_decl)) -> one_arg(name_opt_decl)

State 742:
## Known stack suffix:
## name_opt_decl
## LR(1) items:
one_arg(name_opt_decl) -> name_opt_decl . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_arg(name_opt_decl) -> name_opt_decl

State 743:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma TNothing argorellipsis(one_arg(name_opt_decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma TNothing argorellipsis(one_arg(name_opt_decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma TNothing argorellipsis(one_arg(name_opt_decl))

State 744:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma argorellipsis(one_arg(name_opt_decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma argorellipsis(one_arg(name_opt_decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) TComma argorellipsis(one_arg(name_opt_decl))

State 745:
## Known stack suffix:
## argorellipsis(one_arg(name_opt_decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> argorellipsis(one_arg(name_opt_decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) -> argorellipsis(one_arg(name_opt_decl))

State 746:
## Known stack suffix:
## Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl)
## LR(1) items:
funproto -> Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 747
## Reductions:

State 747:
## Known stack suffix:
## Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar
## LR(1) items:
funproto -> Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 748
## Reductions:

State 748:
## Known stack suffix:
## Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
funproto -> Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funproto -> Tinline storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg

State 749:
## Known stack suffix:
## disj_ident
## LR(1) items:
fn_ident -> disj_ident . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fn_ident -> disj_ident

State 750:
## Known stack suffix:
## Tinline ctype
## LR(1) items:
funproto -> Tinline ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 751
-- On disj_ident shift to state 749
## Reductions:

State 751:
## Known stack suffix:
## Tinline ctype fn_ident
## LR(1) items:
funproto -> Tinline ctype fn_ident . TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 752
## Reductions:

State 752:
## Known stack suffix:
## Tinline ctype fn_ident TOPar
## LR(1) items:
funproto -> Tinline ctype fn_ident TOPar . arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) shift to state 738
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 745
-- On arg_list(name_opt_decl) shift to state 753
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) ->

State 753:
## Known stack suffix:
## Tinline ctype fn_ident TOPar arg_list(name_opt_decl)
## LR(1) items:
funproto -> Tinline ctype fn_ident TOPar arg_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 754
## Reductions:

State 754:
## Known stack suffix:
## Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar
## LR(1) items:
funproto -> Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 755
## Reductions:

State 755:
## Known stack suffix:
## Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
funproto -> Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funproto -> Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg

State 756:
## Known stack suffix:
## Texec
## LR(1) items:
statement -> Texec . TIdent exec_list TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TIdent shift to state 757
## Reductions:

State 757:
## Known stack suffix:
## Texec TIdent
## LR(1) items:
statement -> Texec TIdent . exec_list TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 758
-- On TWhy shift to state 759
-- On TShROp shift to state 760
-- On TShLOp shift to state 761
-- On TPlus shift to state 762
-- On TOrLog shift to state 763
-- On TOr shift to state 764
-- On TOPar shift to state 765
-- On TOCro shift to state 766
-- On TOBrace shift to state 767
-- On TNotEq shift to state 768
-- On TMul shift to state 769
-- On TMinus shift to state 770
-- On TLogOp shift to state 771
-- On TIf shift to state 772
-- On TIdent shift to state 773
-- On TEqEq shift to state 781
-- On TEq shift to state 782
-- On TElse shift to state 783
-- On TEllipsis shift to state 784
-- On TDotDot shift to state 785
-- On TDmOp shift to state 797
-- On TCPar shift to state 798
-- On TCCro shift to state 799
-- On TCBrace shift to state 800
-- On TBang shift to state 801
-- On TAndLog shift to state 802
-- On TAnd shift to state 803
-- On token shift to state 804
-- On exec_list shift to state 809
## Reductions:
-- On TPtVirg
--   reduce production exec_list ->

State 758:
## Known stack suffix:
## TXor
## LR(1) items:
token -> TXor . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TXor

State 759:
## Known stack suffix:
## TWhy
## LR(1) items:
token -> TWhy . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TWhy

State 760:
## Known stack suffix:
## TShROp
## LR(1) items:
token -> TShROp . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TShROp

State 761:
## Known stack suffix:
## TShLOp
## LR(1) items:
token -> TShLOp . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TShLOp

State 762:
## Known stack suffix:
## TPlus
## LR(1) items:
token -> TPlus . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TPlus

State 763:
## Known stack suffix:
## TOrLog
## LR(1) items:
token -> TOrLog . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TOrLog

State 764:
## Known stack suffix:
## TOr
## LR(1) items:
token -> TOr . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TOr

State 765:
## Known stack suffix:
## TOPar
## LR(1) items:
token -> TOPar . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TOPar

State 766:
## Known stack suffix:
## TOCro
## LR(1) items:
token -> TOCro . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TOCro

State 767:
## Known stack suffix:
## TOBrace
## LR(1) items:
token -> TOBrace . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TOBrace

State 768:
## Known stack suffix:
## TNotEq
## LR(1) items:
token -> TNotEq . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TNotEq

State 769:
## Known stack suffix:
## TMul
## LR(1) items:
token -> TMul . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TMul

State 770:
## Known stack suffix:
## TMinus
## LR(1) items:
token -> TMinus . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TMinus

State 771:
## Known stack suffix:
## TLogOp
## LR(1) items:
token -> TLogOp . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TLogOp

State 772:
## Known stack suffix:
## TIf
## LR(1) items:
token -> TIf . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TIf

State 773:
## Known stack suffix:
## TIdent
## LR(1) items:
exec_list -> TIdent . exec_ident2 exec_list [ TPtVirg ]
## Transitions:
-- On TPtrOp shift to state 774
-- On TDot shift to state 776
-- On exec_ident2 shift to state 780
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident2 ->

State 774:
## Known stack suffix:
## TPtrOp
## LR(1) items:
exec_ident2 -> TPtrOp . TIdent exec_ident2 [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TIdent shift to state 775
## Reductions:

State 775:
## Known stack suffix:
## TPtrOp TIdent
## LR(1) items:
exec_ident2 -> TPtrOp TIdent . exec_ident2 [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 774
-- On TDot shift to state 776
-- On exec_ident2 shift to state 779
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident2 ->

State 776:
## Known stack suffix:
## TDot
## LR(1) items:
exec_ident2 -> TDot . TIdent exec_ident2 [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TIdent shift to state 777
## Reductions:

State 777:
## Known stack suffix:
## TDot TIdent
## LR(1) items:
exec_ident2 -> TDot TIdent . exec_ident2 [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 774
-- On TDot shift to state 776
-- On exec_ident2 shift to state 778
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident2 ->

State 778:
## Known stack suffix:
## TDot TIdent exec_ident2
## LR(1) items:
exec_ident2 -> TDot TIdent exec_ident2 . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_ident2 -> TDot TIdent exec_ident2

State 779:
## Known stack suffix:
## TPtrOp TIdent exec_ident2
## LR(1) items:
exec_ident2 -> TPtrOp TIdent exec_ident2 . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_ident2 -> TPtrOp TIdent exec_ident2

State 780:
## Known stack suffix:
## TIdent exec_ident2
## LR(1) items:
exec_list -> TIdent exec_ident2 . exec_list [ TPtVirg ]
## Transitions:
-- On TXor shift to state 758
-- On TWhy shift to state 759
-- On TShROp shift to state 760
-- On TShLOp shift to state 761
-- On TPlus shift to state 762
-- On TOrLog shift to state 763
-- On TOr shift to state 764
-- On TOPar shift to state 765
-- On TOCro shift to state 766
-- On TOBrace shift to state 767
-- On TNotEq shift to state 768
-- On TMul shift to state 769
-- On TMinus shift to state 770
-- On TLogOp shift to state 771
-- On TIf shift to state 772
-- On TIdent shift to state 773
-- On TEqEq shift to state 781
-- On TEq shift to state 782
-- On TElse shift to state 783
-- On TEllipsis shift to state 784
-- On TDotDot shift to state 785
-- On TDmOp shift to state 797
-- On TCPar shift to state 798
-- On TCCro shift to state 799
-- On TCBrace shift to state 800
-- On TBang shift to state 801
-- On TAndLog shift to state 802
-- On TAnd shift to state 803
-- On token shift to state 804
-- On exec_list shift to state 808
## Reductions:
-- On TPtVirg
--   reduce production exec_list ->

State 781:
## Known stack suffix:
## TEqEq
## LR(1) items:
token -> TEqEq . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TEqEq

State 782:
## Known stack suffix:
## TEq
## LR(1) items:
token -> TEq . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TEq

State 783:
## Known stack suffix:
## TElse
## LR(1) items:
token -> TElse . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TElse

State 784:
## Known stack suffix:
## TEllipsis
## LR(1) items:
exec_list -> TEllipsis . exec_list [ TPtVirg ]
## Transitions:
-- On TXor shift to state 758
-- On TWhy shift to state 759
-- On TShROp shift to state 760
-- On TShLOp shift to state 761
-- On TPlus shift to state 762
-- On TOrLog shift to state 763
-- On TOr shift to state 764
-- On TOPar shift to state 765
-- On TOCro shift to state 766
-- On TOBrace shift to state 767
-- On TNotEq shift to state 768
-- On TMul shift to state 769
-- On TMinus shift to state 770
-- On TLogOp shift to state 771
-- On TIf shift to state 772
-- On TIdent shift to state 773
-- On TEqEq shift to state 781
-- On TEq shift to state 782
-- On TElse shift to state 783
-- On TEllipsis shift to state 784
-- On TDotDot shift to state 785
-- On TDmOp shift to state 797
-- On TCPar shift to state 798
-- On TCCro shift to state 799
-- On TCBrace shift to state 800
-- On TBang shift to state 801
-- On TAndLog shift to state 802
-- On TAnd shift to state 803
-- On token shift to state 804
-- On exec_list shift to state 807
## Reductions:
-- On TPtVirg
--   reduce production exec_list ->

State 785:
## Known stack suffix:
## TDotDot
## LR(1) items:
exec_list -> TDotDot . exec_front_ident exec_ident exec_list [ TPtVirg ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaIdExp shift to state 786
-- On TMetaId shift to state 71
-- On TMetaExp shift to state 787
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 788
-- On exec_front_ident shift to state 789
## Reductions:

State 786:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
exec_front_ident -> TMetaIdExp . [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_front_ident -> TMetaIdExp

State 787:
## Known stack suffix:
## TMetaExp
## LR(1) items:
exec_front_ident -> TMetaExp . [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_front_ident -> TMetaExp

State 788:
## Known stack suffix:
## ident
## LR(1) items:
exec_front_ident -> ident . [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_front_ident -> ident

State 789:
## Known stack suffix:
## TDotDot exec_front_ident
## LR(1) items:
exec_list -> TDotDot exec_front_ident . exec_ident exec_list [ TPtVirg ]
## Transitions:
-- On TPtrOp shift to state 790
-- On TDot shift to state 792
-- On exec_ident shift to state 796
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident ->

State 790:
## Known stack suffix:
## TPtrOp
## LR(1) items:
exec_ident -> TPtrOp . disj_ident exec_ident [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 791
## Reductions:

State 791:
## Known stack suffix:
## TPtrOp disj_ident
## LR(1) items:
exec_ident -> TPtrOp disj_ident . exec_ident [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 790
-- On TDot shift to state 792
-- On exec_ident shift to state 795
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident ->

State 792:
## Known stack suffix:
## TDot
## LR(1) items:
exec_ident -> TDot . disj_ident exec_ident [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 793
## Reductions:

State 793:
## Known stack suffix:
## TDot disj_ident
## LR(1) items:
exec_ident -> TDot disj_ident . exec_ident [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
-- On TPtrOp shift to state 790
-- On TDot shift to state 792
-- On exec_ident shift to state 794
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd
--   reduce production exec_ident ->

State 794:
## Known stack suffix:
## TDot disj_ident exec_ident
## LR(1) items:
exec_ident -> TDot disj_ident exec_ident . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_ident -> TDot disj_ident exec_ident

State 795:
## Known stack suffix:
## TPtrOp disj_ident exec_ident
## LR(1) items:
exec_ident -> TPtrOp disj_ident exec_ident . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_ident -> TPtrOp disj_ident exec_ident

State 796:
## Known stack suffix:
## TDotDot exec_front_ident exec_ident
## LR(1) items:
exec_list -> TDotDot exec_front_ident exec_ident . exec_list [ TPtVirg ]
## Transitions:
-- On TXor shift to state 758
-- On TWhy shift to state 759
-- On TShROp shift to state 760
-- On TShLOp shift to state 761
-- On TPlus shift to state 762
-- On TOrLog shift to state 763
-- On TOr shift to state 764
-- On TOPar shift to state 765
-- On TOCro shift to state 766
-- On TOBrace shift to state 767
-- On TNotEq shift to state 768
-- On TMul shift to state 769
-- On TMinus shift to state 770
-- On TLogOp shift to state 771
-- On TIf shift to state 772
-- On TIdent shift to state 773
-- On TEqEq shift to state 781
-- On TEq shift to state 782
-- On TElse shift to state 783
-- On TEllipsis shift to state 784
-- On TDotDot shift to state 785
-- On TDmOp shift to state 797
-- On TCPar shift to state 798
-- On TCCro shift to state 799
-- On TCBrace shift to state 800
-- On TBang shift to state 801
-- On TAndLog shift to state 802
-- On TAnd shift to state 803
-- On token shift to state 804
-- On exec_list shift to state 806
## Reductions:
-- On TPtVirg
--   reduce production exec_list ->

State 797:
## Known stack suffix:
## TDmOp
## LR(1) items:
token -> TDmOp . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TDmOp

State 798:
## Known stack suffix:
## TCPar
## LR(1) items:
token -> TCPar . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TCPar

State 799:
## Known stack suffix:
## TCCro
## LR(1) items:
token -> TCCro . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TCCro

State 800:
## Known stack suffix:
## TCBrace
## LR(1) items:
token -> TCBrace . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TCBrace

State 801:
## Known stack suffix:
## TBang
## LR(1) items:
token -> TBang . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TBang

State 802:
## Known stack suffix:
## TAndLog
## LR(1) items:
token -> TAndLog . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TAndLog

State 803:
## Known stack suffix:
## TAnd
## LR(1) items:
token -> TAnd . [ TXor TWhy TShROp TShLOp TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMinus TLogOp TIf TIdent TEqEq TEq TElse TEllipsis TDotDot TDmOp TCPar TCCro TCBrace TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production token -> TAnd

State 804:
## Known stack suffix:
## token
## LR(1) items:
exec_list -> token . exec_list [ TPtVirg ]
## Transitions:
-- On TXor shift to state 758
-- On TWhy shift to state 759
-- On TShROp shift to state 760
-- On TShLOp shift to state 761
-- On TPlus shift to state 762
-- On TOrLog shift to state 763
-- On TOr shift to state 764
-- On TOPar shift to state 765
-- On TOCro shift to state 766
-- On TOBrace shift to state 767
-- On TNotEq shift to state 768
-- On TMul shift to state 769
-- On TMinus shift to state 770
-- On TLogOp shift to state 771
-- On TIf shift to state 772
-- On TIdent shift to state 773
-- On TEqEq shift to state 781
-- On TEq shift to state 782
-- On TElse shift to state 783
-- On TEllipsis shift to state 784
-- On TDotDot shift to state 785
-- On TDmOp shift to state 797
-- On TCPar shift to state 798
-- On TCCro shift to state 799
-- On TCBrace shift to state 800
-- On TBang shift to state 801
-- On TAndLog shift to state 802
-- On TAnd shift to state 803
-- On token shift to state 804
-- On exec_list shift to state 805
## Reductions:
-- On TPtVirg
--   reduce production exec_list ->

State 805:
## Known stack suffix:
## token exec_list
## LR(1) items:
exec_list -> token exec_list . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_list -> token exec_list

State 806:
## Known stack suffix:
## TDotDot exec_front_ident exec_ident exec_list
## LR(1) items:
exec_list -> TDotDot exec_front_ident exec_ident exec_list . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_list -> TDotDot exec_front_ident exec_ident exec_list

State 807:
## Known stack suffix:
## TEllipsis exec_list
## LR(1) items:
exec_list -> TEllipsis exec_list . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_list -> TEllipsis exec_list

State 808:
## Known stack suffix:
## TIdent exec_ident2 exec_list
## LR(1) items:
exec_list -> TIdent exec_ident2 exec_list . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exec_list -> TIdent exec_ident2 exec_list

State 809:
## Known stack suffix:
## Texec TIdent exec_list
## LR(1) items:
statement -> Texec TIdent exec_list . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## Texec TIdent exec_list TPtVirg
## LR(1) items:
statement -> Texec TIdent exec_list TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> Texec TIdent exec_list TPtVirg

State 811:
## Known stack suffix:
## TWhile
## LR(1) items:
statement -> TWhile . TOPar eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 812
## Reductions:

State 812:
## Known stack suffix:
## TWhile TOPar
## LR(1) items:
statement -> TWhile TOPar . eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 813
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 813:
## Known stack suffix:
## TWhile TOPar eexpr
## LR(1) items:
statement -> TWhile TOPar eexpr . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 814
## Reductions:

State 814:
## Known stack suffix:
## TWhile TOPar eexpr TCPar
## LR(1) items:
statement -> TWhile TOPar eexpr TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1384
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 815:
## Known stack suffix:
## TUndef
## LR(1) items:
includes -> TUndef . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 816
## Reductions:

State 816:
## Known stack suffix:
## TUndef TLineEnd
## LR(1) items:
includes -> TUndef TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> TUndef TLineEnd

State 817:
## Known stack suffix:
## TSwitch
## LR(1) items:
statement -> TSwitch . TOPar eexpr TCPar TOBrace list(decl_var) list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## TSwitch TOPar
## LR(1) items:
statement -> TSwitch TOPar . eexpr TCPar TOBrace list(decl_var) list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 819
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 819:
## Known stack suffix:
## TSwitch TOPar eexpr
## LR(1) items:
statement -> TSwitch TOPar eexpr . TCPar TOBrace list(decl_var) list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar . TOBrace list(decl_var) list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace . list(decl_var) list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On list(decl_var) shift to state 890
-- On funproto shift to state 1165
-- On decl_var shift to state 1382
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On all_basic_types shift to state 288
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production list(decl_var) ->

State 822:
## Known stack suffix:
## TMetaDeclarer
## LR(1) items:
decl_ident -> TMetaDeclarer . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_ident -> TMetaDeclarer

State 823:
## Known stack suffix:
## TMetaDecl
## LR(1) items:
decl_var -> TMetaDecl . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> TMetaDecl

State 824:
## Known stack suffix:
## TDeclarerId
## LR(1) items:
decl_ident -> TDeclarerId . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_ident -> TDeclarerId

State 825:
## Known stack suffix:
## storage
## LR(1) items:
decl_var -> storage . ctype separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> storage . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> storage . Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 826
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 833
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On decl_ident shift to state 843
-- On ctype shift to state 851
-- On const_vol shift to state 875
-- On all_basic_types shift to state 288
## Reductions:

State 826:
## Known stack suffix:
## storage Tinline
## LR(1) items:
funproto -> storage Tinline . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 827
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 827:
## Known stack suffix:
## storage Tinline ctype
## LR(1) items:
funproto -> storage Tinline ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 828
-- On disj_ident shift to state 749
## Reductions:

State 828:
## Known stack suffix:
## storage Tinline ctype fn_ident
## LR(1) items:
funproto -> storage Tinline ctype fn_ident . TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 829
## Reductions:

State 829:
## Known stack suffix:
## storage Tinline ctype fn_ident TOPar
## LR(1) items:
funproto -> storage Tinline ctype fn_ident TOPar . arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) shift to state 738
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 745
-- On arg_list(name_opt_decl) shift to state 830
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) ->

State 830:
## Known stack suffix:
## storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl)
## LR(1) items:
funproto -> storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 831
## Reductions:

State 831:
## Known stack suffix:
## storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar
## LR(1) items:
funproto -> storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 832
## Reductions:

State 832:
## Known stack suffix:
## storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
funproto -> storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funproto -> storage Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg

State 833:
## Known stack suffix:
## storage pure_ident_or_symbol
## LR(1) items:
decl_var -> storage pure_ident_or_symbol . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 834
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 836
## Reductions:

State 834:
## Known stack suffix:
## storage pure_ident_or_symbol separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> storage pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 835
## Reductions:

State 835:
## Known stack suffix:
## storage pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> storage pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg

State 836:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident
## LR(1) items:
decl_var -> storage pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 837
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 837:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq
## LR(1) items:
decl_var -> storage pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 838
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 838:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
decl_var -> storage pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 839
## Reductions:

State 839:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 840:
## Known stack suffix:
## d_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident TComma . separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 841
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 842
## Reductions:

State 841:
## Known stack suffix:
## d_ident TComma separated_nonempty_list(TComma,d_ident)
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident TComma separated_nonempty_list(TComma,d_ident) . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,d_ident) -> d_ident TComma separated_nonempty_list(TComma,d_ident)

State 842:
## Known stack suffix:
## d_ident
## LR(1) items:
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 843:
## Known stack suffix:
## storage decl_ident
## LR(1) items:
decl_var -> storage decl_ident . TOPar eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage decl_ident . TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 844
## Reductions:

State 844:
## Known stack suffix:
## storage decl_ident TOPar
## LR(1) items:
decl_var -> storage decl_ident TOPar . eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage decl_ident TOPar . eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 845
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 845:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage decl_ident TOPar eexpr_list_option . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 846
## Reductions:

State 846:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 847
-- On TEq shift to state 848
## Reductions:

State 847:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TPtVirg
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TPtVirg

State 848:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 849
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 849:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq initialize
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 850
## Reductions:

State 850:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg

State 851:
## Known stack suffix:
## storage ctype
## LR(1) items:
decl_var -> storage ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> storage ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 852
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 863
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 865
-- On disj_ident shift to state 870
-- On d_ident shift to state 871
## Reductions:

State 852:
## Known stack suffix:
## storage ctype TOPar
## LR(1) items:
decl_var -> storage ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 853
## Reductions:

State 853:
## Known stack suffix:
## storage ctype TOPar TMul
## LR(1) items:
decl_var -> storage ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 854
## Reductions:

State 854:
## Known stack suffix:
## storage ctype TOPar TMul d_ident
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 856
## Reductions:

State 856:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 857
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 857:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 858
## Reductions:

State 858:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 859
-- On TEq shift to state 860
## Reductions:

State 859:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 860:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 861
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 861:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 862
## Reductions:

State 862:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 863:
## Known stack suffix:
## storage ctype separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> storage ctype separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 864
## Reductions:

State 864:
## Known stack suffix:
## storage ctype separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> storage ctype separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage ctype separated_nonempty_list(TComma,d_ident) TPtVirg

State 865:
## Known stack suffix:
## storage ctype fn_ident
## LR(1) items:
funproto -> storage ctype fn_ident . TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 866
## Reductions:

State 866:
## Known stack suffix:
## storage ctype fn_ident TOPar
## LR(1) items:
funproto -> storage ctype fn_ident TOPar . arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) shift to state 738
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 745
-- On arg_list(name_opt_decl) shift to state 867
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) ->

State 867:
## Known stack suffix:
## storage ctype fn_ident TOPar arg_list(name_opt_decl)
## LR(1) items:
funproto -> storage ctype fn_ident TOPar arg_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar
## LR(1) items:
funproto -> storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 869
## Reductions:

State 869:
## Known stack suffix:
## storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
funproto -> storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funproto -> storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg

State 870:
## Known stack suffix:
## disj_ident
## LR(1) items:
d_ident -> disj_ident . list(array_dec) [ TPtVirg TEq TComma ]
fn_ident -> disj_ident . [ TOPar ]
## Transitions:
-- On TOCro shift to state 129
-- On list(array_dec) shift to state 604
-- On array_dec shift to state 605
## Reductions:
-- On TOPar
--   reduce production fn_ident -> disj_ident
-- On TPtVirg TEq TComma
--   reduce production list(array_dec) ->

State 871:
## Known stack suffix:
## storage ctype d_ident
## LR(1) items:
decl_var -> storage ctype d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 872
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 872:
## Known stack suffix:
## storage ctype d_ident TEq
## LR(1) items:
decl_var -> storage ctype d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 873
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 873:
## Known stack suffix:
## storage ctype d_ident TEq initialize
## LR(1) items:
decl_var -> storage ctype d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 874
## Reductions:

State 874:
## Known stack suffix:
## storage ctype d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage ctype d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage ctype d_ident TEq initialize TPtVirg

State 875:
## Known stack suffix:
## storage const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TOPar0 TOPar TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TFunDecl ]
decl_var -> storage const_vol . pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage const_vol . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 876
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 876:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage const_vol pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 877
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 879
## Reductions:

State 877:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 878
## Reductions:

State 878:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg

State 879:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 880
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 880:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 881
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 881:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 882
## Reductions:

State 882:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 883:
## Known stack suffix:
## pure_ident_or_symbol
## LR(1) items:
decl_var -> pure_ident_or_symbol . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 884
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 886
## Reductions:

State 884:
## Known stack suffix:
## pure_ident_or_symbol separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 885
## Reductions:

State 885:
## Known stack suffix:
## pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg

State 886:
## Known stack suffix:
## pure_ident_or_symbol d_ident
## LR(1) items:
decl_var -> pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 887
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 887:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq
## LR(1) items:
decl_var -> pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 888
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 888:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
decl_var -> pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 889
## Reductions:

State 889:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 890:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace list(decl_var)
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace list(decl_var) . list(case_line) TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TDefault shift to state 891
-- On TCase shift to state 1374
-- On list(case_line) shift to state 1378
-- On case_line shift to state 1380
## Reductions:
-- On TCBrace
--   reduce production list(case_line) ->

State 891:
## Known stack suffix:
## TDefault
## LR(1) items:
case_line -> TDefault . TDotDot fun_start [ TDefault TCase TCBrace ]
## Transitions:
-- On TDotDot shift to state 892
## Reductions:

State 892:
## Known stack suffix:
## TDefault TDotDot
## LR(1) items:
case_line -> TDefault TDotDot . fun_start [ TDefault TCase TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1373
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 893:
## Known stack suffix:
## TSymId
## LR(1) items:
pure_ident_or_symbol -> TSymId . [ TSymId TOPar0 TMetaId TMeta TIdent ]
wrapped_sym_ident -> TSymId . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TSymId TOPar0 TMetaId TMeta TIdent
--   reduce production pure_ident_or_symbol -> TSymId
-- On TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDotDot TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production wrapped_sym_ident -> TSymId

State 894:
## Known stack suffix:
## TString
## LR(1) items:
primary_expr(expr,invalid) -> TString . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TString

State 895:
## Known stack suffix:
## TSizeof
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof . TOPar ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 896
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 899
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 896:
## Known stack suffix:
## TSizeof TOPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
primary_expr(eexpr,dot_expressions) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof TOPar . ctype TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 302
-- On dot_expressions shift to state 184
-- On ctype shift to state 897
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 897:
## Known stack suffix:
## TSizeof TOPar ctype
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof TOPar ctype . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 898
## Reductions:

State 898:
## Known stack suffix:
## TSizeof TOPar ctype TCPar
## LR(1) items:
postfix_expr(eexpr,dot_expressions) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> TSizeof TOPar ctype TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 306
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> TSizeof TOPar ctype TCPar

State 899:
## Known stack suffix:
## TSizeof unary_expr_bis
## LR(1) items:
unary_expr(expr,invalid) -> TSizeof unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(expr,invalid) -> TSizeof unary_expr_bis

State 900:
## Known stack suffix:
## TReturn
## LR(1) items:
statement -> TReturn . eexpr TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TReturn . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPtVirg shift to state 901
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 902
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 901:
## Known stack suffix:
## TReturn TPtVirg
## LR(1) items:
statement -> TReturn TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TReturn TPtVirg

State 902:
## Known stack suffix:
## TReturn eexpr
## LR(1) items:
statement -> TReturn eexpr . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 903
## Reductions:

State 903:
## Known stack suffix:
## TReturn eexpr TPtVirg
## LR(1) items:
statement -> TReturn eexpr TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TReturn eexpr TPtVirg

State 904:
## Known stack suffix:
## TPragma
## LR(1) items:
includes -> TPragma . ident_or_kwd pragmabody TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tinline shift to state 905
-- On TSymId shift to state 46
-- On TMetaId shift to state 906
-- On TMeta shift to state 907
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 908
-- On pure_ident shift to state 909
-- On ident_or_kwd shift to state 910
## Reductions:

State 905:
## Known stack suffix:
## Tinline
## LR(1) items:
ident_or_kwd -> Tinline . [ TSymId TOPar TMetaId TIdent TEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_kwd -> Tinline

State 906:
## Known stack suffix:
## TMetaId
## LR(1) items:
ident_or_kwd -> TMetaId . [ TSymId TOPar TMetaId TIdent TEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_kwd -> TMetaId

State 907:
## Known stack suffix:
## TMeta
## LR(1) items:
ident_or_kwd -> TMeta . [ TSymId TOPar TMetaId TIdent TEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_kwd -> TMeta

State 908:
## Known stack suffix:
## wrapped_sym_ident
## LR(1) items:
ident_or_kwd -> wrapped_sym_ident . [ TSymId TOPar TMetaId TIdent TEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_kwd -> wrapped_sym_ident

State 909:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident_or_kwd -> pure_ident . [ TSymId TOPar TMetaId TIdent TEllipsis ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_kwd -> pure_ident

State 910:
## Known stack suffix:
## TPragma ident_or_kwd
## LR(1) items:
includes -> TPragma ident_or_kwd . pragmabody TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar shift to state 911
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On TEllipsis shift to state 914
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On pragmabody shift to state 915
-- On nonempty_list(ident) shift to state 917
-- On ident shift to state 918
## Reductions:

State 911:
## Known stack suffix:
## TOPar
## LR(1) items:
pragmabody -> TOPar . eexpr_list_option TCPar [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 912
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 912:
## Known stack suffix:
## TOPar eexpr_list_option
## LR(1) items:
pragmabody -> TOPar eexpr_list_option . TCPar [ TLineEnd ]
## Transitions:
-- On TCPar shift to state 913
## Reductions:

State 913:
## Known stack suffix:
## TOPar eexpr_list_option TCPar
## LR(1) items:
pragmabody -> TOPar eexpr_list_option TCPar . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pragmabody -> TOPar eexpr_list_option TCPar

State 914:
## Known stack suffix:
## TEllipsis
## LR(1) items:
pragmabody -> TEllipsis . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pragmabody -> TEllipsis

State 915:
## Known stack suffix:
## TPragma ident_or_kwd pragmabody
## LR(1) items:
includes -> TPragma ident_or_kwd pragmabody . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 916
## Reductions:

State 916:
## Known stack suffix:
## TPragma ident_or_kwd pragmabody TLineEnd
## LR(1) items:
includes -> TPragma ident_or_kwd pragmabody TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> TPragma ident_or_kwd pragmabody TLineEnd

State 917:
## Known stack suffix:
## nonempty_list(ident)
## LR(1) items:
pragmabody -> nonempty_list(ident) . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pragmabody -> nonempty_list(ident)

State 918:
## Known stack suffix:
## ident
## LR(1) items:
nonempty_list(ident) -> ident . [ TLineEnd ]
nonempty_list(ident) -> ident . nonempty_list(ident) [ TLineEnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On nonempty_list(ident) shift to state 919
-- On ident shift to state 918
## Reductions:
-- On TLineEnd
--   reduce production nonempty_list(ident) -> ident

State 919:
## Known stack suffix:
## ident nonempty_list(ident)
## LR(1) items:
nonempty_list(ident) -> ident nonempty_list(ident) . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(ident) -> ident nonempty_list(ident)

State 920:
## Known stack suffix:
## TPOEllipsis
## LR(1) items:
stm_dots -> TPOEllipsis . list(whenppdecs) nest_start TPCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1370
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd
--   reduce production list(whenppdecs) ->

State 921:
## Known stack suffix:
## TWhenTrue
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenTrue . TNotEq eexpr TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TNotEq shift to state 922
## Reductions:

State 922:
## Known stack suffix:
## TWhenTrue TNotEq
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenTrue TNotEq . eexpr TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 923
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 923:
## Known stack suffix:
## TWhenTrue TNotEq eexpr
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenTrue TNotEq eexpr . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 924
## Reductions:

State 924:
## Known stack suffix:
## TWhenTrue TNotEq eexpr TLineEnd
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenTrue TNotEq eexpr TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whens(when_start,rule_elem_statement,any_strict) -> TWhenTrue TNotEq eexpr TLineEnd

State 925:
## Known stack suffix:
## TWhenFalse
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenFalse . TNotEq eexpr TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TNotEq shift to state 926
## Reductions:

State 926:
## Known stack suffix:
## TWhenFalse TNotEq
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenFalse TNotEq . eexpr TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 927
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 927:
## Known stack suffix:
## TWhenFalse TNotEq eexpr
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenFalse TNotEq eexpr . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 928
## Reductions:

State 928:
## Known stack suffix:
## TWhenFalse TNotEq eexpr TLineEnd
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhenFalse TNotEq eexpr TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whens(when_start,rule_elem_statement,any_strict) -> TWhenFalse TNotEq eexpr TLineEnd

State 929:
## Known stack suffix:
## TWhen
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen . TNotEq when_start TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
whens(when_start,rule_elem_statement,any_strict) -> TWhen . TEq rule_elem_statement TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
whens(when_start,rule_elem_statement,any_strict) -> TWhen . separated_nonempty_list(TComma,any_strict) TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TStrict shift to state 930
-- On TNotEq shift to state 931
-- On TForall shift to state 1338
-- On TExists shift to state 1339
-- On TEq shift to state 1340
-- On TAny shift to state 1364
-- On separated_nonempty_list(TComma,any_strict) shift to state 1365
-- On any_strict shift to state 1367
## Reductions:

State 930:
## Known stack suffix:
## TStrict
## LR(1) items:
any_strict -> TStrict . [ TLineEnd TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_strict -> TStrict

State 931:
## Known stack suffix:
## TWhen TNotEq
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TNotEq . when_start TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On when_start shift to state 1332
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1334
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1336
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 932:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TFunDecl TCPar0 ]
decl_statement -> TOPar0 . midzero_list(fun_start,fun_start) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TPOEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On midzero_list(fun_start,fun_start) shift to state 1324
-- On midzero_list(expr,eexpr) shift to state 1022
-- On midzero_list(ctype,ctype) shift to state 268
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1326
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1273
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1308
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 933:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr(expr,invalid) -> TOPar . ctype TCPar cast_expr(expr,invalid) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> TOPar . ctype TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
primary_expr(expr,invalid) -> TOPar . eexpr TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 934
-- On dot_expressions shift to state 184
-- On ctype shift to state 936
-- On const_vol shift to state 279
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:

State 934:
## Known stack suffix:
## TOPar eexpr
## LR(1) items:
primary_expr(expr,invalid) -> TOPar eexpr . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 935
## Reductions:

State 935:
## Known stack suffix:
## TOPar eexpr TCPar
## LR(1) items:
primary_expr(expr,invalid) -> TOPar eexpr TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TOPar eexpr TCPar

State 936:
## Known stack suffix:
## TOPar ctype
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype . TCPar cast_expr(expr,invalid) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> TOPar ctype . TCPar TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 937
## Reductions:

State 937:
## Known stack suffix:
## TOPar ctype TCPar
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype TCPar . cast_expr(expr,invalid) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> TOPar ctype TCPar . TOBrace initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TOBrace shift to state 1027
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TChar shift to state 952
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 956
-- On pure_ident shift to state 77
-- On primary_expr(expr,invalid) shift to state 957
-- On postfix_expr(expr,invalid) shift to state 958
-- On invalid shift to state 971
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On cast_expr(expr,invalid) shift to state 1030
## Reductions:

State 938:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TChar shift to state 952
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On pure_ident shift to state 77
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On midzero_list(expr,eexpr) shift to state 1022
-- On invalid shift to state 971
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1024
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:

State 939:
## Known stack suffix:
## TMetaLocalIdExp
## LR(1) items:
primary_expr(expr,invalid) -> TMetaLocalIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaLocalIdExp

State 940:
## Known stack suffix:
## TMetaIdExp
## LR(1) items:
primary_expr(expr,invalid) -> TMetaIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaIdExp

State 941:
## Known stack suffix:
## TMetaGlobalIdExp
## LR(1) items:
primary_expr(expr,invalid) -> TMetaGlobalIdExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaGlobalIdExp

State 942:
## Known stack suffix:
## TMetaExp
## LR(1) items:
primary_expr(expr,invalid) -> TMetaExp . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaExp

State 943:
## Known stack suffix:
## TMetaErr
## LR(1) items:
primary_expr(expr,invalid) -> TMetaErr . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaErr

State 944:
## Known stack suffix:
## TMetaConst
## LR(1) items:
primary_expr(expr,invalid) -> TMetaConst . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TMetaConst

State 945:
## Known stack suffix:
## TInt
## LR(1) items:
primary_expr(expr,invalid) -> TInt . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TInt

State 946:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr(expr,invalid) -> TInc . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 947
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 947:
## Known stack suffix:
## TInc unary_expr_bis
## LR(1) items:
unary_expr(expr,invalid) -> TInc unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(expr,invalid) -> TInc unary_expr_bis

State 948:
## Known stack suffix:
## TFloat
## LR(1) items:
primary_expr(expr,invalid) -> TFloat . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TFloat

State 949:
## Known stack suffix:
## TDecimalCst
## LR(1) items:
primary_expr(expr,invalid) -> TDecimalCst . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TDecimalCst

State 950:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr(expr,invalid) -> TDec . unary_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 133
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 156
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 161
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 162
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 168
-- On unary_expr_bis shift to state 951
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 317
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
## Reductions:

State 951:
## Known stack suffix:
## TDec unary_expr_bis
## LR(1) items:
unary_expr(expr,invalid) -> TDec unary_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(expr,invalid) -> TDec unary_expr_bis

State 952:
## Known stack suffix:
## TChar
## LR(1) items:
primary_expr(expr,invalid) -> TChar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TChar

State 953:
## Known stack suffix:
## TAndLog
## LR(1) items:
primary_expr(expr,invalid) -> TAndLog . ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TMetaId shift to state 71
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 76
-- On pure_ident shift to state 77
-- On ident shift to state 954
## Reductions:

State 954:
## Known stack suffix:
## TAndLog ident
## LR(1) items:
primary_expr(expr,invalid) -> TAndLog ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TAndLog ident

State 955:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr(expr,invalid) -> unary_op . cast_expr(expr,invalid) [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TChar shift to state 952
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 956
-- On pure_ident shift to state 77
-- On primary_expr(expr,invalid) shift to state 957
-- On postfix_expr(expr,invalid) shift to state 958
-- On invalid shift to state 971
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On cast_expr(expr,invalid) shift to state 973
## Reductions:

State 956:
## Known stack suffix:
## unary_expr(expr,invalid)
## LR(1) items:
cast_expr(expr,invalid) -> unary_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(expr,invalid) -> unary_expr(expr,invalid)

State 957:
## Known stack suffix:
## primary_expr(expr,invalid)
## LR(1) items:
postfix_expr(expr,invalid) -> primary_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> primary_expr(expr,invalid)

State 958:
## Known stack suffix:
## postfix_expr(expr,invalid)
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TOCro eexpr TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TDot disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TPtrOp disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TInc [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TDec [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) . TOPar eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
unary_expr(expr,invalid) -> postfix_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtrOp shift to state 959
-- On TOPar shift to state 961
-- On TOCro shift to state 964
-- On TInc shift to state 967
-- On TDot shift to state 968
-- On TDec shift to state 970
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production unary_expr(expr,invalid) -> postfix_expr(expr,invalid)

State 959:
## Known stack suffix:
## postfix_expr(expr,invalid) TPtrOp
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp . disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## postfix_expr(expr,invalid) TPtrOp disj_ident
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp disj_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TPtrOp disj_ident

State 961:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar . eexpr_list_option TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 962
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 962:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar eexpr_list_option
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option . TCPar [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 963
## Reductions:

State 963:
## Known stack suffix:
## postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOPar eexpr_list_option TCPar

State 964:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro . eexpr TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 965
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 965:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro eexpr
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr . TCCro [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCCro shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## postfix_expr(expr,invalid) TOCro eexpr TCCro
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr TCCro . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TOCro eexpr TCCro

State 967:
## Known stack suffix:
## postfix_expr(expr,invalid) TInc
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TInc . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TInc

State 968:
## Known stack suffix:
## postfix_expr(expr,invalid) TDot
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot . disj_ident [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 969
## Reductions:

State 969:
## Known stack suffix:
## postfix_expr(expr,invalid) TDot disj_ident
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot disj_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDot disj_ident

State 970:
## Known stack suffix:
## postfix_expr(expr,invalid) TDec
## LR(1) items:
postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDec . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> postfix_expr(expr,invalid) TDec

State 971:
## Known stack suffix:
## invalid
## LR(1) items:
primary_expr(expr,invalid) -> invalid . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> invalid

State 972:
## Known stack suffix:
## func_ident
## LR(1) items:
primary_expr(expr,invalid) -> func_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> func_ident

State 973:
## Known stack suffix:
## unary_op cast_expr(expr,invalid)
## LR(1) items:
unary_expr(expr,invalid) -> unary_op cast_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr(expr,invalid) -> unary_op cast_expr(expr,invalid)

State 974:
## Known stack suffix:
## unary_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) . TOpAssign assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
assign_expr(expr,invalid) -> unary_expr(expr,invalid) . TEq assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
assign_expr(expr,invalid) -> unary_expr(expr,invalid) . TMetaAssignOp assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
cast_expr(expr,invalid) -> unary_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOpAssign shift to state 975
-- On TMetaAssignOp shift to state 977
-- On TEq shift to state 979
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production cast_expr(expr,invalid) -> unary_expr(expr,invalid)

State 975:
## Known stack suffix:
## unary_expr(expr,invalid) TOpAssign
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TOpAssign . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 976
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 976:
## Known stack suffix:
## unary_expr(expr,invalid) TOpAssign assign_expr_bis
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TOpAssign assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(expr,invalid) -> unary_expr(expr,invalid) TOpAssign assign_expr_bis

State 977:
## Known stack suffix:
## unary_expr(expr,invalid) TMetaAssignOp
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TMetaAssignOp . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 978
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 978:
## Known stack suffix:
## unary_expr(expr,invalid) TMetaAssignOp assign_expr_bis
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TMetaAssignOp assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(expr,invalid) -> unary_expr(expr,invalid) TMetaAssignOp assign_expr_bis

State 979:
## Known stack suffix:
## unary_expr(expr,invalid) TEq
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq . assign_expr_bis [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 179
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 185
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On assign_expr_bis shift to state 980
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 980:
## Known stack suffix:
## unary_expr(expr,invalid) TEq assign_expr_bis
## LR(1) items:
assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq assign_expr_bis . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(expr,invalid) -> unary_expr(expr,invalid) TEq assign_expr_bis

State 981:
## Known stack suffix:
## pre_basic_expr(expr,invalid)
## LR(1) items:
expr -> pre_basic_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TCPar0 TCEllipsis TArobArob TArob EOF ]
pre_basic_expr(expr,invalid) -> pre_basic_expr(expr,invalid) . TComma basic_expr(expr,invalid) [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TComma shift to state 982
## Reductions:
-- On TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TCPar0 TCEllipsis TArobArob TArob EOF
--   reduce production expr -> pre_basic_expr(expr,invalid)

State 982:
## Known stack suffix:
## pre_basic_expr(expr,invalid) TComma
## LR(1) items:
pre_basic_expr(expr,invalid) -> pre_basic_expr(expr,invalid) TComma . basic_expr(expr,invalid) [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TChar shift to state 952
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On pure_ident shift to state 77
-- On primary_expr(expr,invalid) shift to state 957
-- On postfix_expr(expr,invalid) shift to state 958
-- On invalid shift to state 971
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 985
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:

State 983:
## Known stack suffix:
## cond_expr(expr,invalid)
## LR(1) items:
assign_expr(expr,invalid) -> cond_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr(expr,invalid) -> cond_expr(expr,invalid)

State 984:
## Known stack suffix:
## cast_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> cast_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(expr,invalid) -> cast_expr(expr,invalid)

State 985:
## Known stack suffix:
## pre_basic_expr(expr,invalid) TComma basic_expr(expr,invalid)
## LR(1) items:
pre_basic_expr(expr,invalid) -> pre_basic_expr(expr,invalid) TComma basic_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(expr,invalid) -> pre_basic_expr(expr,invalid) TComma basic_expr(expr,invalid)

State 986:
## Known stack suffix:
## assign_expr(expr,invalid)
## LR(1) items:
basic_expr(expr,invalid) -> assign_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_expr(expr,invalid) -> assign_expr(expr,invalid)

State 987:
## Known stack suffix:
## arith_expr(expr,invalid)
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TOrLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr(expr,invalid) -> arith_expr(expr,invalid) . TMetaBinaryOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
cond_expr(expr,invalid) -> arith_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
cond_expr(expr,invalid) -> arith_expr(expr,invalid) . TWhy option(eexpr) TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TXor shift to state 988
-- On TWhy shift to state 990
-- On TShROp shift to state 994
-- On TShLOp shift to state 996
-- On TPlus shift to state 998
-- On TOrLog shift to state 1000
-- On TOr shift to state 1002
-- On TNotEq shift to state 1004
-- On TMul shift to state 1006
-- On TMinus shift to state 1008
-- On TMetaBinaryOp shift to state 1010
-- On TLogOp shift to state 1012
-- On TEqEq shift to state 1014
-- On TDmOp shift to state 1016
-- On TAndLog shift to state 1018
-- On TAnd shift to state 1020
## Reductions:
-- On TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF
--   reduce production cond_expr(expr,invalid) -> arith_expr(expr,invalid)

State 988:
## Known stack suffix:
## arith_expr(expr,invalid) TXor
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 989
## Reductions:

State 989:
## Known stack suffix:
## arith_expr(expr,invalid) TXor arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TXor arith_expr_bis

State 990:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy . option(eexpr) TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 991
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TDotDot
--   reduce production option(eexpr) ->

State 991:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr)
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) . TDotDot eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TDotDot shift to state 992
## Reductions:

State 992:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr) TDotDot
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot . eargexpr [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eargexpr shift to state 993
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 221
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 993:
## Known stack suffix:
## arith_expr(expr,invalid) TWhy option(eexpr) TDotDot eargexpr
## LR(1) items:
cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot eargexpr . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond_expr(expr,invalid) -> arith_expr(expr,invalid) TWhy option(eexpr) TDotDot eargexpr

State 994:
## Known stack suffix:
## arith_expr(expr,invalid) TShROp
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShROp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 995
## Reductions:

State 995:
## Known stack suffix:
## arith_expr(expr,invalid) TShROp arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShROp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShROp arith_expr_bis

State 996:
## Known stack suffix:
## arith_expr(expr,invalid) TShLOp
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShLOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 997
## Reductions:

State 997:
## Known stack suffix:
## arith_expr(expr,invalid) TShLOp arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShLOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TShLOp arith_expr_bis

State 998:
## Known stack suffix:
## arith_expr(expr,invalid) TPlus
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 999
## Reductions:

State 999:
## Known stack suffix:
## arith_expr(expr,invalid) TPlus arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TPlus arith_expr_bis

State 1000:
## Known stack suffix:
## arith_expr(expr,invalid) TOrLog
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1001
## Reductions:

State 1001:
## Known stack suffix:
## arith_expr(expr,invalid) TOrLog arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAndLog shift to state 236
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOrLog arith_expr_bis

State 1002:
## Known stack suffix:
## arith_expr(expr,invalid) TOr
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## arith_expr(expr,invalid) TOr arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TOr arith_expr_bis

State 1004:
## Known stack suffix:
## arith_expr(expr,invalid) TNotEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1005
## Reductions:

State 1005:
## Known stack suffix:
## arith_expr(expr,invalid) TNotEq arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TNotEq arith_expr_bis

State 1006:
## Known stack suffix:
## arith_expr(expr,invalid) TMul
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1007
## Reductions:

State 1007:
## Known stack suffix:
## arith_expr(expr,invalid) TMul arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMul arith_expr_bis

State 1008:
## Known stack suffix:
## arith_expr(expr,invalid) TMinus
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1009
## Reductions:

State 1009:
## Known stack suffix:
## arith_expr(expr,invalid) TMinus arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMinus arith_expr_bis

State 1010:
## Known stack suffix:
## arith_expr(expr,invalid) TMetaBinaryOp
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMetaBinaryOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1011
## Reductions:

State 1011:
## Known stack suffix:
## arith_expr(expr,invalid) TMetaBinaryOp arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMetaBinaryOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 196
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TMetaBinaryOp arith_expr_bis

State 1012:
## Known stack suffix:
## arith_expr(expr,invalid) TLogOp
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TLogOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1013
## Reductions:

State 1013:
## Known stack suffix:
## arith_expr(expr,invalid) TLogOp arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TLogOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TLogOp arith_expr_bis

State 1014:
## Known stack suffix:
## arith_expr(expr,invalid) TEqEq
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1015
## Reductions:

State 1015:
## Known stack suffix:
## arith_expr(expr,invalid) TEqEq arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMid0 TMetaBinaryOp TLineEnd TIso TEqEq TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TEqEq arith_expr_bis

State 1016:
## Known stack suffix:
## arith_expr(expr,invalid) TDmOp
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDmOp . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1017
## Reductions:

State 1017:
## Known stack suffix:
## arith_expr(expr,invalid) TDmOp arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDmOp arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TDmOp arith_expr_bis

State 1018:
## Known stack suffix:
## arith_expr(expr,invalid) TAndLog
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1019
## Reductions:

State 1019:
## Known stack suffix:
## arith_expr(expr,invalid) TAndLog arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TXor shift to state 232
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TOr shift to state 234
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
-- On TAnd shift to state 210
## Reductions:
-- On TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAndLog arith_expr_bis

State 1020:
## Known stack suffix:
## arith_expr(expr,invalid) TAnd
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd . arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 170
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On dot_expressions shift to state 184
-- On cast_expr(eexpr,dot_expressions) shift to state 190
-- On arith_expr_bis shift to state 1021
## Reductions:

State 1021:
## Known stack suffix:
## arith_expr(expr,invalid) TAnd arith_expr_bis
## LR(1) items:
arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd arith_expr_bis . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMul arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TDmOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TPlus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TMinus arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShLOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TShROp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TLogOp arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TEqEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TNotEq arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAnd arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TOr arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TXor arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
arith_expr_bis -> arith_expr_bis . TAndLog arith_expr_bis [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TLogOp TLineEnd TIso TEqEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TShROp shift to state 192
-- On TShLOp shift to state 202
-- On TPlus shift to state 194
-- On TNotEq shift to state 204
-- On TMul shift to state 196
-- On TMinus shift to state 200
-- On TLogOp shift to state 206
-- On TEqEq shift to state 208
-- On TDmOp shift to state 198
## Reductions:
-- On TXor TWhy TRightIso TPtVirg TPOEllipsis TPCEllipsis TOrLog TOr TOEllipsis TMid0 TMetaBinaryOp TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production arith_expr(expr,invalid) -> arith_expr(expr,invalid) TAnd arith_expr_bis

State 1022:
## Known stack suffix:
## TOPar0 midzero_list(expr,eexpr)
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 midzero_list(expr,eexpr) . TCPar0 [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 1023
## Reductions:

State 1023:
## Known stack suffix:
## TOPar0 midzero_list(expr,eexpr) TCPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 midzero_list(expr,eexpr) TCPar0 . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr(expr,invalid) -> TOPar0 midzero_list(expr,eexpr) TCPar0

State 1024:
## Known stack suffix:
## expr
## LR(1) items:
midzero_list(expr,eexpr) -> expr . list(mzl(eexpr)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 271
-- On mzl(eexpr) shift to state 273
-- On list(mzl(eexpr)) shift to state 1025
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->

State 1025:
## Known stack suffix:
## expr list(mzl(eexpr))
## LR(1) items:
midzero_list(expr,eexpr) -> expr list(mzl(eexpr)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(expr,eexpr) -> expr list(mzl(eexpr))

State 1026:
## Known stack suffix:
## basic_expr(expr,invalid)
## LR(1) items:
pre_basic_expr(expr,invalid) -> basic_expr(expr,invalid) . [ TRightIso TPtVirg TPOEllipsis TPCEllipsis TOEllipsis TMid0 TLineEnd TIso TEllipsis TComma TCPar0 TCEllipsis TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pre_basic_expr(expr,invalid) -> basic_expr(expr,invalid)

State 1027:
## Known stack suffix:
## TOPar ctype TCPar TOBrace
## LR(1) items:
postfix_expr(expr,invalid) -> TOPar ctype TCPar TOBrace . initialize_list TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 1028
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 1028:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list
## LR(1) items:
postfix_expr(expr,invalid) -> TOPar ctype TCPar TOBrace initialize_list . TCBrace [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 1029
## Reductions:

State 1029:
## Known stack suffix:
## TOPar ctype TCPar TOBrace initialize_list TCBrace
## LR(1) items:
postfix_expr(expr,invalid) -> TOPar ctype TCPar TOBrace initialize_list TCBrace . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr(expr,invalid) -> TOPar ctype TCPar TOBrace initialize_list TCBrace

State 1030:
## Known stack suffix:
## TOPar ctype TCPar cast_expr(expr,invalid)
## LR(1) items:
cast_expr(expr,invalid) -> TOPar ctype TCPar cast_expr(expr,invalid) . [ TXor TWhy TShROp TShLOp TRightIso TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOEllipsis TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TEqEq TEq TEllipsis TDmOp TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr(expr,invalid) -> TOPar ctype TCPar cast_expr(expr,invalid)

State 1031:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
stm_dots -> TOEllipsis . list(whenppdecs) nest_start TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1035
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd
--   reduce production list(whenppdecs) ->

State 1032:
## Known stack suffix:
## whens(when_start,rule_elem_statement,any_strict)
## LR(1) items:
whenppdecs -> whens(when_start,rule_elem_statement,any_strict) . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whenppdecs -> whens(when_start,rule_elem_statement,any_strict)

State 1033:
## Known stack suffix:
## whenppdecs
## LR(1) items:
list(whenppdecs) -> whenppdecs . list(whenppdecs) [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1034
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production list(whenppdecs) ->

State 1034:
## Known stack suffix:
## whenppdecs list(whenppdecs)
## LR(1) items:
list(whenppdecs) -> whenppdecs list(whenppdecs) . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(whenppdecs) -> whenppdecs list(whenppdecs)

State 1035:
## Known stack suffix:
## TOEllipsis list(whenppdecs)
## LR(1) items:
stm_dots -> TOEllipsis list(whenppdecs) . nest_start TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1321
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1036:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TPtVirg TOPar0 TOPar TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIdent TFunDecl TArobArob TArob EOF ]
decl_statement_expr -> TOPar0 . midzero_list(fun_after_stm,fun_after_dots_or) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On midzero_list(fun_after_stm,fun_after_dots_or) shift to state 1292
-- On midzero_list(expr,eexpr) shift to state 1022
-- On midzero_list(ctype,ctype) shift to state 268
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_stm shift to state 1294
-- On expr shift to state 1273
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1308
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1037:
## Known stack suffix:
## TOBrace
## LR(1) items:
statement -> TOBrace . fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1289
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1038:
## Known stack suffix:
## TMetaStmList
## LR(1) items:
decl_statement -> TMetaStmList . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement -> TMetaStmList

State 1039:
## Known stack suffix:
## TMetaStm
## LR(1) items:
statement -> TMetaStm . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TMetaStm

State 1040:
## Known stack suffix:
## TMetaIterator
## LR(1) items:
iter_ident -> TMetaIterator . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iter_ident -> TMetaIterator

State 1041:
## Known stack suffix:
## TMeta
## LR(1) items:
mident -> TMeta . [ TDotDot ]
statement -> TMeta . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Reductions:
-- On TDotDot
--   reduce production mident -> TMeta
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production statement -> TMeta

State 1042:
## Known stack suffix:
## TIteratorId
## LR(1) items:
iter_ident -> TIteratorId . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iter_ident -> TIteratorId

State 1043:
## Known stack suffix:
## TIncludeNL
## LR(1) items:
includes -> TIncludeNL . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> TIncludeNL

State 1044:
## Known stack suffix:
## TIncludeL
## LR(1) items:
includes -> TIncludeL . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> TIncludeL

State 1045:
## Known stack suffix:
## TIf
## LR(1) items:
statement -> TIf . TOPar eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TIf . TOPar eexpr TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1046
## Reductions:

State 1046:
## Known stack suffix:
## TIf TOPar
## LR(1) items:
statement -> TIf TOPar . eexpr TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TIf TOPar . eexpr TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1047
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1047:
## Known stack suffix:
## TIf TOPar eexpr
## LR(1) items:
statement -> TIf TOPar eexpr . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TIf TOPar eexpr . TCPar single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1048
## Reductions:

State 1048:
## Known stack suffix:
## TIf TOPar eexpr TCPar
## LR(1) items:
statement -> TIf TOPar eexpr TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TIf TOPar eexpr TCPar . single_statement TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1274
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1049:
## Known stack suffix:
## TOPar0
## LR(1) items:
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TAndLog TAnd ]
single_statement -> TOPar0 . midzero_list(statement,statement) TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1265
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On midzero_list(statement,statement) shift to state 1271
-- On midzero_list(expr,eexpr) shift to state 1022
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1273
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1050:
## Known stack suffix:
## TGoto
## LR(1) items:
statement -> TGoto . disj_ident TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 1051
## Reductions:

State 1051:
## Known stack suffix:
## TGoto disj_ident
## LR(1) items:
statement -> TGoto disj_ident . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1052
## Reductions:

State 1052:
## Known stack suffix:
## TGoto disj_ident TPtVirg
## LR(1) items:
statement -> TGoto disj_ident TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TGoto disj_ident TPtVirg

State 1053:
## Known stack suffix:
## TFor
## LR(1) items:
statement -> TFor . TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TFor . TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1054
## Reductions:

State 1054:
## Known stack suffix:
## TFor TOPar
## LR(1) items:
statement -> TFor TOPar . option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TFor TOPar . one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 140
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 1055
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On struct_or_union shift to state 117
-- On storage shift to state 1056
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 1095
-- On pure_ident shift to state 1101
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 1102
-- On one_decl_var shift to state 1225
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On funproto shift to state 1231
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On decl_ident shift to state 1232
-- On ctype shift to state 1240
-- On const_vol shift to state 1258
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(eexpr) ->

State 1055:
## Known stack suffix:
## TMetaDecl
## LR(1) items:
one_decl_var -> TMetaDecl . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> TMetaDecl

State 1056:
## Known stack suffix:
## storage
## LR(1) items:
funproto -> storage . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
funproto -> storage . Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . ctype d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . ctype d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . pure_ident_or_symbol d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . const_vol pure_ident_or_symbol d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 826
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 1057
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On decl_ident shift to state 1063
-- On ctype shift to state 1071
-- On const_vol shift to state 1088
-- On all_basic_types shift to state 288
## Reductions:

State 1057:
## Known stack suffix:
## storage pure_ident_or_symbol
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1058
## Reductions:

State 1058:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1059
-- On TEq shift to state 1060
## Reductions:

State 1059:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage pure_ident_or_symbol d_ident TPtVirg

State 1060:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1061
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1061:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1062
## Reductions:

State 1062:
## Known stack suffix:
## storage pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> storage pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 1063:
## Known stack suffix:
## storage decl_ident
## LR(1) items:
one_decl_var -> storage decl_ident . TOPar eexpr_list_option TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage decl_ident . TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TOPar shift to state 1064
## Reductions:

State 1064:
## Known stack suffix:
## storage decl_ident TOPar
## LR(1) items:
one_decl_var -> storage decl_ident TOPar . eexpr_list_option TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage decl_ident TOPar . eexpr_list_option TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 1065
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 1065:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option . TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage decl_ident TOPar eexpr_list_option . TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1066
## Reductions:

State 1066:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1067
-- On TEq shift to state 1068
## Reductions:

State 1067:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TPtVirg
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TPtVirg

State 1068:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1069
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1069:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq initialize
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1070
## Reductions:

State 1070:
## Known stack suffix:
## storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg

State 1071:
## Known stack suffix:
## storage ctype
## LR(1) items:
funproto -> storage ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1072
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 865
-- On disj_ident shift to state 870
-- On d_ident shift to state 1083
## Reductions:

State 1072:
## Known stack suffix:
## storage ctype TOPar
## LR(1) items:
one_decl_var -> storage ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 1073
## Reductions:

State 1073:
## Known stack suffix:
## storage ctype TOPar TMul
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1074
## Reductions:

State 1074:
## Known stack suffix:
## storage ctype TOPar TMul d_ident
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1075
## Reductions:

State 1075:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TOPar shift to state 1076
## Reductions:

State 1076:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 1077
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 1077:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1078
## Reductions:

State 1078:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1079
-- On TEq shift to state 1080
## Reductions:

State 1079:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 1080:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1081
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1081:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1082
## Reductions:

State 1082:
## Known stack suffix:
## storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 1083:
## Known stack suffix:
## storage ctype d_ident
## LR(1) items:
one_decl_var -> storage ctype d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage ctype d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1084
-- On TEq shift to state 1085
## Reductions:

State 1084:
## Known stack suffix:
## storage ctype d_ident TPtVirg
## LR(1) items:
one_decl_var -> storage ctype d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage ctype d_ident TPtVirg

State 1085:
## Known stack suffix:
## storage ctype d_ident TEq
## LR(1) items:
one_decl_var -> storage ctype d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1086
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1086:
## Known stack suffix:
## storage ctype d_ident TEq initialize
## LR(1) items:
one_decl_var -> storage ctype d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1087
## Reductions:

State 1087:
## Known stack suffix:
## storage ctype d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> storage ctype d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage ctype d_ident TEq initialize TPtVirg

State 1088:
## Known stack suffix:
## storage const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ TSymId TOPar0 TOPar TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent ]
one_decl_var -> storage const_vol . pure_ident_or_symbol d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage const_vol . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 1089
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 1089:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage const_vol pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1090
## Reductions:

State 1090:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1091
-- On TEq shift to state 1092
## Reductions:

State 1091:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TPtVirg

State 1092:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1093
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1093:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1094
## Reductions:

State 1094:
## Known stack suffix:
## storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> storage const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 1095:
## Known stack suffix:
## pure_ident_or_symbol
## LR(1) items:
one_decl_var -> pure_ident_or_symbol . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1096
## Reductions:

State 1096:
## Known stack suffix:
## pure_ident_or_symbol d_ident
## LR(1) items:
one_decl_var -> pure_ident_or_symbol d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1097
-- On TEq shift to state 1098
## Reductions:

State 1097:
## Known stack suffix:
## pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
one_decl_var -> pure_ident_or_symbol d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> pure_ident_or_symbol d_ident TPtVirg

State 1098:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq
## LR(1) items:
one_decl_var -> pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1099
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1099:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
one_decl_var -> pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1100
## Reductions:

State 1100:
## Known stack suffix:
## pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 1101:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident -> pure_ident . [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TAndLog TAnd ]
pure_ident_or_symbol -> pure_ident . [ TSymId TOPar0 TMetaId TMeta TIdent ]
## Transitions:
## Reductions:
-- On TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TAndLog TAnd
--   reduce production ident -> pure_ident
-- On TSymId TOPar0 TMetaId TMeta TIdent
--   reduce production pure_ident_or_symbol -> pure_ident

State 1102:
## Known stack suffix:
## TFor TOPar option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) . TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1103
## Reductions:

State 1103:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg . option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 1104
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TPtVirg
--   reduce production option(eexpr) ->

State 1104:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) . TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1105
## Reductions:

State 1105:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg . option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 1106
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TCPar
--   reduce production option(eexpr) ->

State 1106:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr)
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1107
## Reductions:

State 1107:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1224
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1108:
## Known stack suffix:
## TDo
## LR(1) items:
statement -> TDo . single_statement TWhile TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1134
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1109:
## Known stack suffix:
## TDefineParam
## LR(1) items:
defineop -> TDefineParam . define_param_list_option TCPar [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1110
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 1111
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(dparam,TEllipsis) shift to state 1124
-- On mident shift to state 1115
-- On empty_list_start(dparam,TEllipsis) shift to state 1125
-- On dparam shift to state 1116
-- On define_param_list_option shift to state 1126
## Reductions:
-- On TCPar
--   reduce production empty_list_start(dparam,TEllipsis) ->

State 1110:
## Known stack suffix:
## TNothing
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> TNothing . nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1110
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 1111
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(dparam,TEllipsis) shift to state 1123
-- On mident shift to state 1115
-- On dparam shift to state 1116
## Reductions:

State 1111:
## Known stack suffix:
## TEllipsis
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> TEllipsis . [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> TEllipsis . TComma [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> TEllipsis . TComma continue_list(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 1112
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(dparam,TEllipsis) -> TEllipsis

State 1112:
## Known stack suffix:
## TEllipsis TComma
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> TEllipsis TComma . [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> TEllipsis TComma . continue_list(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1113
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 1115
-- On dparam shift to state 1119
-- On continue_list(dparam,TEllipsis) shift to state 1122
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(dparam,TEllipsis) -> TEllipsis TComma

State 1113:
## Known stack suffix:
## TNothing
## LR(1) items:
continue_list(dparam,TEllipsis) -> TNothing . nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1110
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 1111
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(dparam,TEllipsis) shift to state 1114
-- On mident shift to state 1115
-- On dparam shift to state 1116
## Reductions:

State 1114:
## Known stack suffix:
## TNothing nonempty_list_start(dparam,TEllipsis)
## LR(1) items:
continue_list(dparam,TEllipsis) -> TNothing nonempty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(dparam,TEllipsis) -> TNothing nonempty_list_start(dparam,TEllipsis)

State 1115:
## Known stack suffix:
## mident
## LR(1) items:
dparam -> mident . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dparam -> mident

State 1116:
## Known stack suffix:
## dparam
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> dparam . [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> dparam . TComma [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> dparam . TComma nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 1117
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(dparam,TEllipsis) -> dparam

State 1117:
## Known stack suffix:
## dparam TComma
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> dparam TComma . [ TCPar ]
nonempty_list_start(dparam,TEllipsis) -> dparam TComma . nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1110
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 1111
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(dparam,TEllipsis) shift to state 1118
-- On mident shift to state 1115
-- On dparam shift to state 1116
## Reductions:
-- On TCPar
--   reduce production nonempty_list_start(dparam,TEllipsis) -> dparam TComma

State 1118:
## Known stack suffix:
## dparam TComma nonempty_list_start(dparam,TEllipsis)
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> dparam TComma nonempty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(dparam,TEllipsis) -> dparam TComma nonempty_list_start(dparam,TEllipsis)

State 1119:
## Known stack suffix:
## dparam
## LR(1) items:
continue_list(dparam,TEllipsis) -> dparam . [ TCPar ]
continue_list(dparam,TEllipsis) -> dparam . TComma [ TCPar ]
continue_list(dparam,TEllipsis) -> dparam . TComma nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TComma shift to state 1120
## Reductions:
-- On TCPar
--   reduce production continue_list(dparam,TEllipsis) -> dparam

State 1120:
## Known stack suffix:
## dparam TComma
## LR(1) items:
continue_list(dparam,TEllipsis) -> dparam TComma . [ TCPar ]
continue_list(dparam,TEllipsis) -> dparam TComma . nonempty_list_start(dparam,TEllipsis) [ TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TNothing shift to state 1110
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On TEllipsis shift to state 1111
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On nonempty_list_start(dparam,TEllipsis) shift to state 1121
-- On mident shift to state 1115
-- On dparam shift to state 1116
## Reductions:
-- On TCPar
--   reduce production continue_list(dparam,TEllipsis) -> dparam TComma

State 1121:
## Known stack suffix:
## dparam TComma nonempty_list_start(dparam,TEllipsis)
## LR(1) items:
continue_list(dparam,TEllipsis) -> dparam TComma nonempty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_list(dparam,TEllipsis) -> dparam TComma nonempty_list_start(dparam,TEllipsis)

State 1122:
## Known stack suffix:
## TEllipsis TComma continue_list(dparam,TEllipsis)
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> TEllipsis TComma continue_list(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(dparam,TEllipsis) -> TEllipsis TComma continue_list(dparam,TEllipsis)

State 1123:
## Known stack suffix:
## TNothing nonempty_list_start(dparam,TEllipsis)
## LR(1) items:
nonempty_list_start(dparam,TEllipsis) -> TNothing nonempty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list_start(dparam,TEllipsis) -> TNothing nonempty_list_start(dparam,TEllipsis)

State 1124:
## Known stack suffix:
## nonempty_list_start(dparam,TEllipsis)
## LR(1) items:
empty_list_start(dparam,TEllipsis) -> nonempty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production empty_list_start(dparam,TEllipsis) -> nonempty_list_start(dparam,TEllipsis)

State 1125:
## Known stack suffix:
## empty_list_start(dparam,TEllipsis)
## LR(1) items:
define_param_list_option -> empty_list_start(dparam,TEllipsis) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_param_list_option -> empty_list_start(dparam,TEllipsis)

State 1126:
## Known stack suffix:
## TDefineParam define_param_list_option
## LR(1) items:
defineop -> TDefineParam define_param_list_option . TCPar [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1127
## Reductions:

State 1127:
## Known stack suffix:
## TDefineParam define_param_list_option TCPar
## LR(1) items:
defineop -> TDefineParam define_param_list_option TCPar . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defineop -> TDefineParam define_param_list_option TCPar

State 1128:
## Known stack suffix:
## TDefine
## LR(1) items:
defineop -> TDefine . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defineop -> TDefine

State 1129:
## Known stack suffix:
## TContinue
## LR(1) items:
statement -> TContinue . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1130
## Reductions:

State 1130:
## Known stack suffix:
## TContinue TPtVirg
## LR(1) items:
statement -> TContinue TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TContinue TPtVirg

State 1131:
## Known stack suffix:
## TBreak
## LR(1) items:
statement -> TBreak . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1132
## Reductions:

State 1132:
## Known stack suffix:
## TBreak TPtVirg
## LR(1) items:
statement -> TBreak TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TBreak TPtVirg

State 1133:
## Known stack suffix:
## statement
## LR(1) items:
single_statement -> statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production single_statement -> statement

State 1134:
## Known stack suffix:
## TDo single_statement
## LR(1) items:
statement -> TDo single_statement . TWhile TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TWhile shift to state 1135
## Reductions:

State 1135:
## Known stack suffix:
## TDo single_statement TWhile
## LR(1) items:
statement -> TDo single_statement TWhile . TOPar eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1136
## Reductions:

State 1136:
## Known stack suffix:
## TDo single_statement TWhile TOPar
## LR(1) items:
statement -> TDo single_statement TWhile TOPar . eexpr TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1137
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1137:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1138
## Reductions:

State 1138:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr TCPar
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1139
## Reductions:

State 1139:
## Known stack suffix:
## TDo single_statement TWhile TOPar eexpr TCPar TPtVirg
## LR(1) items:
statement -> TDo single_statement TWhile TOPar eexpr TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TDo single_statement TWhile TOPar eexpr TCPar TPtVirg

State 1140:
## Known stack suffix:
## option(expr)
## LR(1) items:
statement -> option(expr) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1141
## Reductions:

State 1141:
## Known stack suffix:
## option(expr) TPtVirg
## LR(1) items:
statement -> option(expr) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> option(expr) TPtVirg

State 1142:
## Known stack suffix:
## mident
## LR(1) items:
statement -> mident . TDotDot [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TDotDot shift to state 1143
## Reductions:

State 1143:
## Known stack suffix:
## mident TDotDot
## LR(1) items:
statement -> mident TDotDot . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> mident TDotDot

State 1144:
## Known stack suffix:
## iter_ident
## LR(1) items:
statement -> iter_ident . TOPar eexpr_list_option TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1145
## Reductions:

State 1145:
## Known stack suffix:
## iter_ident TOPar
## LR(1) items:
statement -> iter_ident TOPar . eexpr_list_option TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 1146
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 1146:
## Known stack suffix:
## iter_ident TOPar eexpr_list_option
## LR(1) items:
statement -> iter_ident TOPar eexpr_list_option . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1147
## Reductions:

State 1147:
## Known stack suffix:
## iter_ident TOPar eexpr_list_option TCPar
## LR(1) items:
statement -> iter_ident TOPar eexpr_list_option TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1148
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1148:
## Known stack suffix:
## iter_ident TOPar eexpr_list_option TCPar single_statement
## LR(1) items:
statement -> iter_ident TOPar eexpr_list_option TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> iter_ident TOPar eexpr_list_option TCPar single_statement

State 1149:
## Known stack suffix:
## includes
## LR(1) items:
statement -> includes . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> includes

State 1150:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(expr) -> expr

State 1151:
## Known stack suffix:
## defineop
## LR(1) items:
includes -> defineop . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
includes -> defineop . ctype TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
includes -> defineop . toplevel_seq_start(toplevel_after_dots) TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TLineEnd shift to state 1153
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_seq_start(toplevel_after_dots) shift to state 1156
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1158
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1218
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1220
-- On decl_ident shift to state 1173
-- On ctype shift to state 1222
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1152:
## Known stack suffix:
## TMetaStmList
## LR(1) items:
decl_statement_expr -> TMetaStmList . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement_expr -> TMetaStmList

State 1153:
## Known stack suffix:
## defineop TLineEnd
## LR(1) items:
includes -> defineop TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> defineop TLineEnd

State 1154:
## Known stack suffix:
## TEllipsis
## LR(1) items:
stm_dots -> TEllipsis . list(whenppdecs) [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1155
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production list(whenppdecs) ->

State 1155:
## Known stack suffix:
## TEllipsis list(whenppdecs)
## LR(1) items:
stm_dots -> TEllipsis list(whenppdecs) . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stm_dots -> TEllipsis list(whenppdecs)

State 1156:
## Known stack suffix:
## defineop toplevel_seq_start(toplevel_after_dots)
## LR(1) items:
includes -> defineop toplevel_seq_start(toplevel_after_dots) . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 1157
## Reductions:

State 1157:
## Known stack suffix:
## defineop toplevel_seq_start(toplevel_after_dots) TLineEnd
## LR(1) items:
includes -> defineop toplevel_seq_start(toplevel_after_dots) TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> defineop toplevel_seq_start(toplevel_after_dots) TLineEnd

State 1158:
## Known stack suffix:
## stm_dots
## LR(1) items:
toplevel_seq_start(toplevel_after_dots) -> stm_dots . toplevel_after_dots [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1159
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots shift to state 1217
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1166
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1169
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd
--   reduce production toplevel_after_dots ->

State 1159:
## Known stack suffix:
## TNothing
## LR(1) items:
toplevel_after_dots -> TNothing . toplevel_after_exp [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1160
-- On stm_dots shift to state 1161
## Reductions:
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_exp ->

State 1160:
## Known stack suffix:
## TNothing toplevel_after_exp
## LR(1) items:
toplevel_after_dots -> TNothing toplevel_after_exp . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots -> TNothing toplevel_after_exp

State 1161:
## Known stack suffix:
## stm_dots
## LR(1) items:
toplevel_after_exp -> stm_dots . toplevel_after_dots [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1159
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots shift to state 1162
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1166
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1169
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_dots ->

State 1162:
## Known stack suffix:
## stm_dots toplevel_after_dots
## LR(1) items:
toplevel_after_exp -> stm_dots toplevel_after_dots . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_exp -> stm_dots toplevel_after_dots

State 1163:
## Known stack suffix:
## statement
## LR(1) items:
decl_statement_expr -> statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement_expr -> statement

State 1164:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident -> pure_ident . [ TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF ]
mident -> pure_ident . [ TDotDot ]
pure_ident_or_symbol -> pure_ident . [ TSymId TOPar0 TMetaId TMeta TIdent ]
## Transitions:
## Reductions:
-- On TXor TWhy TShROp TShLOp TRightIso TPtrOp TPtVirg TPlus TPOEllipsis TPCEllipsis TOrLog TOr TOpAssign TOPar TOEllipsis TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TLineEnd TIso TInc TEqEq TEq TEllipsis TDot TDmOp TDec TComma TCPar0 TCEllipsis TArobArob TArob TAndLog TAnd EOF
--   reduce production ident -> pure_ident
-- On TDotDot
--   reduce production mident -> pure_ident
-- On TSymId TOPar0 TMetaId TMeta TIdent
--   reduce production pure_ident_or_symbol -> pure_ident

State 1165:
## Known stack suffix:
## funproto
## LR(1) items:
decl_var -> funproto . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> funproto

State 1166:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
toplevel_after_dots -> expr . toplevel_after_exp [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1167
-- On stm_dots shift to state 1161
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_exp ->

State 1167:
## Known stack suffix:
## expr toplevel_after_exp
## LR(1) items:
toplevel_after_dots -> expr toplevel_after_exp . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots -> expr toplevel_after_exp

State 1168:
## Known stack suffix:
## decl_var
## LR(1) items:
decl_statement_expr -> decl_var . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement_expr -> decl_var

State 1169:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
toplevel_after_dots -> decl_statement_expr . toplevel_after_stm [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1170
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_stm ->

State 1170:
## Known stack suffix:
## decl_statement_expr toplevel_after_stm
## LR(1) items:
toplevel_after_dots -> decl_statement_expr toplevel_after_stm . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots -> decl_statement_expr toplevel_after_stm

State 1171:
## Known stack suffix:
## stm_dots
## LR(1) items:
toplevel_after_stm -> stm_dots . toplevel_after_dots [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1159
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots shift to state 1172
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1166
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1169
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_dots ->

State 1172:
## Known stack suffix:
## stm_dots toplevel_after_dots
## LR(1) items:
toplevel_after_stm -> stm_dots toplevel_after_dots . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_stm -> stm_dots toplevel_after_dots

State 1173:
## Known stack suffix:
## decl_ident
## LR(1) items:
decl_var -> decl_ident . TOPar eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> decl_ident . TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1174
## Reductions:

State 1174:
## Known stack suffix:
## decl_ident TOPar
## LR(1) items:
decl_var -> decl_ident TOPar . eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> decl_ident TOPar . eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 1175
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 1175:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> decl_ident TOPar eexpr_list_option . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1176
## Reductions:

State 1176:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> decl_ident TOPar eexpr_list_option TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1177
-- On TEq shift to state 1178
## Reductions:

State 1177:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TPtVirg
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> decl_ident TOPar eexpr_list_option TCPar TPtVirg

State 1178:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1179
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1179:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq initialize
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1180
## Reductions:

State 1180:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg

State 1181:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:

State 1182:
## Known stack suffix:
## ctype TPtVirg
## LR(1) items:
decl_var -> ctype TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> ctype TPtVirg

State 1183:
## Known stack suffix:
## ctype TOPar
## LR(1) items:
decl_var -> ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TMul shift to state 1184
## Reductions:

State 1184:
## Known stack suffix:
## ctype TOPar TMul
## LR(1) items:
decl_var -> ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1185
## Reductions:

State 1185:
## Known stack suffix:
## ctype TOPar TMul d_ident
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1186
## Reductions:

State 1186:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1187
## Reductions:

State 1187:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 1188
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 1188:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1189
## Reductions:

State 1189:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1190
-- On TEq shift to state 1191
## Reductions:

State 1190:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 1191:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1192
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1192:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1193
## Reductions:

State 1193:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 1194:
## Known stack suffix:
## ctype separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> ctype separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1195
## Reductions:

State 1195:
## Known stack suffix:
## ctype separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> ctype separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> ctype separated_nonempty_list(TComma,d_ident) TPtVirg

State 1196:
## Known stack suffix:
## ctype fn_ident
## LR(1) items:
funproto -> ctype fn_ident . TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1197
## Reductions:

State 1197:
## Known stack suffix:
## ctype fn_ident TOPar
## LR(1) items:
funproto -> ctype fn_ident TOPar . arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 735
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 736
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 737
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(name_opt_decl))) shift to state 738
-- On one_arg(name_opt_decl) shift to state 741
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 742
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(name_opt_decl)) shift to state 745
-- On arg_list(name_opt_decl) shift to state 1198
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(name_opt_decl) ->

State 1198:
## Known stack suffix:
## ctype fn_ident TOPar arg_list(name_opt_decl)
## LR(1) items:
funproto -> ctype fn_ident TOPar arg_list(name_opt_decl) . TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1199
## Reductions:

State 1199:
## Known stack suffix:
## ctype fn_ident TOPar arg_list(name_opt_decl) TCPar
## LR(1) items:
funproto -> ctype fn_ident TOPar arg_list(name_opt_decl) TCPar . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1200
## Reductions:

State 1200:
## Known stack suffix:
## ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
funproto -> ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funproto -> ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg

State 1201:
## Known stack suffix:
## ctype d_ident
## LR(1) items:
decl_var -> ctype d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 1202
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 1202:
## Known stack suffix:
## ctype d_ident TEq
## LR(1) items:
decl_var -> ctype d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1203
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1203:
## Known stack suffix:
## ctype d_ident TEq initialize
## LR(1) items:
decl_var -> ctype d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1204
## Reductions:

State 1204:
## Known stack suffix:
## ctype d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> ctype d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> ctype d_ident TEq initialize TPtVirg

State 1205:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ Tstatic Tregister Tinline Textern Tauto Tattr TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TLineEnd TIdent TFunDecl TCPar0 TArobArob TArob EOF ]
decl_var -> const_vol . pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> const_vol . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 1206
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 1206:
## Known stack suffix:
## const_vol pure_ident_or_symbol
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> const_vol pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 1207
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1209
## Reductions:

State 1207:
## Known stack suffix:
## const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident)
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1208
## Reductions:

State 1208:
## Known stack suffix:
## const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg

State 1209:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
separated_nonempty_list(TComma,d_ident) -> d_ident . [ TPtVirg ]
separated_nonempty_list(TComma,d_ident) -> d_ident . TComma separated_nonempty_list(TComma,d_ident) [ TPtVirg ]
## Transitions:
-- On TEq shift to state 1210
-- On TComma shift to state 840
## Reductions:
-- On TPtVirg
--   reduce production separated_nonempty_list(TComma,d_ident) -> d_ident

State 1210:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1211
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1211:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1212
## Reductions:

State 1212:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 1213:
## Known stack suffix:
## statement
## LR(1) items:
decl_statement -> statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement -> statement

State 1214:
## Known stack suffix:
## decl_var
## LR(1) items:
decl_statement -> decl_var . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement -> decl_var

State 1215:
## Known stack suffix:
## decl_statement
## LR(1) items:
toplevel_after_stm -> decl_statement . toplevel_after_stm [ TLineEnd TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1216
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd TArobArob TArob EOF
--   reduce production toplevel_after_stm ->

State 1216:
## Known stack suffix:
## decl_statement toplevel_after_stm
## LR(1) items:
toplevel_after_stm -> decl_statement toplevel_after_stm . [ TLineEnd TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_stm -> decl_statement toplevel_after_stm

State 1217:
## Known stack suffix:
## stm_dots toplevel_after_dots
## LR(1) items:
toplevel_seq_start(toplevel_after_dots) -> stm_dots toplevel_after_dots . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_start(toplevel_after_dots) -> stm_dots toplevel_after_dots

State 1218:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
toplevel_seq_start(toplevel_after_dots) -> expr . toplevel_after_exp [ TLineEnd ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1219
-- On stm_dots shift to state 1161
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TLineEnd
--   reduce production toplevel_after_exp ->

State 1219:
## Known stack suffix:
## expr toplevel_after_exp
## LR(1) items:
toplevel_seq_start(toplevel_after_dots) -> expr toplevel_after_exp . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_start(toplevel_after_dots) -> expr toplevel_after_exp

State 1220:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
toplevel_seq_start(toplevel_after_dots) -> decl_statement_expr . toplevel_after_stm [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1221
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd
--   reduce production toplevel_after_stm ->

State 1221:
## Known stack suffix:
## decl_statement_expr toplevel_after_stm
## LR(1) items:
toplevel_seq_start(toplevel_after_dots) -> decl_statement_expr toplevel_after_stm . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_start(toplevel_after_dots) -> decl_statement_expr toplevel_after_stm

State 1222:
## Known stack suffix:
## defineop ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd ]
includes -> defineop ctype . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TLineEnd shift to state 1223
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:

State 1223:
## Known stack suffix:
## defineop ctype TLineEnd
## LR(1) items:
includes -> defineop ctype TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production includes -> defineop ctype TLineEnd

State 1224:
## Known stack suffix:
## TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement
## LR(1) items:
statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TFor TOPar option(eexpr) TPtVirg option(eexpr) TPtVirg option(eexpr) TCPar single_statement

State 1225:
## Known stack suffix:
## TFor TOPar one_decl_var
## LR(1) items:
statement -> TFor TOPar one_decl_var . option(eexpr) TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 1226
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TPtVirg
--   reduce production option(eexpr) ->

State 1226:
## Known stack suffix:
## TFor TOPar one_decl_var option(eexpr)
## LR(1) items:
statement -> TFor TOPar one_decl_var option(eexpr) . TPtVirg option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPtVirg shift to state 1227
## Reductions:

State 1227:
## Known stack suffix:
## TFor TOPar one_decl_var option(eexpr) TPtVirg
## LR(1) items:
statement -> TFor TOPar one_decl_var option(eexpr) TPtVirg . option(eexpr) TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On option(eexpr) shift to state 1228
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 222
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:
-- On TCPar
--   reduce production option(eexpr) ->

State 1228:
## Known stack suffix:
## TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr)
## LR(1) items:
statement -> TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) . TCPar single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1229
## Reductions:

State 1229:
## Known stack suffix:
## TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar
## LR(1) items:
statement -> TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1230
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1230:
## Known stack suffix:
## TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar single_statement
## LR(1) items:
statement -> TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TFor TOPar one_decl_var option(eexpr) TPtVirg option(eexpr) TCPar single_statement

State 1231:
## Known stack suffix:
## funproto
## LR(1) items:
one_decl_var -> funproto . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> funproto

State 1232:
## Known stack suffix:
## decl_ident
## LR(1) items:
one_decl_var -> decl_ident . TOPar eexpr_list_option TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> decl_ident . TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TOPar shift to state 1233
## Reductions:

State 1233:
## Known stack suffix:
## decl_ident TOPar
## LR(1) items:
one_decl_var -> decl_ident TOPar . eexpr_list_option TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> decl_ident TOPar . eexpr_list_option TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 136
-- On TSizeof shift to state 137
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 176
-- On TOPar shift to state 293
-- On TOEllipsis shift to state 141
-- On TNothing shift to state 339
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 308
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 309
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 310
-- On TMetaFunc shift to state 149
-- On TMetaExpList shift to state 340
-- On TMetaExp shift to state 311
-- On TMetaErr shift to state 312
-- On TMetaConst shift to state 313
-- On TMeta shift to state 153
-- On TInt shift to state 314
-- On TInc shift to state 315
-- On TIdent shift to state 2
-- On TFloat shift to state 325
-- On TEllipsis shift to state 341
-- On TDecimalCst shift to state 326
-- On TDec shift to state 327
-- On TChar shift to state 329
-- On TBang shift to state 164
-- On TAndLog shift to state 330
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 332
-- On unary_expr(eexpr,nest_expressions) shift to state 344
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,nest_expressions) shift to state 334
-- On postfix_expr(eexpr,nest_expressions) shift to state 335
-- On nonempty_list_start(aexpr,TEllipsis) shift to state 403
-- On non_signable_types shift to state 265
-- On nest_expressions shift to state 352
-- On ident shift to state 182
-- On func_ident shift to state 353
-- On empty_list_start(aexpr,TEllipsis) shift to state 404
-- On eexpr_list_option shift to state 1234
-- On dargexpr shift to state 354
-- On ctype shift to state 355
-- On const_vol shift to state 279
-- On cond_expr(eexpr,nest_expressions) shift to state 356
-- On cast_expr(eexpr,nest_expressions) shift to state 357
-- On basic_expr(eexpr,nest_expressions) shift to state 358
-- On assign_expr(eexpr,nest_expressions) shift to state 359
-- On arith_expr(eexpr,nest_expressions) shift to state 360
-- On all_basic_types shift to state 288
-- On aexpr shift to state 395
## Reductions:
-- On TCPar
--   reduce production empty_list_start(aexpr,TEllipsis) ->

State 1234:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option . TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> decl_ident TOPar eexpr_list_option . TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1235
## Reductions:

State 1235:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1236
-- On TEq shift to state 1237
## Reductions:

State 1236:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TPtVirg
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TPtVirg

State 1237:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1238
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1238:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq initialize
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1239
## Reductions:

State 1239:
## Known stack suffix:
## decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg

State 1240:
## Known stack suffix:
## ctype
## LR(1) items:
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1241
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1242
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1253
## Reductions:

State 1241:
## Known stack suffix:
## ctype TPtVirg
## LR(1) items:
one_decl_var -> ctype TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> ctype TPtVirg

State 1242:
## Known stack suffix:
## ctype TOPar
## LR(1) items:
one_decl_var -> ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar . TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TMul shift to state 1243
## Reductions:

State 1243:
## Known stack suffix:
## ctype TOPar TMul
## LR(1) items:
one_decl_var -> ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul . d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1244
## Reductions:

State 1244:
## Known stack suffix:
## ctype TOPar TMul d_ident
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul d_ident . TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1245
## Reductions:

State 1245:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul d_ident TCPar . TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TOPar shift to state 1246
## Reductions:

State 1246:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar . decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 616
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 617
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 620
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_dec(name_opt_decl) shift to state 623
-- On nonempty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 633
-- On non_signable_types shift to state 265
-- On name_opt_decl shift to state 626
-- On empty_list_start(one_dec(name_opt_decl),TEllipsis) shift to state 634
-- On decl_list(name_opt_decl) shift to state 1247
-- On decl shift to state 627
-- On ctype shift to state 628
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production empty_list_start(one_dec(name_opt_decl),TEllipsis) ->

State 1247:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl)
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) . TCPar TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TCPar shift to state 1248
## Reductions:

State 1248:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1249
-- On TEq shift to state 1250
## Reductions:

State 1249:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg

State 1250:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1251
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1251:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1252
## Reductions:

State 1252:
## Known stack suffix:
## ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg

State 1253:
## Known stack suffix:
## ctype d_ident
## LR(1) items:
one_decl_var -> ctype d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> ctype d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1254
-- On TEq shift to state 1255
## Reductions:

State 1254:
## Known stack suffix:
## ctype d_ident TPtVirg
## LR(1) items:
one_decl_var -> ctype d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> ctype d_ident TPtVirg

State 1255:
## Known stack suffix:
## ctype d_ident TEq
## LR(1) items:
one_decl_var -> ctype d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1256
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1256:
## Known stack suffix:
## ctype d_ident TEq initialize
## LR(1) items:
one_decl_var -> ctype d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1257
## Reductions:

State 1257:
## Known stack suffix:
## ctype d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> ctype d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> ctype d_ident TEq initialize TPtVirg

State 1258:
## Known stack suffix:
## const_vol
## LR(1) items:
ctype -> const_vol . all_basic_types list(mul) [ TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TCPar0 ]
one_decl_var -> const_vol . pure_ident_or_symbol d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> const_vol . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TMetaType shift to state 110
-- On TIdent shift to state 2
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 1259
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On all_basic_types shift to state 282
## Reductions:

State 1259:
## Known stack suffix:
## const_vol pure_ident_or_symbol
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol . d_ident TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> const_vol pure_ident_or_symbol . d_ident TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 128
-- On d_ident shift to state 1260
## Reductions:

State 1260:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol d_ident . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
one_decl_var -> const_vol pure_ident_or_symbol d_ident . TEq initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1261
-- On TEq shift to state 1262
## Reductions:

State 1261:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TPtVirg
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol d_ident TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> const_vol pure_ident_or_symbol d_ident TPtVirg

State 1262:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol d_ident TEq . initialize TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TOBrace shift to state 469
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaInit shift to state 555
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On initialize shift to state 1263
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 558
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1263:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq initialize
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize . TPtVirg [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
-- On TPtVirg shift to state 1264
## Reductions:

State 1264:
## Known stack suffix:
## const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg
## LR(1) items:
one_decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg . [ TTilde TSymId TString TSizeof TPtVirg TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMid0 TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TLineEnd TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TCPar0 TBang TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_decl_var -> const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg

State 1265:
## Known stack suffix:
## statement
## LR(1) items:
midzero_list(statement,statement) -> statement . list(mzl(statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1266
-- On mzl(statement) shift to state 1268
-- On list(mzl(statement)) shift to state 1270
## Reductions:
-- On TCPar0
--   reduce production list(mzl(statement)) ->

State 1266:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(statement) -> TMid0 . statement [ TMid0 TCPar0 ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 938
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1267
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1267:
## Known stack suffix:
## TMid0 statement
## LR(1) items:
mzl(statement) -> TMid0 statement . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(statement) -> TMid0 statement

State 1268:
## Known stack suffix:
## mzl(statement)
## LR(1) items:
list(mzl(statement)) -> mzl(statement) . list(mzl(statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1266
-- On mzl(statement) shift to state 1268
-- On list(mzl(statement)) shift to state 1269
## Reductions:
-- On TCPar0
--   reduce production list(mzl(statement)) ->

State 1269:
## Known stack suffix:
## mzl(statement) list(mzl(statement))
## LR(1) items:
list(mzl(statement)) -> mzl(statement) list(mzl(statement)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(statement)) -> mzl(statement) list(mzl(statement))

State 1270:
## Known stack suffix:
## statement list(mzl(statement))
## LR(1) items:
midzero_list(statement,statement) -> statement list(mzl(statement)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(statement,statement) -> statement list(mzl(statement))

State 1271:
## Known stack suffix:
## TOPar0 midzero_list(statement,statement)
## LR(1) items:
single_statement -> TOPar0 midzero_list(statement,statement) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 1272
## Reductions:

State 1272:
## Known stack suffix:
## TOPar0 midzero_list(statement,statement) TCPar0
## LR(1) items:
single_statement -> TOPar0 midzero_list(statement,statement) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production single_statement -> TOPar0 midzero_list(statement,statement) TCPar0

State 1273:
## Known stack suffix:
## expr
## LR(1) items:
midzero_list(expr,eexpr) -> expr . list(mzl(eexpr)) [ TCPar0 ]
option(expr) -> expr . [ TPtVirg ]
## Transitions:
-- On TMid0 shift to state 271
-- On mzl(eexpr) shift to state 273
-- On list(mzl(eexpr)) shift to state 1025
## Reductions:
-- On TCPar0
--   reduce production list(mzl(eexpr)) ->
-- On TPtVirg
--   reduce production option(expr) -> expr

State 1274:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
statement -> TIf TOPar eexpr TCPar single_statement . TElse single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TElse shift to state 1275
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production statement -> TIf TOPar eexpr TCPar single_statement

State 1275:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement TElse
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement TElse . single_statement [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Texec shift to state 756
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1049
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On statement shift to state 1133
-- On single_statement shift to state 1276
-- On pure_ident shift to state 498
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1276:
## Known stack suffix:
## TIf TOPar eexpr TCPar single_statement TElse single_statement
## LR(1) items:
statement -> TIf TOPar eexpr TCPar single_statement TElse single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TIf TOPar eexpr TCPar single_statement TElse single_statement

State 1277:
## Known stack suffix:
## stm_dots
## LR(1) items:
fun_after_stm -> stm_dots . fun_after_dots [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1278
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_dots shift to state 1288
-- On expr shift to state 1281
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1283
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production fun_after_dots ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1278:
## Known stack suffix:
## TNothing
## LR(1) items:
fun_after_dots -> TNothing . fun_after_exp [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1279
-- On fun_after_exp shift to state 1287
## Reductions:

State 1279:
## Known stack suffix:
## stm_dots
## LR(1) items:
fun_after_exp -> stm_dots . fun_after_dots [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1278
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_dots shift to state 1280
-- On expr shift to state 1281
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1283
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production fun_after_dots ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1280:
## Known stack suffix:
## stm_dots fun_after_dots
## LR(1) items:
fun_after_exp -> stm_dots fun_after_dots . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_exp -> stm_dots fun_after_dots

State 1281:
## Known stack suffix:
## expr
## LR(1) items:
fun_after_dots -> expr . fun_after_exp [ TMid0 TDefault TCase TCPar0 TCBrace ]
option(expr) -> expr . [ TPtVirg ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1279
-- On fun_after_exp shift to state 1282
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr

State 1282:
## Known stack suffix:
## expr fun_after_exp
## LR(1) items:
fun_after_dots -> expr fun_after_exp . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots -> expr fun_after_exp

State 1283:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
fun_after_dots -> decl_statement_expr . fun_after_stm [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_stm shift to state 1284
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1284:
## Known stack suffix:
## decl_statement_expr fun_after_stm
## LR(1) items:
fun_after_dots -> decl_statement_expr fun_after_stm . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots -> decl_statement_expr fun_after_stm

State 1285:
## Known stack suffix:
## decl_statement
## LR(1) items:
fun_after_stm -> decl_statement . fun_after_stm [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_stm shift to state 1286
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TDefault TCase TCPar0 TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1286:
## Known stack suffix:
## decl_statement fun_after_stm
## LR(1) items:
fun_after_stm -> decl_statement fun_after_stm . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_stm -> decl_statement fun_after_stm

State 1287:
## Known stack suffix:
## TNothing fun_after_exp
## LR(1) items:
fun_after_dots -> TNothing fun_after_exp . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots -> TNothing fun_after_exp

State 1288:
## Known stack suffix:
## stm_dots fun_after_dots
## LR(1) items:
fun_after_stm -> stm_dots fun_after_dots . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_stm -> stm_dots fun_after_dots

State 1289:
## Known stack suffix:
## TOBrace fun_start
## LR(1) items:
statement -> TOBrace fun_start . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 1290
## Reductions:

State 1290:
## Known stack suffix:
## TOBrace fun_start TCBrace
## LR(1) items:
statement -> TOBrace fun_start TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TOBrace fun_start TCBrace

State 1291:
## Known stack suffix:
## fun_after_stm
## LR(1) items:
fun_start -> fun_after_stm . [ TMid0 TDefault TCase TCPar0 TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_start -> fun_after_stm

State 1292:
## Known stack suffix:
## TOPar0 midzero_list(fun_after_stm,fun_after_dots_or)
## LR(1) items:
decl_statement_expr -> TOPar0 midzero_list(fun_after_stm,fun_after_dots_or) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 1293
## Reductions:

State 1293:
## Known stack suffix:
## TOPar0 midzero_list(fun_after_stm,fun_after_dots_or) TCPar0
## LR(1) items:
decl_statement_expr -> TOPar0 midzero_list(fun_after_stm,fun_after_dots_or) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement_expr -> TOPar0 midzero_list(fun_after_stm,fun_after_dots_or) TCPar0

State 1294:
## Known stack suffix:
## fun_after_stm
## LR(1) items:
midzero_list(fun_after_stm,fun_after_dots_or) -> fun_after_stm . list(mzl(fun_after_dots_or)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1295
-- On mzl(fun_after_dots_or) shift to state 1305
-- On list(mzl(fun_after_dots_or)) shift to state 1307
## Reductions:
-- On TCPar0
--   reduce production list(mzl(fun_after_dots_or)) ->

State 1295:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(fun_after_dots_or) -> TMid0 . fun_after_dots_or [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1296
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_dots_or shift to state 1300
-- On expr shift to state 1301
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1303
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_dots_or ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1296:
## Known stack suffix:
## TNothing
## LR(1) items:
fun_after_dots_or -> TNothing . fun_after_exp_or [ TMid0 TCPar0 ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1297
-- On fun_after_exp_or shift to state 1299
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_exp_or ->

State 1297:
## Known stack suffix:
## stm_dots
## LR(1) items:
fun_after_exp_or -> stm_dots . fun_after_dots [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1278
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_dots shift to state 1298
-- On expr shift to state 1281
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1283
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_dots ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1298:
## Known stack suffix:
## stm_dots fun_after_dots
## LR(1) items:
fun_after_exp_or -> stm_dots fun_after_dots . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_exp_or -> stm_dots fun_after_dots

State 1299:
## Known stack suffix:
## TNothing fun_after_exp_or
## LR(1) items:
fun_after_dots_or -> TNothing fun_after_exp_or . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots_or -> TNothing fun_after_exp_or

State 1300:
## Known stack suffix:
## TMid0 fun_after_dots_or
## LR(1) items:
mzl(fun_after_dots_or) -> TMid0 fun_after_dots_or . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(fun_after_dots_or) -> TMid0 fun_after_dots_or

State 1301:
## Known stack suffix:
## expr
## LR(1) items:
fun_after_dots_or -> expr . fun_after_exp_or [ TMid0 TCPar0 ]
option(expr) -> expr . [ TPtVirg ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1297
-- On fun_after_exp_or shift to state 1302
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_exp_or ->
-- On TPtVirg
--   reduce production option(expr) -> expr

State 1302:
## Known stack suffix:
## expr fun_after_exp_or
## LR(1) items:
fun_after_dots_or -> expr fun_after_exp_or . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots_or -> expr fun_after_exp_or

State 1303:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
fun_after_dots_or -> decl_statement_expr . fun_after_stm [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_after_stm shift to state 1304
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1304:
## Known stack suffix:
## decl_statement_expr fun_after_stm
## LR(1) items:
fun_after_dots_or -> decl_statement_expr fun_after_stm . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_after_dots_or -> decl_statement_expr fun_after_stm

State 1305:
## Known stack suffix:
## mzl(fun_after_dots_or)
## LR(1) items:
list(mzl(fun_after_dots_or)) -> mzl(fun_after_dots_or) . list(mzl(fun_after_dots_or)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1295
-- On mzl(fun_after_dots_or) shift to state 1305
-- On list(mzl(fun_after_dots_or)) shift to state 1306
## Reductions:
-- On TCPar0
--   reduce production list(mzl(fun_after_dots_or)) ->

State 1306:
## Known stack suffix:
## mzl(fun_after_dots_or) list(mzl(fun_after_dots_or))
## LR(1) items:
list(mzl(fun_after_dots_or)) -> mzl(fun_after_dots_or) list(mzl(fun_after_dots_or)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(fun_after_dots_or)) -> mzl(fun_after_dots_or) list(mzl(fun_after_dots_or))

State 1307:
## Known stack suffix:
## fun_after_stm list(mzl(fun_after_dots_or))
## LR(1) items:
midzero_list(fun_after_stm,fun_after_dots_or) -> fun_after_stm list(mzl(fun_after_dots_or)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(fun_after_stm,fun_after_dots_or) -> fun_after_stm list(mzl(fun_after_dots_or))

State 1308:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TCPar0 TBreak TBang TAndLog TAnd ]
midzero_list(ctype,ctype) -> ctype . list(mzl(ctype)) [ TCPar0 ]
## Transitions:
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMid0 shift to state 277
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mzl(ctype) shift to state 290
-- On mident shift to state 55
-- On list(mzl(ctype)) shift to state 292
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 1309:
## Known stack suffix:
## TNothing
## LR(1) items:
nest_after_dots -> TNothing . nest_after_exp [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1310
-- On nest_after_exp shift to state 1320
## Reductions:
-- On TRightIso TPCEllipsis TIso TCEllipsis EOF
--   reduce production nest_after_exp ->

State 1310:
## Known stack suffix:
## stm_dots
## LR(1) items:
nest_after_exp -> stm_dots . nest_after_dots [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_after_dots shift to state 1311
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1311:
## Known stack suffix:
## stm_dots nest_after_dots
## LR(1) items:
nest_after_exp -> stm_dots nest_after_dots . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_exp -> stm_dots nest_after_dots

State 1312:
## Known stack suffix:
## expr
## LR(1) items:
nest_after_dots -> expr . nest_after_exp [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
option(expr) -> expr . [ TPtVirg ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1310
-- On nest_after_exp shift to state 1313
## Reductions:
-- On TRightIso TPCEllipsis TIso TCEllipsis EOF
--   reduce production nest_after_exp ->
-- On TPtVirg
--   reduce production option(expr) -> expr

State 1313:
## Known stack suffix:
## expr nest_after_exp
## LR(1) items:
nest_after_dots -> expr nest_after_exp . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_dots -> expr nest_after_exp

State 1314:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
nest_after_dots -> decl_statement_expr . nest_after_stm [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1315
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_after_stm shift to state 1317
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1318
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TRightIso TPCEllipsis TIso TCEllipsis EOF
--   reduce production nest_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1315:
## Known stack suffix:
## stm_dots
## LR(1) items:
nest_after_stm -> stm_dots . nest_after_dots [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_after_dots shift to state 1316
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1316:
## Known stack suffix:
## stm_dots nest_after_dots
## LR(1) items:
nest_after_stm -> stm_dots nest_after_dots . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_stm -> stm_dots nest_after_dots

State 1317:
## Known stack suffix:
## decl_statement_expr nest_after_stm
## LR(1) items:
nest_after_dots -> decl_statement_expr nest_after_stm . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_dots -> decl_statement_expr nest_after_stm

State 1318:
## Known stack suffix:
## decl_statement
## LR(1) items:
nest_after_stm -> decl_statement . nest_after_stm [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1315
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_after_stm shift to state 1319
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1318
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TRightIso TPCEllipsis TIso TCEllipsis EOF
--   reduce production nest_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1319:
## Known stack suffix:
## decl_statement nest_after_stm
## LR(1) items:
nest_after_stm -> decl_statement nest_after_stm . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_stm -> decl_statement nest_after_stm

State 1320:
## Known stack suffix:
## TNothing nest_after_exp
## LR(1) items:
nest_after_dots -> TNothing nest_after_exp . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_after_dots -> TNothing nest_after_exp

State 1321:
## Known stack suffix:
## TOEllipsis list(whenppdecs) nest_start
## LR(1) items:
stm_dots -> TOEllipsis list(whenppdecs) nest_start . TCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCEllipsis shift to state 1322
## Reductions:

State 1322:
## Known stack suffix:
## TOEllipsis list(whenppdecs) nest_start TCEllipsis
## LR(1) items:
stm_dots -> TOEllipsis list(whenppdecs) nest_start TCEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stm_dots -> TOEllipsis list(whenppdecs) nest_start TCEllipsis

State 1323:
## Known stack suffix:
## nest_after_dots
## LR(1) items:
nest_start -> nest_after_dots . [ TRightIso TPCEllipsis TIso TCEllipsis EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nest_start -> nest_after_dots

State 1324:
## Known stack suffix:
## TOPar0 midzero_list(fun_start,fun_start)
## LR(1) items:
decl_statement -> TOPar0 midzero_list(fun_start,fun_start) . TCPar0 [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar0 shift to state 1325
## Reductions:

State 1325:
## Known stack suffix:
## TOPar0 midzero_list(fun_start,fun_start) TCPar0
## LR(1) items:
decl_statement -> TOPar0 midzero_list(fun_start,fun_start) TCPar0 . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_statement -> TOPar0 midzero_list(fun_start,fun_start) TCPar0

State 1326:
## Known stack suffix:
## fun_start
## LR(1) items:
midzero_list(fun_start,fun_start) -> fun_start . list(mzl(fun_start)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1327
-- On mzl(fun_start) shift to state 1329
-- On list(mzl(fun_start)) shift to state 1331
## Reductions:
-- On TCPar0
--   reduce production list(mzl(fun_start)) ->

State 1327:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(fun_start) -> TMid0 . fun_start [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1328
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TMid0 TCPar0
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1328:
## Known stack suffix:
## TMid0 fun_start
## LR(1) items:
mzl(fun_start) -> TMid0 fun_start . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(fun_start) -> TMid0 fun_start

State 1329:
## Known stack suffix:
## mzl(fun_start)
## LR(1) items:
list(mzl(fun_start)) -> mzl(fun_start) . list(mzl(fun_start)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1327
-- On mzl(fun_start) shift to state 1329
-- On list(mzl(fun_start)) shift to state 1330
## Reductions:
-- On TCPar0
--   reduce production list(mzl(fun_start)) ->

State 1330:
## Known stack suffix:
## mzl(fun_start) list(mzl(fun_start))
## LR(1) items:
list(mzl(fun_start)) -> mzl(fun_start) list(mzl(fun_start)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(fun_start)) -> mzl(fun_start) list(mzl(fun_start))

State 1331:
## Known stack suffix:
## fun_start list(mzl(fun_start))
## LR(1) items:
midzero_list(fun_start,fun_start) -> fun_start list(mzl(fun_start)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(fun_start,fun_start) -> fun_start list(mzl(fun_start))

State 1332:
## Known stack suffix:
## TWhen TNotEq when_start
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TNotEq when_start . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 1333
## Reductions:

State 1333:
## Known stack suffix:
## TWhen TNotEq when_start TLineEnd
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TNotEq when_start TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whens(when_start,rule_elem_statement,any_strict) -> TWhen TNotEq when_start TLineEnd

State 1334:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
when_start -> expr . toplevel_after_exp [ TLineEnd ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1335
-- On stm_dots shift to state 1161
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TLineEnd
--   reduce production toplevel_after_exp ->

State 1335:
## Known stack suffix:
## expr toplevel_after_exp
## LR(1) items:
when_start -> expr toplevel_after_exp . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production when_start -> expr toplevel_after_exp

State 1336:
## Known stack suffix:
## decl_statement
## LR(1) items:
when_start -> decl_statement . toplevel_after_stm [ TLineEnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1337
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TLineEnd
--   reduce production toplevel_after_stm ->

State 1337:
## Known stack suffix:
## decl_statement toplevel_after_stm
## LR(1) items:
when_start -> decl_statement toplevel_after_stm . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production when_start -> decl_statement toplevel_after_stm

State 1338:
## Known stack suffix:
## TForall
## LR(1) items:
any_strict -> TForall . [ TLineEnd TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_strict -> TForall

State 1339:
## Known stack suffix:
## TExists
## LR(1) items:
any_strict -> TExists . [ TLineEnd TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_strict -> TExists

State 1340:
## Known stack suffix:
## TWhen TEq
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TEq . rule_elem_statement TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 1341
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1345
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 1055
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1346
-- On TChar shift to state 952
-- On TBreak shift to state 1348
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1056
-- On signable_types shift to state 126
-- On rule_elem_statement shift to state 1362
-- On pure_ident_or_symbol shift to state 1095
-- On pure_ident shift to state 1101
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1353
-- On one_decl_var shift to state 1355
-- On non_signable_types shift to state 265
-- On invalid shift to state 971
-- On ident shift to state 182
-- On funproto shift to state 1231
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On decl_ident shift to state 1232
-- On ctype shift to state 1240
-- On const_vol shift to state 1258
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1341:
## Known stack suffix:
## TReturn
## LR(1) items:
rule_elem_statement -> TReturn . eexpr TPtVirg [ TMid0 TLineEnd TCPar0 ]
rule_elem_statement -> TReturn . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPtVirg shift to state 1342
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1343
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1342:
## Known stack suffix:
## TReturn TPtVirg
## LR(1) items:
rule_elem_statement -> TReturn TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> TReturn TPtVirg

State 1343:
## Known stack suffix:
## TReturn eexpr
## LR(1) items:
rule_elem_statement -> TReturn eexpr . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 1344
## Reductions:

State 1344:
## Known stack suffix:
## TReturn eexpr TPtVirg
## LR(1) items:
rule_elem_statement -> TReturn eexpr TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> TReturn eexpr TPtVirg

State 1345:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TCPar0 ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TAndLog TAnd ]
rule_elem_statement -> TOPar0 . midzero_list(rule_elem_statement,rule_elem_statement) TCPar0 [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 1341
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1345
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 1055
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1346
-- On TChar shift to state 952
-- On TBreak shift to state 1348
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1056
-- On signable_types shift to state 126
-- On rule_elem_statement shift to state 1350
-- On pure_ident_or_symbol shift to state 1095
-- On pure_ident shift to state 1101
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1353
-- On one_decl_var shift to state 1355
-- On non_signable_types shift to state 265
-- On midzero_list(rule_elem_statement,rule_elem_statement) shift to state 1359
-- On midzero_list(expr,eexpr) shift to state 1022
-- On midzero_list(ctype,ctype) shift to state 268
-- On invalid shift to state 971
-- On ident shift to state 182
-- On funproto shift to state 1231
-- On func_ident shift to state 972
-- On expr shift to state 1273
-- On decl_ident shift to state 1232
-- On ctype shift to state 1361
-- On const_vol shift to state 1258
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1346:
## Known stack suffix:
## TContinue
## LR(1) items:
rule_elem_statement -> TContinue . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 1347
## Reductions:

State 1347:
## Known stack suffix:
## TContinue TPtVirg
## LR(1) items:
rule_elem_statement -> TContinue TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> TContinue TPtVirg

State 1348:
## Known stack suffix:
## TBreak
## LR(1) items:
rule_elem_statement -> TBreak . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 1349
## Reductions:

State 1349:
## Known stack suffix:
## TBreak TPtVirg
## LR(1) items:
rule_elem_statement -> TBreak TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> TBreak TPtVirg

State 1350:
## Known stack suffix:
## rule_elem_statement
## LR(1) items:
midzero_list(rule_elem_statement,rule_elem_statement) -> rule_elem_statement . list(mzl(rule_elem_statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1351
-- On mzl(rule_elem_statement) shift to state 1356
-- On list(mzl(rule_elem_statement)) shift to state 1358
## Reductions:
-- On TCPar0
--   reduce production list(mzl(rule_elem_statement)) ->

State 1351:
## Known stack suffix:
## TMid0
## LR(1) items:
mzl(rule_elem_statement) -> TMid0 . rule_elem_statement [ TMid0 TCPar0 ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 1341
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1345
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 1055
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1346
-- On TChar shift to state 952
-- On TBreak shift to state 1348
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1056
-- On signable_types shift to state 126
-- On rule_elem_statement shift to state 1352
-- On pure_ident_or_symbol shift to state 1095
-- On pure_ident shift to state 1101
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1353
-- On one_decl_var shift to state 1355
-- On non_signable_types shift to state 265
-- On invalid shift to state 971
-- On ident shift to state 182
-- On funproto shift to state 1231
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On decl_ident shift to state 1232
-- On ctype shift to state 1240
-- On const_vol shift to state 1258
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1352:
## Known stack suffix:
## TMid0 rule_elem_statement
## LR(1) items:
mzl(rule_elem_statement) -> TMid0 rule_elem_statement . [ TMid0 TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mzl(rule_elem_statement) -> TMid0 rule_elem_statement

State 1353:
## Known stack suffix:
## option(expr)
## LR(1) items:
rule_elem_statement -> option(expr) . TPtVirg [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TPtVirg shift to state 1354
## Reductions:

State 1354:
## Known stack suffix:
## option(expr) TPtVirg
## LR(1) items:
rule_elem_statement -> option(expr) TPtVirg . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> option(expr) TPtVirg

State 1355:
## Known stack suffix:
## one_decl_var
## LR(1) items:
rule_elem_statement -> one_decl_var . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> one_decl_var

State 1356:
## Known stack suffix:
## mzl(rule_elem_statement)
## LR(1) items:
list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) . list(mzl(rule_elem_statement)) [ TCPar0 ]
## Transitions:
-- On TMid0 shift to state 1351
-- On mzl(rule_elem_statement) shift to state 1356
-- On list(mzl(rule_elem_statement)) shift to state 1357
## Reductions:
-- On TCPar0
--   reduce production list(mzl(rule_elem_statement)) ->

State 1357:
## Known stack suffix:
## mzl(rule_elem_statement) list(mzl(rule_elem_statement))
## LR(1) items:
list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) list(mzl(rule_elem_statement)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(mzl(rule_elem_statement)) -> mzl(rule_elem_statement) list(mzl(rule_elem_statement))

State 1358:
## Known stack suffix:
## rule_elem_statement list(mzl(rule_elem_statement))
## LR(1) items:
midzero_list(rule_elem_statement,rule_elem_statement) -> rule_elem_statement list(mzl(rule_elem_statement)) . [ TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production midzero_list(rule_elem_statement,rule_elem_statement) -> rule_elem_statement list(mzl(rule_elem_statement))

State 1359:
## Known stack suffix:
## TOPar0 midzero_list(rule_elem_statement,rule_elem_statement)
## LR(1) items:
rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement,rule_elem_statement) . TCPar0 [ TMid0 TLineEnd TCPar0 ]
## Transitions:
-- On TCPar0 shift to state 1360
## Reductions:

State 1360:
## Known stack suffix:
## TOPar0 midzero_list(rule_elem_statement,rule_elem_statement) TCPar0
## LR(1) items:
rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement,rule_elem_statement) TCPar0 . [ TMid0 TLineEnd TCPar0 ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule_elem_statement -> TOPar0 midzero_list(rule_elem_statement,rule_elem_statement) TCPar0

State 1361:
## Known stack suffix:
## ctype
## LR(1) items:
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ TMid0 TCPar0 ]
midzero_list(ctype,ctype) -> ctype . list(mzl(ctype)) [ TCPar0 ]
one_decl_var -> ctype . TPtVirg [ TMid0 TCPar0 ]
one_decl_var -> ctype . d_ident TPtVirg [ TMid0 TCPar0 ]
one_decl_var -> ctype . d_ident TEq initialize TPtVirg [ TMid0 TCPar0 ]
one_decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ TMid0 TCPar0 ]
one_decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ TMid0 TCPar0 ]
## Transitions:
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1241
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1242
-- On TMid0 shift to state 277
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mzl(ctype) shift to state 290
-- On mident shift to state 55
-- On list(mzl(ctype)) shift to state 292
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1253
## Reductions:
-- On TCPar0
--   reduce production list(mzl(ctype)) ->

State 1362:
## Known stack suffix:
## TWhen TEq rule_elem_statement
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TEq rule_elem_statement . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 1363
## Reductions:

State 1363:
## Known stack suffix:
## TWhen TEq rule_elem_statement TLineEnd
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen TEq rule_elem_statement TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whens(when_start,rule_elem_statement,any_strict) -> TWhen TEq rule_elem_statement TLineEnd

State 1364:
## Known stack suffix:
## TAny
## LR(1) items:
any_strict -> TAny . [ TLineEnd TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_strict -> TAny

State 1365:
## Known stack suffix:
## TWhen separated_nonempty_list(TComma,any_strict)
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen separated_nonempty_list(TComma,any_strict) . TLineEnd [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TLineEnd shift to state 1366
## Reductions:

State 1366:
## Known stack suffix:
## TWhen separated_nonempty_list(TComma,any_strict) TLineEnd
## LR(1) items:
whens(when_start,rule_elem_statement,any_strict) -> TWhen separated_nonempty_list(TComma,any_strict) TLineEnd . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TWhenTrue TWhenFalse TWhen TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production whens(when_start,rule_elem_statement,any_strict) -> TWhen separated_nonempty_list(TComma,any_strict) TLineEnd

State 1367:
## Known stack suffix:
## any_strict
## LR(1) items:
separated_nonempty_list(TComma,any_strict) -> any_strict . [ TLineEnd ]
separated_nonempty_list(TComma,any_strict) -> any_strict . TComma separated_nonempty_list(TComma,any_strict) [ TLineEnd ]
## Transitions:
-- On TComma shift to state 1368
## Reductions:
-- On TLineEnd
--   reduce production separated_nonempty_list(TComma,any_strict) -> any_strict

State 1368:
## Known stack suffix:
## any_strict TComma
## LR(1) items:
separated_nonempty_list(TComma,any_strict) -> any_strict TComma . separated_nonempty_list(TComma,any_strict) [ TLineEnd ]
## Transitions:
-- On TStrict shift to state 930
-- On TForall shift to state 1338
-- On TExists shift to state 1339
-- On TAny shift to state 1364
-- On separated_nonempty_list(TComma,any_strict) shift to state 1369
-- On any_strict shift to state 1367
## Reductions:

State 1369:
## Known stack suffix:
## any_strict TComma separated_nonempty_list(TComma,any_strict)
## LR(1) items:
separated_nonempty_list(TComma,any_strict) -> any_strict TComma separated_nonempty_list(TComma,any_strict) . [ TLineEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,any_strict) -> any_strict TComma separated_nonempty_list(TComma,any_strict)

State 1370:
## Known stack suffix:
## TPOEllipsis list(whenppdecs)
## LR(1) items:
stm_dots -> TPOEllipsis list(whenppdecs) . nest_start TPCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1371
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1371:
## Known stack suffix:
## TPOEllipsis list(whenppdecs) nest_start
## LR(1) items:
stm_dots -> TPOEllipsis list(whenppdecs) nest_start . TPCEllipsis [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPCEllipsis shift to state 1372
## Reductions:

State 1372:
## Known stack suffix:
## TPOEllipsis list(whenppdecs) nest_start TPCEllipsis
## LR(1) items:
stm_dots -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stm_dots -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis

State 1373:
## Known stack suffix:
## TDefault TDotDot fun_start
## LR(1) items:
case_line -> TDefault TDotDot fun_start . [ TDefault TCase TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_line -> TDefault TDotDot fun_start

State 1374:
## Known stack suffix:
## TCase
## LR(1) items:
case_line -> TCase . eexpr TDotDot fun_start [ TDefault TCase TCBrace ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1375
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1375:
## Known stack suffix:
## TCase eexpr
## LR(1) items:
case_line -> TCase eexpr . TDotDot fun_start [ TDefault TCase TCBrace ]
## Transitions:
-- On TDotDot shift to state 1376
## Reductions:

State 1376:
## Known stack suffix:
## TCase eexpr TDotDot
## LR(1) items:
case_line -> TCase eexpr TDotDot . fun_start [ TDefault TCase TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1377
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1377:
## Known stack suffix:
## TCase eexpr TDotDot fun_start
## LR(1) items:
case_line -> TCase eexpr TDotDot fun_start . [ TDefault TCase TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_line -> TCase eexpr TDotDot fun_start

State 1378:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace list(decl_var) list(case_line)
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace list(decl_var) list(case_line) . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 1379
## Reductions:

State 1379:
## Known stack suffix:
## TSwitch TOPar eexpr TCPar TOBrace list(decl_var) list(case_line) TCBrace
## LR(1) items:
statement -> TSwitch TOPar eexpr TCPar TOBrace list(decl_var) list(case_line) TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TSwitch TOPar eexpr TCPar TOBrace list(decl_var) list(case_line) TCBrace

State 1380:
## Known stack suffix:
## case_line
## LR(1) items:
list(case_line) -> case_line . list(case_line) [ TCBrace ]
## Transitions:
-- On TDefault shift to state 891
-- On TCase shift to state 1374
-- On list(case_line) shift to state 1381
-- On case_line shift to state 1380
## Reductions:
-- On TCBrace
--   reduce production list(case_line) ->

State 1381:
## Known stack suffix:
## case_line list(case_line)
## LR(1) items:
list(case_line) -> case_line list(case_line) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(case_line) -> case_line list(case_line)

State 1382:
## Known stack suffix:
## decl_var
## LR(1) items:
list(decl_var) -> decl_var . list(decl_var) [ TDefault TCase TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On list(decl_var) shift to state 1383
-- On funproto shift to state 1165
-- On decl_var shift to state 1382
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On all_basic_types shift to state 288
## Reductions:
-- On TDefault TCase TCBrace
--   reduce production list(decl_var) ->

State 1383:
## Known stack suffix:
## decl_var list(decl_var)
## LR(1) items:
list(decl_var) -> decl_var list(decl_var) . [ TDefault TCase TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(decl_var) -> decl_var list(decl_var)

State 1384:
## Known stack suffix:
## TWhile TOPar eexpr TCPar single_statement
## LR(1) items:
statement -> TWhile TOPar eexpr TCPar single_statement . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TRightIso TReturn TPtVirg TPragma TPlus TPOEllipsis TPCEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMid0 TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TLineEnd TIteratorId TIso TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TElse TEllipsis TDo TDefineParam TDefine TDefault TDeclarerId TDecimalCst TDec TContinue TChar TCase TCPar0 TCEllipsis TCBrace TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TWhile TOPar eexpr TCPar single_statement

State 1385:
## Known stack suffix:
## TIsoTopLevel nest_start
## LR(1) items:
iso_main -> TIsoTopLevel nest_start . list(iso(nest_start)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1386
-- On TIso shift to state 1388
-- On list(iso(nest_start)) shift to state 1390
-- On iso(nest_start) shift to state 1392
## Reductions:
-- On EOF
--   reduce production list(iso(nest_start)) ->

State 1386:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(nest_start) -> TRightIso . nest_start [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1387
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1387:
## Known stack suffix:
## TRightIso nest_start
## LR(1) items:
iso(nest_start) -> TRightIso nest_start . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(nest_start) -> TRightIso nest_start

State 1388:
## Known stack suffix:
## TIso
## LR(1) items:
iso(nest_start) -> TIso . nest_start [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1389
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1389:
## Known stack suffix:
## TIso nest_start
## LR(1) items:
iso(nest_start) -> TIso nest_start . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(nest_start) -> TIso nest_start

State 1390:
## Known stack suffix:
## TIsoTopLevel nest_start list(iso(nest_start))
## LR(1) items:
iso_main -> TIsoTopLevel nest_start list(iso(nest_start)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1391
## Reductions:

State 1391:
## Known stack suffix:
## TIsoTopLevel nest_start list(iso(nest_start)) EOF
## LR(1) items:
iso_main -> TIsoTopLevel nest_start list(iso(nest_start)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoTopLevel nest_start list(iso(nest_start)) EOF

State 1392:
## Known stack suffix:
## iso(nest_start)
## LR(1) items:
list(iso(nest_start)) -> iso(nest_start) . list(iso(nest_start)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 1386
-- On TIso shift to state 1388
-- On list(iso(nest_start)) shift to state 1393
-- On iso(nest_start) shift to state 1392
## Reductions:
-- On EOF
--   reduce production list(iso(nest_start)) ->

State 1393:
## Known stack suffix:
## iso(nest_start) list(iso(nest_start))
## LR(1) items:
list(iso(nest_start)) -> iso(nest_start) list(iso(nest_start)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(iso(nest_start)) -> iso(nest_start) list(iso(nest_start))

State 1394:
## Known stack suffix:
## TIsoToTestExpression
## LR(1) items:
iso_main -> TIsoToTestExpression . eexpr list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1395
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1395:
## Known stack suffix:
## TIsoToTestExpression eexpr
## LR(1) items:
iso_main -> TIsoToTestExpression eexpr . list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1396
-- On TIso shift to state 1398
-- On list(iso(eexpr)) shift to state 1400
-- On iso(eexpr) shift to state 1402
## Reductions:
-- On EOF
--   reduce production list(iso(eexpr)) ->

State 1396:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(eexpr) -> TRightIso . eexpr [ TRightIso TIso EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1397
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1397:
## Known stack suffix:
## TRightIso eexpr
## LR(1) items:
iso(eexpr) -> TRightIso eexpr . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(eexpr) -> TRightIso eexpr

State 1398:
## Known stack suffix:
## TIso
## LR(1) items:
iso(eexpr) -> TIso . eexpr [ TRightIso TIso EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1399
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1399:
## Known stack suffix:
## TIso eexpr
## LR(1) items:
iso(eexpr) -> TIso eexpr . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(eexpr) -> TIso eexpr

State 1400:
## Known stack suffix:
## TIsoToTestExpression eexpr list(iso(eexpr))
## LR(1) items:
iso_main -> TIsoToTestExpression eexpr list(iso(eexpr)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1401
## Reductions:

State 1401:
## Known stack suffix:
## TIsoToTestExpression eexpr list(iso(eexpr)) EOF
## LR(1) items:
iso_main -> TIsoToTestExpression eexpr list(iso(eexpr)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoToTestExpression eexpr list(iso(eexpr)) EOF

State 1402:
## Known stack suffix:
## iso(eexpr)
## LR(1) items:
list(iso(eexpr)) -> iso(eexpr) . list(iso(eexpr)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 1396
-- On TIso shift to state 1398
-- On list(iso(eexpr)) shift to state 1403
-- On iso(eexpr) shift to state 1402
## Reductions:
-- On EOF
--   reduce production list(iso(eexpr)) ->

State 1403:
## Known stack suffix:
## iso(eexpr) list(iso(eexpr))
## LR(1) items:
list(iso(eexpr)) -> iso(eexpr) list(iso(eexpr)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(iso(eexpr)) -> iso(eexpr) list(iso(eexpr))

State 1404:
## Known stack suffix:
## TIsoTestExpression
## LR(1) items:
iso_main -> TIsoTestExpression . eexpr list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1405
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1405:
## Known stack suffix:
## TIsoTestExpression eexpr
## LR(1) items:
iso_main -> TIsoTestExpression eexpr . list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1396
-- On TIso shift to state 1398
-- On list(iso(eexpr)) shift to state 1406
-- On iso(eexpr) shift to state 1402
## Reductions:
-- On EOF
--   reduce production list(iso(eexpr)) ->

State 1406:
## Known stack suffix:
## TIsoTestExpression eexpr list(iso(eexpr))
## LR(1) items:
iso_main -> TIsoTestExpression eexpr list(iso(eexpr)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1407
## Reductions:

State 1407:
## Known stack suffix:
## TIsoTestExpression eexpr list(iso(eexpr)) EOF
## LR(1) items:
iso_main -> TIsoTestExpression eexpr list(iso(eexpr)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoTestExpression eexpr list(iso(eexpr)) EOF

State 1408:
## Known stack suffix:
## TIsoStatement
## LR(1) items:
iso_main -> TIsoStatement . iso_statement list(iso(iso_statement)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1409
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1410
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On iso_statement shift to state 1411
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1414
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1409:
## Known stack suffix:
## TOPar0
## LR(1) items:
ctype -> TOPar0 . midzero_list(ctype,ctype) TCPar0 [ TSymId TPtVirg TOPar0 TOPar TMid0 TMetaLocalFunc TMetaId TMetaFunc TMeta TIdent TCPar0 ]
primary_expr(expr,invalid) -> TOPar0 . midzero_list(expr,eexpr) TCPar0 [ TXor TWhy TShROp TShLOp TPtrOp TPtVirg TPlus TOrLog TOr TOpAssign TOPar TOCro TNotEq TMul TMinus TMid0 TMetaBinaryOp TMetaAssignOp TLogOp TInc TEqEq TEq TDot TDmOp TDec TComma TCPar0 TAndLog TAnd ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1409
-- On TOPar shift to state 933
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaConst shift to state 944
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TInc shift to state 946
-- On TIdent shift to state 2
-- On TFloat shift to state 948
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TChar shift to state 952
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On pure_ident shift to state 77
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On non_signable_types shift to state 265
-- On midzero_list(expr,eexpr) shift to state 1022
-- On midzero_list(ctype,ctype) shift to state 268
-- On invalid shift to state 971
-- On ident shift to state 182
-- On func_ident shift to state 972
-- On expr shift to state 1024
-- On ctype shift to state 276
-- On const_vol shift to state 279
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:

State 1410:
## Known stack suffix:
## statement
## LR(1) items:
iso_statement -> statement . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso_statement -> statement

State 1411:
## Known stack suffix:
## TIsoStatement iso_statement
## LR(1) items:
iso_main -> TIsoStatement iso_statement . list(iso(iso_statement)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1412
-- On TIso shift to state 1415
-- On list(iso(iso_statement)) shift to state 1417
-- On iso(iso_statement) shift to state 1419
## Reductions:
-- On EOF
--   reduce production list(iso(iso_statement)) ->

State 1412:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(iso_statement) -> TRightIso . iso_statement [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1409
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1410
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On iso_statement shift to state 1413
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1414
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1413:
## Known stack suffix:
## TRightIso iso_statement
## LR(1) items:
iso(iso_statement) -> TRightIso iso_statement . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(iso_statement) -> TRightIso iso_statement

State 1414:
## Known stack suffix:
## decl_var
## LR(1) items:
iso_statement -> decl_var . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso_statement -> decl_var

State 1415:
## Known stack suffix:
## TIso
## LR(1) items:
iso(iso_statement) -> TIso . iso_statement [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1409
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1410
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On iso_statement shift to state 1416
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1414
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1416:
## Known stack suffix:
## TIso iso_statement
## LR(1) items:
iso(iso_statement) -> TIso iso_statement . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(iso_statement) -> TIso iso_statement

State 1417:
## Known stack suffix:
## TIsoStatement iso_statement list(iso(iso_statement))
## LR(1) items:
iso_main -> TIsoStatement iso_statement list(iso(iso_statement)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1418
## Reductions:

State 1418:
## Known stack suffix:
## TIsoStatement iso_statement list(iso(iso_statement)) EOF
## LR(1) items:
iso_main -> TIsoStatement iso_statement list(iso(iso_statement)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoStatement iso_statement list(iso(iso_statement)) EOF

State 1419:
## Known stack suffix:
## iso(iso_statement)
## LR(1) items:
list(iso(iso_statement)) -> iso(iso_statement) . list(iso(iso_statement)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 1412
-- On TIso shift to state 1415
-- On list(iso(iso_statement)) shift to state 1420
-- On iso(iso_statement) shift to state 1419
## Reductions:
-- On EOF
--   reduce production list(iso(iso_statement)) ->

State 1420:
## Known stack suffix:
## iso(iso_statement) list(iso(iso_statement))
## LR(1) items:
list(iso(iso_statement)) -> iso(iso_statement) list(iso(iso_statement)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(iso(iso_statement)) -> iso(iso_statement) list(iso(iso_statement))

State 1421:
## Known stack suffix:
## TIsoExpression
## LR(1) items:
iso_main -> TIsoExpression . eexpr list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1422
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1422:
## Known stack suffix:
## TIsoExpression eexpr
## LR(1) items:
iso_main -> TIsoExpression eexpr . list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1396
-- On TIso shift to state 1398
-- On list(iso(eexpr)) shift to state 1423
-- On iso(eexpr) shift to state 1402
## Reductions:
-- On EOF
--   reduce production list(iso(eexpr)) ->

State 1423:
## Known stack suffix:
## TIsoExpression eexpr list(iso(eexpr))
## LR(1) items:
iso_main -> TIsoExpression eexpr list(iso(eexpr)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1424
## Reductions:

State 1424:
## Known stack suffix:
## TIsoExpression eexpr list(iso(eexpr)) EOF
## LR(1) items:
iso_main -> TIsoExpression eexpr list(iso(eexpr)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoExpression eexpr list(iso(eexpr)) EOF

State 1425:
## Known stack suffix:
## TIsoDeclaration
## LR(1) items:
iso_main -> TIsoDeclaration . decl_var list(iso(decl_var)) EOF [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On funproto shift to state 1165
-- On decl_var shift to state 1426
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On all_basic_types shift to state 288
## Reductions:

State 1426:
## Known stack suffix:
## TIsoDeclaration decl_var
## LR(1) items:
iso_main -> TIsoDeclaration decl_var . list(iso(decl_var)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1427
-- On TIso shift to state 1429
-- On list(iso(decl_var)) shift to state 1431
-- On iso(decl_var) shift to state 1433
## Reductions:
-- On EOF
--   reduce production list(iso(decl_var)) ->

State 1427:
## Known stack suffix:
## TRightIso
## LR(1) items:
iso(decl_var) -> TRightIso . decl_var [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On funproto shift to state 1165
-- On decl_var shift to state 1428
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On all_basic_types shift to state 288
## Reductions:

State 1428:
## Known stack suffix:
## TRightIso decl_var
## LR(1) items:
iso(decl_var) -> TRightIso decl_var . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(decl_var) -> TRightIso decl_var

State 1429:
## Known stack suffix:
## TIso
## LR(1) items:
iso(decl_var) -> TIso . decl_var [ TRightIso TIso EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On funproto shift to state 1165
-- On decl_var shift to state 1430
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On all_basic_types shift to state 288
## Reductions:

State 1430:
## Known stack suffix:
## TIso decl_var
## LR(1) items:
iso(decl_var) -> TIso decl_var . [ TRightIso TIso EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iso(decl_var) -> TIso decl_var

State 1431:
## Known stack suffix:
## TIsoDeclaration decl_var list(iso(decl_var))
## LR(1) items:
iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1432
## Reductions:

State 1432:
## Known stack suffix:
## TIsoDeclaration decl_var list(iso(decl_var)) EOF
## LR(1) items:
iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoDeclaration decl_var list(iso(decl_var)) EOF

State 1433:
## Known stack suffix:
## iso(decl_var)
## LR(1) items:
list(iso(decl_var)) -> iso(decl_var) . list(iso(decl_var)) [ EOF ]
## Transitions:
-- On TRightIso shift to state 1427
-- On TIso shift to state 1429
-- On list(iso(decl_var)) shift to state 1434
-- On iso(decl_var) shift to state 1433
## Reductions:
-- On EOF
--   reduce production list(iso(decl_var)) ->

State 1434:
## Known stack suffix:
## iso(decl_var) list(iso(decl_var))
## LR(1) items:
list(iso(decl_var)) -> iso(decl_var) list(iso(decl_var)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(iso(decl_var)) -> iso(decl_var) list(iso(decl_var))

State 1435:
## Known stack suffix:
## TIsoArgExpression
## LR(1) items:
iso_main -> TIsoArgExpression . eexpr list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1436
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1436:
## Known stack suffix:
## TIsoArgExpression eexpr
## LR(1) items:
iso_main -> TIsoArgExpression eexpr . list(iso(eexpr)) EOF [ # ]
## Transitions:
-- On TRightIso shift to state 1396
-- On TIso shift to state 1398
-- On list(iso(eexpr)) shift to state 1437
-- On iso(eexpr) shift to state 1402
## Reductions:
-- On EOF
--   reduce production list(iso(eexpr)) ->

State 1437:
## Known stack suffix:
## TIsoArgExpression eexpr list(iso(eexpr))
## LR(1) items:
iso_main -> TIsoArgExpression eexpr list(iso(eexpr)) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1438
## Reductions:

State 1438:
## Known stack suffix:
## TIsoArgExpression eexpr list(iso(eexpr)) EOF
## LR(1) items:
iso_main -> TIsoArgExpression eexpr list(iso(eexpr)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_main -> TIsoArgExpression eexpr list(iso(eexpr)) EOF

State 1439:
## Known stack suffix:
## iso_main
## LR(1) items:
iso_main' -> iso_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept iso_main

State 1440:
## Known stack suffix:
##
## LR(1) items:
iso_meta_main' -> . iso_meta_main [ # ]
## Transitions:
-- On TWhy0 shift to state 1441
-- On TSymbol shift to state 1442
-- On TPlus0 shift to state 1445
-- On TFresh shift to state 1446
-- On TBang0 shift to state 1498
-- On metadec shift to state 1499
-- On iso_meta_main shift to state 1500
-- On arity shift to state 1501
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TPosition TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TFormat TField TExpression TError TDeclarer TDeclaration TContext TConstant TBinary TAttribute TAssignment
--   reduce production arity ->

State 1441:
## Known stack suffix:
## TWhy0
## LR(1) items:
arity -> TWhy0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TPosition TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TFormat TField TExpression TError TDeclarer TDeclaration TContext TConstant TBinary TAttribute TAssignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arity -> TWhy0

State 1442:
## Known stack suffix:
## TSymbol
## LR(1) items:
metadec -> TSymbol . separated_nonempty_list(TComma,pure_ident) TMPtVirg [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On separated_nonempty_list(TComma,pure_ident) shift to state 1443
-- On pure_ident shift to state 4
## Reductions:

State 1443:
## Known stack suffix:
## TSymbol separated_nonempty_list(TComma,pure_ident)
## LR(1) items:
metadec -> TSymbol separated_nonempty_list(TComma,pure_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1444
## Reductions:

State 1444:
## Known stack suffix:
## TSymbol separated_nonempty_list(TComma,pure_ident) TMPtVirg
## LR(1) items:
metadec -> TSymbol separated_nonempty_list(TComma,pure_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> TSymbol separated_nonempty_list(TComma,pure_ident) TMPtVirg

State 1445:
## Known stack suffix:
## TPlus0
## LR(1) items:
arity -> TPlus0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TPosition TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TFormat TField TExpression TError TDeclarer TDeclaration TContext TConstant TBinary TAttribute TAssignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arity -> TPlus0

State 1446:
## Known stack suffix:
## TFresh
## LR(1) items:
metadec -> TFresh . TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) TMPtVirg [ # ]
## Transitions:
-- On TIdentifier shift to state 1447
## Reductions:

State 1447:
## Known stack suffix:
## TFresh TIdentifier
## LR(1) items:
metadec -> TFresh TIdentifier . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) shift to state 1475
-- On pure_ident_or_meta_ident_with_seed shift to state 1477
-- On pure_ident_or_meta_ident shift to state 1480
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1448:
## Known stack suffix:
## Tlist
## LR(1) items:
pure_ident_kwd -> Tlist . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> Tlist

State 1449:
## Known stack suffix:
## TWords
## LR(1) items:
pure_ident_kwd -> TWords . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TWords

State 1450:
## Known stack suffix:
## TTypedef
## LR(1) items:
pure_ident_kwd -> TTypedef . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TTypedef

State 1451:
## Known stack suffix:
## TType
## LR(1) items:
pure_ident_kwd -> TType . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TType

State 1452:
## Known stack suffix:
## TSymbol
## LR(1) items:
pure_ident_kwd -> TSymbol . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TSymbol

State 1453:
## Known stack suffix:
## TStatement
## LR(1) items:
pure_ident_kwd -> TStatement . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TStatement

State 1454:
## Known stack suffix:
## TRuleName
## LR(1) items:
meta_ident -> TRuleName . TDot pure_ident [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
meta_ident -> TRuleName . TDot pure_ident_kwd [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
-- On TDot shift to state 1455
## Reductions:

State 1455:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
meta_ident -> TRuleName TDot . pure_ident [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
meta_ident -> TRuleName TDot . pure_ident_kwd [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_kwd shift to state 1473
-- On pure_ident shift to state 1474
## Reductions:

State 1456:
## Known stack suffix:
## TPure
## LR(1) items:
pure_ident_kwd -> TPure . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TPure

State 1457:
## Known stack suffix:
## TPosition
## LR(1) items:
pure_ident_kwd -> TPosition . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TPosition

State 1458:
## Known stack suffix:
## TParameter
## LR(1) items:
pure_ident_kwd -> TParameter . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TParameter

State 1459:
## Known stack suffix:
## TName
## LR(1) items:
pure_ident_kwd -> TName . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TName

State 1460:
## Known stack suffix:
## TLocal
## LR(1) items:
pure_ident_kwd -> TLocal . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TLocal

State 1461:
## Known stack suffix:
## TIterator
## LR(1) items:
pure_ident_kwd -> TIterator . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TIterator

State 1462:
## Known stack suffix:
## TInitialiser
## LR(1) items:
pure_ident_kwd -> TInitialiser . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TInitialiser

State 1463:
## Known stack suffix:
## TIdentifier
## LR(1) items:
pure_ident_kwd -> TIdentifier . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TIdentifier

State 1464:
## Known stack suffix:
## TIdExpression
## LR(1) items:
pure_ident_kwd -> TIdExpression . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TIdExpression

State 1465:
## Known stack suffix:
## TGenerated
## LR(1) items:
pure_ident_kwd -> TGenerated . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TGenerated

State 1466:
## Known stack suffix:
## TFunction
## LR(1) items:
pure_ident_kwd -> TFunction . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TFunction

State 1467:
## Known stack suffix:
## TFresh
## LR(1) items:
pure_ident_kwd -> TFresh . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TFresh

State 1468:
## Known stack suffix:
## TExpression
## LR(1) items:
pure_ident_kwd -> TExpression . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TExpression

State 1469:
## Known stack suffix:
## TError
## LR(1) items:
pure_ident_kwd -> TError . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TError

State 1470:
## Known stack suffix:
## TDeclarer
## LR(1) items:
pure_ident_kwd -> TDeclarer . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TDeclarer

State 1471:
## Known stack suffix:
## TContext
## LR(1) items:
pure_ident_kwd -> TContext . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TContext

State 1472:
## Known stack suffix:
## TConstant
## LR(1) items:
pure_ident_kwd -> TConstant . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_kwd -> TConstant

State 1473:
## Known stack suffix:
## TRuleName TDot pure_ident_kwd
## LR(1) items:
meta_ident -> TRuleName TDot pure_ident_kwd . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production meta_ident -> TRuleName TDot pure_ident_kwd

State 1474:
## Known stack suffix:
## TRuleName TDot pure_ident
## LR(1) items:
meta_ident -> TRuleName TDot pure_ident . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production meta_ident -> TRuleName TDot pure_ident

State 1475:
## Known stack suffix:
## TFresh TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed)
## LR(1) items:
metadec -> TFresh TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1476
## Reductions:

State 1476:
## Known stack suffix:
## TFresh TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) TMPtVirg
## LR(1) items:
metadec -> TFresh TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> TFresh TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) TMPtVirg

State 1477:
## Known stack suffix:
## pure_ident_or_meta_ident_with_seed
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1478
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed

State 1478:
## Known stack suffix:
## pure_ident_or_meta_ident_with_seed TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) shift to state 1479
-- On pure_ident_or_meta_ident_with_seed shift to state 1477
-- On pure_ident_or_meta_ident shift to state 1480
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1479:
## Known stack suffix:
## pure_ident_or_meta_ident_with_seed TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed) -> pure_ident_or_meta_ident_with_seed TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_seed)

State 1480:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident . [ TMPtVirg TComma ]
pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident . TEq separated_nonempty_list(TCppConcatOp,seed_elem) [ TMPtVirg TComma ]
## Transitions:
-- On TEq shift to state 1481
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident

State 1481:
## Known stack suffix:
## pure_ident_or_meta_ident TEq
## LR(1) items:
pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident TEq . separated_nonempty_list(TCppConcatOp,seed_elem) [ TMPtVirg TComma ]
## Transitions:
-- On TVirtual shift to state 1482
-- On TString shift to state 1485
-- On TRuleName shift to state 1486
-- On TMetaId shift to state 1489
-- On TMeta shift to state 1490
-- On separated_nonempty_list(TCppConcatOp,seed_elem) shift to state 1491
-- On seed_elem shift to state 1492
## Reductions:

State 1482:
## Known stack suffix:
## TVirtual
## LR(1) items:
seed_elem -> TVirtual . TDot pure_ident [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
-- On TDot shift to state 1483
## Reductions:

State 1483:
## Known stack suffix:
## TVirtual TDot
## LR(1) items:
seed_elem -> TVirtual TDot . pure_ident [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 1484
## Reductions:

State 1484:
## Known stack suffix:
## TVirtual TDot pure_ident
## LR(1) items:
seed_elem -> TVirtual TDot pure_ident . [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seed_elem -> TVirtual TDot pure_ident

State 1485:
## Known stack suffix:
## TString
## LR(1) items:
seed_elem -> TString . [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seed_elem -> TString

State 1486:
## Known stack suffix:
## TRuleName
## LR(1) items:
seed_elem -> TRuleName . TDot pure_ident [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
-- On TDot shift to state 1487
## Reductions:

State 1487:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
seed_elem -> TRuleName TDot . pure_ident [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 1488
## Reductions:

State 1488:
## Known stack suffix:
## TRuleName TDot pure_ident
## LR(1) items:
seed_elem -> TRuleName TDot pure_ident . [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seed_elem -> TRuleName TDot pure_ident

State 1489:
## Known stack suffix:
## TMetaId
## LR(1) items:
seed_elem -> TMetaId . [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seed_elem -> TMetaId

State 1490:
## Known stack suffix:
## TMeta
## LR(1) items:
seed_elem -> TMeta . [ TMPtVirg TCppConcatOp TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seed_elem -> TMeta

State 1491:
## Known stack suffix:
## pure_ident_or_meta_ident TEq separated_nonempty_list(TCppConcatOp,seed_elem)
## LR(1) items:
pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident TEq separated_nonempty_list(TCppConcatOp,seed_elem) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_seed -> pure_ident_or_meta_ident TEq separated_nonempty_list(TCppConcatOp,seed_elem)

State 1492:
## Known stack suffix:
## seed_elem
## LR(1) items:
separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem . [ TMPtVirg TComma ]
separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem . TCppConcatOp separated_nonempty_list(TCppConcatOp,seed_elem) [ TMPtVirg TComma ]
## Transitions:
-- On TCppConcatOp shift to state 1493
## Reductions:
-- On TMPtVirg TComma
--   reduce production separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem

State 1493:
## Known stack suffix:
## seed_elem TCppConcatOp
## LR(1) items:
separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem TCppConcatOp . separated_nonempty_list(TCppConcatOp,seed_elem) [ TMPtVirg TComma ]
## Transitions:
-- On TVirtual shift to state 1482
-- On TString shift to state 1485
-- On TRuleName shift to state 1486
-- On TMetaId shift to state 1489
-- On TMeta shift to state 1490
-- On separated_nonempty_list(TCppConcatOp,seed_elem) shift to state 1494
-- On seed_elem shift to state 1492
## Reductions:

State 1494:
## Known stack suffix:
## seed_elem TCppConcatOp separated_nonempty_list(TCppConcatOp,seed_elem)
## LR(1) items:
separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem TCppConcatOp separated_nonempty_list(TCppConcatOp,seed_elem) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TCppConcatOp,seed_elem) -> seed_elem TCppConcatOp separated_nonempty_list(TCppConcatOp,seed_elem)

State 1495:
## Known stack suffix:
## pure_ident_kwd
## LR(1) items:
pure_ident_or_meta_ident -> pure_ident_kwd . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident -> pure_ident_kwd

State 1496:
## Known stack suffix:
## pure_ident
## LR(1) items:
pure_ident_or_meta_ident -> pure_ident . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident -> pure_ident

State 1497:
## Known stack suffix:
## meta_ident
## LR(1) items:
pure_ident_or_meta_ident -> meta_ident . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TEq TComma TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident -> meta_ident

State 1498:
## Known stack suffix:
## TBang0
## LR(1) items:
arity -> TBang0 . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TPosition TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TFormat TField TExpression TError TDeclarer TDeclaration TContext TConstant TBinary TAttribute TAssignment ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arity -> TBang0

State 1499:
## Known stack suffix:
## metadec
## LR(1) items:
iso_meta_main -> metadec . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_meta_main -> metadec

State 1500:
## Known stack suffix:
## iso_meta_main
## LR(1) items:
iso_meta_main' -> iso_meta_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept iso_meta_main

State 1501:
## Known stack suffix:
## arity
## LR(1) items:
metadec -> arity . pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity . pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity . pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity . pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity . pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity . pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
metadec -> arity . pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
metadec -> arity . TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg [ # ]
metadec -> arity . pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) TMPtVirg [ # ]
metadec -> arity . TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity . TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg [ # ]
metadec -> arity . TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg [ # ]
## Transitions:
-- On TPure shift to state 1502
-- On TPosition shift to state 1504
-- On TFormat shift to state 1523
-- On TContext shift to state 1553
-- On TBinary shift to state 1555
-- On TAssignment shift to state 1587
-- On pure shift to state 1606
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute
--   reduce production pure ->

State 1502:
## Known stack suffix:
## TPure
## LR(1) items:
pure -> TPure . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
pure -> TPure . TContext [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
## Transitions:
-- On TContext shift to state 1503
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute
--   reduce production pure -> TPure

State 1503:
## Known stack suffix:
## TPure TContext
## LR(1) items:
pure -> TPure TContext . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure -> TPure TContext

State 1504:
## Known stack suffix:
## arity TPosition
## LR(1) items:
metadec -> arity TPosition . option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg [ # ]
## Transitions:
-- On TPosAny shift to state 1505
-- On option(TPosAny) shift to state 1506
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production option(TPosAny) ->

State 1505:
## Known stack suffix:
## TPosAny
## LR(1) items:
option(TPosAny) -> TPosAny . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(TPosAny) -> TPosAny

State 1506:
## Known stack suffix:
## arity TPosition option(TPosAny)
## LR(1) items:
metadec -> arity TPosition option(TPosAny) . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) shift to state 1507
-- On pure_ident_or_meta_ident_with_x_eq(not_pos) shift to state 1509
-- On pure_ident_or_meta_ident shift to state 1512
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1507:
## Known stack suffix:
## arity TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos))
## LR(1) items:
metadec -> arity TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1508
## Reductions:

State 1508:
## Known stack suffix:
## arity TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg
## LR(1) items:
metadec -> arity TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TPosition option(TPosAny) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) TMPtVirg

State 1509:
## Known stack suffix:
## pure_ident_or_meta_ident_with_x_eq(not_pos)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1510
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos)

State 1510:
## Known stack suffix:
## pure_ident_or_meta_ident_with_x_eq(not_pos) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) shift to state 1511
-- On pure_ident_or_meta_ident_with_x_eq(not_pos) shift to state 1509
-- On pure_ident_or_meta_ident shift to state 1512
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1511:
## Known stack suffix:
## pure_ident_or_meta_ident_with_x_eq(not_pos) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos)) -> pure_ident_or_meta_ident_with_x_eq(not_pos) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_x_eq(not_pos))

State 1512:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_x_eq(not_pos) -> pure_ident_or_meta_ident . loption(not_pos) [ TMPtVirg TComma ]
## Transitions:
-- On TNotEq shift to state 1513
-- On not_pos shift to state 1521
-- On loption(not_pos) shift to state 1522
## Reductions:
-- On TMPtVirg TComma
--   reduce production loption(not_pos) ->

State 1513:
## Known stack suffix:
## TNotEq
## LR(1) items:
not_pos -> TNotEq . meta_ident [ TMPtVirg TComma ]
not_pos -> TNotEq . TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TRuleName shift to state 1454
-- On TOBrace shift to state 1514
-- On meta_ident shift to state 1520
## Reductions:

State 1514:
## Known stack suffix:
## TNotEq TOBrace
## LR(1) items:
not_pos -> TNotEq TOBrace . separated_nonempty_list(TComma,meta_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TRuleName shift to state 1454
-- On separated_nonempty_list(TComma,meta_ident) shift to state 1515
-- On meta_ident shift to state 1517
## Reductions:

State 1515:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,meta_ident)
## LR(1) items:
not_pos -> TNotEq TOBrace separated_nonempty_list(TComma,meta_ident) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1516
## Reductions:

State 1516:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace
## LR(1) items:
not_pos -> TNotEq TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_pos -> TNotEq TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace

State 1517:
## Known stack suffix:
## meta_ident
## LR(1) items:
separated_nonempty_list(TComma,meta_ident) -> meta_ident . [ TCBrace ]
separated_nonempty_list(TComma,meta_ident) -> meta_ident . TComma separated_nonempty_list(TComma,meta_ident) [ TCBrace ]
## Transitions:
-- On TComma shift to state 1518
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,meta_ident) -> meta_ident

State 1518:
## Known stack suffix:
## meta_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,meta_ident) -> meta_ident TComma . separated_nonempty_list(TComma,meta_ident) [ TCBrace ]
## Transitions:
-- On TRuleName shift to state 1454
-- On separated_nonempty_list(TComma,meta_ident) shift to state 1519
-- On meta_ident shift to state 1517
## Reductions:

State 1519:
## Known stack suffix:
## meta_ident TComma separated_nonempty_list(TComma,meta_ident)
## LR(1) items:
separated_nonempty_list(TComma,meta_ident) -> meta_ident TComma separated_nonempty_list(TComma,meta_ident) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,meta_ident) -> meta_ident TComma separated_nonempty_list(TComma,meta_ident)

State 1520:
## Known stack suffix:
## TNotEq meta_ident
## LR(1) items:
not_pos -> TNotEq meta_ident . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_pos -> TNotEq meta_ident

State 1521:
## Known stack suffix:
## not_pos
## LR(1) items:
loption(not_pos) -> not_pos . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(not_pos) -> not_pos

State 1522:
## Known stack suffix:
## pure_ident_or_meta_ident loption(not_pos)
## LR(1) items:
pure_ident_or_meta_ident_with_x_eq(not_pos) -> pure_ident_or_meta_ident loption(not_pos) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_x_eq(not_pos) -> pure_ident_or_meta_ident loption(not_pos)

State 1523:
## Known stack suffix:
## arity TFormat
## LR(1) items:
metadec -> arity TFormat . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) TMPtVirg [ # ]
metadec -> arity TFormat . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity TFormat . Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1524
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) shift to state 1540
-- On pure_ident_or_meta_ident_with_idconstraint(re_only) shift to state 1542
-- On pure_ident_or_meta_ident shift to state 1545
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1524:
## Known stack suffix:
## arity TFormat Tlist
## LR(1) items:
metadec -> arity TFormat Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity TFormat Tlist . TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TTildeExclEq TTildeEq TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOCro shift to state 1525
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1538
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TTildeExclEq TTildeEq TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1525:
## Known stack suffix:
## arity TFormat Tlist TOCro
## LR(1) items:
metadec -> arity TFormat Tlist TOCro . list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1526
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInt shift to state 1529
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1530
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On list_len shift to state 1531
## Reductions:

State 1526:
## Known stack suffix:
## TVirtual
## LR(1) items:
list_len -> TVirtual . TDot pure_ident [ TCCro ]
## Transitions:
-- On TDot shift to state 1527
## Reductions:

State 1527:
## Known stack suffix:
## TVirtual TDot
## LR(1) items:
list_len -> TVirtual TDot . pure_ident [ TCCro ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 1528
## Reductions:

State 1528:
## Known stack suffix:
## TVirtual TDot pure_ident
## LR(1) items:
list_len -> TVirtual TDot pure_ident . [ TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_len -> TVirtual TDot pure_ident

State 1529:
## Known stack suffix:
## TInt
## LR(1) items:
list_len -> TInt . [ TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_len -> TInt

State 1530:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
list_len -> pure_ident_or_meta_ident . [ TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_len -> pure_ident_or_meta_ident

State 1531:
## Known stack suffix:
## arity TFormat Tlist TOCro list_len
## LR(1) items:
metadec -> arity TFormat Tlist TOCro list_len . TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1532
## Reductions:

State 1532:
## Known stack suffix:
## arity TFormat Tlist TOCro list_len TCCro
## LR(1) items:
metadec -> arity TFormat Tlist TOCro list_len TCCro . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1533
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1533:
## Known stack suffix:
## arity TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1534
## Reductions:

State 1534:
## Known stack suffix:
## arity TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TFormat Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1535:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident . [ TMPtVirg TCBrace ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident) [ TMPtVirg TCBrace ]
## Transitions:
-- On TComma shift to state 1536
## Reductions:
-- On TMPtVirg TCBrace
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident

State 1536:
## Known stack suffix:
## pure_ident_or_meta_ident TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident) [ TMPtVirg TCBrace ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1537
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1537:
## Known stack suffix:
## pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident) . [ TMPtVirg TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident) -> pure_ident_or_meta_ident TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident)

State 1538:
## Known stack suffix:
## arity TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1539
## Reductions:

State 1539:
## Known stack suffix:
## arity TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TFormat Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1540:
## Known stack suffix:
## arity TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only))
## LR(1) items:
metadec -> arity TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1541
## Reductions:

State 1541:
## Known stack suffix:
## arity TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) TMPtVirg
## LR(1) items:
metadec -> arity TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TFormat separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) TMPtVirg

State 1542:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_only)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1543
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only)

State 1543:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_only) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) shift to state 1544
-- On pure_ident_or_meta_ident_with_idconstraint(re_only) shift to state 1542
-- On pure_ident_or_meta_ident shift to state 1545
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1544:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_only) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only)) -> pure_ident_or_meta_ident_with_idconstraint(re_only) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_only))

State 1545:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint(re_only) -> pure_ident_or_meta_ident . option(re_only) [ TMPtVirg TComma ]
## Transitions:
-- On TTildeExclEq shift to state 1546
-- On TTildeEq shift to state 1548
-- On regexp_eqid shift to state 1550
-- On re_only shift to state 1551
-- On option(re_only) shift to state 1552
## Reductions:
-- On TMPtVirg TComma
--   reduce production option(re_only) ->

State 1546:
## Known stack suffix:
## TTildeExclEq
## LR(1) items:
regexp_eqid -> TTildeExclEq . TString [ TMPtVirg TComma ]
## Transitions:
-- On TString shift to state 1547
## Reductions:

State 1547:
## Known stack suffix:
## TTildeExclEq TString
## LR(1) items:
regexp_eqid -> TTildeExclEq TString . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production regexp_eqid -> TTildeExclEq TString

State 1548:
## Known stack suffix:
## TTildeEq
## LR(1) items:
regexp_eqid -> TTildeEq . TString [ TMPtVirg TComma ]
## Transitions:
-- On TString shift to state 1549
## Reductions:

State 1549:
## Known stack suffix:
## TTildeEq TString
## LR(1) items:
regexp_eqid -> TTildeEq TString . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production regexp_eqid -> TTildeEq TString

State 1550:
## Known stack suffix:
## regexp_eqid
## LR(1) items:
re_only -> regexp_eqid . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_only -> regexp_eqid

State 1551:
## Known stack suffix:
## re_only
## LR(1) items:
option(re_only) -> re_only . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(re_only) -> re_only

State 1552:
## Known stack suffix:
## pure_ident_or_meta_ident option(re_only)
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint(re_only) -> pure_ident_or_meta_ident option(re_only) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_idconstraint(re_only) -> pure_ident_or_meta_ident option(re_only)

State 1553:
## Known stack suffix:
## TContext
## LR(1) items:
pure -> TContext . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
pure -> TContext . TPure [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
## Transitions:
-- On TPure shift to state 1554
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute
--   reduce production pure -> TContext

State 1554:
## Known stack suffix:
## TContext TPure
## LR(1) items:
pure -> TContext TPure . [ Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TField TExpression TError TDeclarer TDeclaration TConstant TAttribute ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure -> TContext TPure

State 1555:
## Known stack suffix:
## arity TBinary
## LR(1) items:
metadec -> arity TBinary . TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg [ # ]
## Transitions:
-- On TOperator shift to state 1556
## Reductions:

State 1556:
## Known stack suffix:
## arity TBinary TOperator
## LR(1) items:
metadec -> arity TBinary TOperator . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) shift to state 1557
-- On pure_ident_or_meta_ident_with_binop_constraint shift to state 1559
-- On pure_ident_or_meta_ident shift to state 1562
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1557:
## Known stack suffix:
## arity TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint)
## LR(1) items:
metadec -> arity TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1558
## Reductions:

State 1558:
## Known stack suffix:
## arity TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg
## LR(1) items:
metadec -> arity TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TBinary TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) TMPtVirg

State 1559:
## Known stack suffix:
## pure_ident_or_meta_ident_with_binop_constraint
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1560
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint

State 1560:
## Known stack suffix:
## pure_ident_or_meta_ident_with_binop_constraint TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) shift to state 1561
-- On pure_ident_or_meta_ident_with_binop_constraint shift to state 1559
-- On pure_ident_or_meta_ident shift to state 1562
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1561:
## Known stack suffix:
## pure_ident_or_meta_ident_with_binop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint) -> pure_ident_or_meta_ident_with_binop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_binop_constraint)

State 1562:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_binop_constraint -> pure_ident_or_meta_ident . binaryopconstraint [ TMPtVirg TComma ]
## Transitions:
-- On TEq shift to state 1563
-- On binaryopconstraint shift to state 1586
## Reductions:
-- On TMPtVirg TComma
--   reduce production binaryopconstraint ->

State 1563:
## Known stack suffix:
## TEq
## LR(1) items:
binaryopconstraint -> TEq . TOBrace separated_nonempty_list(TComma,binary_operator) TCBrace [ TMPtVirg TComma ]
binaryopconstraint -> TEq . binary_operator [ TMPtVirg TComma ]
## Transitions:
-- On TXor shift to state 1564
-- On TSub shift to state 1565
-- On TShROp shift to state 1566
-- On TShLOp shift to state 1567
-- On TPlus shift to state 1568
-- On TOrLog shift to state 1569
-- On TOr shift to state 1570
-- On TOBrace shift to state 1571
-- On TNotEq shift to state 1572
-- On TMul shift to state 1573
-- On TMinus shift to state 1574
-- On TLogOp shift to state 1575
-- On TEqEq shift to state 1576
-- On TDmOp shift to state 1577
-- On TAndLog shift to state 1578
-- On TAnd shift to state 1579
-- On binary_operator shift to state 1585
## Reductions:

State 1564:
## Known stack suffix:
## TXor
## LR(1) items:
binary_operator -> TXor . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TXor

State 1565:
## Known stack suffix:
## TSub
## LR(1) items:
binary_operator -> TSub . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TSub

State 1566:
## Known stack suffix:
## TShROp
## LR(1) items:
binary_operator -> TShROp . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TShROp

State 1567:
## Known stack suffix:
## TShLOp
## LR(1) items:
binary_operator -> TShLOp . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TShLOp

State 1568:
## Known stack suffix:
## TPlus
## LR(1) items:
binary_operator -> TPlus . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TPlus

State 1569:
## Known stack suffix:
## TOrLog
## LR(1) items:
binary_operator -> TOrLog . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TOrLog

State 1570:
## Known stack suffix:
## TOr
## LR(1) items:
binary_operator -> TOr . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TOr

State 1571:
## Known stack suffix:
## TEq TOBrace
## LR(1) items:
binaryopconstraint -> TEq TOBrace . separated_nonempty_list(TComma,binary_operator) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TXor shift to state 1564
-- On TSub shift to state 1565
-- On TShROp shift to state 1566
-- On TShLOp shift to state 1567
-- On TPlus shift to state 1568
-- On TOrLog shift to state 1569
-- On TOr shift to state 1570
-- On TNotEq shift to state 1572
-- On TMul shift to state 1573
-- On TMinus shift to state 1574
-- On TLogOp shift to state 1575
-- On TEqEq shift to state 1576
-- On TDmOp shift to state 1577
-- On TAndLog shift to state 1578
-- On TAnd shift to state 1579
-- On separated_nonempty_list(TComma,binary_operator) shift to state 1580
-- On binary_operator shift to state 1582
## Reductions:

State 1572:
## Known stack suffix:
## TNotEq
## LR(1) items:
binary_operator -> TNotEq . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TNotEq

State 1573:
## Known stack suffix:
## TMul
## LR(1) items:
binary_operator -> TMul . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TMul

State 1574:
## Known stack suffix:
## TMinus
## LR(1) items:
binary_operator -> TMinus . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TMinus

State 1575:
## Known stack suffix:
## TLogOp
## LR(1) items:
binary_operator -> TLogOp . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TLogOp

State 1576:
## Known stack suffix:
## TEqEq
## LR(1) items:
binary_operator -> TEqEq . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TEqEq

State 1577:
## Known stack suffix:
## TDmOp
## LR(1) items:
binary_operator -> TDmOp . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TDmOp

State 1578:
## Known stack suffix:
## TAndLog
## LR(1) items:
binary_operator -> TAndLog . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TAndLog

State 1579:
## Known stack suffix:
## TAnd
## LR(1) items:
binary_operator -> TAnd . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binary_operator -> TAnd

State 1580:
## Known stack suffix:
## TEq TOBrace separated_nonempty_list(TComma,binary_operator)
## LR(1) items:
binaryopconstraint -> TEq TOBrace separated_nonempty_list(TComma,binary_operator) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1581
## Reductions:

State 1581:
## Known stack suffix:
## TEq TOBrace separated_nonempty_list(TComma,binary_operator) TCBrace
## LR(1) items:
binaryopconstraint -> TEq TOBrace separated_nonempty_list(TComma,binary_operator) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binaryopconstraint -> TEq TOBrace separated_nonempty_list(TComma,binary_operator) TCBrace

State 1582:
## Known stack suffix:
## binary_operator
## LR(1) items:
separated_nonempty_list(TComma,binary_operator) -> binary_operator . [ TCBrace ]
separated_nonempty_list(TComma,binary_operator) -> binary_operator . TComma separated_nonempty_list(TComma,binary_operator) [ TCBrace ]
## Transitions:
-- On TComma shift to state 1583
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,binary_operator) -> binary_operator

State 1583:
## Known stack suffix:
## binary_operator TComma
## LR(1) items:
separated_nonempty_list(TComma,binary_operator) -> binary_operator TComma . separated_nonempty_list(TComma,binary_operator) [ TCBrace ]
## Transitions:
-- On TXor shift to state 1564
-- On TSub shift to state 1565
-- On TShROp shift to state 1566
-- On TShLOp shift to state 1567
-- On TPlus shift to state 1568
-- On TOrLog shift to state 1569
-- On TOr shift to state 1570
-- On TNotEq shift to state 1572
-- On TMul shift to state 1573
-- On TMinus shift to state 1574
-- On TLogOp shift to state 1575
-- On TEqEq shift to state 1576
-- On TDmOp shift to state 1577
-- On TAndLog shift to state 1578
-- On TAnd shift to state 1579
-- On separated_nonempty_list(TComma,binary_operator) shift to state 1584
-- On binary_operator shift to state 1582
## Reductions:

State 1584:
## Known stack suffix:
## binary_operator TComma separated_nonempty_list(TComma,binary_operator)
## LR(1) items:
separated_nonempty_list(TComma,binary_operator) -> binary_operator TComma separated_nonempty_list(TComma,binary_operator) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,binary_operator) -> binary_operator TComma separated_nonempty_list(TComma,binary_operator)

State 1585:
## Known stack suffix:
## TEq binary_operator
## LR(1) items:
binaryopconstraint -> TEq binary_operator . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production binaryopconstraint -> TEq binary_operator

State 1586:
## Known stack suffix:
## pure_ident_or_meta_ident binaryopconstraint
## LR(1) items:
pure_ident_or_meta_ident_with_binop_constraint -> pure_ident_or_meta_ident binaryopconstraint . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_binop_constraint -> pure_ident_or_meta_ident binaryopconstraint

State 1587:
## Known stack suffix:
## arity TAssignment
## LR(1) items:
metadec -> arity TAssignment . TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg [ # ]
## Transitions:
-- On TOperator shift to state 1588
## Reductions:

State 1588:
## Known stack suffix:
## arity TAssignment TOperator
## LR(1) items:
metadec -> arity TAssignment TOperator . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) shift to state 1589
-- On pure_ident_or_meta_ident_with_assignop_constraint shift to state 1591
-- On pure_ident_or_meta_ident shift to state 1594
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1589:
## Known stack suffix:
## arity TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint)
## LR(1) items:
metadec -> arity TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1590
## Reductions:

State 1590:
## Known stack suffix:
## arity TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg
## LR(1) items:
metadec -> arity TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity TAssignment TOperator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) TMPtVirg

State 1591:
## Known stack suffix:
## pure_ident_or_meta_ident_with_assignop_constraint
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1592
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint

State 1592:
## Known stack suffix:
## pure_ident_or_meta_ident_with_assignop_constraint TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) shift to state 1593
-- On pure_ident_or_meta_ident_with_assignop_constraint shift to state 1591
-- On pure_ident_or_meta_ident shift to state 1594
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1593:
## Known stack suffix:
## pure_ident_or_meta_ident_with_assignop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint) -> pure_ident_or_meta_ident_with_assignop_constraint TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_assignop_constraint)

State 1594:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_assignop_constraint -> pure_ident_or_meta_ident . assignopconstraint [ TMPtVirg TComma ]
## Transitions:
-- On TEq shift to state 1595
-- On assignopconstraint shift to state 1605
## Reductions:
-- On TMPtVirg TComma
--   reduce production assignopconstraint ->

State 1595:
## Known stack suffix:
## TEq
## LR(1) items:
assignopconstraint -> TEq . TOBrace separated_nonempty_list(TComma,assignment_operator) TCBrace [ TMPtVirg TComma ]
assignopconstraint -> TEq . assignment_operator [ TMPtVirg TComma ]
## Transitions:
-- On TOpAssign shift to state 1596
-- On TOBrace shift to state 1597
-- On TEq shift to state 1598
-- On assignment_operator shift to state 1604
## Reductions:

State 1596:
## Known stack suffix:
## TOpAssign
## LR(1) items:
assignment_operator -> TOpAssign . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> TOpAssign

State 1597:
## Known stack suffix:
## TEq TOBrace
## LR(1) items:
assignopconstraint -> TEq TOBrace . separated_nonempty_list(TComma,assignment_operator) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TOpAssign shift to state 1596
-- On TEq shift to state 1598
-- On separated_nonempty_list(TComma,assignment_operator) shift to state 1599
-- On assignment_operator shift to state 1601
## Reductions:

State 1598:
## Known stack suffix:
## TEq
## LR(1) items:
assignment_operator -> TEq . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> TEq

State 1599:
## Known stack suffix:
## TEq TOBrace separated_nonempty_list(TComma,assignment_operator)
## LR(1) items:
assignopconstraint -> TEq TOBrace separated_nonempty_list(TComma,assignment_operator) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1600
## Reductions:

State 1600:
## Known stack suffix:
## TEq TOBrace separated_nonempty_list(TComma,assignment_operator) TCBrace
## LR(1) items:
assignopconstraint -> TEq TOBrace separated_nonempty_list(TComma,assignment_operator) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignopconstraint -> TEq TOBrace separated_nonempty_list(TComma,assignment_operator) TCBrace

State 1601:
## Known stack suffix:
## assignment_operator
## LR(1) items:
separated_nonempty_list(TComma,assignment_operator) -> assignment_operator . [ TCBrace ]
separated_nonempty_list(TComma,assignment_operator) -> assignment_operator . TComma separated_nonempty_list(TComma,assignment_operator) [ TCBrace ]
## Transitions:
-- On TComma shift to state 1602
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,assignment_operator) -> assignment_operator

State 1602:
## Known stack suffix:
## assignment_operator TComma
## LR(1) items:
separated_nonempty_list(TComma,assignment_operator) -> assignment_operator TComma . separated_nonempty_list(TComma,assignment_operator) [ TCBrace ]
## Transitions:
-- On TOpAssign shift to state 1596
-- On TEq shift to state 1598
-- On separated_nonempty_list(TComma,assignment_operator) shift to state 1603
-- On assignment_operator shift to state 1601
## Reductions:

State 1603:
## Known stack suffix:
## assignment_operator TComma separated_nonempty_list(TComma,assignment_operator)
## LR(1) items:
separated_nonempty_list(TComma,assignment_operator) -> assignment_operator TComma separated_nonempty_list(TComma,assignment_operator) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,assignment_operator) -> assignment_operator TComma separated_nonempty_list(TComma,assignment_operator)

State 1604:
## Known stack suffix:
## TEq assignment_operator
## LR(1) items:
assignopconstraint -> TEq assignment_operator . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignopconstraint -> TEq assignment_operator

State 1605:
## Known stack suffix:
## pure_ident_or_meta_ident assignopconstraint
## LR(1) items:
pure_ident_or_meta_ident_with_assignop_constraint -> pure_ident_or_meta_ident assignopconstraint . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_assignop_constraint -> pure_ident_or_meta_ident assignopconstraint

State 1606:
## Known stack suffix:
## arity pure
## LR(1) items:
metadec -> arity pure . TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity pure . TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity pure . TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity pure . TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity pure . TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
metadec -> arity pure . TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
metadec -> arity pure . TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure . TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypedef shift to state 1607
-- On TTypeId shift to state 108
-- On TType shift to state 1610
-- On TStatement shift to state 1613
-- On TRuleName shift to state 30
-- On TParameter shift to state 1619
-- On TOPar0 shift to state 696
-- On TOBrace shift to state 1630
-- On TMetavariable shift to state 1637
-- On TMetaType shift to state 110
-- On TMeta shift to state 707
-- On TLocal shift to state 1640
-- On TIterator shift to state 1659
-- On TInitialiser shift to state 1665
-- On TIdentifier shift to state 1676
-- On TGlobal shift to state 1687
-- On TFunction shift to state 1724
-- On TField shift to state 1727
-- On TExpression shift to state 1738
-- On TError shift to state 1778
-- On TDeclarer shift to state 1781
-- On TDeclaration shift to state 1787
-- On TConstant shift to state 1790
-- On TAttribute shift to state 1796
-- On typedef_ctype shift to state 1694
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On option(TLocal) shift to state 1799
-- On non_signable_types shift to state 265
-- On meta_exp_type shift to state 1809
-- On const_vol shift to state 717
-- On all_basic_types shift to state 722
## Reductions:
-- On TIdExpression
--   reduce production option(TLocal) ->

State 1607:
## Known stack suffix:
## arity pure TTypedef
## LR(1) items:
metadec -> arity pure TTypedef . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1608
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1608:
## Known stack suffix:
## arity pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1609
## Reductions:

State 1609:
## Known stack suffix:
## arity pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TTypedef separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1610:
## Known stack suffix:
## arity pure TType
## LR(1) items:
metadec -> arity pure TType . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1611
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1611:
## Known stack suffix:
## arity pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1612
## Reductions:

State 1612:
## Known stack suffix:
## arity pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TType separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1613:
## Known stack suffix:
## arity pure TStatement
## LR(1) items:
metadec -> arity pure TStatement . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TStatement . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1614
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1617
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1614:
## Known stack suffix:
## arity pure TStatement Tlist
## LR(1) items:
metadec -> arity pure TStatement Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1615
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1615:
## Known stack suffix:
## arity pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1616
## Reductions:

State 1616:
## Known stack suffix:
## arity pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TStatement Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1617:
## Known stack suffix:
## arity pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1618
## Reductions:

State 1618:
## Known stack suffix:
## arity pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TStatement separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1619:
## Known stack suffix:
## arity pure TParameter
## LR(1) items:
metadec -> arity pure TParameter . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TParameter . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TParameter . Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1620
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1628
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1620:
## Known stack suffix:
## arity pure TParameter Tlist
## LR(1) items:
metadec -> arity pure TParameter Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TParameter Tlist . TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOCro shift to state 1621
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1626
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1621:
## Known stack suffix:
## arity pure TParameter Tlist TOCro
## LR(1) items:
metadec -> arity pure TParameter Tlist TOCro . list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1526
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInt shift to state 1529
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1530
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On list_len shift to state 1622
## Reductions:

State 1622:
## Known stack suffix:
## arity pure TParameter Tlist TOCro list_len
## LR(1) items:
metadec -> arity pure TParameter Tlist TOCro list_len . TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1623
## Reductions:

State 1623:
## Known stack suffix:
## arity pure TParameter Tlist TOCro list_len TCCro
## LR(1) items:
metadec -> arity pure TParameter Tlist TOCro list_len TCCro . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1624
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1624:
## Known stack suffix:
## arity pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1625
## Reductions:

State 1625:
## Known stack suffix:
## arity pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TParameter Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1626:
## Known stack suffix:
## arity pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1627
## Reductions:

State 1627:
## Known stack suffix:
## arity pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TParameter Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1628:
## Known stack suffix:
## arity pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1629
## Reductions:

State 1629:
## Known stack suffix:
## arity pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TParameter separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1630:
## Known stack suffix:
## TOBrace
## LR(1) items:
meta_exp_type -> TOBrace . separated_nonempty_list(TComma,ctype) TCBrace list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On separated_nonempty_list(TComma,ctype) shift to state 1631
-- On non_signable_types shift to state 265
-- On ctype shift to state 1634
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 1631:
## Known stack suffix:
## TOBrace separated_nonempty_list(TComma,ctype)
## LR(1) items:
meta_exp_type -> TOBrace separated_nonempty_list(TComma,ctype) . TCBrace list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TCBrace shift to state 1632
## Reductions:

State 1632:
## Known stack suffix:
## TOBrace separated_nonempty_list(TComma,ctype) TCBrace
## LR(1) items:
meta_exp_type -> TOBrace separated_nonempty_list(TComma,ctype) TCBrace . list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 1633
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 1633:
## Known stack suffix:
## TOBrace separated_nonempty_list(TComma,ctype) TCBrace list(TMul)
## LR(1) items:
meta_exp_type -> TOBrace separated_nonempty_list(TComma,ctype) TCBrace list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production meta_exp_type -> TOBrace separated_nonempty_list(TComma,ctype) TCBrace list(TMul)

State 1634:
## Known stack suffix:
## ctype
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype . [ TCBrace ]
separated_nonempty_list(TComma,ctype) -> ctype . TComma separated_nonempty_list(TComma,ctype) [ TCBrace ]
## Transitions:
-- On TComma shift to state 1635
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,ctype) -> ctype

State 1635:
## Known stack suffix:
## ctype TComma
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype TComma . separated_nonempty_list(TComma,ctype) [ TCBrace ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On separated_nonempty_list(TComma,ctype) shift to state 1636
-- On non_signable_types shift to state 265
-- On ctype shift to state 1634
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 1636:
## Known stack suffix:
## ctype TComma separated_nonempty_list(TComma,ctype)
## LR(1) items:
separated_nonempty_list(TComma,ctype) -> ctype TComma separated_nonempty_list(TComma,ctype) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,ctype) -> ctype TComma separated_nonempty_list(TComma,ctype)

State 1637:
## Known stack suffix:
## arity pure TMetavariable
## LR(1) items:
metadec -> arity pure TMetavariable . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1638
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1638:
## Known stack suffix:
## arity pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1639
## Reductions:

State 1639:
## Known stack suffix:
## arity pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TMetavariable separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1640:
## Known stack suffix:
## arity pure TLocal
## LR(1) items:
metadec -> arity pure TLocal . TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
option(TLocal) -> TLocal . [ TIdExpression ]
## Transitions:
-- On TFunction shift to state 1641
## Reductions:
-- On TIdExpression
--   reduce production option(TLocal) -> TLocal

State 1641:
## Known stack suffix:
## arity pure TLocal TFunction
## LR(1) items:
metadec -> arity pure TLocal TFunction . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) shift to state 1642
-- On pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) shift to state 1644
-- On pure_ident_or_meta_ident shift to state 1647
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1642:
## Known stack suffix:
## arity pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))
## LR(1) items:
metadec -> arity pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1643
## Reductions:

State 1643:
## Known stack suffix:
## arity pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg
## LR(1) items:
metadec -> arity pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TLocal TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg

State 1644:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1645
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)

State 1645:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) shift to state 1646
-- On pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) shift to state 1644
-- On pure_ident_or_meta_ident shift to state 1647
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1646:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))

State 1647:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) -> pure_ident_or_meta_ident . option(re_or_not_eqid) [ TMPtVirg TComma ]
## Transitions:
-- On TTildeExclEq shift to state 1546
-- On TTildeEq shift to state 1548
-- On TNotEq shift to state 1648
-- On TEq shift to state 1654
-- On regexp_eqid shift to state 1656
-- On re_or_not_eqid shift to state 1657
-- On option(re_or_not_eqid) shift to state 1658
## Reductions:
-- On TMPtVirg TComma
--   reduce production option(re_or_not_eqid) ->

State 1648:
## Known stack suffix:
## TNotEq
## LR(1) items:
re_or_not_eqid -> TNotEq . idcstr [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOBrace shift to state 1649
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1652
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On idcstr shift to state 1653
## Reductions:

State 1649:
## Known stack suffix:
## TOBrace
## LR(1) items:
idcstr -> TOBrace . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1650
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1650:
## Known stack suffix:
## TOBrace separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
idcstr -> TOBrace separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1651
## Reductions:

State 1651:
## Known stack suffix:
## TOBrace separated_nonempty_list(TComma,pure_ident_or_meta_ident) TCBrace
## LR(1) items:
idcstr -> TOBrace separated_nonempty_list(TComma,pure_ident_or_meta_ident) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production idcstr -> TOBrace separated_nonempty_list(TComma,pure_ident_or_meta_ident) TCBrace

State 1652:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
idcstr -> pure_ident_or_meta_ident . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production idcstr -> pure_ident_or_meta_ident

State 1653:
## Known stack suffix:
## TNotEq idcstr
## LR(1) items:
re_or_not_eqid -> TNotEq idcstr . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqid -> TNotEq idcstr

State 1654:
## Known stack suffix:
## TEq
## LR(1) items:
re_or_not_eqid -> TEq . idcstr [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOBrace shift to state 1649
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1652
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On idcstr shift to state 1655
## Reductions:

State 1655:
## Known stack suffix:
## TEq idcstr
## LR(1) items:
re_or_not_eqid -> TEq idcstr . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqid -> TEq idcstr

State 1656:
## Known stack suffix:
## regexp_eqid
## LR(1) items:
re_or_not_eqid -> regexp_eqid . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqid -> regexp_eqid

State 1657:
## Known stack suffix:
## re_or_not_eqid
## LR(1) items:
option(re_or_not_eqid) -> re_or_not_eqid . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(re_or_not_eqid) -> re_or_not_eqid

State 1658:
## Known stack suffix:
## pure_ident_or_meta_ident option(re_or_not_eqid)
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) -> pure_ident_or_meta_ident option(re_or_not_eqid) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) -> pure_ident_or_meta_ident option(re_or_not_eqid)

State 1659:
## Known stack suffix:
## arity pure TIterator
## LR(1) items:
metadec -> arity pure TIterator . TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TIterator . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1660
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) shift to state 1663
-- On pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) shift to state 1644
-- On pure_ident_or_meta_ident shift to state 1647
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1660:
## Known stack suffix:
## arity pure TIterator TName
## LR(1) items:
metadec -> arity pure TIterator TName . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> TName . [ TTildeExclEq TTildeEq TNotEq TMPtVirg TEq TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1661
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TTildeExclEq TTildeEq TNotEq TMPtVirg TEq TComma
--   reduce production pure_ident_kwd -> TName

State 1661:
## Known stack suffix:
## arity pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1662
## Reductions:

State 1662:
## Known stack suffix:
## arity pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TIterator TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1663:
## Known stack suffix:
## arity pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))
## LR(1) items:
metadec -> arity pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1664
## Reductions:

State 1664:
## Known stack suffix:
## arity pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg
## LR(1) items:
metadec -> arity pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TIterator separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg

State 1665:
## Known stack suffix:
## arity pure TInitialiser
## LR(1) items:
metadec -> arity pure TInitialiser . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TInitialiser . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TInitialiser . Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1666
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1674
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1666:
## Known stack suffix:
## arity pure TInitialiser Tlist
## LR(1) items:
metadec -> arity pure TInitialiser Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TInitialiser Tlist . TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOCro shift to state 1667
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1672
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1667:
## Known stack suffix:
## arity pure TInitialiser Tlist TOCro
## LR(1) items:
metadec -> arity pure TInitialiser Tlist TOCro . list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1526
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInt shift to state 1529
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1530
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On list_len shift to state 1668
## Reductions:

State 1668:
## Known stack suffix:
## arity pure TInitialiser Tlist TOCro list_len
## LR(1) items:
metadec -> arity pure TInitialiser Tlist TOCro list_len . TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1669
## Reductions:

State 1669:
## Known stack suffix:
## arity pure TInitialiser Tlist TOCro list_len TCCro
## LR(1) items:
metadec -> arity pure TInitialiser Tlist TOCro list_len TCCro . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1670
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1670:
## Known stack suffix:
## arity pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1671
## Reductions:

State 1671:
## Known stack suffix:
## arity pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TInitialiser Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1672:
## Known stack suffix:
## arity pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1673
## Reductions:

State 1673:
## Known stack suffix:
## arity pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TInitialiser Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1674:
## Known stack suffix:
## arity pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1675
## Reductions:

State 1675:
## Known stack suffix:
## arity pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TInitialiser separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1676:
## Known stack suffix:
## arity pure TIdentifier
## LR(1) items:
metadec -> arity pure TIdentifier . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1677
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) shift to state 1680
-- On pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) shift to state 1682
-- On pure_ident_or_meta_ident shift to state 1685
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1677:
## Known stack suffix:
## TVirtual
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> TVirtual . TDot pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TDot shift to state 1678
## Reductions:

State 1678:
## Known stack suffix:
## TVirtual TDot
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> TVirtual TDot . pure_ident [ TMPtVirg TComma ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 1679
## Reductions:

State 1679:
## Known stack suffix:
## TVirtual TDot pure_ident
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> TVirtual TDot pure_ident . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> TVirtual TDot pure_ident

State 1680:
## Known stack suffix:
## arity pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid))
## LR(1) items:
metadec -> arity pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1681
## Reductions:

State 1681:
## Known stack suffix:
## arity pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg
## LR(1) items:
metadec -> arity pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TIdentifier separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) TMPtVirg

State 1682:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1683
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)

State 1683:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1677
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) shift to state 1684
-- On pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) shift to state 1682
-- On pure_ident_or_meta_ident shift to state 1685
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1684:
## Known stack suffix:
## pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid)) -> pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid))

State 1685:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> pure_ident_or_meta_ident . option(re_or_not_eqid) [ TMPtVirg TComma ]
## Transitions:
-- On TTildeExclEq shift to state 1546
-- On TTildeEq shift to state 1548
-- On TNotEq shift to state 1648
-- On TEq shift to state 1654
-- On regexp_eqid shift to state 1656
-- On re_or_not_eqid shift to state 1657
-- On option(re_or_not_eqid) shift to state 1686
## Reductions:
-- On TMPtVirg TComma
--   reduce production option(re_or_not_eqid) ->

State 1686:
## Known stack suffix:
## pure_ident_or_meta_ident option(re_or_not_eqid)
## LR(1) items:
pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> pure_ident_or_meta_ident option(re_or_not_eqid) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_idconstraint_virt(re_or_not_eqid) -> pure_ident_or_meta_ident option(re_or_not_eqid)

State 1687:
## Known stack suffix:
## arity pure TGlobal
## LR(1) items:
metadec -> arity pure TGlobal . TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TGlobal . TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TGlobal . TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On TIdExpression shift to state 1688
## Reductions:

State 1688:
## Known stack suffix:
## arity pure TGlobal TIdExpression
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TGlobal TIdExpression . meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TGlobal TIdExpression . nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tlist shift to state 1448
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TTypeId shift to state 108
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1689
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOPar0 shift to state 696
-- On TOBrace shift to state 1630
-- On TName shift to state 1459
-- On TMul shift to state 1692
-- On TMetaType shift to state 110
-- On TMeta shift to state 707
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On typedef_ctype shift to state 1694
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1697
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On nonempty_list(TMul) shift to state 1718
-- On non_signable_types shift to state 265
-- On meta_ident shift to state 1497
-- On meta_exp_type shift to state 1721
-- On const_vol shift to state 717
-- On all_basic_types shift to state 722
## Reductions:

State 1689:
## Known stack suffix:
## TRuleName
## LR(1) items:
meta_ident -> TRuleName . TDot pure_ident [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma ]
meta_ident -> TRuleName . TDot pure_ident_kwd [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma ]
signable_types -> TRuleName . TDot TIdent [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TOCro TName TMul TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TDot shift to state 1690
## Reductions:

State 1690:
## Known stack suffix:
## TRuleName TDot
## LR(1) items:
meta_ident -> TRuleName TDot . pure_ident [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma ]
meta_ident -> TRuleName TDot . pure_ident_kwd [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma ]
signable_types -> TRuleName TDot . TIdent [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TOCro TName TMul TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 1691
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_kwd shift to state 1473
-- On pure_ident shift to state 1474
## Reductions:

State 1691:
## Known stack suffix:
## TRuleName TDot TIdent
## LR(1) items:
pure_ident -> TIdent . [ TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma ]
signable_types -> TRuleName TDot TIdent . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TOCro TName TMul TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Reductions:
-- On TTildeExclEq TTildeEq TSub TNotEq TMPtVirg TComma
--   reduce production pure_ident -> TIdent
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TOCro TName TMul TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production signable_types -> TRuleName TDot TIdent

State 1692:
## Known stack suffix:
## TMul
## LR(1) items:
nonempty_list(TMul) -> TMul . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
nonempty_list(TMul) -> TMul . nonempty_list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 1692
-- On nonempty_list(TMul) shift to state 1693
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production nonempty_list(TMul) -> TMul

State 1693:
## Known stack suffix:
## TMul nonempty_list(TMul)
## LR(1) items:
nonempty_list(TMul) -> TMul nonempty_list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(TMul) -> TMul nonempty_list(TMul)

State 1694:
## Known stack suffix:
## typedef_ctype
## LR(1) items:
meta_exp_type -> typedef_ctype . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
meta_exp_type -> typedef_ctype . TOCro TCCro [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TOCro shift to state 1695
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production meta_exp_type -> typedef_ctype

State 1695:
## Known stack suffix:
## typedef_ctype TOCro
## LR(1) items:
meta_exp_type -> typedef_ctype TOCro . TCCro [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TCCro shift to state 1696
## Reductions:

State 1696:
## Known stack suffix:
## typedef_ctype TOCro TCCro
## LR(1) items:
meta_exp_type -> typedef_ctype TOCro TCCro . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production meta_exp_type -> typedef_ctype TOCro TCCro

State 1697:
## Known stack suffix:
## arity pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1698
## Reductions:

State 1698:
## Known stack suffix:
## arity pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TGlobal TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1699:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1700
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)

State 1700:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1701
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1701:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))

State 1702:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) -> pure_ident_or_meta_ident . option(re_or_not_eqe_or_sub) [ TMPtVirg TComma ]
## Transitions:
-- On TTildeExclEq shift to state 1546
-- On TTildeEq shift to state 1548
-- On TSub shift to state 1703
-- On TNotEq shift to state 1708
-- On sub shift to state 1713
-- On regexp_eqid shift to state 1714
-- On re_or_not_eqe_or_sub shift to state 1715
-- On option(re_or_not_eqe_or_sub) shift to state 1716
-- On not_eqe shift to state 1717
## Reductions:
-- On TMPtVirg TComma
--   reduce production option(re_or_not_eqe_or_sub) ->

State 1703:
## Known stack suffix:
## TSub
## LR(1) items:
sub -> TSub . meta_ident [ TMPtVirg TComma ]
sub -> TSub . TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TRuleName shift to state 1454
-- On TOBrace shift to state 1704
-- On meta_ident shift to state 1707
## Reductions:

State 1704:
## Known stack suffix:
## TSub TOBrace
## LR(1) items:
sub -> TSub TOBrace . separated_nonempty_list(TComma,meta_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TRuleName shift to state 1454
-- On separated_nonempty_list(TComma,meta_ident) shift to state 1705
-- On meta_ident shift to state 1517
## Reductions:

State 1705:
## Known stack suffix:
## TSub TOBrace separated_nonempty_list(TComma,meta_ident)
## LR(1) items:
sub -> TSub TOBrace separated_nonempty_list(TComma,meta_ident) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1706
## Reductions:

State 1706:
## Known stack suffix:
## TSub TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace
## LR(1) items:
sub -> TSub TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sub -> TSub TOBrace separated_nonempty_list(TComma,meta_ident) TCBrace

State 1707:
## Known stack suffix:
## TSub meta_ident
## LR(1) items:
sub -> TSub meta_ident . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sub -> TSub meta_ident

State 1708:
## Known stack suffix:
## TNotEq
## LR(1) items:
not_eqe -> TNotEq . pure_ident [ TMPtVirg TComma ]
not_eqe -> TNotEq . TOBrace separated_nonempty_list(TComma,pure_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TOBrace shift to state 1709
-- On TIdent shift to state 2
-- On pure_ident shift to state 1712
## Reductions:

State 1709:
## Known stack suffix:
## TNotEq TOBrace
## LR(1) items:
not_eqe -> TNotEq TOBrace . separated_nonempty_list(TComma,pure_ident) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TIdent shift to state 2
-- On separated_nonempty_list(TComma,pure_ident) shift to state 1710
-- On pure_ident shift to state 4
## Reductions:

State 1710:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,pure_ident)
## LR(1) items:
not_eqe -> TNotEq TOBrace separated_nonempty_list(TComma,pure_ident) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1711
## Reductions:

State 1711:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,pure_ident) TCBrace
## LR(1) items:
not_eqe -> TNotEq TOBrace separated_nonempty_list(TComma,pure_ident) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_eqe -> TNotEq TOBrace separated_nonempty_list(TComma,pure_ident) TCBrace

State 1712:
## Known stack suffix:
## TNotEq pure_ident
## LR(1) items:
not_eqe -> TNotEq pure_ident . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_eqe -> TNotEq pure_ident

State 1713:
## Known stack suffix:
## sub
## LR(1) items:
re_or_not_eqe_or_sub -> sub . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqe_or_sub -> sub

State 1714:
## Known stack suffix:
## regexp_eqid
## LR(1) items:
re_or_not_eqe_or_sub -> regexp_eqid . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqe_or_sub -> regexp_eqid

State 1715:
## Known stack suffix:
## re_or_not_eqe_or_sub
## LR(1) items:
option(re_or_not_eqe_or_sub) -> re_or_not_eqe_or_sub . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(re_or_not_eqe_or_sub) -> re_or_not_eqe_or_sub

State 1716:
## Known stack suffix:
## pure_ident_or_meta_ident option(re_or_not_eqe_or_sub)
## LR(1) items:
pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) -> pure_ident_or_meta_ident option(re_or_not_eqe_or_sub) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) -> pure_ident_or_meta_ident option(re_or_not_eqe_or_sub)

State 1717:
## Known stack suffix:
## not_eqe
## LR(1) items:
re_or_not_eqe_or_sub -> not_eqe . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production re_or_not_eqe_or_sub -> not_eqe

State 1718:
## Known stack suffix:
## arity pure TGlobal TIdExpression nonempty_list(TMul)
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression nonempty_list(TMul) . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1719
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1719:
## Known stack suffix:
## arity pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1720
## Reductions:

State 1720:
## Known stack suffix:
## arity pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TGlobal TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1721:
## Known stack suffix:
## arity pure TGlobal TIdExpression meta_exp_type
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression meta_exp_type . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1722
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1722:
## Known stack suffix:
## arity pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1723
## Reductions:

State 1723:
## Known stack suffix:
## arity pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TGlobal TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1724:
## Known stack suffix:
## arity pure TFunction
## LR(1) items:
metadec -> arity pure TFunction . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) shift to state 1725
-- On pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) shift to state 1644
-- On pure_ident_or_meta_ident shift to state 1647
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1725:
## Known stack suffix:
## arity pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))
## LR(1) items:
metadec -> arity pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1726
## Reductions:

State 1726:
## Known stack suffix:
## arity pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg
## LR(1) items:
metadec -> arity pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TFunction separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg

State 1727:
## Known stack suffix:
## arity pure TField
## LR(1) items:
metadec -> arity pure TField . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TField . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TField . Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1728
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1736
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1728:
## Known stack suffix:
## arity pure TField Tlist
## LR(1) items:
metadec -> arity pure TField Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TField Tlist . TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOCro shift to state 1729
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1734
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1729:
## Known stack suffix:
## arity pure TField Tlist TOCro
## LR(1) items:
metadec -> arity pure TField Tlist TOCro . list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1526
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInt shift to state 1529
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1530
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On list_len shift to state 1730
## Reductions:

State 1730:
## Known stack suffix:
## arity pure TField Tlist TOCro list_len
## LR(1) items:
metadec -> arity pure TField Tlist TOCro list_len . TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1731
## Reductions:

State 1731:
## Known stack suffix:
## arity pure TField Tlist TOCro list_len TCCro
## LR(1) items:
metadec -> arity pure TField Tlist TOCro list_len TCCro . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1732
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1732:
## Known stack suffix:
## arity pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1733
## Reductions:

State 1733:
## Known stack suffix:
## arity pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TField Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1734:
## Known stack suffix:
## arity pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1735
## Reductions:

State 1735:
## Known stack suffix:
## arity pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TField Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1736:
## Known stack suffix:
## arity pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1737
## Reductions:

State 1737:
## Known stack suffix:
## arity pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TField separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1738:
## Known stack suffix:
## arity pure TExpression
## LR(1) items:
metadec -> arity pure TExpression . Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TExpression . expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TExpression . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TExpression . Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tunion shift to state 1739
-- On Tstruct shift to state 1741
-- On Tlist shift to state 1743
-- On Tenum shift to state 1751
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TMul shift to state 1692
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) shift to state 1753
-- On pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) shift to state 1755
-- On pure_ident_or_meta_ident shift to state 1758
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On nonempty_list(TMul) shift to state 1774
-- On meta_ident shift to state 1497
-- On expression_type shift to state 1775
## Reductions:

State 1739:
## Known stack suffix:
## Tunion
## LR(1) items:
expression_type -> Tunion . list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 1740
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 1740:
## Known stack suffix:
## Tunion list(TMul)
## LR(1) items:
expression_type -> Tunion list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_type -> Tunion list(TMul)

State 1741:
## Known stack suffix:
## Tstruct
## LR(1) items:
expression_type -> Tstruct . list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 1742
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 1742:
## Known stack suffix:
## Tstruct list(TMul)
## LR(1) items:
expression_type -> Tstruct list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_type -> Tstruct list(TMul)

State 1743:
## Known stack suffix:
## arity pure TExpression Tlist
## LR(1) items:
metadec -> arity pure TExpression Tlist . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TExpression Tlist . TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> Tlist . [ TSub TNotEq TMPtVirg TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOCro shift to state 1744
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1749
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TSub TNotEq TMPtVirg TComma
--   reduce production pure_ident_kwd -> Tlist

State 1744:
## Known stack suffix:
## arity pure TExpression Tlist TOCro
## LR(1) items:
metadec -> arity pure TExpression Tlist TOCro . list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TVirtual shift to state 1526
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInt shift to state 1529
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On pure_ident_or_meta_ident shift to state 1530
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
-- On list_len shift to state 1745
## Reductions:

State 1745:
## Known stack suffix:
## arity pure TExpression Tlist TOCro list_len
## LR(1) items:
metadec -> arity pure TExpression Tlist TOCro list_len . TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On TCCro shift to state 1746
## Reductions:

State 1746:
## Known stack suffix:
## arity pure TExpression Tlist TOCro list_len TCCro
## LR(1) items:
metadec -> arity pure TExpression Tlist TOCro list_len TCCro . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1747
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1747:
## Known stack suffix:
## arity pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1748
## Reductions:

State 1748:
## Known stack suffix:
## arity pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TExpression Tlist TOCro list_len TCCro separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1749:
## Known stack suffix:
## arity pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1750
## Reductions:

State 1750:
## Known stack suffix:
## arity pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TExpression Tlist separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1751:
## Known stack suffix:
## Tenum
## LR(1) items:
expression_type -> Tenum . list(TMul) [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
-- On TMul shift to state 719
-- On list(TMul) shift to state 1752
## Reductions:
-- On Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant
--   reduce production list(TMul) ->

State 1752:
## Known stack suffix:
## Tenum list(TMul)
## LR(1) items:
expression_type -> Tenum list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_type -> Tenum list(TMul)

State 1753:
## Known stack suffix:
## arity pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub))
## LR(1) items:
metadec -> arity pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1754
## Reductions:

State 1754:
## Known stack suffix:
## arity pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg

State 1755:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) . [ TMPtVirg ]
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) . TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) [ TMPtVirg ]
## Transitions:
-- On TComma shift to state 1756
## Reductions:
-- On TMPtVirg
--   reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)

State 1756:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) TComma
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) TComma . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) [ TMPtVirg ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) shift to state 1757
-- On pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) shift to state 1755
-- On pure_ident_or_meta_ident shift to state 1758
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1757:
## Known stack suffix:
## pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub))
## LR(1) items:
separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) -> pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) TComma separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub))

State 1758:
## Known stack suffix:
## pure_ident_or_meta_ident
## LR(1) items:
pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) -> pure_ident_or_meta_ident . option(not_ceq_or_sub) [ TMPtVirg TComma ]
## Transitions:
-- On TSub shift to state 1703
-- On TNotEq shift to state 1759
-- On sub shift to state 1770
-- On option(not_ceq_or_sub) shift to state 1771
-- On not_ceq_or_sub shift to state 1772
-- On not_ceq shift to state 1773
## Reductions:
-- On TMPtVirg TComma
--   reduce production option(not_ceq_or_sub) ->

State 1759:
## Known stack suffix:
## TNotEq
## LR(1) items:
not_ceq -> TNotEq . ident_or_const [ TMPtVirg TComma ]
not_ceq -> TNotEq . TOBrace separated_nonempty_list(TComma,ident_or_const) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TSymId shift to state 46
-- On TOBrace shift to state 1760
-- On TInt shift to state 1761
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 1762
-- On pure_ident shift to state 1765
-- On ident_or_const shift to state 1769
## Reductions:

State 1760:
## Known stack suffix:
## TNotEq TOBrace
## LR(1) items:
not_ceq -> TNotEq TOBrace . separated_nonempty_list(TComma,ident_or_const) TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TSymId shift to state 46
-- On TInt shift to state 1761
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 1762
-- On separated_nonempty_list(TComma,ident_or_const) shift to state 1763
-- On pure_ident shift to state 1765
-- On ident_or_const shift to state 1766
## Reductions:

State 1761:
## Known stack suffix:
## TInt
## LR(1) items:
ident_or_const -> TInt . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_const -> TInt

State 1762:
## Known stack suffix:
## wrapped_sym_ident
## LR(1) items:
ident_or_const -> wrapped_sym_ident . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_const -> wrapped_sym_ident

State 1763:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,ident_or_const)
## LR(1) items:
not_ceq -> TNotEq TOBrace separated_nonempty_list(TComma,ident_or_const) . TCBrace [ TMPtVirg TComma ]
## Transitions:
-- On TCBrace shift to state 1764
## Reductions:

State 1764:
## Known stack suffix:
## TNotEq TOBrace separated_nonempty_list(TComma,ident_or_const) TCBrace
## LR(1) items:
not_ceq -> TNotEq TOBrace separated_nonempty_list(TComma,ident_or_const) TCBrace . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_ceq -> TNotEq TOBrace separated_nonempty_list(TComma,ident_or_const) TCBrace

State 1765:
## Known stack suffix:
## pure_ident
## LR(1) items:
ident_or_const -> pure_ident . [ TMPtVirg TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_or_const -> pure_ident

State 1766:
## Known stack suffix:
## ident_or_const
## LR(1) items:
separated_nonempty_list(TComma,ident_or_const) -> ident_or_const . [ TCBrace ]
separated_nonempty_list(TComma,ident_or_const) -> ident_or_const . TComma separated_nonempty_list(TComma,ident_or_const) [ TCBrace ]
## Transitions:
-- On TComma shift to state 1767
## Reductions:
-- On TCBrace
--   reduce production separated_nonempty_list(TComma,ident_or_const) -> ident_or_const

State 1767:
## Known stack suffix:
## ident_or_const TComma
## LR(1) items:
separated_nonempty_list(TComma,ident_or_const) -> ident_or_const TComma . separated_nonempty_list(TComma,ident_or_const) [ TCBrace ]
## Transitions:
-- On TSymId shift to state 46
-- On TInt shift to state 1761
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 1762
-- On separated_nonempty_list(TComma,ident_or_const) shift to state 1768
-- On pure_ident shift to state 1765
-- On ident_or_const shift to state 1766
## Reductions:

State 1768:
## Known stack suffix:
## ident_or_const TComma separated_nonempty_list(TComma,ident_or_const)
## LR(1) items:
separated_nonempty_list(TComma,ident_or_const) -> ident_or_const TComma separated_nonempty_list(TComma,ident_or_const) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,ident_or_const) -> ident_or_const TComma separated_nonempty_list(TComma,ident_or_const)

State 1769:
## Known stack suffix:
## TNotEq ident_or_const
## LR(1) items:
not_ceq -> TNotEq ident_or_const . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_ceq -> TNotEq ident_or_const

State 1770:
## Known stack suffix:
## sub
## LR(1) items:
not_ceq_or_sub -> sub . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_ceq_or_sub -> sub

State 1771:
## Known stack suffix:
## pure_ident_or_meta_ident option(not_ceq_or_sub)
## LR(1) items:
pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) -> pure_ident_or_meta_ident option(not_ceq_or_sub) . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) -> pure_ident_or_meta_ident option(not_ceq_or_sub)

State 1772:
## Known stack suffix:
## not_ceq_or_sub
## LR(1) items:
option(not_ceq_or_sub) -> not_ceq_or_sub . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(not_ceq_or_sub) -> not_ceq_or_sub

State 1773:
## Known stack suffix:
## not_ceq
## LR(1) items:
not_ceq_or_sub -> not_ceq . [ TMPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_ceq_or_sub -> not_ceq

State 1774:
## Known stack suffix:
## nonempty_list(TMul)
## LR(1) items:
expression_type -> nonempty_list(TMul) . [ Tlist TWords TTypedef TType TSymbol TStatement TRuleName TPure TPosition TParameter TName TLocal TIterator TInitialiser TIdentifier TIdent TIdExpression TGenerated TFunction TFresh TExpression TError TDeclarer TContext TConstant ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_type -> nonempty_list(TMul)

State 1775:
## Known stack suffix:
## arity pure TExpression expression_type
## LR(1) items:
metadec -> arity pure TExpression expression_type . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1776
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1776:
## Known stack suffix:
## arity pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1777
## Reductions:

State 1777:
## Known stack suffix:
## arity pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TExpression expression_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1778:
## Known stack suffix:
## arity pure TError
## LR(1) items:
metadec -> arity pure TError . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1779
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1779:
## Known stack suffix:
## arity pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1780
## Reductions:

State 1780:
## Known stack suffix:
## arity pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TError separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1781:
## Known stack suffix:
## arity pure TDeclarer
## LR(1) items:
metadec -> arity pure TDeclarer . TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
metadec -> arity pure TDeclarer . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1782
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) shift to state 1785
-- On pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid) shift to state 1644
-- On pure_ident_or_meta_ident shift to state 1647
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1782:
## Known stack suffix:
## arity pure TDeclarer TName
## LR(1) items:
metadec -> arity pure TDeclarer TName . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
pure_ident_kwd -> TName . [ TTildeExclEq TTildeEq TNotEq TMPtVirg TEq TComma ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1783
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:
-- On TTildeExclEq TTildeEq TNotEq TMPtVirg TEq TComma
--   reduce production pure_ident_kwd -> TName

State 1783:
## Known stack suffix:
## arity pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1784
## Reductions:

State 1784:
## Known stack suffix:
## arity pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TDeclarer TName separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1785:
## Known stack suffix:
## arity pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid))
## LR(1) items:
metadec -> arity pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1786
## Reductions:

State 1786:
## Known stack suffix:
## arity pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg
## LR(1) items:
metadec -> arity pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TDeclarer separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_idconstraint(re_or_not_eqid)) TMPtVirg

State 1787:
## Known stack suffix:
## arity pure TDeclaration
## LR(1) items:
metadec -> arity pure TDeclaration . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1788
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1788:
## Known stack suffix:
## arity pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1789
## Reductions:

State 1789:
## Known stack suffix:
## arity pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TDeclaration separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1790:
## Known stack suffix:
## arity pure TConstant
## LR(1) items:
metadec -> arity pure TConstant . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure TConstant . meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tlist shift to state 1448
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TTypeId shift to state 108
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1689
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOPar0 shift to state 696
-- On TOBrace shift to state 1630
-- On TName shift to state 1459
-- On TMetaType shift to state 110
-- On TMeta shift to state 707
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On typedef_ctype shift to state 1694
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1791
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On non_signable_types shift to state 265
-- On meta_ident shift to state 1497
-- On meta_exp_type shift to state 1793
-- On const_vol shift to state 717
-- On all_basic_types shift to state 722
## Reductions:

State 1791:
## Known stack suffix:
## arity pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1792
## Reductions:

State 1792:
## Known stack suffix:
## arity pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TConstant separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1793:
## Known stack suffix:
## arity pure TConstant meta_exp_type
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1794
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1794:
## Known stack suffix:
## arity pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1795
## Reductions:

State 1795:
## Known stack suffix:
## arity pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TConstant meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1796:
## Known stack suffix:
## arity pure TAttribute
## LR(1) items:
metadec -> arity pure TAttribute . separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident) shift to state 1797
-- On pure_ident_or_meta_ident shift to state 1535
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1797:
## Known stack suffix:
## arity pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident)
## LR(1) items:
metadec -> arity pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1798
## Reductions:

State 1798:
## Known stack suffix:
## arity pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg
## LR(1) items:
metadec -> arity pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure TAttribute separated_nonempty_list(TComma,pure_ident_or_meta_ident) TMPtVirg

State 1799:
## Known stack suffix:
## arity pure option(TLocal)
## LR(1) items:
metadec -> arity pure option(TLocal) . TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure option(TLocal) . TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure option(TLocal) . TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On TIdExpression shift to state 1800
## Reductions:

State 1800:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure option(TLocal) TIdExpression . meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
metadec -> arity pure option(TLocal) TIdExpression . nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 280
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 281
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tlist shift to state 1448
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TTypeId shift to state 108
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1689
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TOPar0 shift to state 696
-- On TOBrace shift to state 1630
-- On TName shift to state 1459
-- On TMul shift to state 1692
-- On TMetaType shift to state 110
-- On TMeta shift to state 707
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On typedef_ctype shift to state 1694
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1801
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On nonempty_list(TMul) shift to state 1803
-- On non_signable_types shift to state 265
-- On meta_ident shift to state 1497
-- On meta_exp_type shift to state 1806
-- On const_vol shift to state 717
-- On all_basic_types shift to state 722
## Reductions:

State 1801:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1802
## Reductions:

State 1802:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure option(TLocal) TIdExpression separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1803:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression nonempty_list(TMul)
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression nonempty_list(TMul) . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1804
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1804:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1805
## Reductions:

State 1805:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure option(TLocal) TIdExpression nonempty_list(TMul) separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1806:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression meta_exp_type
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression meta_exp_type . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) shift to state 1807
-- On pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub) shift to state 1699
-- On pure_ident_or_meta_ident shift to state 1702
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1807:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub))
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1808
## Reductions:

State 1808:
## Known stack suffix:
## arity pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure option(TLocal) TIdExpression meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(re_or_not_eqe_or_sub)) TMPtVirg

State 1809:
## Known stack suffix:
## arity pure meta_exp_type
## LR(1) items:
metadec -> arity pure meta_exp_type . separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg [ # ]
## Transitions:
-- On Tlist shift to state 1448
-- On TWords shift to state 1449
-- On TTypedef shift to state 1450
-- On TType shift to state 1451
-- On TSymbol shift to state 1452
-- On TStatement shift to state 1453
-- On TRuleName shift to state 1454
-- On TPure shift to state 1456
-- On TPosition shift to state 1457
-- On TParameter shift to state 1458
-- On TName shift to state 1459
-- On TLocal shift to state 1460
-- On TIterator shift to state 1461
-- On TInitialiser shift to state 1462
-- On TIdentifier shift to state 1463
-- On TIdent shift to state 2
-- On TIdExpression shift to state 1464
-- On TGenerated shift to state 1465
-- On TFunction shift to state 1466
-- On TFresh shift to state 1467
-- On TExpression shift to state 1468
-- On TError shift to state 1469
-- On TDeclarer shift to state 1470
-- On TContext shift to state 1471
-- On TConstant shift to state 1472
-- On separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) shift to state 1810
-- On pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub) shift to state 1755
-- On pure_ident_or_meta_ident shift to state 1758
-- On pure_ident_kwd shift to state 1495
-- On pure_ident shift to state 1496
-- On meta_ident shift to state 1497
## Reductions:

State 1810:
## Known stack suffix:
## arity pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub))
## LR(1) items:
metadec -> arity pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 1811
## Reductions:

State 1811:
## Known stack suffix:
## arity pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg
## LR(1) items:
metadec -> arity pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production metadec -> arity pure meta_exp_type separated_nonempty_list(TComma,pure_ident_or_meta_ident_with_econstraint(not_ceq_or_sub)) TMPtVirg

State 1812:
## Known stack suffix:
##
## LR(1) items:
iso_rule_name' -> . iso_rule_name [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 1813
-- On iso_rule_name shift to state 1815
## Reductions:

State 1813:
## Known stack suffix:
## pure_ident
## LR(1) items:
iso_rule_name -> pure_ident . TArob [ # ]
## Transitions:
-- On TArob shift to state 1814
## Reductions:

State 1814:
## Known stack suffix:
## pure_ident TArob
## LR(1) items:
iso_rule_name -> pure_ident TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production iso_rule_name -> pure_ident TArob

State 1815:
## Known stack suffix:
## iso_rule_name
## LR(1) items:
iso_rule_name' -> iso_rule_name . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept iso_rule_name

State 1816:
## Known stack suffix:
##
## LR(1) items:
meta_main' -> . meta_main [ # ]
## Transitions:
-- On TWhy0 shift to state 1441
-- On TSymbol shift to state 1442
-- On TPlus0 shift to state 1445
-- On TFresh shift to state 1446
-- On TBang0 shift to state 1498
-- On metadec shift to state 1817
-- On meta_main shift to state 1818
-- On arity shift to state 1501
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypedef TTypeId TType TStatement TRuleName TPure TPosition TParameter TOPar0 TOBrace TMetavariable TMetaType TMeta TLocal TIterator TInitialiser TIdentifier TIdExpression TGlobal TFunction TFormat TField TExpression TError TDeclarer TDeclaration TContext TConstant TBinary TAttribute TAssignment
--   reduce production arity ->

State 1817:
## Known stack suffix:
## metadec
## LR(1) items:
meta_main -> metadec . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production meta_main -> metadec

State 1818:
## Known stack suffix:
## meta_main
## LR(1) items:
meta_main' -> meta_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept meta_main

State 1819:
## Known stack suffix:
##
## LR(1) items:
minus_exp_main' -> . minus_exp_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On minus_exp_main shift to state 1822
-- On minus_exp_body shift to state 1823
-- On loption(filespec) shift to state 1827
-- On filespec shift to state 1830
## Reductions:
-- On TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd
--   reduce production loption(filespec) ->

State 1820:
## Known stack suffix:
## TMinusFile
## LR(1) items:
filespec -> TMinusFile . TPlusFile [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOInit TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TPlusFile shift to state 1821
## Reductions:

State 1821:
## Known stack suffix:
## TMinusFile TPlusFile
## LR(1) items:
filespec -> TMinusFile TPlusFile . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOInit TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filespec -> TMinusFile TPlusFile

State 1822:
## Known stack suffix:
## minus_exp_main
## LR(1) items:
minus_exp_main' -> minus_exp_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept minus_exp_main

State 1823:
## Known stack suffix:
## minus_exp_body
## LR(1) items:
minus_exp_main -> minus_exp_body . EOF [ # ]
minus_exp_main -> minus_exp_body . TArobArob [ # ]
minus_exp_main -> minus_exp_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1824
-- On TArob shift to state 1825
-- On EOF shift to state 1826
## Reductions:

State 1824:
## Known stack suffix:
## minus_exp_body TArobArob
## LR(1) items:
minus_exp_main -> minus_exp_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_exp_main -> minus_exp_body TArobArob

State 1825:
## Known stack suffix:
## minus_exp_body TArob
## LR(1) items:
minus_exp_main -> minus_exp_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_exp_main -> minus_exp_body TArob

State 1826:
## Known stack suffix:
## minus_exp_body EOF
## LR(1) items:
minus_exp_main -> minus_exp_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_exp_main -> minus_exp_body EOF

State 1827:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
minus_exp_body -> loption(filespec) . top_eexpr [ TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On top_eexpr shift to state 1828
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1829
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1828:
## Known stack suffix:
## loption(filespec) top_eexpr
## LR(1) items:
minus_exp_body -> loption(filespec) top_eexpr . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_exp_body -> loption(filespec) top_eexpr

State 1829:
## Known stack suffix:
## eexpr
## LR(1) items:
top_eexpr -> eexpr . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_eexpr -> eexpr

State 1830:
## Known stack suffix:
## filespec
## LR(1) items:
loption(filespec) -> filespec . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOInit TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(filespec) -> filespec

State 1831:
## Known stack suffix:
##
## LR(1) items:
minus_id_main' -> . minus_id_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On minus_id_main shift to state 1832
-- On minus_id_body shift to state 1833
-- On loption(filespec) shift to state 1837
-- On filespec shift to state 1830
## Reductions:
-- On TSymId TOPar0 TMetaId TMeta TIdent
--   reduce production loption(filespec) ->

State 1832:
## Known stack suffix:
## minus_id_main
## LR(1) items:
minus_id_main' -> minus_id_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept minus_id_main

State 1833:
## Known stack suffix:
## minus_id_body
## LR(1) items:
minus_id_main -> minus_id_body . EOF [ # ]
minus_id_main -> minus_id_body . TArobArob [ # ]
minus_id_main -> minus_id_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1834
-- On TArob shift to state 1835
-- On EOF shift to state 1836
## Reductions:

State 1834:
## Known stack suffix:
## minus_id_body TArobArob
## LR(1) items:
minus_id_main -> minus_id_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_id_main -> minus_id_body TArobArob

State 1835:
## Known stack suffix:
## minus_id_body TArob
## LR(1) items:
minus_id_main -> minus_id_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_id_main -> minus_id_body TArob

State 1836:
## Known stack suffix:
## minus_id_body EOF
## LR(1) items:
minus_id_main -> minus_id_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_id_main -> minus_id_body EOF

State 1837:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
minus_id_body -> loption(filespec) . top_ident [ TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On top_ident shift to state 1838
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 1839
## Reductions:

State 1838:
## Known stack suffix:
## loption(filespec) top_ident
## LR(1) items:
minus_id_body -> loption(filespec) top_ident . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_id_body -> loption(filespec) top_ident

State 1839:
## Known stack suffix:
## disj_ident
## LR(1) items:
top_ident -> disj_ident . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_ident -> disj_ident

State 1840:
## Known stack suffix:
##
## LR(1) items:
minus_main' -> . minus_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On minus_main shift to state 1841
-- On minus_body shift to state 1842
-- On loption(filespec) shift to state 1846
-- On filespec shift to state 1830
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOInit TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production loption(filespec) ->

State 1841:
## Known stack suffix:
## minus_main
## LR(1) items:
minus_main' -> minus_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept minus_main

State 1842:
## Known stack suffix:
## minus_body
## LR(1) items:
minus_main -> minus_body . EOF [ # ]
minus_main -> minus_body . TArobArob [ # ]
minus_main -> minus_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1843
-- On TArob shift to state 1844
-- On EOF shift to state 1845
## Reductions:

State 1843:
## Known stack suffix:
## minus_body TArobArob
## LR(1) items:
minus_main -> minus_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_main -> minus_body TArobArob

State 1844:
## Known stack suffix:
## minus_body TArob
## LR(1) items:
minus_main -> minus_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_main -> minus_body TArob

State 1845:
## Known stack suffix:
## minus_body EOF
## LR(1) items:
minus_main -> minus_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_main -> minus_body EOF

State 1846:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
minus_body -> loption(filespec) . loption(minus_start) [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 1865
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOInit shift to state 1876
-- On TOEllipsis shift to state 1879
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1884
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_seq_startne(toplevel_after_dots_init) shift to state 1887
-- On top_init shift to state 1888
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On minus_start shift to state 1893
-- On mident shift to state 1142
-- On loption(minus_start) shift to state 1894
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1895
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1919
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1921
-- On decl_ident shift to state 1173
-- On ctype shift to state 1923
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TArobArob TArob EOF
--   reduce production loption(minus_start) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1847:
## Known stack suffix:
## Tinline
## LR(1) items:
fninfo -> Tinline . fninfo [ TFunDecl ]
funproto -> Tinline . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> Tinline . storage ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1862
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1861
-- On ctype shift to state 1864
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1848:
## Known stack suffix:
## Tinline
## LR(1) items:
fninfo -> Tinline . fninfo [ TFunDecl ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1861
-- On ctype shift to state 1852
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1849:
## Known stack suffix:
## Tattr
## LR(1) items:
fninfo -> Tattr . fninfo [ TFunDecl ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1860
-- On ctype shift to state 1852
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1850:
## Known stack suffix:
## storage
## LR(1) items:
fninfo -> storage . fninfo [ TFunDecl ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1851
-- On ctype shift to state 1852
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1851:
## Known stack suffix:
## storage fninfo
## LR(1) items:
fninfo -> storage fninfo . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo -> storage fninfo

State 1852:
## Known stack suffix:
## ctype
## LR(1) items:
fninfo -> ctype . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On storage shift to state 1855
-- On fninfo_nt shift to state 1859
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1853:
## Known stack suffix:
## Tinline
## LR(1) items:
fninfo_nt -> Tinline . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On storage shift to state 1855
-- On fninfo_nt shift to state 1858
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1854:
## Known stack suffix:
## Tattr
## LR(1) items:
fninfo_nt -> Tattr . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On storage shift to state 1855
-- On fninfo_nt shift to state 1857
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1855:
## Known stack suffix:
## storage
## LR(1) items:
fninfo_nt -> storage . fninfo_nt [ TFunDecl ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On storage shift to state 1855
-- On fninfo_nt shift to state 1856
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1856:
## Known stack suffix:
## storage fninfo_nt
## LR(1) items:
fninfo_nt -> storage fninfo_nt . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo_nt -> storage fninfo_nt

State 1857:
## Known stack suffix:
## Tattr fninfo_nt
## LR(1) items:
fninfo_nt -> Tattr fninfo_nt . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo_nt -> Tattr fninfo_nt

State 1858:
## Known stack suffix:
## Tinline fninfo_nt
## LR(1) items:
fninfo_nt -> Tinline fninfo_nt . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo_nt -> Tinline fninfo_nt

State 1859:
## Known stack suffix:
## ctype fninfo_nt
## LR(1) items:
fninfo -> ctype fninfo_nt . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo -> ctype fninfo_nt

State 1860:
## Known stack suffix:
## Tattr fninfo
## LR(1) items:
fninfo -> Tattr fninfo . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo -> Tattr fninfo

State 1861:
## Known stack suffix:
## Tinline fninfo
## LR(1) items:
fninfo -> Tinline fninfo . [ TFunDecl ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fninfo -> Tinline fninfo

State 1862:
## Known stack suffix:
## Tinline storage
## LR(1) items:
fninfo -> storage . fninfo [ TFunDecl ]
funproto -> Tinline storage . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1851
-- On ctype shift to state 1863
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1863:
## Known stack suffix:
## Tinline storage ctype
## LR(1) items:
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> Tinline storage ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 733
-- On disj_ident shift to state 749
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1864:
## Known stack suffix:
## Tinline ctype
## LR(1) items:
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> Tinline ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 751
-- On disj_ident shift to state 749
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1865:
## Known stack suffix:
## TPOEllipsis
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis . list(whenppdecs) nest_start TPCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis . list(whenppdecs) nest_start TPCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1866
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd
--   reduce production list(whenppdecs) ->

State 1866:
## Known stack suffix:
## TPOEllipsis list(whenppdecs)
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) . nest_start TPCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) . nest_start TPCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1867
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1867:
## Known stack suffix:
## TPOEllipsis list(whenppdecs) nest_start
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start . TPCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start . TPCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On TPCEllipsis shift to state 1868
## Reductions:

State 1868:
## Known stack suffix:
## TPOEllipsis list(whenppdecs) nest_start TPCEllipsis
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis . toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis . [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1869
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots_init shift to state 1871
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1872
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1874
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis

State 1869:
## Known stack suffix:
## TNothing
## LR(1) items:
toplevel_after_dots_init -> TNothing . toplevel_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1870
-- On stm_dots shift to state 1161
## Reductions:
-- On TArobArob TArob EOF
--   reduce production toplevel_after_exp ->

State 1870:
## Known stack suffix:
## TNothing toplevel_after_exp
## LR(1) items:
toplevel_after_dots_init -> TNothing toplevel_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots_init -> TNothing toplevel_after_exp

State 1871:
## Known stack suffix:
## TPOEllipsis list(whenppdecs) nest_start TPCEllipsis toplevel_after_dots_init
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis toplevel_after_dots_init . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_startne(toplevel_after_dots_init) -> TPOEllipsis list(whenppdecs) nest_start TPCEllipsis toplevel_after_dots_init

State 1872:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
toplevel_after_dots_init -> expr . toplevel_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1873
-- On stm_dots shift to state 1161
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TArobArob TArob EOF
--   reduce production toplevel_after_exp ->

State 1873:
## Known stack suffix:
## expr toplevel_after_exp
## LR(1) items:
toplevel_after_dots_init -> expr toplevel_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots_init -> expr toplevel_after_exp

State 1874:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
toplevel_after_dots_init -> decl_statement_expr . toplevel_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1875
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production toplevel_after_stm ->

State 1875:
## Known stack suffix:
## decl_statement_expr toplevel_after_stm
## LR(1) items:
toplevel_after_dots_init -> decl_statement_expr toplevel_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_after_dots_init -> decl_statement_expr toplevel_after_stm

State 1876:
## Known stack suffix:
## TOInit
## LR(1) items:
top_init -> TOInit . initialize_list TCBrace [ TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 299
-- On TSizeof shift to state 300
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 307
-- On TOPar0 shift to state 432
-- On TOPar shift to state 435
-- On TOEllipsis shift to state 441
-- On TOCro shift to state 444
-- On TOBrace shift to state 450
-- On TNothing shift to state 451
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 452
-- On TMetaLocalFunc shift to state 146
-- On TMetaInitList shift to state 453
-- On TMetaInit shift to state 454
-- On TMetaIdExp shift to state 455
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 457
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 458
-- On TMetaErr shift to state 459
-- On TMetaConst shift to state 460
-- On TMeta shift to state 50
-- On TInvalid shift to state 461
-- On TInt shift to state 462
-- On TInc shift to state 463
-- On TIdent shift to state 2
-- On TFloat shift to state 465
-- On TEllipsis shift to state 466
-- On TDot shift to state 470
-- On TDecimalCst shift to state 472
-- On TDec shift to state 473
-- On TChar shift to state 475
-- On TBang shift to state 164
-- On TAndLog shift to state 476
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 479
-- On unary_expr(eexpr,invalid) shift to state 480
-- On pure_ident shift to state 498
-- On primary_expr(eexpr,invalid) shift to state 481
-- On postfix_expr(eexpr,invalid) shift to state 482
-- On nonempty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 499
-- On nest_expressions_only shift to state 500
-- On mident shift to state 501
-- On list(designator) shift to state 503
-- On invalid shift to state 495
-- On initialize_list shift to state 1877
-- On initialize2 shift to state 543
-- On ident shift to state 182
-- On func_ident shift to state 496
-- On empty_list_start(initialize2,edots_when(TEllipsis,initialize)) shift to state 554
-- On edots_when(TEllipsis,initialize) shift to state 546
-- On designator shift to state 506
-- On cast_expr(eexpr,invalid) shift to state 508
-- On arith_expr(eexpr,invalid) shift to state 509
## Reductions:
-- On TCBrace
--   reduce production empty_list_start(initialize2,edots_when(TEllipsis,initialize)) ->
-- On TEq
--   reduce production list(designator) ->

State 1877:
## Known stack suffix:
## TOInit initialize_list
## LR(1) items:
top_init -> TOInit initialize_list . TCBrace [ TArobArob TArob EOF ]
## Transitions:
-- On TCBrace shift to state 1878
## Reductions:

State 1878:
## Known stack suffix:
## TOInit initialize_list TCBrace
## LR(1) items:
top_init -> TOInit initialize_list TCBrace . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_init -> TOInit initialize_list TCBrace

State 1879:
## Known stack suffix:
## TOEllipsis
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis . list(whenppdecs) nest_start TCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis . list(whenppdecs) nest_start TCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1880
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd
--   reduce production list(whenppdecs) ->

State 1880:
## Known stack suffix:
## TOEllipsis list(whenppdecs)
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) . nest_start TCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) . nest_start TCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1309
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On nest_start shift to state 1881
-- On nest_after_dots shift to state 1323
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1312
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1314
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1881:
## Known stack suffix:
## TOEllipsis list(whenppdecs) nest_start
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start . TCEllipsis toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start . TCEllipsis [ TArobArob TArob EOF ]
## Transitions:
-- On TCEllipsis shift to state 1882
## Reductions:

State 1882:
## Known stack suffix:
## TOEllipsis list(whenppdecs) nest_start TCEllipsis
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start TCEllipsis . toplevel_after_dots_init [ TArobArob TArob EOF ]
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start TCEllipsis . [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1869
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots_init shift to state 1883
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1872
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1874
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start TCEllipsis

State 1883:
## Known stack suffix:
## TOEllipsis list(whenppdecs) nest_start TCEllipsis toplevel_after_dots_init
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start TCEllipsis toplevel_after_dots_init . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_startne(toplevel_after_dots_init) -> TOEllipsis list(whenppdecs) nest_start TCEllipsis toplevel_after_dots_init

State 1884:
## Known stack suffix:
## TEllipsis
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TEllipsis . list(whenppdecs) toplevel_after_dots_init [ TArobArob TArob EOF ]
## Transitions:
-- On TWhenTrue shift to state 921
-- On TWhenFalse shift to state 925
-- On TWhen shift to state 929
-- On whens(when_start,rule_elem_statement,any_strict) shift to state 1032
-- On whenppdecs shift to state 1033
-- On list(whenppdecs) shift to state 1885
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TOPar0 TOPar TOBrace TNothing TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TAndLog TAnd
--   reduce production list(whenppdecs) ->

State 1885:
## Known stack suffix:
## TEllipsis list(whenppdecs)
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TEllipsis list(whenppdecs) . toplevel_after_dots_init [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1869
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_dots_init shift to state 1886
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1872
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1874
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->

State 1886:
## Known stack suffix:
## TEllipsis list(whenppdecs) toplevel_after_dots_init
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> TEllipsis list(whenppdecs) toplevel_after_dots_init . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_startne(toplevel_after_dots_init) -> TEllipsis list(whenppdecs) toplevel_after_dots_init

State 1887:
## Known stack suffix:
## toplevel_seq_startne(toplevel_after_dots_init)
## LR(1) items:
minus_start -> toplevel_seq_startne(toplevel_after_dots_init) . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_start -> toplevel_seq_startne(toplevel_after_dots_init)

State 1888:
## Known stack suffix:
## top_init
## LR(1) items:
minus_start -> top_init . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_start -> top_init

State 1889:
## Known stack suffix:
## storage
## LR(1) items:
decl_var -> storage . ctype separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . const_vol pure_ident_or_symbol separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . const_vol pure_ident_or_symbol d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . decl_ident TOPar eexpr_list_option TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage . ctype TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
fninfo -> storage . fninfo [ TFunDecl ]
funproto -> storage . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
funproto -> storage . Tinline ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1890
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TSymId shift to state 112
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaDeclarer shift to state 822
-- On TIdent shift to state 2
-- On TDeclarerId shift to state 824
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 833
-- On pure_ident shift to state 609
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1851
-- On decl_ident shift to state 843
-- On ctype shift to state 1892
-- On const_vol shift to state 875
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1890:
## Known stack suffix:
## storage Tinline
## LR(1) items:
fninfo -> Tinline . fninfo [ TFunDecl ]
funproto -> storage Tinline . ctype fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1848
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On struct_or_union shift to state 117
-- On storage shift to state 1850
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On fninfo shift to state 1861
-- On ctype shift to state 1891
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->

State 1891:
## Known stack suffix:
## storage Tinline ctype
## LR(1) items:
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> storage Tinline ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 828
-- On disj_ident shift to state 749
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1892:
## Known stack suffix:
## storage ctype
## LR(1) items:
decl_var -> storage ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> storage ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> storage ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 852
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On separated_nonempty_list(TComma,d_ident) shift to state 863
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 865
-- On disj_ident shift to state 870
-- On d_ident shift to state 871
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1893:
## Known stack suffix:
## minus_start
## LR(1) items:
loption(minus_start) -> minus_start . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(minus_start) -> minus_start

State 1894:
## Known stack suffix:
## loption(filespec) loption(minus_start)
## LR(1) items:
minus_body -> loption(filespec) loption(minus_start) . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_body -> loption(filespec) loption(minus_start)

State 1895:
## Known stack suffix:
## fundecl
## LR(1) items:
minus_start -> fundecl . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_start -> fundecl

State 1896:
## Known stack suffix:
## fninfo
## LR(1) items:
fundecl -> fninfo . TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TFunDecl shift to state 1897
## Reductions:

State 1897:
## Known stack suffix:
## fninfo TFunDecl
## LR(1) items:
fundecl -> fninfo TFunDecl . fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fn_ident shift to state 1898
-- On disj_ident shift to state 749
## Reductions:

State 1898:
## Known stack suffix:
## fninfo TFunDecl fn_ident
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident . TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOPar shift to state 1899
## Reductions:

State 1899:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar . arg_list(decl) TCPar TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 1900
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 1901
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 1902
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) shift to state 1903
-- On one_arg(decl) shift to state 1906
-- On non_signable_types shift to state 265
-- On decl shift to state 1907
-- On ctype shift to state 1908
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(decl)) shift to state 1913
-- On arg_list(decl) shift to state 1914
-- On all_basic_types shift to state 288
## Reductions:
-- On TCPar
--   reduce production arg_list(decl) ->

State 1900:
## Known stack suffix:
## TVAEllipsis
## LR(1) items:
argorellipsis(one_arg(decl)) -> TVAEllipsis . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(decl)) -> TVAEllipsis

State 1901:
## Known stack suffix:
## TMetaParamList
## LR(1) items:
one_arg(decl) -> TMetaParamList . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_arg(decl) -> TMetaParamList

State 1902:
## Known stack suffix:
## TEllipsis
## LR(1) items:
argorellipsis(one_arg(decl)) -> TEllipsis . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(decl)) -> TEllipsis

State 1903:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl)))
## LR(1) items:
arg_list(decl) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) . [ TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) . TComma argorellipsis(one_arg(decl)) [ TComma TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) . TComma TNothing argorellipsis(one_arg(decl)) [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 1904
## Reductions:
-- On TCPar
--   reduce production arg_list(decl) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl)))

State 1904:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma . argorellipsis(one_arg(decl)) [ TComma TCPar ]
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma . TNothing argorellipsis(one_arg(decl)) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 1900
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TNothing shift to state 1905
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 1901
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 1902
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_arg(decl) shift to state 1906
-- On non_signable_types shift to state 265
-- On decl shift to state 1907
-- On ctype shift to state 1908
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(decl)) shift to state 1912
-- On all_basic_types shift to state 288
## Reductions:

State 1905:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma TNothing
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma TNothing . argorellipsis(one_arg(decl)) [ TComma TCPar ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TVAEllipsis shift to state 1900
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On TMetaParamList shift to state 1901
-- On TMetaParam shift to state 618
-- On TMeta shift to state 619
-- On TEllipsis shift to state 1902
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On one_arg(decl) shift to state 1906
-- On non_signable_types shift to state 265
-- On decl shift to state 1907
-- On ctype shift to state 1908
-- On const_vol shift to state 279
-- On argorellipsis(one_arg(decl)) shift to state 1911
-- On all_basic_types shift to state 288
## Reductions:

State 1906:
## Known stack suffix:
## one_arg(decl)
## LR(1) items:
argorellipsis(one_arg(decl)) -> one_arg(decl) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argorellipsis(one_arg(decl)) -> one_arg(decl)

State 1907:
## Known stack suffix:
## decl
## LR(1) items:
one_arg(decl) -> decl . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_arg(decl) -> decl

State 1908:
## Known stack suffix:
## ctype
## LR(1) items:
decl -> ctype . disj_ident list(array_dec) [ TComma TCPar ]
decl -> ctype . [ TComma TCPar ]
decl -> ctype . TOPar TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1909
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 642
## Reductions:
-- On TComma TCPar
--   reduce production decl -> ctype

State 1909:
## Known stack suffix:
## ctype TOPar
## LR(1) items:
decl -> ctype TOPar . TMul disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TMul shift to state 1910
## Reductions:

State 1910:
## Known stack suffix:
## ctype TOPar TMul
## LR(1) items:
decl -> ctype TOPar TMul . disj_ident TCPar TOPar decl_list(name_opt_decl) TCPar [ TComma TCPar ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 637
## Reductions:

State 1911:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma TNothing argorellipsis(one_arg(decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma TNothing argorellipsis(one_arg(decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma TNothing argorellipsis(one_arg(decl))

State 1912:
## Known stack suffix:
## reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma argorellipsis(one_arg(decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma argorellipsis(one_arg(decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) TComma argorellipsis(one_arg(decl))

State 1913:
## Known stack suffix:
## argorellipsis(one_arg(decl))
## LR(1) items:
reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> argorellipsis(one_arg(decl)) . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_separated_nonempty_llist(TComma,argorellipsis(one_arg(decl))) -> argorellipsis(one_arg(decl))

State 1914:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar arg_list(decl)
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) . TCPar TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCPar shift to state 1915
## Reductions:

State 1915:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar . TOBrace fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 1916
## Reductions:

State 1916:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace . fun_start TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1277
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On fun_start shift to state 1917
-- On fun_after_stm shift to state 1291
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1285
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TCBrace
--   reduce production fun_after_stm ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1917:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start . TCBrace [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On TCBrace shift to state 1918
## Reductions:

State 1918:
## Known stack suffix:
## fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace
## LR(1) items:
fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace . [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fundecl -> fninfo TFunDecl fn_ident TOPar arg_list(decl) TCPar TOBrace fun_start TCBrace

State 1919:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
toplevel_seq_startne(toplevel_after_dots_init) -> expr . toplevel_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On toplevel_after_exp shift to state 1920
-- On stm_dots shift to state 1161
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TArobArob TArob EOF
--   reduce production toplevel_after_exp ->

State 1920:
## Known stack suffix:
## expr toplevel_after_exp
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> expr toplevel_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_startne(toplevel_after_dots_init) -> expr toplevel_after_exp

State 1921:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> decl_statement_expr . toplevel_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 726
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On toplevel_after_stm shift to state 1922
-- On struct_or_union shift to state 117
-- On storage shift to state 825
-- On stm_dots shift to state 1171
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On func_ident shift to state 972
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1215
-- On decl_ident shift to state 1173
-- On ctype shift to state 1181
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production toplevel_after_stm ->

State 1922:
## Known stack suffix:
## decl_statement_expr toplevel_after_stm
## LR(1) items:
toplevel_seq_startne(toplevel_after_dots_init) -> decl_statement_expr toplevel_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_seq_startne(toplevel_after_dots_init) -> decl_statement_expr toplevel_after_stm

State 1923:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
minus_start -> ctype . [ TArobArob TArob EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->
-- On TArobArob TArob EOF
--   reduce production minus_start -> ctype

State 1924:
## Known stack suffix:
##
## LR(1) items:
minus_ty_main' -> . minus_ty_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On minus_ty_main shift to state 1925
-- On minus_ty_body shift to state 1926
-- On loption(filespec) shift to state 1930
-- On filespec shift to state 1830
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TRuleName TOPar0 TMetaType
--   reduce production loption(filespec) ->

State 1925:
## Known stack suffix:
## minus_ty_main
## LR(1) items:
minus_ty_main' -> minus_ty_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept minus_ty_main

State 1926:
## Known stack suffix:
## minus_ty_body
## LR(1) items:
minus_ty_main -> minus_ty_body . EOF [ # ]
minus_ty_main -> minus_ty_body . TArobArob [ # ]
minus_ty_main -> minus_ty_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1927
-- On TArob shift to state 1928
-- On EOF shift to state 1929
## Reductions:

State 1927:
## Known stack suffix:
## minus_ty_body TArobArob
## LR(1) items:
minus_ty_main -> minus_ty_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_ty_main -> minus_ty_body TArobArob

State 1928:
## Known stack suffix:
## minus_ty_body TArob
## LR(1) items:
minus_ty_main -> minus_ty_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_ty_main -> minus_ty_body TArob

State 1929:
## Known stack suffix:
## minus_ty_body EOF
## LR(1) items:
minus_ty_main -> minus_ty_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production minus_ty_main -> minus_ty_body EOF

State 1930:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
minus_ty_body -> loption(filespec) . top_ctype [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On top_ctype shift to state 1931
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 1932
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 1931:
## Known stack suffix:
## loption(filespec) top_ctype
## LR(1) items:
minus_ty_body -> loption(filespec) top_ctype . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_ty_body -> loption(filespec) top_ctype

State 1932:
## Known stack suffix:
## ctype
## LR(1) items:
top_ctype -> ctype . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_ctype -> ctype

State 1933:
## Known stack suffix:
##
## LR(1) items:
never_used' -> . never_used [ # ]
## Transitions:
-- On TWhitespace shift to state 1934
-- On TScriptData shift to state 1935
-- On TPArob shift to state 1936
-- On TDirective shift to state 1938
-- On TAnalysis shift to state 1939
-- On never_used shift to state 1940
## Reductions:

State 1934:
## Known stack suffix:
## TWhitespace
## LR(1) items:
never_used -> TWhitespace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production never_used -> TWhitespace

State 1935:
## Known stack suffix:
## TScriptData
## LR(1) items:
never_used -> TScriptData . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production never_used -> TScriptData

State 1936:
## Known stack suffix:
## TPArob
## LR(1) items:
never_used -> TPArob . TMetaPos [ # ]
## Transitions:
-- On TMetaPos shift to state 1937
## Reductions:

State 1937:
## Known stack suffix:
## TPArob TMetaPos
## LR(1) items:
never_used -> TPArob TMetaPos . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production never_used -> TPArob TMetaPos

State 1938:
## Known stack suffix:
## TDirective
## LR(1) items:
never_used -> TDirective . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production never_used -> TDirective

State 1939:
## Known stack suffix:
## TAnalysis
## LR(1) items:
never_used -> TAnalysis . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production never_used -> TAnalysis

State 1940:
## Known stack suffix:
## never_used
## LR(1) items:
never_used' -> never_used . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept never_used

State 1941:
## Known stack suffix:
##
## LR(1) items:
plus_exp_main' -> . plus_exp_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On plus_exp_main shift to state 1942
-- On plus_exp_body shift to state 1943
-- On loption(filespec) shift to state 1947
-- On filespec shift to state 1830
## Reductions:
-- On TTilde TSymId TString TSizeof TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TMul TMinus TMetaLocalIdExp TMetaLocalFunc TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaConst TMeta TInt TInc TIdent TFloat TEllipsis TDecimalCst TDec TChar TBang TAndLog TAnd
--   reduce production loption(filespec) ->

State 1942:
## Known stack suffix:
## plus_exp_main
## LR(1) items:
plus_exp_main' -> plus_exp_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept plus_exp_main

State 1943:
## Known stack suffix:
## plus_exp_body
## LR(1) items:
plus_exp_main -> plus_exp_body . EOF [ # ]
plus_exp_main -> plus_exp_body . TArobArob [ # ]
plus_exp_main -> plus_exp_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1944
-- On TArob shift to state 1945
-- On EOF shift to state 1946
## Reductions:

State 1944:
## Known stack suffix:
## plus_exp_body TArobArob
## LR(1) items:
plus_exp_main -> plus_exp_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_exp_main -> plus_exp_body TArobArob

State 1945:
## Known stack suffix:
## plus_exp_body TArob
## LR(1) items:
plus_exp_main -> plus_exp_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_exp_main -> plus_exp_body TArob

State 1946:
## Known stack suffix:
## plus_exp_body EOF
## LR(1) items:
plus_exp_main -> plus_exp_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_exp_main -> plus_exp_body EOF

State 1947:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
plus_exp_body -> loption(filespec) . top_eexpr [ TArobArob TArob EOF ]
## Transitions:
-- On TTilde shift to state 130
-- On TSymId shift to state 46
-- On TString shift to state 131
-- On TSizeof shift to state 132
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 135
-- On TOPar0 shift to state 138
-- On TOPar shift to state 139
-- On TOEllipsis shift to state 141
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaLocalIdExp shift to state 145
-- On TMetaLocalFunc shift to state 146
-- On TMetaIdExp shift to state 147
-- On TMetaId shift to state 71
-- On TMetaGlobalIdExp shift to state 148
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 150
-- On TMetaErr shift to state 151
-- On TMetaConst shift to state 152
-- On TMeta shift to state 153
-- On TInt shift to state 154
-- On TInc shift to state 155
-- On TIdent shift to state 2
-- On TFloat shift to state 157
-- On TEllipsis shift to state 158
-- On TDecimalCst shift to state 159
-- On TDec shift to state 160
-- On TChar shift to state 163
-- On TBang shift to state 164
-- On TAndLog shift to state 165
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 76
-- On unary_op shift to state 169
-- On unary_expr(eexpr,dot_expressions) shift to state 177
-- On top_eexpr shift to state 1948
-- On pure_ident shift to state 77
-- On primary_expr(eexpr,dot_expressions) shift to state 171
-- On pre_basic_expr(eexpr,dot_expressions) shift to state 213
-- On postfix_expr(eexpr,dot_expressions) shift to state 172
-- On nest_expressions shift to state 181
-- On ident shift to state 182
-- On func_ident shift to state 183
-- On eexpr shift to state 1829
-- On dot_expressions shift to state 184
-- On cond_expr(eexpr,dot_expressions) shift to state 215
-- On cast_expr(eexpr,dot_expressions) shift to state 186
-- On basic_expr(eexpr,dot_expressions) shift to state 223
-- On assign_expr(eexpr,dot_expressions) shift to state 217
-- On arith_expr(eexpr,dot_expressions) shift to state 188
## Reductions:

State 1948:
## Known stack suffix:
## loption(filespec) top_eexpr
## LR(1) items:
plus_exp_body -> loption(filespec) top_eexpr . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_exp_body -> loption(filespec) top_eexpr

State 1949:
## Known stack suffix:
##
## LR(1) items:
plus_id_main' -> . plus_id_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On plus_id_main shift to state 1950
-- On plus_id_body shift to state 1951
-- On loption(filespec) shift to state 1955
-- On filespec shift to state 1830
## Reductions:
-- On TSymId TOPar0 TMetaId TMeta TIdent
--   reduce production loption(filespec) ->

State 1950:
## Known stack suffix:
## plus_id_main
## LR(1) items:
plus_id_main' -> plus_id_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept plus_id_main

State 1951:
## Known stack suffix:
## plus_id_body
## LR(1) items:
plus_id_main -> plus_id_body . EOF [ # ]
plus_id_main -> plus_id_body . TArobArob [ # ]
plus_id_main -> plus_id_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1952
-- On TArob shift to state 1953
-- On EOF shift to state 1954
## Reductions:

State 1952:
## Known stack suffix:
## plus_id_body TArobArob
## LR(1) items:
plus_id_main -> plus_id_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_id_main -> plus_id_body TArobArob

State 1953:
## Known stack suffix:
## plus_id_body TArob
## LR(1) items:
plus_id_main -> plus_id_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_id_main -> plus_id_body TArob

State 1954:
## Known stack suffix:
## plus_id_body EOF
## LR(1) items:
plus_id_main -> plus_id_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_id_main -> plus_id_body EOF

State 1955:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
plus_id_body -> loption(filespec) . top_ident [ TArobArob TArob EOF ]
## Transitions:
-- On TSymId shift to state 46
-- On TOPar0 shift to state 48
-- On TMetaId shift to state 49
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On top_ident shift to state 1956
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On disj_ident shift to state 1839
## Reductions:

State 1956:
## Known stack suffix:
## loption(filespec) top_ident
## LR(1) items:
plus_id_body -> loption(filespec) top_ident . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_id_body -> loption(filespec) top_ident

State 1957:
## Known stack suffix:
##
## LR(1) items:
plus_main' -> . plus_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On plus_main shift to state 1958
-- On plus_body shift to state 1959
-- On loption(filespec) shift to state 1963
-- On filespec shift to state 1830
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOInit TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF
--   reduce production loption(filespec) ->

State 1958:
## Known stack suffix:
## plus_main
## LR(1) items:
plus_main' -> plus_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept plus_main

State 1959:
## Known stack suffix:
## plus_body
## LR(1) items:
plus_main -> plus_body . EOF [ # ]
plus_main -> plus_body . TArobArob [ # ]
plus_main -> plus_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1960
-- On TArob shift to state 1961
-- On EOF shift to state 1962
## Reductions:

State 1960:
## Known stack suffix:
## plus_body TArobArob
## LR(1) items:
plus_main -> plus_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_main -> plus_body TArobArob

State 1961:
## Known stack suffix:
## plus_body TArob
## LR(1) items:
plus_main -> plus_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_main -> plus_body TArob

State 1962:
## Known stack suffix:
## plus_body EOF
## LR(1) items:
plus_main -> plus_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_main -> plus_body EOF

State 1963:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
plus_body -> loption(filespec) . loption(plus_start) [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOInit shift to state 1876
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On top_init shift to state 1964
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1965
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_start shift to state 1984
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On loption(plus_start) shift to state 1985
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1986
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1988
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1990
-- On decl_ident shift to state 1173
-- On ctype shift to state 1992
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TArobArob TArob EOF
--   reduce production loption(plus_start) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1964:
## Known stack suffix:
## top_init
## LR(1) items:
plus_start -> top_init . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_start -> top_init

State 1965:
## Known stack suffix:
## stm_dots
## LR(1) items:
plus_start -> stm_dots . plus_after_dots [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1966
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_dots shift to state 1983
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1969
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1972
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1974
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_dots ->

State 1966:
## Known stack suffix:
## TNothing
## LR(1) items:
plus_after_dots -> TNothing . plus_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1967
-- On plus_after_exp shift to state 1982
## Reductions:
-- On TArobArob TArob EOF
--   reduce production plus_after_exp ->

State 1967:
## Known stack suffix:
## stm_dots
## LR(1) items:
plus_after_exp -> stm_dots . plus_after_dots [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1966
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_dots shift to state 1968
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1969
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1972
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1974
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_dots ->

State 1968:
## Known stack suffix:
## stm_dots plus_after_dots
## LR(1) items:
plus_after_exp -> stm_dots plus_after_dots . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_exp -> stm_dots plus_after_dots

State 1969:
## Known stack suffix:
## fundecl
## LR(1) items:
plus_after_dots -> fundecl . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1981
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1970:
## Known stack suffix:
## stm_dots
## LR(1) items:
plus_after_stm -> stm_dots . plus_after_dots [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TOPar0 shift to state 1036
-- On TOPar shift to state 933
-- On TOBrace shift to state 1037
-- On TNothing shift to state 1966
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1152
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On statement shift to state 1163
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_dots shift to state 1971
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1969
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1972
-- On defineop shift to state 1151
-- On decl_var shift to state 1168
-- On decl_statement_expr shift to state 1974
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_dots ->

State 1971:
## Known stack suffix:
## stm_dots plus_after_dots
## LR(1) items:
plus_after_stm -> stm_dots plus_after_dots . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_stm -> stm_dots plus_after_dots

State 1972:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
plus_after_dots -> expr . plus_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1967
-- On plus_after_exp shift to state 1973
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TArobArob TArob EOF
--   reduce production plus_after_exp ->

State 1973:
## Known stack suffix:
## expr plus_after_exp
## LR(1) items:
plus_after_dots -> expr plus_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_dots -> expr plus_after_exp

State 1974:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
plus_after_dots -> decl_statement_expr . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1975
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1975:
## Known stack suffix:
## decl_statement_expr plus_after_stm
## LR(1) items:
plus_after_dots -> decl_statement_expr plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_dots -> decl_statement_expr plus_after_stm

State 1976:
## Known stack suffix:
## fundecl
## LR(1) items:
plus_after_stm -> fundecl . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1977
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1977:
## Known stack suffix:
## fundecl plus_after_stm
## LR(1) items:
plus_after_stm -> fundecl plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_stm -> fundecl plus_after_stm

State 1978:
## Known stack suffix:
## decl_statement
## LR(1) items:
plus_after_stm -> decl_statement . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1979
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1979:
## Known stack suffix:
## decl_statement plus_after_stm
## LR(1) items:
plus_after_stm -> decl_statement plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_stm -> decl_statement plus_after_stm

State 1980:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->

State 1981:
## Known stack suffix:
## fundecl plus_after_stm
## LR(1) items:
plus_after_dots -> fundecl plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_dots -> fundecl plus_after_stm

State 1982:
## Known stack suffix:
## TNothing plus_after_exp
## LR(1) items:
plus_after_dots -> TNothing plus_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_after_dots -> TNothing plus_after_exp

State 1983:
## Known stack suffix:
## stm_dots plus_after_dots
## LR(1) items:
plus_start -> stm_dots plus_after_dots . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_start -> stm_dots plus_after_dots

State 1984:
## Known stack suffix:
## plus_start
## LR(1) items:
loption(plus_start) -> plus_start . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(plus_start) -> plus_start

State 1985:
## Known stack suffix:
## loption(filespec) loption(plus_start)
## LR(1) items:
plus_body -> loption(filespec) loption(plus_start) . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_body -> loption(filespec) loption(plus_start)

State 1986:
## Known stack suffix:
## fundecl
## LR(1) items:
plus_start -> fundecl . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1987
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1987:
## Known stack suffix:
## fundecl plus_after_stm
## LR(1) items:
plus_start -> fundecl plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_start -> fundecl plus_after_stm

State 1988:
## Known stack suffix:
## expr
## LR(1) items:
option(expr) -> expr . [ TPtVirg ]
plus_start -> expr . plus_after_exp [ TArobArob TArob EOF ]
## Transitions:
-- On TPOEllipsis shift to state 920
-- On TOEllipsis shift to state 1031
-- On TEllipsis shift to state 1154
-- On stm_dots shift to state 1967
-- On plus_after_exp shift to state 1989
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr
-- On TArobArob TArob EOF
--   reduce production plus_after_exp ->

State 1989:
## Known stack suffix:
## expr plus_after_exp
## LR(1) items:
plus_start -> expr plus_after_exp . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_start -> expr plus_after_exp

State 1990:
## Known stack suffix:
## decl_statement_expr
## LR(1) items:
plus_start -> decl_statement_expr . plus_after_stm [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Ttypedef shift to state 695
-- On Tstruct shift to state 36
-- On Tstatic shift to state 724
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tregister shift to state 725
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tinline shift to state 1847
-- On Tfloat shift to state 44
-- On Textern shift to state 727
-- On Texec shift to state 756
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On Tauto shift to state 728
-- On Tattr shift to state 1849
-- On TWhile shift to state 811
-- On TUndef shift to state 815
-- On TTypeId shift to state 108
-- On TTilde shift to state 130
-- On TSymId shift to state 893
-- On TSwitch shift to state 817
-- On TString shift to state 894
-- On TSizeof shift to state 895
-- On TRuleName shift to state 30
-- On TReturn shift to state 900
-- On TPragma shift to state 904
-- On TPlus shift to state 134
-- On TPOEllipsis shift to state 920
-- On TOPar0 shift to state 932
-- On TOPar shift to state 933
-- On TOEllipsis shift to state 1031
-- On TOBrace shift to state 1037
-- On TMul shift to state 143
-- On TMinus shift to state 144
-- On TMetaType shift to state 110
-- On TMetaStmList shift to state 1038
-- On TMetaStm shift to state 1039
-- On TMetaLocalIdExp shift to state 939
-- On TMetaLocalFunc shift to state 146
-- On TMetaIterator shift to state 1040
-- On TMetaIdExp shift to state 940
-- On TMetaId shift to state 456
-- On TMetaGlobalIdExp shift to state 941
-- On TMetaFunc shift to state 149
-- On TMetaExp shift to state 942
-- On TMetaErr shift to state 943
-- On TMetaDeclarer shift to state 822
-- On TMetaDecl shift to state 823
-- On TMetaConst shift to state 944
-- On TMeta shift to state 1041
-- On TIteratorId shift to state 1042
-- On TInvalid shift to state 461
-- On TInt shift to state 945
-- On TIncludeNL shift to state 1043
-- On TIncludeL shift to state 1044
-- On TInc shift to state 946
-- On TIf shift to state 1045
-- On TIdent shift to state 2
-- On TGoto shift to state 1050
-- On TFor shift to state 1053
-- On TFloat shift to state 948
-- On TEllipsis shift to state 1154
-- On TDo shift to state 1108
-- On TDefineParam shift to state 1109
-- On TDefine shift to state 1128
-- On TDeclarerId shift to state 824
-- On TDecimalCst shift to state 949
-- On TDec shift to state 950
-- On TContinue shift to state 1129
-- On TChar shift to state 952
-- On TBreak shift to state 1131
-- On TBang shift to state 164
-- On TAndLog shift to state 953
-- On TAnd shift to state 167
-- On wrapped_sym_ident shift to state 478
-- On unary_op shift to state 955
-- On unary_expr(expr,invalid) shift to state 974
-- On struct_or_union shift to state 117
-- On storage shift to state 1889
-- On stm_dots shift to state 1970
-- On statement shift to state 1213
-- On signable_types shift to state 126
-- On pure_ident_or_symbol shift to state 883
-- On pure_ident shift to state 1164
-- On primary_expr(expr,invalid) shift to state 957
-- On pre_basic_expr(expr,invalid) shift to state 981
-- On postfix_expr(expr,invalid) shift to state 958
-- On plus_after_stm shift to state 1991
-- On option(expr) shift to state 1140
-- On non_signable_types shift to state 265
-- On mident shift to state 1142
-- On iter_ident shift to state 1144
-- On invalid shift to state 971
-- On includes shift to state 1149
-- On ident shift to state 182
-- On funproto shift to state 1165
-- On fundecl shift to state 1976
-- On func_ident shift to state 972
-- On fninfo shift to state 1896
-- On expr shift to state 1150
-- On defineop shift to state 1151
-- On decl_var shift to state 1214
-- On decl_statement shift to state 1978
-- On decl_ident shift to state 1173
-- On ctype shift to state 1980
-- On const_vol shift to state 1205
-- On cond_expr(expr,invalid) shift to state 983
-- On cast_expr(expr,invalid) shift to state 984
-- On basic_expr(expr,invalid) shift to state 1026
-- On assign_expr(expr,invalid) shift to state 986
-- On arith_expr(expr,invalid) shift to state 987
-- On all_basic_types shift to state 288
## Reductions:
-- On TFunDecl
--   reduce production fninfo ->
-- On TPtVirg
--   reduce production option(expr) ->
-- On TArobArob TArob EOF
--   reduce production plus_after_stm ->

State 1991:
## Known stack suffix:
## decl_statement_expr plus_after_stm
## LR(1) items:
plus_start -> decl_statement_expr plus_after_stm . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_start -> decl_statement_expr plus_after_stm

State 1992:
## Known stack suffix:
## ctype
## LR(1) items:
decl_var -> ctype . TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . separated_nonempty_list(TComma,d_ident) TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . d_ident TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
decl_var -> ctype . TOPar TMul d_ident TCPar TOPar decl_list(name_opt_decl) TCPar TEq initialize TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
fninfo -> ctype . fninfo_nt [ TFunDecl ]
funproto -> ctype . fn_ident TOPar arg_list(name_opt_decl) TCPar TPtVirg [ Tvolatile Tvoid Tunsigned Tunion Ttypedef Tstruct Tstatic Tssize_t Tsize_t Tsigned Tshort Tregister Tptrdiff_t Tlong Tint Tinline Tfloat Textern Texec Tenum Tdouble Tdecimal Tconst Tchar Tauto Tattr TWhile TUndef TTypeId TTilde TSymId TSwitch TString TSizeof TRuleName TReturn TPtVirg TPragma TPlus TPOEllipsis TOPar0 TOPar TOEllipsis TOBrace TMul TMinus TMetaType TMetaStmList TMetaStm TMetaLocalIdExp TMetaLocalFunc TMetaIterator TMetaIdExp TMetaId TMetaGlobalIdExp TMetaFunc TMetaExp TMetaErr TMetaDeclarer TMetaDecl TMetaConst TMeta TIteratorId TInvalid TInt TIncludeNL TIncludeL TInc TIf TIdent TGoto TFunDecl TFor TFloat TEllipsis TDo TDefineParam TDefine TDeclarerId TDecimalCst TDec TContinue TChar TBreak TBang TArobArob TArob TAndLog TAnd EOF ]
plus_start -> ctype . [ TArobArob TArob EOF ]
## Transitions:
-- On Tstatic shift to state 724
-- On Tregister shift to state 725
-- On Tinline shift to state 1853
-- On Textern shift to state 727
-- On Tauto shift to state 728
-- On Tattr shift to state 1854
-- On TSymId shift to state 46
-- On TPtVirg shift to state 1182
-- On TOPar0 shift to state 48
-- On TOPar shift to state 1183
-- On TMetaLocalFunc shift to state 731
-- On TMetaId shift to state 49
-- On TMetaFunc shift to state 732
-- On TMeta shift to state 50
-- On TIdent shift to state 2
-- On wrapped_sym_ident shift to state 51
-- On storage shift to state 1855
-- On separated_nonempty_list(TComma,d_ident) shift to state 1194
-- On pure_ident shift to state 52
-- On mident shift to state 55
-- On fninfo_nt shift to state 1859
-- On fn_ident shift to state 1196
-- On disj_ident shift to state 870
-- On d_ident shift to state 1201
## Reductions:
-- On TFunDecl
--   reduce production fninfo_nt ->
-- On TArobArob TArob EOF
--   reduce production plus_start -> ctype

State 1993:
## Known stack suffix:
##
## LR(1) items:
plus_ty_main' -> . plus_ty_main [ # ]
## Transitions:
-- On TMinusFile shift to state 1820
-- On plus_ty_main shift to state 1994
-- On plus_ty_body shift to state 1995
-- On loption(filespec) shift to state 1999
-- On filespec shift to state 1830
## Reductions:
-- On Tvolatile Tvoid Tunsigned Tunion Tstruct Tssize_t Tsize_t Tsigned Tshort Tptrdiff_t Tlong Tint Tfloat Tenum Tdouble Tdecimal Tconst Tchar TTypeId TRuleName TOPar0 TMetaType
--   reduce production loption(filespec) ->

State 1994:
## Known stack suffix:
## plus_ty_main
## LR(1) items:
plus_ty_main' -> plus_ty_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept plus_ty_main

State 1995:
## Known stack suffix:
## plus_ty_body
## LR(1) items:
plus_ty_main -> plus_ty_body . EOF [ # ]
plus_ty_main -> plus_ty_body . TArobArob [ # ]
plus_ty_main -> plus_ty_body . TArob [ # ]
## Transitions:
-- On TArobArob shift to state 1996
-- On TArob shift to state 1997
-- On EOF shift to state 1998
## Reductions:

State 1996:
## Known stack suffix:
## plus_ty_body TArobArob
## LR(1) items:
plus_ty_main -> plus_ty_body TArobArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_ty_main -> plus_ty_body TArobArob

State 1997:
## Known stack suffix:
## plus_ty_body TArob
## LR(1) items:
plus_ty_main -> plus_ty_body TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_ty_main -> plus_ty_body TArob

State 1998:
## Known stack suffix:
## plus_ty_body EOF
## LR(1) items:
plus_ty_main -> plus_ty_body EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production plus_ty_main -> plus_ty_body EOF

State 1999:
## Known stack suffix:
## loption(filespec)
## LR(1) items:
plus_ty_body -> loption(filespec) . top_ctype [ TArobArob TArob EOF ]
## Transitions:
-- On Tvolatile shift to state 19
-- On Tvoid shift to state 20
-- On Tunsigned shift to state 21
-- On Tunion shift to state 35
-- On Tstruct shift to state 36
-- On Tssize_t shift to state 37
-- On Tsize_t shift to state 38
-- On Tsigned shift to state 39
-- On Tshort shift to state 22
-- On Tptrdiff_t shift to state 41
-- On Tlong shift to state 42
-- On Tint shift to state 28
-- On Tfloat shift to state 44
-- On Tenum shift to state 45
-- On Tdouble shift to state 99
-- On Tdecimal shift to state 100
-- On Tconst shift to state 107
-- On Tchar shift to state 29
-- On TTypeId shift to state 108
-- On TRuleName shift to state 30
-- On TOPar0 shift to state 109
-- On TMetaType shift to state 110
-- On top_ctype shift to state 2000
-- On struct_or_union shift to state 117
-- On signable_types shift to state 126
-- On non_signable_types shift to state 265
-- On ctype shift to state 1932
-- On const_vol shift to state 279
-- On all_basic_types shift to state 288
## Reductions:

State 2000:
## Known stack suffix:
## loption(filespec) top_ctype
## LR(1) items:
plus_ty_body -> loption(filespec) top_ctype . [ TArobArob TArob EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_ty_body -> loption(filespec) top_ctype

State 2001:
## Known stack suffix:
##
## LR(1) items:
rule_name' -> . rule_name [ # ]
## Transitions:
-- On TScript shift to state 2002
-- On TInitialize shift to state 2030
-- On TIdent shift to state 2
-- On TGenerated shift to state 2035
-- On TFinalize shift to state 2059
-- On TExtends shift to state 2036
-- On rule_name shift to state 2064
-- On pure_ident shift to state 2065
-- On extends shift to state 2073
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TDepends TArob
--   reduce production extends ->

State 2002:
## Known stack suffix:
## TScript
## LR(1) items:
rule_name -> TScript . TDotDot pure_ident depends TArob [ # ]
rule_name -> TScript . TDotDot pure_ident pure_ident depends TArob [ # ]
## Transitions:
-- On TDotDot shift to state 2003
## Reductions:

State 2003:
## Known stack suffix:
## TScript TDotDot
## LR(1) items:
rule_name -> TScript TDotDot . pure_ident depends TArob [ # ]
rule_name -> TScript TDotDot . pure_ident pure_ident depends TArob [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2004
## Reductions:

State 2004:
## Known stack suffix:
## TScript TDotDot pure_ident
## LR(1) items:
rule_name -> TScript TDotDot pure_ident . depends TArob [ # ]
rule_name -> TScript TDotDot pure_ident . pure_ident depends TArob [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On TDepends shift to state 2005
-- On pure_ident shift to state 2025
-- On depends shift to state 2028
## Reductions:
-- On TArob
--   reduce production depends ->

State 2005:
## Known stack suffix:
## TDepends
## LR(1) items:
depends -> TDepends . TOn dep [ TUsing TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TOn shift to state 2006
## Reductions:

State 2006:
## Known stack suffix:
## TDepends TOn
## LR(1) items:
depends -> TDepends TOn . dep [ TUsing TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TRuleName shift to state 2007
-- On TOPar shift to state 2008
-- On TNever shift to state 2009
-- On TEver shift to state 2011
-- On TBang shift to state 2013
-- On dep shift to state 2024
## Reductions:

State 2007:
## Known stack suffix:
## TRuleName
## LR(1) items:
dep -> TRuleName . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TRuleName

State 2008:
## Known stack suffix:
## TOPar
## LR(1) items:
dep -> TOPar . dep TCPar [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2007
-- On TOPar shift to state 2008
-- On TNever shift to state 2009
-- On TEver shift to state 2011
-- On TBang shift to state 2013
-- On dep shift to state 2022
## Reductions:

State 2009:
## Known stack suffix:
## TNever
## LR(1) items:
dep -> TNever . TRuleName [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2010
## Reductions:

State 2010:
## Known stack suffix:
## TNever TRuleName
## LR(1) items:
dep -> TNever TRuleName . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TNever TRuleName

State 2011:
## Known stack suffix:
## TEver
## LR(1) items:
dep -> TEver . TRuleName [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2012
## Reductions:

State 2012:
## Known stack suffix:
## TEver TRuleName
## LR(1) items:
dep -> TEver TRuleName . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TEver TRuleName

State 2013:
## Known stack suffix:
## TBang
## LR(1) items:
dep -> TBang . TRuleName [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> TBang . TOPar dep TCPar [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2014
-- On TOPar shift to state 2015
## Reductions:

State 2014:
## Known stack suffix:
## TBang TRuleName
## LR(1) items:
dep -> TBang TRuleName . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TBang TRuleName

State 2015:
## Known stack suffix:
## TBang TOPar
## LR(1) items:
dep -> TBang TOPar . dep TCPar [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2007
-- On TOPar shift to state 2008
-- On TNever shift to state 2009
-- On TEver shift to state 2011
-- On TBang shift to state 2013
-- On dep shift to state 2016
## Reductions:

State 2016:
## Known stack suffix:
## TBang TOPar dep
## LR(1) items:
dep -> TBang TOPar dep . TCPar [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> dep . TAndLog dep [ TOrLog TCPar TAndLog ]
dep -> dep . TOrLog dep [ TOrLog TCPar TAndLog ]
## Transitions:
-- On TOrLog shift to state 2017
-- On TCPar shift to state 2021
-- On TAndLog shift to state 2019
## Reductions:

State 2017:
## Known stack suffix:
## dep TOrLog
## LR(1) items:
dep -> dep TOrLog . dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2007
-- On TOPar shift to state 2008
-- On TNever shift to state 2009
-- On TEver shift to state 2011
-- On TBang shift to state 2013
-- On dep shift to state 2018
## Reductions:

State 2018:
## Known stack suffix:
## dep TOrLog dep
## LR(1) items:
dep -> dep . TAndLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> dep . TOrLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> dep TOrLog dep . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TAndLog shift to state 2019
## Reductions:
-- On TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob
--   reduce production dep -> dep TOrLog dep

State 2019:
## Known stack suffix:
## dep TAndLog
## LR(1) items:
dep -> dep TAndLog . dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TRuleName shift to state 2007
-- On TOPar shift to state 2008
-- On TNever shift to state 2009
-- On TEver shift to state 2011
-- On TBang shift to state 2013
-- On dep shift to state 2020
## Reductions:

State 2020:
## Known stack suffix:
## dep TAndLog dep
## LR(1) items:
dep -> dep . TAndLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> dep TAndLog dep . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
dep -> dep . TOrLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> dep TAndLog dep

State 2021:
## Known stack suffix:
## TBang TOPar dep TCPar
## LR(1) items:
dep -> TBang TOPar dep TCPar . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TBang TOPar dep TCPar

State 2022:
## Known stack suffix:
## TOPar dep
## LR(1) items:
dep -> dep . TAndLog dep [ TOrLog TCPar TAndLog ]
dep -> dep . TOrLog dep [ TOrLog TCPar TAndLog ]
dep -> TOPar dep . TCPar [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
-- On TOrLog shift to state 2017
-- On TCPar shift to state 2023
-- On TAndLog shift to state 2019
## Reductions:

State 2023:
## Known stack suffix:
## TOPar dep TCPar
## LR(1) items:
dep -> TOPar dep TCPar . [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TCPar TArob TAndLog ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dep -> TOPar dep TCPar

State 2024:
## Known stack suffix:
## TDepends TOn dep
## LR(1) items:
dep -> dep . TAndLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TArob TAndLog ]
dep -> dep . TOrLog dep [ TUsing TType TOrLog TIdentifier TForall TExpression TExists TDisable TArob TAndLog ]
depends -> TDepends TOn dep . [ TUsing TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TOrLog shift to state 2017
-- On TAndLog shift to state 2019
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production depends -> TDepends TOn dep

State 2025:
## Known stack suffix:
## TScript TDotDot pure_ident pure_ident
## LR(1) items:
rule_name -> TScript TDotDot pure_ident pure_ident . depends TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2026
## Reductions:
-- On TArob
--   reduce production depends ->

State 2026:
## Known stack suffix:
## TScript TDotDot pure_ident pure_ident depends
## LR(1) items:
rule_name -> TScript TDotDot pure_ident pure_ident depends . TArob [ # ]
## Transitions:
-- On TArob shift to state 2027
## Reductions:

State 2027:
## Known stack suffix:
## TScript TDotDot pure_ident pure_ident depends TArob
## LR(1) items:
rule_name -> TScript TDotDot pure_ident pure_ident depends TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> TScript TDotDot pure_ident pure_ident depends TArob

State 2028:
## Known stack suffix:
## TScript TDotDot pure_ident depends
## LR(1) items:
rule_name -> TScript TDotDot pure_ident depends . TArob [ # ]
## Transitions:
-- On TArob shift to state 2029
## Reductions:

State 2029:
## Known stack suffix:
## TScript TDotDot pure_ident depends TArob
## LR(1) items:
rule_name -> TScript TDotDot pure_ident depends TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> TScript TDotDot pure_ident depends TArob

State 2030:
## Known stack suffix:
## TInitialize
## LR(1) items:
rule_name -> TInitialize . TDotDot pure_ident depends TArob [ # ]
## Transitions:
-- On TDotDot shift to state 2031
## Reductions:

State 2031:
## Known stack suffix:
## TInitialize TDotDot
## LR(1) items:
rule_name -> TInitialize TDotDot . pure_ident depends TArob [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2032
## Reductions:

State 2032:
## Known stack suffix:
## TInitialize TDotDot pure_ident
## LR(1) items:
rule_name -> TInitialize TDotDot pure_ident . depends TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2033
## Reductions:
-- On TArob
--   reduce production depends ->

State 2033:
## Known stack suffix:
## TInitialize TDotDot pure_ident depends
## LR(1) items:
rule_name -> TInitialize TDotDot pure_ident depends . TArob [ # ]
## Transitions:
-- On TArob shift to state 2034
## Reductions:

State 2034:
## Known stack suffix:
## TInitialize TDotDot pure_ident depends TArob
## LR(1) items:
rule_name -> TInitialize TDotDot pure_ident depends TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> TInitialize TDotDot pure_ident depends TArob

State 2035:
## Known stack suffix:
## TGenerated
## LR(1) items:
rule_name -> TGenerated . extends depends loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TExtends shift to state 2036
-- On extends shift to state 2038
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TDepends TArob
--   reduce production extends ->

State 2036:
## Known stack suffix:
## TExtends
## LR(1) items:
extends -> TExtends . TRuleName [ TUsing TType TIdentifier TForall TExpression TExists TDisable TDepends TArob ]
## Transitions:
-- On TRuleName shift to state 2037
## Reductions:

State 2037:
## Known stack suffix:
## TExtends TRuleName
## LR(1) items:
extends -> TExtends TRuleName . [ TUsing TType TIdentifier TForall TExpression TExists TDisable TDepends TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extends -> TExtends TRuleName

State 2038:
## Known stack suffix:
## TGenerated extends
## LR(1) items:
rule_name -> TGenerated extends . depends loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2039
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production depends ->

State 2039:
## Known stack suffix:
## TGenerated extends depends
## LR(1) items:
rule_name -> TGenerated extends depends . loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TUsing shift to state 2040
-- On loption(choose_iso) shift to state 2045
-- On choose_iso shift to state 2058
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production loption(choose_iso) ->

State 2040:
## Known stack suffix:
## TUsing
## LR(1) items:
choose_iso -> TUsing . separated_nonempty_list(TComma,TString) [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TString shift to state 2041
-- On separated_nonempty_list(TComma,TString) shift to state 2044
## Reductions:

State 2041:
## Known stack suffix:
## TString
## LR(1) items:
separated_nonempty_list(TComma,TString) -> TString . [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
separated_nonempty_list(TComma,TString) -> TString . TComma separated_nonempty_list(TComma,TString) [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TComma shift to state 2042
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production separated_nonempty_list(TComma,TString) -> TString

State 2042:
## Known stack suffix:
## TString TComma
## LR(1) items:
separated_nonempty_list(TComma,TString) -> TString TComma . separated_nonempty_list(TComma,TString) [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
-- On TString shift to state 2041
-- On separated_nonempty_list(TComma,TString) shift to state 2043
## Reductions:

State 2043:
## Known stack suffix:
## TString TComma separated_nonempty_list(TComma,TString)
## LR(1) items:
separated_nonempty_list(TComma,TString) -> TString TComma separated_nonempty_list(TComma,TString) . [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(TComma,TString) -> TString TComma separated_nonempty_list(TComma,TString)

State 2044:
## Known stack suffix:
## TUsing separated_nonempty_list(TComma,TString)
## LR(1) items:
choose_iso -> TUsing separated_nonempty_list(TComma,TString) . [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production choose_iso -> TUsing separated_nonempty_list(TComma,TString)

State 2045:
## Known stack suffix:
## TGenerated extends depends loption(choose_iso)
## LR(1) items:
rule_name -> TGenerated extends depends loption(choose_iso) . loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDisable shift to state 2046
-- On loption(disable) shift to state 2048
-- On disable shift to state 2057
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TArob
--   reduce production loption(disable) ->

State 2046:
## Known stack suffix:
## TDisable
## LR(1) items:
disable -> TDisable . separated_nonempty_list(TComma,pure_ident) [ TType TIdentifier TForall TExpression TExists TArob ]
## Transitions:
-- On TIdent shift to state 2
-- On separated_nonempty_list(TComma,pure_ident) shift to state 2047
-- On pure_ident shift to state 4
## Reductions:

State 2047:
## Known stack suffix:
## TDisable separated_nonempty_list(TComma,pure_ident)
## LR(1) items:
disable -> TDisable separated_nonempty_list(TComma,pure_ident) . [ TType TIdentifier TForall TExpression TExists TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production disable -> TDisable separated_nonempty_list(TComma,pure_ident)

State 2048:
## Known stack suffix:
## TGenerated extends depends loption(choose_iso) loption(disable)
## LR(1) items:
rule_name -> TGenerated extends depends loption(choose_iso) loption(disable) . exists is_expression TArob [ # ]
## Transitions:
-- On TForall shift to state 2049
-- On TExists shift to state 2050
-- On exists shift to state 2051
## Reductions:
-- On TType TIdentifier TExpression TArob
--   reduce production exists ->

State 2049:
## Known stack suffix:
## TForall
## LR(1) items:
exists -> TForall . [ TType TIdentifier TExpression TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exists -> TForall

State 2050:
## Known stack suffix:
## TExists
## LR(1) items:
exists -> TExists . [ TType TIdentifier TExpression TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exists -> TExists

State 2051:
## Known stack suffix:
## TGenerated extends depends loption(choose_iso) loption(disable) exists
## LR(1) items:
rule_name -> TGenerated extends depends loption(choose_iso) loption(disable) exists . is_expression TArob [ # ]
## Transitions:
-- On TType shift to state 2052
-- On TIdentifier shift to state 2053
-- On TExpression shift to state 2054
-- On is_expression shift to state 2055
## Reductions:
-- On TArob
--   reduce production is_expression ->

State 2052:
## Known stack suffix:
## TType
## LR(1) items:
is_expression -> TType . [ TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_expression -> TType

State 2053:
## Known stack suffix:
## TIdentifier
## LR(1) items:
is_expression -> TIdentifier . [ TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_expression -> TIdentifier

State 2054:
## Known stack suffix:
## TExpression
## LR(1) items:
is_expression -> TExpression . [ TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_expression -> TExpression

State 2055:
## Known stack suffix:
## TGenerated extends depends loption(choose_iso) loption(disable) exists is_expression
## LR(1) items:
rule_name -> TGenerated extends depends loption(choose_iso) loption(disable) exists is_expression . TArob [ # ]
## Transitions:
-- On TArob shift to state 2056
## Reductions:

State 2056:
## Known stack suffix:
## TGenerated extends depends loption(choose_iso) loption(disable) exists is_expression TArob
## LR(1) items:
rule_name -> TGenerated extends depends loption(choose_iso) loption(disable) exists is_expression TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> TGenerated extends depends loption(choose_iso) loption(disable) exists is_expression TArob

State 2057:
## Known stack suffix:
## disable
## LR(1) items:
loption(disable) -> disable . [ TType TIdentifier TForall TExpression TExists TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(disable) -> disable

State 2058:
## Known stack suffix:
## choose_iso
## LR(1) items:
loption(choose_iso) -> choose_iso . [ TType TIdentifier TForall TExpression TExists TDisable TArob ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(choose_iso) -> choose_iso

State 2059:
## Known stack suffix:
## TFinalize
## LR(1) items:
rule_name -> TFinalize . TDotDot pure_ident depends TArob [ # ]
## Transitions:
-- On TDotDot shift to state 2060
## Reductions:

State 2060:
## Known stack suffix:
## TFinalize TDotDot
## LR(1) items:
rule_name -> TFinalize TDotDot . pure_ident depends TArob [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2061
## Reductions:

State 2061:
## Known stack suffix:
## TFinalize TDotDot pure_ident
## LR(1) items:
rule_name -> TFinalize TDotDot pure_ident . depends TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2062
## Reductions:
-- On TArob
--   reduce production depends ->

State 2062:
## Known stack suffix:
## TFinalize TDotDot pure_ident depends
## LR(1) items:
rule_name -> TFinalize TDotDot pure_ident depends . TArob [ # ]
## Transitions:
-- On TArob shift to state 2063
## Reductions:

State 2063:
## Known stack suffix:
## TFinalize TDotDot pure_ident depends TArob
## LR(1) items:
rule_name -> TFinalize TDotDot pure_ident depends TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> TFinalize TDotDot pure_ident depends TArob

State 2064:
## Known stack suffix:
## rule_name
## LR(1) items:
rule_name' -> rule_name . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept rule_name

State 2065:
## Known stack suffix:
## pure_ident
## LR(1) items:
rule_name -> pure_ident . extends depends loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TExtends shift to state 2036
-- On extends shift to state 2066
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TDepends TArob
--   reduce production extends ->

State 2066:
## Known stack suffix:
## pure_ident extends
## LR(1) items:
rule_name -> pure_ident extends . depends loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2067
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production depends ->

State 2067:
## Known stack suffix:
## pure_ident extends depends
## LR(1) items:
rule_name -> pure_ident extends depends . loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TUsing shift to state 2040
-- On loption(choose_iso) shift to state 2068
-- On choose_iso shift to state 2058
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production loption(choose_iso) ->

State 2068:
## Known stack suffix:
## pure_ident extends depends loption(choose_iso)
## LR(1) items:
rule_name -> pure_ident extends depends loption(choose_iso) . loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDisable shift to state 2046
-- On loption(disable) shift to state 2069
-- On disable shift to state 2057
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TArob
--   reduce production loption(disable) ->

State 2069:
## Known stack suffix:
## pure_ident extends depends loption(choose_iso) loption(disable)
## LR(1) items:
rule_name -> pure_ident extends depends loption(choose_iso) loption(disable) . exists is_expression TArob [ # ]
## Transitions:
-- On TForall shift to state 2049
-- On TExists shift to state 2050
-- On exists shift to state 2070
## Reductions:
-- On TType TIdentifier TExpression TArob
--   reduce production exists ->

State 2070:
## Known stack suffix:
## pure_ident extends depends loption(choose_iso) loption(disable) exists
## LR(1) items:
rule_name -> pure_ident extends depends loption(choose_iso) loption(disable) exists . is_expression TArob [ # ]
## Transitions:
-- On TType shift to state 2052
-- On TIdentifier shift to state 2053
-- On TExpression shift to state 2054
-- On is_expression shift to state 2071
## Reductions:
-- On TArob
--   reduce production is_expression ->

State 2071:
## Known stack suffix:
## pure_ident extends depends loption(choose_iso) loption(disable) exists is_expression
## LR(1) items:
rule_name -> pure_ident extends depends loption(choose_iso) loption(disable) exists is_expression . TArob [ # ]
## Transitions:
-- On TArob shift to state 2072
## Reductions:

State 2072:
## Known stack suffix:
## pure_ident extends depends loption(choose_iso) loption(disable) exists is_expression TArob
## LR(1) items:
rule_name -> pure_ident extends depends loption(choose_iso) loption(disable) exists is_expression TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> pure_ident extends depends loption(choose_iso) loption(disable) exists is_expression TArob

State 2073:
## Known stack suffix:
## extends
## LR(1) items:
rule_name -> extends . depends loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDepends shift to state 2005
-- On depends shift to state 2074
## Reductions:
-- On TUsing TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production depends ->

State 2074:
## Known stack suffix:
## extends depends
## LR(1) items:
rule_name -> extends depends . loption(choose_iso) loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TUsing shift to state 2040
-- On loption(choose_iso) shift to state 2075
-- On choose_iso shift to state 2058
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TDisable TArob
--   reduce production loption(choose_iso) ->

State 2075:
## Known stack suffix:
## extends depends loption(choose_iso)
## LR(1) items:
rule_name -> extends depends loption(choose_iso) . loption(disable) exists is_expression TArob [ # ]
## Transitions:
-- On TDisable shift to state 2046
-- On loption(disable) shift to state 2076
-- On disable shift to state 2057
## Reductions:
-- On TType TIdentifier TForall TExpression TExists TArob
--   reduce production loption(disable) ->

State 2076:
## Known stack suffix:
## extends depends loption(choose_iso) loption(disable)
## LR(1) items:
rule_name -> extends depends loption(choose_iso) loption(disable) . exists is_expression TArob [ # ]
## Transitions:
-- On TForall shift to state 2049
-- On TExists shift to state 2050
-- On exists shift to state 2077
## Reductions:
-- On TType TIdentifier TExpression TArob
--   reduce production exists ->

State 2077:
## Known stack suffix:
## extends depends loption(choose_iso) loption(disable) exists
## LR(1) items:
rule_name -> extends depends loption(choose_iso) loption(disable) exists . is_expression TArob [ # ]
## Transitions:
-- On TType shift to state 2052
-- On TIdentifier shift to state 2053
-- On TExpression shift to state 2054
-- On is_expression shift to state 2078
## Reductions:
-- On TArob
--   reduce production is_expression ->

State 2078:
## Known stack suffix:
## extends depends loption(choose_iso) loption(disable) exists is_expression
## LR(1) items:
rule_name -> extends depends loption(choose_iso) loption(disable) exists is_expression . TArob [ # ]
## Transitions:
-- On TArob shift to state 2079
## Reductions:

State 2079:
## Known stack suffix:
## extends depends loption(choose_iso) loption(disable) exists is_expression TArob
## LR(1) items:
rule_name -> extends depends loption(choose_iso) loption(disable) exists is_expression TArob . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production rule_name -> extends depends loption(choose_iso) loption(disable) exists is_expression TArob

State 2080:
## Known stack suffix:
##
## LR(1) items:
script_meta_main' -> . script_meta_main [ # ]
## Transitions:
-- On TOPar shift to state 2081
-- On TIdent shift to state 2
-- On script_meta_main shift to state 2105
-- On pure_ident shift to state 2106
## Reductions:

State 2081:
## Known stack suffix:
## TOPar
## LR(1) items:
script_meta_main -> TOPar . TUnderscore TComma pure_ident TCPar script_name_decl TMPtVirg [ # ]
script_meta_main -> TOPar . pure_ident TComma TUnderscore TCPar script_name_decl TMPtVirg [ # ]
script_meta_main -> TOPar . pure_ident TComma pure_ident TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TUnderscore shift to state 2082
-- On TIdent shift to state 2
-- On pure_ident shift to state 2095
## Reductions:

State 2082:
## Known stack suffix:
## TOPar TUnderscore
## LR(1) items:
script_meta_main -> TOPar TUnderscore . TComma pure_ident TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TComma shift to state 2083
## Reductions:

State 2083:
## Known stack suffix:
## TOPar TUnderscore TComma
## LR(1) items:
script_meta_main -> TOPar TUnderscore TComma . pure_ident TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2084
## Reductions:

State 2084:
## Known stack suffix:
## TOPar TUnderscore TComma pure_ident
## LR(1) items:
script_meta_main -> TOPar TUnderscore TComma pure_ident . TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TCPar shift to state 2085
## Reductions:

State 2085:
## Known stack suffix:
## TOPar TUnderscore TComma pure_ident TCPar
## LR(1) items:
script_meta_main -> TOPar TUnderscore TComma pure_ident TCPar . script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TShLOp shift to state 2086
-- On script_name_decl shift to state 2093
## Reductions:

State 2086:
## Known stack suffix:
## TShLOp
## LR(1) items:
script_name_decl -> TShLOp . TRuleName TDot pure_ident [ TMPtVirg ]
script_name_decl -> TShLOp . TVirtual TDot pure_ident [ TMPtVirg ]
## Transitions:
-- On TVirtual shift to state 2087
-- On TRuleName shift to state 2090
## Reductions:

State 2087:
## Known stack suffix:
## TShLOp TVirtual
## LR(1) items:
script_name_decl -> TShLOp TVirtual . TDot pure_ident [ TMPtVirg ]
## Transitions:
-- On TDot shift to state 2088
## Reductions:

State 2088:
## Known stack suffix:
## TShLOp TVirtual TDot
## LR(1) items:
script_name_decl -> TShLOp TVirtual TDot . pure_ident [ TMPtVirg ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2089
## Reductions:

State 2089:
## Known stack suffix:
## TShLOp TVirtual TDot pure_ident
## LR(1) items:
script_name_decl -> TShLOp TVirtual TDot pure_ident . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production script_name_decl -> TShLOp TVirtual TDot pure_ident

State 2090:
## Known stack suffix:
## TShLOp TRuleName
## LR(1) items:
script_name_decl -> TShLOp TRuleName . TDot pure_ident [ TMPtVirg ]
## Transitions:
-- On TDot shift to state 2091
## Reductions:

State 2091:
## Known stack suffix:
## TShLOp TRuleName TDot
## LR(1) items:
script_name_decl -> TShLOp TRuleName TDot . pure_ident [ TMPtVirg ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2092
## Reductions:

State 2092:
## Known stack suffix:
## TShLOp TRuleName TDot pure_ident
## LR(1) items:
script_name_decl -> TShLOp TRuleName TDot pure_ident . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production script_name_decl -> TShLOp TRuleName TDot pure_ident

State 2093:
## Known stack suffix:
## TOPar TUnderscore TComma pure_ident TCPar script_name_decl
## LR(1) items:
script_meta_main -> TOPar TUnderscore TComma pure_ident TCPar script_name_decl . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 2094
## Reductions:

State 2094:
## Known stack suffix:
## TOPar TUnderscore TComma pure_ident TCPar script_name_decl TMPtVirg
## LR(1) items:
script_meta_main -> TOPar TUnderscore TComma pure_ident TCPar script_name_decl TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_main -> TOPar TUnderscore TComma pure_ident TCPar script_name_decl TMPtVirg

State 2095:
## Known stack suffix:
## TOPar pure_ident
## LR(1) items:
script_meta_main -> TOPar pure_ident . TComma TUnderscore TCPar script_name_decl TMPtVirg [ # ]
script_meta_main -> TOPar pure_ident . TComma pure_ident TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TComma shift to state 2096
## Reductions:

State 2096:
## Known stack suffix:
## TOPar pure_ident TComma
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma . TUnderscore TCPar script_name_decl TMPtVirg [ # ]
script_meta_main -> TOPar pure_ident TComma . pure_ident TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TUnderscore shift to state 2097
-- On TIdent shift to state 2
-- On pure_ident shift to state 2101
## Reductions:

State 2097:
## Known stack suffix:
## TOPar pure_ident TComma TUnderscore
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma TUnderscore . TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TCPar shift to state 2098
## Reductions:

State 2098:
## Known stack suffix:
## TOPar pure_ident TComma TUnderscore TCPar
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma TUnderscore TCPar . script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TShLOp shift to state 2086
-- On script_name_decl shift to state 2099
## Reductions:

State 2099:
## Known stack suffix:
## TOPar pure_ident TComma TUnderscore TCPar script_name_decl
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma TUnderscore TCPar script_name_decl . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 2100
## Reductions:

State 2100:
## Known stack suffix:
## TOPar pure_ident TComma TUnderscore TCPar script_name_decl TMPtVirg
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma TUnderscore TCPar script_name_decl TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_main -> TOPar pure_ident TComma TUnderscore TCPar script_name_decl TMPtVirg

State 2101:
## Known stack suffix:
## TOPar pure_ident TComma pure_ident
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma pure_ident . TCPar script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TCPar shift to state 2102
## Reductions:

State 2102:
## Known stack suffix:
## TOPar pure_ident TComma pure_ident TCPar
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma pure_ident TCPar . script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TShLOp shift to state 2086
-- On script_name_decl shift to state 2103
## Reductions:

State 2103:
## Known stack suffix:
## TOPar pure_ident TComma pure_ident TCPar script_name_decl
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma pure_ident TCPar script_name_decl . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 2104
## Reductions:

State 2104:
## Known stack suffix:
## TOPar pure_ident TComma pure_ident TCPar script_name_decl TMPtVirg
## LR(1) items:
script_meta_main -> TOPar pure_ident TComma pure_ident TCPar script_name_decl TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_main -> TOPar pure_ident TComma pure_ident TCPar script_name_decl TMPtVirg

State 2105:
## Known stack suffix:
## script_meta_main
## LR(1) items:
script_meta_main' -> script_meta_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept script_meta_main

State 2106:
## Known stack suffix:
## pure_ident
## LR(1) items:
script_meta_main -> pure_ident . TMPtVirg [ # ]
script_meta_main -> pure_ident . script_name_decl TMPtVirg [ # ]
## Transitions:
-- On TShLOp shift to state 2086
-- On TMPtVirg shift to state 2107
-- On script_name_decl shift to state 2108
## Reductions:

State 2107:
## Known stack suffix:
## pure_ident TMPtVirg
## LR(1) items:
script_meta_main -> pure_ident TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_main -> pure_ident TMPtVirg

State 2108:
## Known stack suffix:
## pure_ident script_name_decl
## LR(1) items:
script_meta_main -> pure_ident script_name_decl . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 2109
## Reductions:

State 2109:
## Known stack suffix:
## pure_ident script_name_decl TMPtVirg
## LR(1) items:
script_meta_main -> pure_ident script_name_decl TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_main -> pure_ident script_name_decl TMPtVirg

State 2110:
## Known stack suffix:
##
## LR(1) items:
script_meta_virt_nofresh_main' -> . script_meta_virt_nofresh_main [ # ]
## Transitions:
-- On TIdent shift to state 2
-- On script_meta_virt_nofresh_main shift to state 2111
-- On pure_ident shift to state 2112
## Reductions:

State 2111:
## Known stack suffix:
## script_meta_virt_nofresh_main
## LR(1) items:
script_meta_virt_nofresh_main' -> script_meta_virt_nofresh_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept script_meta_virt_nofresh_main

State 2112:
## Known stack suffix:
## pure_ident
## LR(1) items:
script_meta_virt_nofresh_main -> pure_ident . script_virt_name_decl TMPtVirg [ # ]
## Transitions:
-- On TShLOp shift to state 2113
-- On script_virt_name_decl shift to state 2117
## Reductions:

State 2113:
## Known stack suffix:
## TShLOp
## LR(1) items:
script_virt_name_decl -> TShLOp . TVirtual TDot pure_ident [ TMPtVirg ]
## Transitions:
-- On TVirtual shift to state 2114
## Reductions:

State 2114:
## Known stack suffix:
## TShLOp TVirtual
## LR(1) items:
script_virt_name_decl -> TShLOp TVirtual . TDot pure_ident [ TMPtVirg ]
## Transitions:
-- On TDot shift to state 2115
## Reductions:

State 2115:
## Known stack suffix:
## TShLOp TVirtual TDot
## LR(1) items:
script_virt_name_decl -> TShLOp TVirtual TDot . pure_ident [ TMPtVirg ]
## Transitions:
-- On TIdent shift to state 2
-- On pure_ident shift to state 2116
## Reductions:

State 2116:
## Known stack suffix:
## TShLOp TVirtual TDot pure_ident
## LR(1) items:
script_virt_name_decl -> TShLOp TVirtual TDot pure_ident . [ TMPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production script_virt_name_decl -> TShLOp TVirtual TDot pure_ident

State 2117:
## Known stack suffix:
## pure_ident script_virt_name_decl
## LR(1) items:
script_meta_virt_nofresh_main -> pure_ident script_virt_name_decl . TMPtVirg [ # ]
## Transitions:
-- On TMPtVirg shift to state 2118
## Reductions:

State 2118:
## Known stack suffix:
## pure_ident script_virt_name_decl TMPtVirg
## LR(1) items:
script_meta_virt_nofresh_main -> pure_ident script_virt_name_decl TMPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production script_meta_virt_nofresh_main -> pure_ident script_virt_name_decl TMPtVirg

