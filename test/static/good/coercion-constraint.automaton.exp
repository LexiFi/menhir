State 0:
## Known stack suffix:
##
## LR(1) items:
tconstraint' -> . tconstraint [ # ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LET shift to state 40
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On EXISTS shift to state 56
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 60
-- On tconstraint shift to state 92
-- On star_types shift to state 23
-- On constraint_exp1 shift to state 63
-- On constraint_exp0 shift to state 64
-- On constraint_exp shift to state 93
-- On conjunction shift to state 69
## Reductions:

State 1:
## Known stack suffix:
## TRUE
## LR(1) items:
constraint_exp0 -> TRUE . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> TRUE

State 2:
## Known stack suffix:
## LPAREN
## LR(1) items:
constraint_exp0 -> LPAREN . constraint_exp RPAREN [ RPAREN RBRACKET EOF AND ]
type00 -> LPAREN . typ RPAREN [ TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW ]
type00 -> LPAREN . typ COMMA types RPAREN [ TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LET shift to state 40
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On EXISTS shift to state 56
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 89
-- On star_types shift to state 23
-- On constraint_exp1 shift to state 63
-- On constraint_exp0 shift to state 64
-- On constraint_exp shift to state 90
-- On conjunction shift to state 69
## Reductions:

State 3:
## Known stack suffix:
## LID
## LR(1) items:
constraint_exp0 -> LID . LESS typ [ RPAREN RBRACKET EOF AND ]
type00 -> LID . [ TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW ]
## Transitions:
-- On LESS shift to state 4
## Reductions:
-- On TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW
--   reduce production type00 -> LID

State 4:
## Known stack suffix:
## LID LESS
## LR(1) items:
constraint_exp0 -> LID LESS . typ [ RPAREN RBRACKET EOF AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 39
-- On star_types shift to state 23
## Reductions:

State 5:
## Known stack suffix:
## LPAREN
## LR(1) items:
type00 -> LPAREN . typ RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
type00 -> LPAREN . typ COMMA types RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 31
-- On star_types shift to state 23
## Reductions:

State 6:
## Known stack suffix:
## LID
## LR(1) items:
type00 -> LID . [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND
--   reduce production type00 -> LID

State 7:
## Known stack suffix:
## LBRACE
## LR(1) items:
type00 -> LBRACE . attributes RBRACE [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 8
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 25
-- On star_types shift to state 23
-- On attributes shift to state 26
-- On attribute shift to state 28
## Reductions:

State 8:
## Known stack suffix:
## LID
## LR(1) items:
attribute -> LID . COLON typ [ SEMI ]
type00 -> LID . [ TIMES RBRACE LPAREN LID LBRACE ARROW ]
## Transitions:
-- On COLON shift to state 9
## Reductions:
-- On TIMES RBRACE LPAREN LID LBRACE ARROW
--   reduce production type00 -> LID

State 9:
## Known stack suffix:
## LID COLON
## LR(1) items:
attribute -> LID COLON . typ [ SEMI ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 24
-- On star_types shift to state 23
## Reductions:

State 10:
## Known stack suffix:
## BACKSLASH
## LR(1) items:
type1 -> BACKSLASH . type0 [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 14
## Reductions:

State 11:
## Known stack suffix:
## type00s
## LR(1) items:
type0 -> type00s . [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type0 -> type00s

State 12:
## Known stack suffix:
## type00
## LR(1) items:
type00s -> type00 . [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
type00s -> type00 . type00s [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On type00s shift to state 13
-- On type00 shift to state 12
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type00s -> type00

State 13:
## Known stack suffix:
## type00 type00s
## LR(1) items:
type00s -> type00 type00s . [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type00s -> type00 type00s

State 14:
## Known stack suffix:
## BACKSLASH type0
## LR(1) items:
type1 -> BACKSLASH type0 . [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type1 -> BACKSLASH type0

State 15:
## Known stack suffix:
## type2
## LR(1) items:
typ -> type2 . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND
--   reduce production typ -> type2

State 16:
## Known stack suffix:
## type10
## LR(1) items:
type2 -> type10 . ARROW type2 [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND ]
type2 -> type10 . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND ]
## Transitions:
-- On ARROW shift to state 17
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND
--   reduce production type2 -> type10

State 17:
## Known stack suffix:
## type10 ARROW
## LR(1) items:
type2 -> type10 ARROW . type2 [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 18
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On star_types shift to state 23
## Reductions:

State 18:
## Known stack suffix:
## type10 ARROW type2
## LR(1) items:
type2 -> type10 ARROW type2 . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND
--   reduce production type2 -> type10 ARROW type2

State 19:
## Known stack suffix:
## type1
## LR(1) items:
star_types -> type1 . TIMES star_types [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
star_types -> type1 . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On TIMES shift to state 20
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production star_types -> type1

State 20:
## Known stack suffix:
## type1 TIMES
## LR(1) items:
star_types -> type1 TIMES . star_types [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On star_types shift to state 22
## Reductions:

State 21:
## Known stack suffix:
## type0
## LR(1) items:
type1 -> type0 . [ TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type1 -> type0

State 22:
## Known stack suffix:
## type1 TIMES star_types
## LR(1) items:
star_types -> type1 TIMES star_types . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production star_types -> type1 TIMES star_types

State 23:
## Known stack suffix:
## star_types
## LR(1) items:
type10 -> star_types . [ SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
--   reduce production type10 -> star_types

State 24:
## Known stack suffix:
## LID COLON typ
## LR(1) items:
attribute -> LID COLON typ . [ SEMI ]
## Transitions:
## Reductions:
-- On SEMI
--   reduce production attribute -> LID COLON typ

State 25:
## Known stack suffix:
## typ
## LR(1) items:
attributes -> typ . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production attributes -> typ

State 26:
## Known stack suffix:
## LBRACE attributes
## LR(1) items:
type00 -> LBRACE attributes . RBRACE [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On RBRACE shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## LBRACE attributes RBRACE
## LR(1) items:
type00 -> LBRACE attributes RBRACE . [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND
--   reduce production type00 -> LBRACE attributes RBRACE

State 28:
## Known stack suffix:
## attribute
## LR(1) items:
attributes -> attribute . SEMI attributes [ RBRACE ]
## Transitions:
-- On SEMI shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## attribute SEMI
## LR(1) items:
attributes -> attribute SEMI . attributes [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 8
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 25
-- On star_types shift to state 23
-- On attributes shift to state 30
-- On attribute shift to state 28
## Reductions:

State 30:
## Known stack suffix:
## attribute SEMI attributes
## LR(1) items:
attributes -> attribute SEMI attributes . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production attributes -> attribute SEMI attributes

State 31:
## Known stack suffix:
## LPAREN typ
## LR(1) items:
type00 -> LPAREN typ . RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
type00 -> LPAREN typ . COMMA types RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On RPAREN shift to state 32
-- On COMMA shift to state 33
## Reductions:

State 32:
## Known stack suffix:
## LPAREN typ RPAREN
## LR(1) items:
type00 -> LPAREN typ RPAREN . [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND
--   reduce production type00 -> LPAREN typ RPAREN

State 33:
## Known stack suffix:
## LPAREN typ COMMA
## LR(1) items:
type00 -> LPAREN typ COMMA . types RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On types shift to state 34
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 36
-- On star_types shift to state 23
## Reductions:

State 34:
## Known stack suffix:
## LPAREN typ COMMA types
## LR(1) items:
type00 -> LPAREN typ COMMA types . RPAREN [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
-- On RPAREN shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LPAREN typ COMMA types RPAREN
## LR(1) items:
type00 -> LPAREN typ COMMA types RPAREN . [ TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND
--   reduce production type00 -> LPAREN typ COMMA types RPAREN

State 36:
## Known stack suffix:
## typ
## LR(1) items:
types -> typ . [ RPAREN ]
types -> typ . COMMA types [ RPAREN ]
## Transitions:
-- On COMMA shift to state 37
## Reductions:
-- On RPAREN
--   reduce production types -> typ

State 37:
## Known stack suffix:
## typ COMMA
## LR(1) items:
types -> typ COMMA . types [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On types shift to state 38
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 36
-- On star_types shift to state 23
## Reductions:

State 38:
## Known stack suffix:
## typ COMMA types
## LR(1) items:
types -> typ COMMA types . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production types -> typ COMMA types

State 39:
## Known stack suffix:
## LID LESS typ
## LR(1) items:
constraint_exp0 -> LID LESS typ . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> LID LESS typ

State 40:
## Known stack suffix:
## LET
## LR(1) items:
constraint_exp -> LET . let_envs IN constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On FORALL shift to state 41
-- On opt_env_vars shift to state 53
-- On let_envs shift to state 83
-- On let_env shift to state 86
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_env_vars ->

State 41:
## Known stack suffix:
## FORALL
## LR(1) items:
opt_env_vars -> FORALL . LBRACE vars RBRACE opt_vars [ LPAREN LBRACKET IN AND ]
opt_env_vars -> FORALL . vars [ LPAREN LBRACKET IN AND ]
## Transitions:
-- On TIMES shift to state 42
-- On LID shift to state 43
-- On LBRACE shift to state 44
-- On ARROW shift to state 45
-- On vars shift to state 52
-- On var shift to state 49
## Reductions:

State 42:
## Known stack suffix:
## TIMES
## LR(1) items:
var -> TIMES . [ TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND
--   reduce production var -> TIMES

State 43:
## Known stack suffix:
## LID
## LR(1) items:
var -> LID . [ TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND
--   reduce production var -> LID

State 44:
## Known stack suffix:
## FORALL LBRACE
## LR(1) items:
opt_env_vars -> FORALL LBRACE . vars RBRACE opt_vars [ LPAREN LBRACKET IN AND ]
## Transitions:
-- On TIMES shift to state 42
-- On LID shift to state 43
-- On ARROW shift to state 45
-- On vars shift to state 46
-- On var shift to state 49
## Reductions:

State 45:
## Known stack suffix:
## ARROW
## LR(1) items:
var -> ARROW . [ TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND
--   reduce production var -> ARROW

State 46:
## Known stack suffix:
## FORALL LBRACE vars
## LR(1) items:
opt_env_vars -> FORALL LBRACE vars . RBRACE opt_vars [ LPAREN LBRACKET IN AND ]
## Transitions:
-- On RBRACE shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## FORALL LBRACE vars RBRACE
## LR(1) items:
opt_env_vars -> FORALL LBRACE vars RBRACE . opt_vars [ LPAREN LBRACKET IN AND ]
## Transitions:
-- On TIMES shift to state 42
-- On LID shift to state 43
-- On ARROW shift to state 45
-- On vars shift to state 48
-- On var shift to state 49
-- On opt_vars shift to state 51
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_vars ->

State 48:
## Known stack suffix:
## vars
## LR(1) items:
opt_vars -> vars . [ LPAREN LBRACKET IN AND ]
## Transitions:
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_vars -> vars

State 49:
## Known stack suffix:
## var
## LR(1) items:
vars -> var . [ RBRACE LPAREN LBRACKET IN DOT AND ]
vars -> var . vars [ RBRACE LPAREN LBRACKET IN DOT AND ]
## Transitions:
-- On TIMES shift to state 42
-- On LID shift to state 43
-- On ARROW shift to state 45
-- On vars shift to state 50
-- On var shift to state 49
## Reductions:
-- On RBRACE LPAREN LBRACKET IN DOT AND
--   reduce production vars -> var

State 50:
## Known stack suffix:
## var vars
## LR(1) items:
vars -> var vars . [ RBRACE LPAREN LBRACKET IN DOT AND ]
## Transitions:
## Reductions:
-- On RBRACE LPAREN LBRACKET IN DOT AND
--   reduce production vars -> var vars

State 51:
## Known stack suffix:
## FORALL LBRACE vars RBRACE opt_vars
## LR(1) items:
opt_env_vars -> FORALL LBRACE vars RBRACE opt_vars . [ LPAREN LBRACKET IN AND ]
## Transitions:
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_env_vars -> FORALL LBRACE vars RBRACE opt_vars

State 52:
## Known stack suffix:
## FORALL vars
## LR(1) items:
opt_env_vars -> FORALL vars . [ LPAREN LBRACKET IN AND ]
## Transitions:
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_env_vars -> FORALL vars

State 53:
## Known stack suffix:
## opt_env_vars
## LR(1) items:
let_env -> opt_env_vars . opt_constraint opt_env_ids [ IN AND ]
## Transitions:
-- On LBRACKET shift to state 54
-- On opt_constraint shift to state 72
## Reductions:
-- On LPAREN IN AND
--   reduce production opt_constraint ->

State 54:
## Known stack suffix:
## LBRACKET
## LR(1) items:
opt_constraint -> LBRACKET . constraint_exp RBRACKET [ LPAREN IN AND ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LET shift to state 40
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On EXISTS shift to state 56
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 60
-- On star_types shift to state 23
-- On constraint_exp1 shift to state 63
-- On constraint_exp0 shift to state 64
-- On constraint_exp shift to state 70
-- On conjunction shift to state 69
## Reductions:

State 55:
## Known stack suffix:
## FALSE
## LR(1) items:
constraint_exp0 -> FALSE . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> FALSE

State 56:
## Known stack suffix:
## EXISTS
## LR(1) items:
constraint_exp -> EXISTS . vars DOT constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On TIMES shift to state 42
-- On LID shift to state 43
-- On ARROW shift to state 45
-- On vars shift to state 57
-- On var shift to state 49
## Reductions:

State 57:
## Known stack suffix:
## EXISTS vars
## LR(1) items:
constraint_exp -> EXISTS vars . DOT constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On DOT shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## EXISTS vars DOT
## LR(1) items:
constraint_exp -> EXISTS vars DOT . constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LET shift to state 40
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On EXISTS shift to state 56
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 60
-- On star_types shift to state 23
-- On constraint_exp1 shift to state 63
-- On constraint_exp0 shift to state 64
-- On constraint_exp shift to state 68
-- On conjunction shift to state 69
## Reductions:

State 59:
## Known stack suffix:
## DUMP
## LR(1) items:
constraint_exp0 -> DUMP . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> DUMP

State 60:
## Known stack suffix:
## typ
## LR(1) items:
constraint_exp0 -> typ . EQ typ [ RPAREN RBRACKET EOF AND ]
## Transitions:
-- On EQ shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## typ EQ
## LR(1) items:
constraint_exp0 -> typ EQ . typ [ RPAREN RBRACKET EOF AND ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 62
-- On star_types shift to state 23
## Reductions:

State 62:
## Known stack suffix:
## typ EQ typ
## LR(1) items:
constraint_exp0 -> typ EQ typ . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> typ EQ typ

State 63:
## Known stack suffix:
## constraint_exp1
## LR(1) items:
constraint_exp -> constraint_exp1 . [ RPAREN RBRACKET EOF ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production constraint_exp -> constraint_exp1

State 64:
## Known stack suffix:
## constraint_exp0
## LR(1) items:
conjunction -> constraint_exp0 . AND constraint_exp0 [ RPAREN RBRACKET EOF ]
conjunction -> constraint_exp0 . AND conjunction [ RPAREN RBRACKET EOF ]
constraint_exp1 -> constraint_exp0 . [ RPAREN RBRACKET EOF ]
## Transitions:
-- On AND shift to state 65
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production constraint_exp1 -> constraint_exp0

State 65:
## Known stack suffix:
## constraint_exp0 AND
## LR(1) items:
conjunction -> constraint_exp0 AND . constraint_exp0 [ RPAREN RBRACKET EOF ]
conjunction -> constraint_exp0 AND . conjunction [ RPAREN RBRACKET EOF ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 60
-- On star_types shift to state 23
-- On constraint_exp0 shift to state 66
-- On conjunction shift to state 67
## Reductions:

State 66:
## Known stack suffix:
## constraint_exp0 AND constraint_exp0
## LR(1) items:
conjunction -> constraint_exp0 . AND constraint_exp0 [ RPAREN RBRACKET EOF ]
conjunction -> constraint_exp0 AND constraint_exp0 . [ RPAREN RBRACKET EOF ]
conjunction -> constraint_exp0 . AND conjunction [ RPAREN RBRACKET EOF ]
## Transitions:
-- On AND shift to state 65
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production conjunction -> constraint_exp0 AND constraint_exp0

State 67:
## Known stack suffix:
## constraint_exp0 AND conjunction
## LR(1) items:
conjunction -> constraint_exp0 AND conjunction . [ RPAREN RBRACKET EOF ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production conjunction -> constraint_exp0 AND conjunction

State 68:
## Known stack suffix:
## EXISTS vars DOT constraint_exp
## LR(1) items:
constraint_exp -> EXISTS vars DOT constraint_exp . [ RPAREN RBRACKET EOF ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production constraint_exp -> EXISTS vars DOT constraint_exp

State 69:
## Known stack suffix:
## conjunction
## LR(1) items:
constraint_exp1 -> conjunction . [ RPAREN RBRACKET EOF ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production constraint_exp1 -> conjunction

State 70:
## Known stack suffix:
## LBRACKET constraint_exp
## LR(1) items:
opt_constraint -> LBRACKET constraint_exp . RBRACKET [ LPAREN IN AND ]
## Transitions:
-- On RBRACKET shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## LBRACKET constraint_exp RBRACKET
## LR(1) items:
opt_constraint -> LBRACKET constraint_exp RBRACKET . [ LPAREN IN AND ]
## Transitions:
## Reductions:
-- On LPAREN IN AND
--   reduce production opt_constraint -> LBRACKET constraint_exp RBRACKET

State 72:
## Known stack suffix:
## opt_env_vars opt_constraint
## LR(1) items:
let_env -> opt_env_vars opt_constraint . opt_env_ids [ IN AND ]
## Transitions:
-- On LPAREN shift to state 73
-- On opt_env_ids shift to state 82
## Reductions:
-- On IN AND
--   reduce production opt_env_ids ->

State 73:
## Known stack suffix:
## LPAREN
## LR(1) items:
opt_env_ids -> LPAREN . env_ids RPAREN [ IN AND ]
## Transitions:
-- On LID shift to state 74
-- On env_ids shift to state 77
-- On env_id shift to state 79
## Reductions:

State 74:
## Known stack suffix:
## LID
## LR(1) items:
env_id -> LID . COLON typ [ SEMI RPAREN ]
## Transitions:
-- On COLON shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## LID COLON
## LR(1) items:
env_id -> LID COLON . typ [ SEMI RPAREN ]
## Transitions:
-- On LPAREN shift to state 5
-- On LID shift to state 6
-- On LBRACE shift to state 7
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 76
-- On star_types shift to state 23
## Reductions:

State 76:
## Known stack suffix:
## LID COLON typ
## LR(1) items:
env_id -> LID COLON typ . [ SEMI RPAREN ]
## Transitions:
## Reductions:
-- On SEMI RPAREN
--   reduce production env_id -> LID COLON typ

State 77:
## Known stack suffix:
## LPAREN env_ids
## LR(1) items:
opt_env_ids -> LPAREN env_ids . RPAREN [ IN AND ]
## Transitions:
-- On RPAREN shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## LPAREN env_ids RPAREN
## LR(1) items:
opt_env_ids -> LPAREN env_ids RPAREN . [ IN AND ]
## Transitions:
## Reductions:
-- On IN AND
--   reduce production opt_env_ids -> LPAREN env_ids RPAREN

State 79:
## Known stack suffix:
## env_id
## LR(1) items:
env_ids -> env_id . [ RPAREN ]
env_ids -> env_id . SEMI env_ids [ RPAREN ]
## Transitions:
-- On SEMI shift to state 80
## Reductions:
-- On RPAREN
--   reduce production env_ids -> env_id

State 80:
## Known stack suffix:
## env_id SEMI
## LR(1) items:
env_ids -> env_id SEMI . env_ids [ RPAREN ]
## Transitions:
-- On LID shift to state 74
-- On env_ids shift to state 81
-- On env_id shift to state 79
## Reductions:

State 81:
## Known stack suffix:
## env_id SEMI env_ids
## LR(1) items:
env_ids -> env_id SEMI env_ids . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production env_ids -> env_id SEMI env_ids

State 82:
## Known stack suffix:
## opt_env_vars opt_constraint opt_env_ids
## LR(1) items:
let_env -> opt_env_vars opt_constraint opt_env_ids . [ IN AND ]
## Transitions:
## Reductions:
-- On IN AND
--   reduce production let_env -> opt_env_vars opt_constraint opt_env_ids

State 83:
## Known stack suffix:
## LET let_envs
## LR(1) items:
constraint_exp -> LET let_envs . IN constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On IN shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## LET let_envs IN
## LR(1) items:
constraint_exp -> LET let_envs IN . constraint_exp [ RPAREN RBRACKET EOF ]
## Transitions:
-- On TRUE shift to state 1
-- On LPAREN shift to state 2
-- On LID shift to state 3
-- On LET shift to state 40
-- On LBRACE shift to state 7
-- On FALSE shift to state 55
-- On EXISTS shift to state 56
-- On DUMP shift to state 59
-- On BACKSLASH shift to state 10
-- On type2 shift to state 15
-- On type10 shift to state 16
-- On type1 shift to state 19
-- On type00s shift to state 11
-- On type00 shift to state 12
-- On type0 shift to state 21
-- On typ shift to state 60
-- On star_types shift to state 23
-- On constraint_exp1 shift to state 63
-- On constraint_exp0 shift to state 64
-- On constraint_exp shift to state 85
-- On conjunction shift to state 69
## Reductions:

State 85:
## Known stack suffix:
## LET let_envs IN constraint_exp
## LR(1) items:
constraint_exp -> LET let_envs IN constraint_exp . [ RPAREN RBRACKET EOF ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF
--   reduce production constraint_exp -> LET let_envs IN constraint_exp

State 86:
## Known stack suffix:
## let_env
## LR(1) items:
let_envs -> let_env . [ IN ]
let_envs -> let_env . AND let_envs [ IN ]
## Transitions:
-- On AND shift to state 87
## Reductions:
-- On IN
--   reduce production let_envs -> let_env

State 87:
## Known stack suffix:
## let_env AND
## LR(1) items:
let_envs -> let_env AND . let_envs [ IN ]
## Transitions:
-- On FORALL shift to state 41
-- On opt_env_vars shift to state 53
-- On let_envs shift to state 88
-- On let_env shift to state 86
## Reductions:
-- On LPAREN LBRACKET IN AND
--   reduce production opt_env_vars ->

State 88:
## Known stack suffix:
## let_env AND let_envs
## LR(1) items:
let_envs -> let_env AND let_envs . [ IN ]
## Transitions:
## Reductions:
-- On IN
--   reduce production let_envs -> let_env AND let_envs

State 89:
## Known stack suffix:
## LPAREN typ
## LR(1) items:
constraint_exp0 -> typ . EQ typ [ RPAREN AND ]
type00 -> LPAREN typ . RPAREN [ TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW ]
type00 -> LPAREN typ . COMMA types RPAREN [ TIMES RPAREN LPAREN LID LBRACE EQ COMMA ARROW ]
## Transitions:
-- On RPAREN shift to state 32
-- On EQ shift to state 61
-- On COMMA shift to state 33
## Reductions:

State 90:
## Known stack suffix:
## LPAREN constraint_exp
## LR(1) items:
constraint_exp0 -> LPAREN constraint_exp . RPAREN [ RPAREN RBRACKET EOF AND ]
## Transitions:
-- On RPAREN shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## LPAREN constraint_exp RPAREN
## LR(1) items:
constraint_exp0 -> LPAREN constraint_exp RPAREN . [ RPAREN RBRACKET EOF AND ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET EOF AND
--   reduce production constraint_exp0 -> LPAREN constraint_exp RPAREN

State 92:
## Known stack suffix:
## tconstraint
## LR(1) items:
tconstraint' -> tconstraint . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept tconstraint

State 93:
## Known stack suffix:
## constraint_exp
## LR(1) items:
tconstraint -> constraint_exp . EOF [ # ]
## Transitions:
-- On EOF shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## constraint_exp EOF
## LR(1) items:
tconstraint -> constraint_exp EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production tconstraint -> constraint_exp EOF

