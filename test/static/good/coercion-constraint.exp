File "coercion-constraint.mly", line 131, characters 6-9:
Warning: the token APP is unused.
File "coercion-constraint.mly", line 121, characters 28-31:
Warning: the token END is unused.
File "coercion-constraint.mly", line 132, characters 10-12:
Warning: the token ID is unused.
File "coercion-constraint.mly", line 130, characters 7-11:
Warning: the token LEFT is unused.
Grammar has 26 nonterminal symbols, among which 1 start symbols.
Grammar has 26 terminal symbols.
Grammar has 54 productions.
nullable(vars) = false
nullable(var) = false
nullable(types) = false
nullable(type2) = false
nullable(type10) = false
nullable(type1) = false
nullable(type00s) = false
nullable(type00) = false
nullable(type0) = false
nullable(typ) = false
nullable(tconstraint) = false
nullable(star_types) = false
nullable(opt_vars) = true
nullable(opt_env_vars) = true
nullable(opt_env_ids) = true
nullable(opt_constraint) = true
nullable(let_envs) = true
nullable(let_env) = true
nullable(env_ids) = false
nullable(env_id) = false
nullable(constraint_exp1) = false
nullable(constraint_exp0) = false
nullable(constraint_exp) = false
nullable(conjunction) = false
nullable(attributes) = false
nullable(attribute) = false
first(vars) = TIMES LID ARROW
first(var) = TIMES LID ARROW
first(types) = LPAREN LID LBRACE BACKSLASH
first(type2) = LPAREN LID LBRACE BACKSLASH
first(type10) = LPAREN LID LBRACE BACKSLASH
first(type1) = LPAREN LID LBRACE BACKSLASH
first(type00s) = LPAREN LID LBRACE
first(type00) = LPAREN LID LBRACE
first(type0) = LPAREN LID LBRACE
first(typ) = LPAREN LID LBRACE BACKSLASH
first(tconstraint) = TRUE LPAREN LID LET LBRACE FALSE EXISTS DUMP BACKSLASH
first(star_types) = LPAREN LID LBRACE BACKSLASH
first(opt_vars) = TIMES LID ARROW
first(opt_env_vars) = FORALL
first(opt_env_ids) = LPAREN
first(opt_constraint) = LBRACKET
first(let_envs) = LPAREN LBRACKET FORALL AND
first(let_env) = LPAREN LBRACKET FORALL
first(env_ids) = LID
first(env_id) = LID
first(constraint_exp1) = TRUE LPAREN LID LBRACE FALSE DUMP BACKSLASH
first(constraint_exp0) = TRUE LPAREN LID LBRACE FALSE DUMP BACKSLASH
first(constraint_exp) = TRUE LPAREN LID LET LBRACE FALSE EXISTS DUMP BACKSLASH
first(conjunction) = TRUE LPAREN LID LBRACE FALSE DUMP BACKSLASH
first(attributes) = LPAREN LID LBRACE BACKSLASH
first(attribute) = LID
minimal(vars) = (* 1 *) LID
minimal(var) = (* 1 *) LID
minimal(types) = (* 1 *) LID
minimal(type2) = (* 1 *) LID
minimal(type10) = (* 1 *) LID
minimal(type1) = (* 1 *) LID
minimal(type00s) = (* 1 *) LID
minimal(type00) = (* 1 *) LID
minimal(type0) = (* 1 *) LID
minimal(typ) = (* 1 *) LID
minimal(tconstraint) = (* 2 *) TRUE EOF
minimal(star_types) = (* 1 *) LID
minimal(opt_vars) = (* 0 *)
minimal(opt_env_vars) = (* 0 *)
minimal(opt_env_ids) = (* 0 *)
minimal(opt_constraint) = (* 0 *)
minimal(let_envs) = (* 0 *)
minimal(let_env) = (* 0 *)
minimal(env_ids) = (* 3 *) LID COLON LID
minimal(env_id) = (* 3 *) LID COLON LID
minimal(constraint_exp1) = (* 1 *) TRUE
minimal(constraint_exp0) = (* 1 *) TRUE
minimal(constraint_exp) = (* 1 *) TRUE
minimal(conjunction) = (* 3 *) TRUE AND TRUE
minimal(attributes) = (* 1 *) LID
minimal(attribute) = (* 3 *) LID COLON LID
maximal(vars) = infinity
maximal(var) = 1
maximal(types) = infinity
maximal(type2) = infinity
maximal(type10) = infinity
maximal(type1) = infinity
maximal(type00s) = infinity
maximal(type00) = infinity
maximal(type0) = infinity
maximal(typ) = infinity
maximal(tconstraint) = infinity
maximal(star_types) = infinity
maximal(opt_vars) = infinity
maximal(opt_env_vars) = infinity
maximal(opt_env_ids) = infinity
maximal(opt_constraint) = infinity
maximal(let_envs) = infinity
maximal(let_env) = infinity
maximal(env_ids) = infinity
maximal(env_id) = infinity
maximal(constraint_exp1) = infinity
maximal(constraint_exp0) = infinity
maximal(constraint_exp) = infinity
maximal(conjunction) = infinity
maximal(attributes) = infinity
maximal(attribute) = infinity
follow(vars) = RBRACE LPAREN LBRACKET IN DOT AND
follow(var) = TIMES RBRACE LPAREN LID LBRACKET IN DOT ARROW AND
follow(types) = RPAREN
follow(type2) = SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND
follow(type10) = SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
follow(type1) = TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
follow(type00s) = TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
follow(type00) = TIMES SEMI RPAREN RBRACKET RBRACE LPAREN LID LBRACE EQ EOF COMMA ARROW AND
follow(type0) = TIMES SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
follow(typ) = SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA AND
follow(tconstraint) = #
follow(star_types) = SEMI RPAREN RBRACKET RBRACE EQ EOF COMMA ARROW AND
follow(opt_vars) = LPAREN LBRACKET IN AND
follow(opt_env_vars) = LPAREN LBRACKET IN AND
follow(opt_env_ids) = IN AND
follow(opt_constraint) = LPAREN IN AND
follow(let_envs) = IN
follow(let_env) = IN AND
follow(env_ids) = RPAREN
follow(env_id) = SEMI RPAREN
follow(constraint_exp1) = RPAREN RBRACKET EOF
follow(constraint_exp0) = RPAREN RBRACKET EOF AND
follow(constraint_exp) = RPAREN RBRACKET EOF
follow(conjunction) = RPAREN RBRACKET EOF
follow(attributes) = RBRACE
follow(attribute) = SEMI
Built an LR(0) automaton with 95 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 95 states.
File "coercion-constraint.mly", line 129, characters 0-9:
Warning: the precedence level assigned to AND is never useful.
File "coercion-constraint.mly", line 131, characters 0-5:
Warning: the precedence level assigned to APP is never useful.
File "coercion-constraint.mly", line 128, characters 0-9:
Warning: the precedence level assigned to EOF is never useful.
File "coercion-constraint.mly", line 132, characters 0-9:
Warning: the precedence level assigned to ID is never useful.
File "coercion-constraint.mly", line 130, characters 0-6:
Warning: the precedence level assigned to LEFT is never useful.
42 out of 95 states have a default reduction.
28 out of 95 states are represented.
0 out of 55 symbols keep track of their start position.
0 out of 55 symbols keep track of their end position.
27 out of 55 productions exploit shiftreduce optimization.
0 out of 95 states can peek at an error.
276 functions before inlining, 46 functions after inlining.
