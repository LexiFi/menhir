Note: the nonterminal symbol ioption (from compcert_pre_parser_canonical.mly) is renamed compcert_pre_parser_canonical_ioption.
Note: the nonterminal symbol list (from compcert_pre_parser_canonical.mly) is renamed compcert_pre_parser_canonical_list.
Note: the nonterminal symbol option (from compcert_pre_parser_canonical.mly) is renamed compcert_pre_parser_canonical_option.
File "<standard.mly>", line 112, characters 8-14:
Warning: symbol option(abstract_declarator(type_name)) is unreachable from any of the start symbol(s).
Grammar has 138 nonterminal symbols, among which 1 start symbols.
Grammar has 96 terminal symbols.
Grammar has 353 productions.
nullable(unary_operator) = false
nullable(unary_expression) = false
nullable(typedef_name) = false
nullable(typedef_declarator_list) = false
nullable(typedef_declarator) = false
nullable(type_specifier_no_typedef_name) = false
nullable(type_qualifier_noattr) = false
nullable(type_qualifier_list) = false
nullable(type_name) = false
nullable(translation_unit_file) = false
nullable(translation_item) = false
nullable(struct_or_union_specifier) = false
nullable(struct_or_union) = false
nullable(struct_declarator_list) = false
nullable(struct_declarator) = false
nullable(struct_declaration_list) = true
nullable(struct_declaration) = false
nullable(string_literals_list) = false
nullable(storage_class_specifier_no_typedef) = false
nullable(statement) = false
nullable(specifier_qualifier_no_typedef_name) = false
nullable(specifier_qualifier_list(type_name)) = false
nullable(specifier_qualifier_list(struct_declaration)) = false
nullable(shift_operator) = false
nullable(shift_expression) = false
nullable(selection_statement) = false
nullable(save_context) = true
nullable(rlist(declaration_specifier_no_type)) = false
nullable(relational_operator) = false
nullable(relational_expression) = false
nullable(primary_expression) = false
nullable(postfix_expression) = false
nullable(parameter_type_list) = false
nullable(parameter_list) = false
nullable(parameter_declaration) = false
nullable(optional(expression,SEMICOLON)) = false
nullable(optional(expression,RPAREN)) = false
nullable(optional(assignment_expression,RBRACK)) = false
nullable(multiplicative_operator) = false
nullable(multiplicative_expression) = false
nullable(low_prec) = true
nullable(logical_or_expression) = false
nullable(logical_and_expression) = false
nullable(labeled_statement) = false
nullable(kr_param_declaration) = false
nullable(jump_statement) = false
nullable(iteration_statement) = false
nullable(initializer_list) = false
nullable(init_declarator_list) = false
nullable(init_declarator) = false
nullable(inclusive_or_expression) = false
nullable(ifelse_statement1) = false
nullable(identifier_list) = false
nullable(general_identifier) = false
nullable(gcc_attribute_word) = false
nullable(gcc_attribute_list) = true
nullable(gcc_attribute) = true
nullable(function_specifier) = false
nullable(function_definition1) = false
nullable(function_definition) = false
nullable(for_statement_header) = false
nullable(expression_statement) = false
nullable(expression) = false
nullable(exclusive_or_expression) = false
nullable(equality_operator) = false
nullable(equality_expression) = false
nullable(enumerator_list) = false
nullable(enumerator) = false
nullable(enumeration_constant) = false
nullable(enum_specifier) = false
nullable(do_statement1) = false
nullable(direct_declarator) = false
nullable(direct_abstract_declarator) = false
nullable(designator_list) = false
nullable(designator) = false
nullable(designation) = false
nullable(declare_varname(enumerator)) = false
nullable(declare_varname(declarator_noattrend)) = false
nullable(declare_varname(declarator)) = false
nullable(declare_typename(declarator)) = false
nullable(declarator_noattrend) = false
nullable(declarator_identifier) = false
nullable(declarator) = false
nullable(declaration_specifiers_typedef) = false
nullable(declaration_specifiers(parameter_declaration)) = false
nullable(declaration_specifiers(declaration(external_declaration))) = false
nullable(declaration_specifiers(declaration(block_item))) = false
nullable(declaration_specifier_no_typedef_name) = false
nullable(declaration_list) = false
nullable(declaration(external_declaration)) = false
nullable(declaration(block_item)) = false
nullable(context_parameter_type_list) = false
nullable(conditional_expression) = false
nullable(compound_statement) = false
nullable(compcert_pre_parser_canonical_option(typedef_declarator_list)) = true
nullable(compcert_pre_parser_canonical_option(type_qualifier_list)) = true
nullable(compcert_pre_parser_canonical_option(struct_declarator_list)) = true
nullable(compcert_pre_parser_canonical_option(other_identifier)) = true
nullable(compcert_pre_parser_canonical_option(init_declarator_list)) = true
nullable(compcert_pre_parser_canonical_option(identifier_list)) = true
nullable(compcert_pre_parser_canonical_option(expression)) = true
nullable(compcert_pre_parser_canonical_option(direct_abstract_declarator)) = true
nullable(compcert_pre_parser_canonical_option(designator_list)) = true
nullable(compcert_pre_parser_canonical_option(designation)) = true
nullable(compcert_pre_parser_canonical_option(declarator)) = true
nullable(compcert_pre_parser_canonical_option(context_parameter_type_list)) = true
nullable(compcert_pre_parser_canonical_option(block_item_list)) = true
nullable(compcert_pre_parser_canonical_option(argument_expression_list)) = true
nullable(compcert_pre_parser_canonical_option(abstract_declarator(type_name))) = true
nullable(compcert_pre_parser_canonical_option(abstract_declarator(parameter_declaration))) = true
nullable(compcert_pre_parser_canonical_option(COMMA)) = true
nullable(compcert_pre_parser_canonical_list(translation_item)) = true
nullable(compcert_pre_parser_canonical_list(specifier_qualifier_no_typedef_name)) = true
nullable(compcert_pre_parser_canonical_list(pointer1)) = true
nullable(compcert_pre_parser_canonical_list(declaration_specifier_no_typedef_name)) = true
nullable(compcert_pre_parser_canonical_list(declaration_specifier_no_type)) = true
nullable(cast_expression) = false
nullable(c_initializer) = false
nullable(block_item_list) = false
nullable(block_item) = false
nullable(attribute_specifier_list) = true
nullable(attribute_specifier) = false
nullable(assignment_operator) = false
nullable(assignment_expression) = false
nullable(asm_statement) = false
nullable(asm_operands_ne) = false
nullable(asm_operands) = true
nullable(asm_operand) = false
nullable(asm_op_name) = true
nullable(asm_flags) = false
nullable(asm_attributes) = true
nullable(asm_arguments) = true
nullable(argument_expression_list) = false
nullable(and_expression) = false
nullable(additive_operator) = false
nullable(additive_expression) = false
nullable(abstract_declarator(type_name)) = false
nullable(abstract_declarator(parameter_declaration)) = false
first(unary_operator) = TILDE STAR PLUS MINUS BANG AND
first(unary_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(typedef_name) = PRE_NAME
first(typedef_declarator_list) = STAR PRE_NAME LPAREN
first(typedef_declarator) = STAR PRE_NAME LPAREN
first(type_specifier_no_typedef_name) = VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT LONG INT FLOAT ENUM DOUBLE CHAR
first(type_qualifier_noattr) = VOLATILE RESTRICT CONST
first(type_qualifier_list) = VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS
first(type_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(translation_unit_file) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(translation_item) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(struct_or_union_specifier) = UNION STRUCT
first(struct_or_union) = UNION STRUCT
first(struct_declarator_list) = STAR PRE_NAME LPAREN COLON
first(struct_declarator) = STAR PRE_NAME LPAREN COLON
first(struct_declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(struct_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(string_literals_list) = STRING_LITERAL
first(storage_class_specifier_no_typedef) = STATIC REGISTER EXTERN AUTO
first(statement) = WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG ASM AND ALIGNOF
first(specifier_qualifier_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(specifier_qualifier_list(type_name)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(specifier_qualifier_list(struct_declaration)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(shift_operator) = RIGHT LEFT
first(shift_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(selection_statement) = SWITCH IF
first(save_context) = 
first(rlist(declaration_specifier_no_type)) = VOLATILE STATIC RESTRICT REGISTER PACKED NORETURN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS
first(relational_operator) = LT LEQ GT GEQ
first(relational_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(primary_expression) = STRING_LITERAL PRE_NAME LPAREN CONSTANT
first(postfix_expression) = STRING_LITERAL PRE_NAME LPAREN CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF
first(parameter_type_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(parameter_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(parameter_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(optional(expression,SEMICOLON)) = TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(optional(expression,RPAREN)) = TILDE STRING_LITERAL STAR SIZEOF RPAREN PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(optional(assignment_expression,RBRACK)) = TILDE STRING_LITERAL STAR SIZEOF RBRACK PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(multiplicative_operator) = STAR SLASH PERCENT
first(multiplicative_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(low_prec) = 
first(logical_or_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(logical_and_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(labeled_statement) = PRE_NAME DEFAULT CASE
first(kr_param_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(jump_statement) = RETURN GOTO CONTINUE BREAK
first(iteration_statement) = WHILE FOR DO
first(initializer_list) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACK LBRACE INC DOT DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(init_declarator_list) = STAR PRE_NAME LPAREN
first(init_declarator) = STAR PRE_NAME LPAREN
first(inclusive_or_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(ifelse_statement1) = IF
first(identifier_list) = PRE_NAME
first(general_identifier) = PRE_NAME
first(gcc_attribute_word) = PRE_NAME PACKED CONST
first(gcc_attribute_list) = PRE_NAME PACKED CONST COMMA
first(gcc_attribute) = PRE_NAME PACKED CONST
first(function_specifier) = NORETURN INLINE
first(function_definition1) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(function_definition) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(for_statement_header) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PLUS PACKED NORETURN MINUS LPAREN LONG INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST CHAR BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS
first(expression_statement) = TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(exclusive_or_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(equality_operator) = NEQ EQEQ
first(equality_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(enumerator_list) = PRE_NAME
first(enumerator) = PRE_NAME
first(enumeration_constant) = PRE_NAME
first(enum_specifier) = ENUM
first(do_statement1) = DO
first(direct_declarator) = PRE_NAME LPAREN
first(direct_abstract_declarator) = LPAREN LBRACK
first(designator_list) = LBRACK DOT
first(designator) = LBRACK DOT
first(designation) = LBRACK DOT
first(declare_varname(enumerator)) = PRE_NAME
first(declare_varname(declarator_noattrend)) = STAR PRE_NAME LPAREN
first(declare_varname(declarator)) = STAR PRE_NAME LPAREN
first(declare_typename(declarator)) = STAR PRE_NAME LPAREN
first(declarator_noattrend) = STAR PRE_NAME LPAREN
first(declarator_identifier) = PRE_NAME
first(declarator) = STAR PRE_NAME LPAREN
first(declaration_specifiers_typedef) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers(parameter_declaration)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers(declaration(external_declaration))) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers(declaration(block_item))) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifier_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration(external_declaration)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration(block_item)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(context_parameter_type_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(conditional_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(compound_statement) = LBRACE
first(compcert_pre_parser_canonical_option(typedef_declarator_list)) = STAR PRE_NAME LPAREN
first(compcert_pre_parser_canonical_option(type_qualifier_list)) = VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS
first(compcert_pre_parser_canonical_option(struct_declarator_list)) = STAR PRE_NAME LPAREN COLON
first(compcert_pre_parser_canonical_option(other_identifier)) = PRE_NAME
first(compcert_pre_parser_canonical_option(init_declarator_list)) = STAR PRE_NAME LPAREN
first(compcert_pre_parser_canonical_option(identifier_list)) = PRE_NAME
first(compcert_pre_parser_canonical_option(expression)) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(compcert_pre_parser_canonical_option(direct_abstract_declarator)) = LPAREN LBRACK
first(compcert_pre_parser_canonical_option(designator_list)) = LBRACK DOT
first(compcert_pre_parser_canonical_option(designation)) = LBRACK DOT
first(compcert_pre_parser_canonical_option(declarator)) = STAR PRE_NAME LPAREN
first(compcert_pre_parser_canonical_option(context_parameter_type_list)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(compcert_pre_parser_canonical_option(block_item_list)) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(compcert_pre_parser_canonical_option(argument_expression_list)) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(compcert_pre_parser_canonical_option(abstract_declarator(type_name))) = STAR LPAREN LBRACK
first(compcert_pre_parser_canonical_option(abstract_declarator(parameter_declaration))) = STAR LPAREN LBRACK
first(compcert_pre_parser_canonical_option(COMMA)) = COMMA
first(compcert_pre_parser_canonical_list(translation_item)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(compcert_pre_parser_canonical_list(specifier_qualifier_no_typedef_name)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(compcert_pre_parser_canonical_list(pointer1)) = STAR
first(compcert_pre_parser_canonical_list(declaration_specifier_no_typedef_name)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED NORETURN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(compcert_pre_parser_canonical_list(declaration_specifier_no_type)) = VOLATILE STATIC RESTRICT REGISTER PACKED NORETURN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS
first(cast_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(c_initializer) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(block_item_list) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(block_item) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(attribute_specifier_list) = PACKED ATTRIBUTE ALIGNAS
first(attribute_specifier) = PACKED ATTRIBUTE ALIGNAS
first(assignment_operator) = XOR_ASSIGN SUB_ASSIGN RIGHT_ASSIGN OR_ASSIGN MUL_ASSIGN MOD_ASSIGN LEFT_ASSIGN EQ DIV_ASSIGN AND_ASSIGN ADD_ASSIGN
first(assignment_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(asm_statement) = ASM
first(asm_operands_ne) = STRING_LITERAL LBRACK
first(asm_operands) = STRING_LITERAL LBRACK
first(asm_operand) = STRING_LITERAL LBRACK
first(asm_op_name) = LBRACK
first(asm_flags) = STRING_LITERAL
first(asm_attributes) = VOLATILE CONST
first(asm_arguments) = COLON
first(argument_expression_list) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(and_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(additive_operator) = PLUS MINUS
first(additive_expression) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
first(abstract_declarator(type_name)) = STAR LPAREN LBRACK
first(abstract_declarator(parameter_declaration)) = STAR LPAREN LBRACK
minimal(unary_operator) = (* 1 *) AND
minimal(unary_expression) = (* 1 *) CONSTANT
minimal(typedef_name) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(typedef_declarator_list) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(typedef_declarator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(type_specifier_no_typedef_name) = (* 1 *) VOID
minimal(type_qualifier_noattr) = (* 1 *) CONST
minimal(type_qualifier_list) = (* 1 *) CONST
minimal(type_name) = (* 1 *) VOID
minimal(translation_unit_file) = (* 1 *) EOF
minimal(translation_item) = (* 1 *) PRAGMA
minimal(struct_or_union_specifier) = (* 3 *) STRUCT LBRACE RBRACE
minimal(struct_or_union) = (* 1 *) STRUCT
minimal(struct_declarator_list) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(struct_declarator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(struct_declaration_list) = (* 0 *)
minimal(struct_declaration) = (* 2 *) VOID SEMICOLON
minimal(string_literals_list) = (* 1 *) STRING_LITERAL
minimal(storage_class_specifier_no_typedef) = (* 1 *) EXTERN
minimal(statement) = (* 1 *) SEMICOLON
minimal(specifier_qualifier_no_typedef_name) = (* 1 *) VOID
minimal(specifier_qualifier_list(type_name)) = (* 1 *) VOID
minimal(specifier_qualifier_list(struct_declaration)) = (* 1 *) VOID
minimal(shift_operator) = (* 1 *) LEFT
minimal(shift_expression) = (* 1 *) CONSTANT
minimal(selection_statement) = (* 5 *) IF LPAREN CONSTANT RPAREN SEMICOLON
minimal(save_context) = (* 0 *)
minimal(rlist(declaration_specifier_no_type)) = (* 1 *) EXTERN
minimal(relational_operator) = (* 1 *) LT
minimal(relational_expression) = (* 1 *) CONSTANT
minimal(primary_expression) = (* 1 *) CONSTANT
minimal(postfix_expression) = (* 1 *) CONSTANT
minimal(parameter_type_list) = (* 1 *) VOID
minimal(parameter_list) = (* 1 *) VOID
minimal(parameter_declaration) = (* 1 *) VOID
minimal(optional(expression,SEMICOLON)) = (* 1 *) SEMICOLON
minimal(optional(expression,RPAREN)) = (* 1 *) RPAREN
minimal(optional(assignment_expression,RBRACK)) = (* 1 *) RBRACK
minimal(multiplicative_operator) = (* 1 *) STAR
minimal(multiplicative_expression) = (* 1 *) CONSTANT
minimal(low_prec) = (* 0 *)
minimal(logical_or_expression) = (* 1 *) CONSTANT
minimal(logical_and_expression) = (* 1 *) CONSTANT
minimal(labeled_statement) = (* 3 *) DEFAULT COLON SEMICOLON
minimal(kr_param_declaration) = (* 2 *) VOID SEMICOLON
minimal(jump_statement) = (* 2 *) CONTINUE SEMICOLON
minimal(iteration_statement) = (* 5 *) WHILE LPAREN CONSTANT RPAREN SEMICOLON
minimal(initializer_list) = (* 1 *) CONSTANT
minimal(init_declarator_list) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(init_declarator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(inclusive_or_expression) = (* 1 *) CONSTANT
minimal(ifelse_statement1) = (* 6 *) IF LPAREN CONSTANT RPAREN SEMICOLON ELSE
minimal(identifier_list) = (* 2 *) PRE_NAME VAR_NAME
minimal(general_identifier) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(gcc_attribute_word) = (* 1 *) CONST
minimal(gcc_attribute_list) = (* 0 *)
minimal(gcc_attribute) = (* 0 *)
minimal(function_specifier) = (* 1 *) INLINE
minimal(function_definition1) = (* 3 *) VOID PRE_NAME TYPEDEF_NAME
minimal(function_definition) = (* 5 *) VOID PRE_NAME TYPEDEF_NAME LBRACE RBRACE
minimal(for_statement_header) = (* 1 *) SEMICOLON
minimal(expression_statement) = (* 1 *) SEMICOLON
minimal(expression) = (* 1 *) CONSTANT
minimal(exclusive_or_expression) = (* 1 *) CONSTANT
minimal(equality_operator) = (* 1 *) EQEQ
minimal(equality_expression) = (* 1 *) CONSTANT
minimal(enumerator_list) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(enumerator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(enumeration_constant) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(enum_specifier) = (* 3 *) ENUM PRE_NAME TYPEDEF_NAME
minimal(do_statement1) = (* 2 *) DO SEMICOLON
minimal(direct_declarator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(direct_abstract_declarator) = (* 2 *) LBRACK RBRACK
minimal(designator_list) = (* 3 *) DOT PRE_NAME TYPEDEF_NAME
minimal(designator) = (* 3 *) DOT PRE_NAME TYPEDEF_NAME
minimal(designation) = (* 4 *) DOT PRE_NAME TYPEDEF_NAME EQ
minimal(declare_varname(enumerator)) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declare_varname(declarator_noattrend)) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declare_varname(declarator)) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declare_typename(declarator)) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declarator_noattrend) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declarator_identifier) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declarator) = (* 2 *) PRE_NAME TYPEDEF_NAME
minimal(declaration_specifiers_typedef) = (* 2 *) TYPEDEF VOID
minimal(declaration_specifiers(parameter_declaration)) = (* 1 *) VOID
minimal(declaration_specifiers(declaration(external_declaration))) = (* 1 *) VOID
minimal(declaration_specifiers(declaration(block_item))) = (* 1 *) VOID
minimal(declaration_specifier_no_typedef_name) = (* 1 *) EXTERN
minimal(declaration_list) = (* 2 *) VOID SEMICOLON
minimal(declaration(external_declaration)) = (* 2 *) VOID SEMICOLON
minimal(declaration(block_item)) = (* 2 *) VOID SEMICOLON
minimal(context_parameter_type_list) = (* 1 *) VOID
minimal(conditional_expression) = (* 1 *) CONSTANT
minimal(compound_statement) = (* 2 *) LBRACE RBRACE
minimal(compcert_pre_parser_canonical_option(typedef_declarator_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(type_qualifier_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(struct_declarator_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(other_identifier)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(init_declarator_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(identifier_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(expression)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(direct_abstract_declarator)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(designator_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(designation)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(declarator)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(context_parameter_type_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(block_item_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(argument_expression_list)) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(abstract_declarator(type_name))) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(abstract_declarator(parameter_declaration))) = (* 0 *)
minimal(compcert_pre_parser_canonical_option(COMMA)) = (* 0 *)
minimal(compcert_pre_parser_canonical_list(translation_item)) = (* 0 *)
minimal(compcert_pre_parser_canonical_list(specifier_qualifier_no_typedef_name)) = (* 0 *)
minimal(compcert_pre_parser_canonical_list(pointer1)) = (* 0 *)
minimal(compcert_pre_parser_canonical_list(declaration_specifier_no_typedef_name)) = (* 0 *)
minimal(compcert_pre_parser_canonical_list(declaration_specifier_no_type)) = (* 0 *)
minimal(cast_expression) = (* 1 *) CONSTANT
minimal(c_initializer) = (* 1 *) CONSTANT
minimal(block_item_list) = (* 1 *) SEMICOLON
minimal(block_item) = (* 1 *) SEMICOLON
minimal(attribute_specifier_list) = (* 0 *)
minimal(attribute_specifier) = (* 4 *) ALIGNAS LPAREN VOID RPAREN
minimal(assignment_operator) = (* 1 *) EQ
minimal(assignment_expression) = (* 1 *) CONSTANT
minimal(asm_statement) = (* 5 *) ASM LPAREN STRING_LITERAL RPAREN SEMICOLON
minimal(asm_operands_ne) = (* 4 *) STRING_LITERAL LPAREN CONSTANT RPAREN
minimal(asm_operands) = (* 0 *)
minimal(asm_operand) = (* 4 *) STRING_LITERAL LPAREN CONSTANT RPAREN
minimal(asm_op_name) = (* 0 *)
minimal(asm_flags) = (* 1 *) STRING_LITERAL
minimal(asm_attributes) = (* 0 *)
minimal(asm_arguments) = (* 0 *)
minimal(argument_expression_list) = (* 1 *) CONSTANT
minimal(and_expression) = (* 1 *) CONSTANT
minimal(additive_operator) = (* 1 *) PLUS
minimal(additive_expression) = (* 1 *) CONSTANT
minimal(abstract_declarator(type_name)) = (* 1 *) STAR
minimal(abstract_declarator(parameter_declaration)) = (* 1 *) STAR
follow(unary_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(unary_expression) = XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(typedef_name) = XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NORETURN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN
follow(typedef_declarator_list) = SEMICOLON COMMA
follow(typedef_declarator) = SEMICOLON COMMA
follow(type_specifier_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(type_qualifier_noattr) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED NORETURN MINUS LPAREN LONG LBRACK INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS
follow(type_qualifier_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TILDE STRUCT STRING_LITERAL STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INC FLOAT ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG ATTRIBUTE AND ALIGNOF ALIGNAS
follow(type_name) = RPAREN COMMA
follow(translation_unit_file) = #
follow(translation_item) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(struct_or_union_specifier) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(struct_or_union) = PRE_NAME PACKED LBRACE ATTRIBUTE ALIGNAS
follow(struct_declarator_list) = SEMICOLON COMMA
follow(struct_declarator) = SEMICOLON COMMA
follow(struct_declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
follow(struct_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
follow(string_literals_list) = XOR_ASSIGN SUB_ASSIGN STRING_LITERAL STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(storage_class_specifier_no_typedef) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(specifier_qualifier_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COMMA COLON CHAR ATTRIBUTE ALIGNAS
follow(specifier_qualifier_list(type_name)) = STAR RPAREN LPAREN LBRACK COMMA
follow(specifier_qualifier_list(struct_declaration)) = STAR SEMICOLON PRE_NAME LPAREN COLON
follow(shift_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(shift_expression) = SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(selection_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(save_context) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER PRE_NAME PLUS PACKED NORETURN MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST COMMA CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(rlist(declaration_specifier_no_type)) = VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR
follow(relational_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(relational_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(primary_expression) = XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(postfix_expression) = XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(parameter_type_list) = RPAREN
follow(parameter_list) = RPAREN COMMA
follow(parameter_declaration) = RPAREN COMMA
follow(optional(expression,SEMICOLON)) = TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(optional(expression,RPAREN)) = WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG ASM AND ALIGNOF
follow(optional(assignment_expression,RBRACK)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(multiplicative_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(multiplicative_expression) = STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(low_prec) = TYPEDEF_NAME
follow(logical_or_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR
follow(logical_and_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND
follow(labeled_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(kr_param_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(jump_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(iteration_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(initializer_list) = RBRACE COMMA
follow(init_declarator_list) = SEMICOLON COMMA
follow(init_declarator) = SEMICOLON COMMA
follow(inclusive_or_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND
follow(ifelse_statement1) = WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG ASM AND ALIGNOF
follow(identifier_list) = RPAREN COMMA
follow(general_identifier) = XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NORETURN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN
follow(gcc_attribute_word) = RPAREN LPAREN COMMA
follow(gcc_attribute_list) = RPAREN COMMA
follow(gcc_attribute) = RPAREN COMMA
follow(function_specifier) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(function_definition1) = LBRACE
follow(function_definition) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(for_statement_header) = TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(expression_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(expression) = SEMICOLON RPAREN RBRACK COMMA COLON
follow(exclusive_or_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND
follow(equality_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(equality_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(enumerator_list) = RBRACE COMMA
follow(enumerator) = RBRACE COMMA
follow(enumeration_constant) = RBRACE EQ COMMA
follow(enum_specifier) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(do_statement1) = WHILE
follow(direct_declarator) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(direct_abstract_declarator) = RPAREN LPAREN LBRACK COMMA
follow(designator_list) = RPAREN LBRACK EQ DOT
follow(designator) = RPAREN LBRACK EQ DOT
follow(designation) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(declare_varname(enumerator)) = RBRACE COMMA
follow(declare_varname(declarator_noattrend)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(declare_varname(declarator)) = RPAREN COMMA
follow(declare_typename(declarator)) = SEMICOLON COMMA
follow(declarator_noattrend) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(declarator_identifier) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(declarator) = SEMICOLON RPAREN COMMA COLON
follow(declaration_specifiers_typedef) = STAR SEMICOLON PRE_NAME LPAREN
follow(declaration_specifiers(parameter_declaration)) = STAR RPAREN PRE_NAME LPAREN LBRACK COMMA
follow(declaration_specifiers(declaration(external_declaration))) = STAR SEMICOLON PRE_NAME LPAREN
follow(declaration_specifiers(declaration(block_item))) = STAR SEMICOLON PRE_NAME LPAREN
follow(declaration_specifier_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED NORETURN LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(declaration(external_declaration)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(declaration(block_item)) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(context_parameter_type_list) = RPAREN
follow(conditional_expression) = SEMICOLON RPAREN RBRACK RBRACE COMMA COLON
follow(compound_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(compcert_pre_parser_canonical_option(typedef_declarator_list)) = SEMICOLON
follow(compcert_pre_parser_canonical_option(type_qualifier_list)) = VOLATILE TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LBRACK INC DEC CONSTANT CONST COMMA COLON BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG ATTRIBUTE AND ALIGNOF ALIGNAS
follow(compcert_pre_parser_canonical_option(struct_declarator_list)) = SEMICOLON
follow(compcert_pre_parser_canonical_option(other_identifier)) = LBRACE
follow(compcert_pre_parser_canonical_option(init_declarator_list)) = SEMICOLON
follow(compcert_pre_parser_canonical_option(identifier_list)) = RPAREN
follow(compcert_pre_parser_canonical_option(expression)) = SEMICOLON
follow(compcert_pre_parser_canonical_option(direct_abstract_declarator)) = LBRACK
follow(compcert_pre_parser_canonical_option(designator_list)) = LBRACK DOT
follow(compcert_pre_parser_canonical_option(designation)) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(compcert_pre_parser_canonical_option(declarator)) = COLON
follow(compcert_pre_parser_canonical_option(context_parameter_type_list)) = RPAREN
follow(compcert_pre_parser_canonical_option(block_item_list)) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(compcert_pre_parser_canonical_option(argument_expression_list)) = RPAREN
follow(compcert_pre_parser_canonical_option(abstract_declarator(type_name))) = RPAREN COMMA
follow(compcert_pre_parser_canonical_option(abstract_declarator(parameter_declaration))) = RPAREN COMMA
follow(compcert_pre_parser_canonical_option(COMMA)) = RBRACE
follow(compcert_pre_parser_canonical_list(translation_item)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED NORETURN LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(compcert_pre_parser_canonical_list(specifier_qualifier_no_typedef_name)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COMMA COLON CHAR ATTRIBUTE ALIGNAS
follow(compcert_pre_parser_canonical_list(pointer1)) = STAR
follow(compcert_pre_parser_canonical_list(declaration_specifier_no_typedef_name)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(compcert_pre_parser_canonical_list(declaration_specifier_no_type)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED NORETURN LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(cast_expression) = XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(c_initializer) = SEMICOLON RBRACE COMMA
follow(block_item_list) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(block_item) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(attribute_specifier_list) = SEMICOLON RPAREN PRE_NAME LBRACE EQ COMMA COLON
follow(attribute_specifier) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED NORETURN MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS
follow(assignment_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(assignment_expression) = SEMICOLON RPAREN RBRACK RBRACE COMMA COLON
follow(asm_statement) = WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED NORETURN MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BUILTIN_OFFSETOF BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(asm_operands_ne) = RPAREN COMMA COLON
follow(asm_operands) = RPAREN COLON
follow(asm_operand) = RPAREN COMMA COLON
follow(asm_op_name) = STRING_LITERAL
follow(asm_flags) = RPAREN COMMA
follow(asm_attributes) = LPAREN
follow(asm_arguments) = RPAREN
follow(argument_expression_list) = RPAREN COMMA
follow(and_expression) = SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND
follow(additive_operator) = TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BUILTIN_OFFSETOF BANG AND ALIGNOF
follow(additive_expression) = SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(abstract_declarator(type_name)) = RPAREN COMMA
follow(abstract_declarator(parameter_declaration)) = RPAREN COMMA
Built an LR(0) automaton with 602 states.
The grammar is not SLR(1) -- 32 states have a conflict.
The construction mode is canonical.
Built an LR(1) automaton with 3031 states.
3 shift/reduce conflicts were silently solved.
Extra reductions on error were added in 695 states.
Priority played a role in 0 of these states.
1245 out of 3031 states have a default reduction.
1077 out of 3031 states are represented.
0 out of 237 symbols keep track of their start position.
0 out of 237 symbols keep track of their end position.
172 out of 354 productions exploit shiftreduce optimization.
0 out of 3031 states can peek at an error.
6559 functions before inlining, 938 functions after inlining.
