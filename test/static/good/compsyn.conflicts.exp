
** Conflict (shift/reduce) in state 753.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON GATETYPE 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  gate_declaration 
                                                  (?)

** In state 753, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

GATETYPE drive_strength_opt delay_opt gate_instance comma_gate_instance_optlist SEMICOLON 
         drive_strength 
         . LPAREN STRENGTH0 COMMA STRENGTH1 RPAREN 

** In state 753, looking ahead at LPAREN, reducing production
** drive_strength_opt -> 
** is permitted because of the following sub-derivation:

GATETYPE drive_strength_opt delay_opt gate_instance comma_gate_instance_optlist SEMICOLON // lookahead token appears because delay_opt can vanish and gate_instance can begin with LPAREN
         . 

** Conflict (shift/reduce) in state 644.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_SPECIFY specify_item 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  specify_block 
                                                  KEY_SPECIFY specify_item_optlist KEY_ENDSPECIFY 
                                                              specify_item specify_item_optlist 
                                                                           specify_item specify_item_optlist 
                                                                           (?)

** In state 644, looking ahead at LPAREN, reducing production
** KEY_IF_LPAREN_expression_RPAREN_opt -> 
** is permitted because of the following sub-derivation:

edge_sensitive_path_declaration 
KEY_IF_LPAREN_expression_RPAREN_opt LPAREN edge_identifier_opt specify_terminal_descriptor PATHTO LPAREN specify_terminal_descriptor polarity_operator QUESTION_MARK_COLON data_source_expression RPAREN RPAREN SINGLEASSIGN path_delay_value SEMICOLON // lookahead token appears
. 

** In state 644, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

path_declaration 
path_description SINGLEASSIGN path_delay_value SEMICOLON 
. LPAREN specify_terminal_descriptor PATHTO specify_terminal_descriptor RPAREN 

** Conflict (shift/reduce) in state 520.
** Tokens involved: SUB ADD
** The following explanations concentrate on token SUB.
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_SPECIFY KEY_IF LPAREN conditional_port_expression RPAREN LPAREN specify_terminal_descriptor 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  specify_block 
                                                  KEY_SPECIFY specify_item_optlist KEY_ENDSPECIFY 
                                                              specify_item specify_item_optlist 
                                                              level_sensitive_path_declaration 
                                                              (?)

** In state 520, looking ahead at SUB, reducing production
** comma_specify_terminal_descriptor_optlist -> 
** is permitted because of the following sub-derivation:

KEY_IF LPAREN conditional_port_expression RPAREN LPAREN list_of_path_input_outputs polarity_operator_opt PATHTOSTAR list_of_path_input_outputs RPAREN SINGLEASSIGN path_delay_value SEMICOLON // lookahead token appears because polarity_operator_opt can begin with SUB
                                                        specify_terminal_descriptor comma_specify_terminal_descriptor_optlist // lookahead token is inherited
                                                                                    . 

** In state 520, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

KEY_IF LPAREN conditional_port_expression RPAREN LPAREN specify_terminal_descriptor polarity_operator_opt PATHTO specify_terminal_descriptor RPAREN SINGLEASSIGN path_delay_value SEMICOLON 
                                                                                    polarity_operator 
                                                                                    . SUB 

** Conflict (shift/reduce) in state 494.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_SPECIFY KEY_IF LPAREN expression RPAREN 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  specify_block 
                                                  KEY_SPECIFY specify_item_optlist KEY_ENDSPECIFY 
                                                              specify_item specify_item_optlist 
                                                              (?)

** In state 494, looking ahead at LPAREN, reducing production
** KEY_IF_LPAREN_expression_RPAREN_opt -> KEY_IF LPAREN expression RPAREN 
** is permitted because of the following sub-derivation:

edge_sensitive_path_declaration 
KEY_IF_LPAREN_expression_RPAREN_opt LPAREN edge_identifier_opt specify_terminal_descriptor PATHTO LPAREN specify_terminal_descriptor polarity_operator QUESTION_MARK_COLON data_source_expression RPAREN RPAREN SINGLEASSIGN path_delay_value SEMICOLON // lookahead token appears
KEY_IF LPAREN expression RPAREN . 

** In state 494, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

sdpd 
KEY_IF LPAREN expression RPAREN path_description SINGLEASSIGN path_delay_value SEMICOLON 
                                . LPAREN specify_terminal_descriptor PATHTO specify_terminal_descriptor RPAREN 

** Conflict (shift/reduce) in state 493.
** Token involved: RPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_SPECIFY KEY_IF LPAREN expression 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  specify_block 
                                                  KEY_SPECIFY specify_item_optlist KEY_ENDSPECIFY 
                                                              specify_item specify_item_optlist 
                                                              (?)

** In state 493, looking ahead at RPAREN, shifting is permitted
** because of the following sub-derivation:

edge_sensitive_path_declaration 
KEY_IF_LPAREN_expression_RPAREN_opt LPAREN edge_identifier_opt specify_terminal_descriptor PATHTO LPAREN specify_terminal_descriptor polarity_operator QUESTION_MARK_COLON data_source_expression RPAREN RPAREN SINGLEASSIGN path_delay_value SEMICOLON 
KEY_IF LPAREN expression . RPAREN 

** In state 493, looking ahead at RPAREN, reducing production
** conditional_port_expression -> expression 
** is permitted because of the following sub-derivation:

level_sensitive_path_declaration 
KEY_IF LPAREN conditional_port_expression RPAREN LPAREN specify_terminal_descriptor polarity_operator_opt PATHTO specify_terminal_descriptor RPAREN SINGLEASSIGN path_delay_value SEMICOLON // lookahead token appears
              expression . 

** Conflict (shift/reduce) in state 465.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_SPECIFY 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  specify_block 
                                                  KEY_SPECIFY specify_item_optlist KEY_ENDSPECIFY 
                                                              specify_item specify_item_optlist 
                                                              (?)

** In state 465, looking ahead at LPAREN, reducing production
** KEY_IF_LPAREN_expression_RPAREN_opt -> 
** is permitted because of the following sub-derivation:

edge_sensitive_path_declaration 
KEY_IF_LPAREN_expression_RPAREN_opt LPAREN edge_identifier_opt specify_terminal_descriptor PATHTO LPAREN specify_terminal_descriptor polarity_operator QUESTION_MARK_COLON data_source_expression RPAREN RPAREN SINGLEASSIGN path_delay_value SEMICOLON // lookahead token appears
. 

** In state 465, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

path_declaration 
path_description SINGLEASSIGN path_delay_value SEMICOLON 
. LPAREN specify_terminal_descriptor PATHTO specify_terminal_descriptor RPAREN 

** Conflict (shift/reduce) in state 447.
** Token involved: KEY_ELSE
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_INITIAL KEY_IF LPAREN expression RPAREN KEY_IF LPAREN expression RPAREN statement_or_null 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  initial_statement 
                                                  KEY_INITIAL statement 
                                                              (?)

** In state 447, looking ahead at KEY_ELSE, reducing production
** statement -> KEY_IF LPAREN expression RPAREN statement_or_null 
** is permitted because of the following sub-derivation:

KEY_IF LPAREN expression RPAREN statement_or_null KEY_ELSE statement_or_null // lookahead token appears
                                statement // lookahead token is inherited
                                KEY_IF LPAREN expression RPAREN statement_or_null . 

** In state 447, looking ahead at KEY_ELSE, shifting is permitted
** because of the following sub-derivation:

KEY_IF LPAREN expression RPAREN statement_or_null 
                                statement 
                                KEY_IF LPAREN expression RPAREN statement_or_null . KEY_ELSE statement_or_null 

** Conflict (reduce/reduce) in state 383.
** Token involved: RPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_INITIAL AT LPAREN event_expression 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  initial_statement 
                                                  KEY_INITIAL statement 
                                                              event_control statement_or_null 
                                                              AT LPAREN event_expression_list RPAREN // lookahead token appears
                                                                        (?)

** In state 383, looking ahead at RPAREN, reducing production
** comma_event_expression_optlist -> 
** is permitted because of the following sub-derivation:

event_expression comma_event_expression_optlist // lookahead token is inherited
                 . 

** In state 383, looking ahead at RPAREN, reducing production
** or_event_expression_optlist -> 
** is permitted because of the following sub-derivation:

event_expression or_event_expression_optlist // lookahead token is inherited
                 . 

** Conflict (shift/reduce) in state 355.
** Tokens involved: SUB BIT_XOR BIT_OR BIT_EQU BIT_AND ADD
** The following explanations concentrate on token SUB.
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_INITIAL lvalue SINGLEASSIGN JING expression 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  initial_statement 
                                                  KEY_INITIAL statement 
                                                              blocking_assignment SEMICOLON 
                                                              (?)

** In state 355, looking ahead at SUB, reducing production
** delay_control -> JING expression 
** is permitted because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression // lookahead token appears because expression can begin with SUB
                    JING expression . 

** In state 355, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression 
                    JING expression 
                         expression . SUB expression 

** Conflict (shift/reduce) in state 130.
** Tokens involved: SUB RIGHT_SHIFT QUESTION_MARK MUL MOD LT LOGIC_OR LOGIC_INE LOGIC_EQU LOGIC_AND LEFT_SHIFT LE GT GE DIV CASE_INE CASE_EQU BIT_XOR BIT_OR BIT_EQU BIT_AND ADD
** The following explanations concentrate on token SUB.
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON NETTYPE LBRACKET expression QUESTION_MARK expression COLON expression 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  net_declaration 
                                                  NETTYPE expandrange_opt delay_opt list_of_variables SEMICOLON 
                                                          expandrange 
                                                          range 
                                                          LBRACKET constant_expression COLON constant_expression RBRACKET 
                                                                   expression 
                                                                   (?)

** In state 130, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

expression QUESTION_MARK expression COLON expression 
                                          expression . SUB expression 

** In state 130, looking ahead at SUB, reducing production
** expression -> expression QUESTION_MARK expression COLON expression 
** is permitted because of the following sub-derivation:

expression SUB expression // lookahead token appears
expression QUESTION_MARK expression COLON expression . 

** Conflict (shift/reduce) in state 68.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_INITIAL lvalue SINGLEASSIGN JING identifier 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  initial_statement 
                                                  KEY_INITIAL statement 
                                                              blocking_assignment SEMICOLON 
                                                              (?)

** In state 68, looking ahead at LPAREN, reducing production
** primary -> identifier 
** is permitted because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression // lookahead token appears because expression can begin with LPAREN
                    JING expression // lookahead token is inherited
                         primary // lookahead token is inherited
                         identifier . 

** In state 68, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression 
                    JING expression 
                         primary 
                         identifier . LPAREN expression comma_expression_optlist RPAREN 

** Conflict (shift/reduce) in state 63.
** Token involved: LPAREN
** This state is reached from source_text after reading:

KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON KEY_INITIAL lvalue SINGLEASSIGN JING name_of_system_function 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

source_text 
description_list EOF 
description 
module_def 
KEY_MODULE IDENTIFIER list_of_ports_opt SEMICOLON module_item_optlist KEY_ENDMODULE 
                                                  module_item module_item_optlist 
                                                  initial_statement 
                                                  KEY_INITIAL statement 
                                                              blocking_assignment SEMICOLON 
                                                              (?)

** In state 63, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression 
                    JING expression 
                         primary 
                         name_of_system_function . LPAREN expression comma_expression_optlist RPAREN 

** In state 63, looking ahead at LPAREN, reducing production
** primary -> name_of_system_function 
** is permitted because of the following sub-derivation:

lvalue SINGLEASSIGN delay_control expression // lookahead token appears because expression can begin with LPAREN
                    JING expression // lookahead token is inherited
                         primary // lookahead token is inherited
                         name_of_system_function . 
