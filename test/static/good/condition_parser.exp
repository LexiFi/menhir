Grammar has 4 nonterminal symbols, among which 1 start symbols.
Grammar has 14 terminal symbols.
Grammar has 14 productions.
nullable(cte) = false
nullable(condition_start) = false
nullable(condition) = false
nullable(atom) = false
first(cte) = STRING INT IDENT DOLLAR_TYPE DOLLAR_KEY
first(condition_start) = STRING NOT LPAR INT IDENT EXISTS DOLLAR_TYPE DOLLAR_KEY
first(condition) = STRING NOT LPAR INT IDENT EXISTS DOLLAR_TYPE DOLLAR_KEY
first(atom) = STRING INT IDENT EXISTS DOLLAR_TYPE DOLLAR_KEY
minimal(cte) = (* 1 *) IDENT
minimal(condition_start) = (* 3 *) EXISTS IDENT EOF
minimal(condition) = (* 2 *) EXISTS IDENT
minimal(atom) = (* 2 *) EXISTS IDENT
follow(cte) = RPAR OR EOF COMP COLON AND
follow(condition_start) = #
follow(condition) = RPAR OR EOF AND
follow(atom) = RPAR OR EOF AND
Built an LR(0) automaton with 26 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 26 states.
6 shift/reduce conflicts were silently solved.
14 out of 26 states have a default reduction.
6 out of 26 states are represented.
0 out of 21 symbols keep track of their start position.
0 out of 21 symbols keep track of their end position.
11 out of 15 productions exploit shiftreduce optimization.
49 functions before inlining, 15 functions after inlining.
