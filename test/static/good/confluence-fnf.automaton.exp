State 0:
## Known stack suffix:
##
## LR(1) items:
netlist' -> . netlist [ # ]
## Transitions:
-- On Parenl shift to state 1
-- On scope shift to state 153
-- On netlist shift to state 154
## Reductions:

State 1:
## Known stack suffix:
## Parenl
## LR(1) items:
scope -> Parenl . Scope scope_name Parenl scope_items Parenr Parenr [ # ]
## Transitions:
-- On Scope shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## Parenl Scope
## LR(1) items:
scope -> Parenl Scope . scope_name Parenl scope_items Parenr Parenr [ # ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On scope_name shift to state 5
-- On name shift to state 42
## Reductions:

State 3:
## Known stack suffix:
## String
## LR(1) items:
string -> String . [ String Parenr Parenl Integer ]
## Transitions:
## Reductions:
-- On String Parenr Parenl Integer
--   reduce production string -> String

State 4:
## Known stack suffix:
## string
## LR(1) items:
name -> string . [ String Parenl Integer ]
## Transitions:
## Reductions:
-- On String Parenl Integer
--   reduce production name -> string

State 5:
## Known stack suffix:
## Parenl Scope scope_name
## LR(1) items:
scope -> Parenl Scope scope_name . Parenl scope_items Parenr Parenr [ # ]
## Transitions:
-- On Parenl shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## Parenl Scope scope_name Parenl
## LR(1) items:
scope -> Parenl Scope scope_name Parenl . scope_items Parenr Parenr [ # ]
## Transitions:
-- On scope_items shift to state 7
## Reductions:
-- On Parenr Parenl
--   reduce production scope_items ->

State 7:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items . Parenr Parenr [ # ]
scope_items -> scope_items . scope_item [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 8
-- On Parenl shift to state 10
-- On scope_item shift to state 39
-- On scope shift to state 40
-- On cell shift to state 41
## Reductions:

State 8:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items Parenr
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items Parenr . Parenr [ # ]
## Transitions:
-- On Parenr shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items Parenr Parenr
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr

State 10:
## Known stack suffix:
## Parenl
## LR(1) items:
cell -> Parenl . Input id name width Parenr [ Parenr Parenl ]
cell -> Parenl . Output id name width id Parenr [ Parenr Parenl ]
cell -> Parenl . Name id name width id Parenr [ Parenr Parenl ]
cell -> Parenl . Dangle id Parenr [ Parenr Parenl ]
cell -> Parenl . Const id string Parenr [ Parenr Parenl ]
cell -> Parenl . Buf id width id Parenr [ Parenr Parenl ]
cell -> Parenl . Not id width id Parenr [ Parenr Parenl ]
cell -> Parenl . And id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Xor id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Or id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Concat id width width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Select id width bit id Parenr [ Parenr Parenl ]
cell -> Parenl . Eq id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Lt id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Add id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Sub id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Mul id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Mux id width id id id Parenr [ Parenr Parenl ]
cell -> Parenl . Ff id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Ffc id width id id id Parenr [ Parenr Parenl ]
cell -> Parenl . Bbox id string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
scope -> Parenl . Scope scope_name Parenl scope_items Parenr Parenr [ Parenr Parenl ]
## Transitions:
-- On Xor shift to state 11
-- On Sub shift to state 20
-- On Select shift to state 26
-- On Scope shift to state 33
-- On Output shift to state 44
-- On Or shift to state 50
-- On Not shift to state 56
-- On Name shift to state 61
-- On Mux shift to state 67
-- On Mul shift to state 74
-- On Lt shift to state 80
-- On Input shift to state 86
-- On Ffc shift to state 91
-- On Ff shift to state 98
-- On Eq shift to state 104
-- On Dangle shift to state 110
-- On Const shift to state 113
-- On Concat shift to state 117
-- On Buf shift to state 124
-- On Bbox shift to state 129
-- On And shift to state 141
-- On Add shift to state 147
## Reductions:

State 11:
## Known stack suffix:
## Parenl Xor
## LR(1) items:
cell -> Parenl Xor . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 14
## Reductions:

State 12:
## Known stack suffix:
## Integer
## LR(1) items:
integer -> Integer . [ String Parenr Parenl Integer ]
## Transitions:
## Reductions:
-- On String Parenr Parenl Integer
--   reduce production integer -> Integer

State 13:
## Known stack suffix:
## integer
## LR(1) items:
id -> integer . [ String Parenr Integer ]
## Transitions:
## Reductions:
-- On String Parenr Integer
--   reduce production id -> integer

State 14:
## Known stack suffix:
## Parenl Xor id
## LR(1) items:
cell -> Parenl Xor id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 15
-- On integer shift to state 19
## Reductions:

State 15:
## Known stack suffix:
## Parenl Xor id width
## LR(1) items:
cell -> Parenl Xor id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## Parenl Xor id width id
## LR(1) items:
cell -> Parenl Xor id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## Parenl Xor id width id id
## LR(1) items:
cell -> Parenl Xor id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## Parenl Xor id width id id Parenr
## LR(1) items:
cell -> Parenl Xor id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Xor id width id id Parenr

State 19:
## Known stack suffix:
## integer
## LR(1) items:
width -> integer . [ Parenr Parenl Integer ]
## Transitions:
## Reductions:
-- On Parenr Parenl Integer
--   reduce production width -> integer

State 20:
## Known stack suffix:
## Parenl Sub
## LR(1) items:
cell -> Parenl Sub . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## Parenl Sub id
## LR(1) items:
cell -> Parenl Sub id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 22
-- On integer shift to state 19
## Reductions:

State 22:
## Known stack suffix:
## Parenl Sub id width
## LR(1) items:
cell -> Parenl Sub id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## Parenl Sub id width id
## LR(1) items:
cell -> Parenl Sub id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## Parenl Sub id width id id
## LR(1) items:
cell -> Parenl Sub id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## Parenl Sub id width id id Parenr
## LR(1) items:
cell -> Parenl Sub id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Sub id width id id Parenr

State 26:
## Known stack suffix:
## Parenl Select
## LR(1) items:
cell -> Parenl Select . id width bit id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## Parenl Select id
## LR(1) items:
cell -> Parenl Select id . width bit id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 28
-- On integer shift to state 19
## Reductions:

State 28:
## Known stack suffix:
## Parenl Select id width
## LR(1) items:
cell -> Parenl Select id width . bit id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 29
-- On bit shift to state 30
## Reductions:

State 29:
## Known stack suffix:
## integer
## LR(1) items:
bit -> integer . [ Integer ]
## Transitions:
## Reductions:
-- On Integer
--   reduce production bit -> integer

State 30:
## Known stack suffix:
## Parenl Select id width bit
## LR(1) items:
cell -> Parenl Select id width bit . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## Parenl Select id width bit id
## LR(1) items:
cell -> Parenl Select id width bit id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## Parenl Select id width bit id Parenr
## LR(1) items:
cell -> Parenl Select id width bit id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Select id width bit id Parenr

State 33:
## Known stack suffix:
## Parenl Scope
## LR(1) items:
scope -> Parenl Scope . scope_name Parenl scope_items Parenr Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On scope_name shift to state 34
-- On name shift to state 42
## Reductions:

State 34:
## Known stack suffix:
## Parenl Scope scope_name
## LR(1) items:
scope -> Parenl Scope scope_name . Parenl scope_items Parenr Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenl shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## Parenl Scope scope_name Parenl
## LR(1) items:
scope -> Parenl Scope scope_name Parenl . scope_items Parenr Parenr [ Parenr Parenl ]
## Transitions:
-- On scope_items shift to state 36
## Reductions:
-- On Parenr Parenl
--   reduce production scope_items ->

State 36:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items . Parenr Parenr [ Parenr Parenl ]
scope_items -> scope_items . scope_item [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 37
-- On Parenl shift to state 10
-- On scope_item shift to state 39
-- On scope shift to state 40
-- On cell shift to state 41
## Reductions:

State 37:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items Parenr
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items Parenr . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## Parenl Scope scope_name Parenl scope_items Parenr Parenr
## LR(1) items:
scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr

State 39:
## Known stack suffix:
## scope_items scope_item
## LR(1) items:
scope_items -> scope_items scope_item . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production scope_items -> scope_items scope_item

State 40:
## Known stack suffix:
## scope
## LR(1) items:
scope_item -> scope . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production scope_item -> scope

State 41:
## Known stack suffix:
## cell
## LR(1) items:
scope_item -> cell . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production scope_item -> cell

State 42:
## Known stack suffix:
## name
## LR(1) items:
scope_name -> name . name [ Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## name name
## LR(1) items:
scope_name -> name name . [ Parenl ]
## Transitions:
## Reductions:
-- On Parenl
--   reduce production scope_name -> name name

State 44:
## Known stack suffix:
## Parenl Output
## LR(1) items:
cell -> Parenl Output . id name width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## Parenl Output id
## LR(1) items:
cell -> Parenl Output id . name width id Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## Parenl Output id name
## LR(1) items:
cell -> Parenl Output id name . width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 47
-- On integer shift to state 19
## Reductions:

State 47:
## Known stack suffix:
## Parenl Output id name width
## LR(1) items:
cell -> Parenl Output id name width . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## Parenl Output id name width id
## LR(1) items:
cell -> Parenl Output id name width id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## Parenl Output id name width id Parenr
## LR(1) items:
cell -> Parenl Output id name width id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Output id name width id Parenr

State 50:
## Known stack suffix:
## Parenl Or
## LR(1) items:
cell -> Parenl Or . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## Parenl Or id
## LR(1) items:
cell -> Parenl Or id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 52
-- On integer shift to state 19
## Reductions:

State 52:
## Known stack suffix:
## Parenl Or id width
## LR(1) items:
cell -> Parenl Or id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## Parenl Or id width id
## LR(1) items:
cell -> Parenl Or id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## Parenl Or id width id id
## LR(1) items:
cell -> Parenl Or id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## Parenl Or id width id id Parenr
## LR(1) items:
cell -> Parenl Or id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Or id width id id Parenr

State 56:
## Known stack suffix:
## Parenl Not
## LR(1) items:
cell -> Parenl Not . id width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## Parenl Not id
## LR(1) items:
cell -> Parenl Not id . width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 58
-- On integer shift to state 19
## Reductions:

State 58:
## Known stack suffix:
## Parenl Not id width
## LR(1) items:
cell -> Parenl Not id width . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## Parenl Not id width id
## LR(1) items:
cell -> Parenl Not id width id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## Parenl Not id width id Parenr
## LR(1) items:
cell -> Parenl Not id width id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Not id width id Parenr

State 61:
## Known stack suffix:
## Parenl Name
## LR(1) items:
cell -> Parenl Name . id name width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## Parenl Name id
## LR(1) items:
cell -> Parenl Name id . name width id Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## Parenl Name id name
## LR(1) items:
cell -> Parenl Name id name . width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 64
-- On integer shift to state 19
## Reductions:

State 64:
## Known stack suffix:
## Parenl Name id name width
## LR(1) items:
cell -> Parenl Name id name width . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## Parenl Name id name width id
## LR(1) items:
cell -> Parenl Name id name width id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## Parenl Name id name width id Parenr
## LR(1) items:
cell -> Parenl Name id name width id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Name id name width id Parenr

State 67:
## Known stack suffix:
## Parenl Mux
## LR(1) items:
cell -> Parenl Mux . id width id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## Parenl Mux id
## LR(1) items:
cell -> Parenl Mux id . width id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 69
-- On integer shift to state 19
## Reductions:

State 69:
## Known stack suffix:
## Parenl Mux id width
## LR(1) items:
cell -> Parenl Mux id width . id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## Parenl Mux id width id
## LR(1) items:
cell -> Parenl Mux id width id . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## Parenl Mux id width id id
## LR(1) items:
cell -> Parenl Mux id width id id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## Parenl Mux id width id id id
## LR(1) items:
cell -> Parenl Mux id width id id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## Parenl Mux id width id id id Parenr
## LR(1) items:
cell -> Parenl Mux id width id id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Mux id width id id id Parenr

State 74:
## Known stack suffix:
## Parenl Mul
## LR(1) items:
cell -> Parenl Mul . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## Parenl Mul id
## LR(1) items:
cell -> Parenl Mul id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 76
-- On integer shift to state 19
## Reductions:

State 76:
## Known stack suffix:
## Parenl Mul id width
## LR(1) items:
cell -> Parenl Mul id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## Parenl Mul id width id
## LR(1) items:
cell -> Parenl Mul id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## Parenl Mul id width id id
## LR(1) items:
cell -> Parenl Mul id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## Parenl Mul id width id id Parenr
## LR(1) items:
cell -> Parenl Mul id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Mul id width id id Parenr

State 80:
## Known stack suffix:
## Parenl Lt
## LR(1) items:
cell -> Parenl Lt . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## Parenl Lt id
## LR(1) items:
cell -> Parenl Lt id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 82
-- On integer shift to state 19
## Reductions:

State 82:
## Known stack suffix:
## Parenl Lt id width
## LR(1) items:
cell -> Parenl Lt id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## Parenl Lt id width id
## LR(1) items:
cell -> Parenl Lt id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## Parenl Lt id width id id
## LR(1) items:
cell -> Parenl Lt id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## Parenl Lt id width id id Parenr
## LR(1) items:
cell -> Parenl Lt id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Lt id width id id Parenr

State 86:
## Known stack suffix:
## Parenl Input
## LR(1) items:
cell -> Parenl Input . id name width Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## Parenl Input id
## LR(1) items:
cell -> Parenl Input id . name width Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## Parenl Input id name
## LR(1) items:
cell -> Parenl Input id name . width Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 89
-- On integer shift to state 19
## Reductions:

State 89:
## Known stack suffix:
## Parenl Input id name width
## LR(1) items:
cell -> Parenl Input id name width . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## Parenl Input id name width Parenr
## LR(1) items:
cell -> Parenl Input id name width Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Input id name width Parenr

State 91:
## Known stack suffix:
## Parenl Ffc
## LR(1) items:
cell -> Parenl Ffc . id width id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## Parenl Ffc id
## LR(1) items:
cell -> Parenl Ffc id . width id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 93
-- On integer shift to state 19
## Reductions:

State 93:
## Known stack suffix:
## Parenl Ffc id width
## LR(1) items:
cell -> Parenl Ffc id width . id id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## Parenl Ffc id width id
## LR(1) items:
cell -> Parenl Ffc id width id . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## Parenl Ffc id width id id
## LR(1) items:
cell -> Parenl Ffc id width id id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## Parenl Ffc id width id id id
## LR(1) items:
cell -> Parenl Ffc id width id id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## Parenl Ffc id width id id id Parenr
## LR(1) items:
cell -> Parenl Ffc id width id id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Ffc id width id id id Parenr

State 98:
## Known stack suffix:
## Parenl Ff
## LR(1) items:
cell -> Parenl Ff . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## Parenl Ff id
## LR(1) items:
cell -> Parenl Ff id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 100
-- On integer shift to state 19
## Reductions:

State 100:
## Known stack suffix:
## Parenl Ff id width
## LR(1) items:
cell -> Parenl Ff id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## Parenl Ff id width id
## LR(1) items:
cell -> Parenl Ff id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## Parenl Ff id width id id
## LR(1) items:
cell -> Parenl Ff id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## Parenl Ff id width id id Parenr
## LR(1) items:
cell -> Parenl Ff id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Ff id width id id Parenr

State 104:
## Known stack suffix:
## Parenl Eq
## LR(1) items:
cell -> Parenl Eq . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## Parenl Eq id
## LR(1) items:
cell -> Parenl Eq id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 106
-- On integer shift to state 19
## Reductions:

State 106:
## Known stack suffix:
## Parenl Eq id width
## LR(1) items:
cell -> Parenl Eq id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## Parenl Eq id width id
## LR(1) items:
cell -> Parenl Eq id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## Parenl Eq id width id id
## LR(1) items:
cell -> Parenl Eq id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## Parenl Eq id width id id Parenr
## LR(1) items:
cell -> Parenl Eq id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Eq id width id id Parenr

State 110:
## Known stack suffix:
## Parenl Dangle
## LR(1) items:
cell -> Parenl Dangle . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## Parenl Dangle id
## LR(1) items:
cell -> Parenl Dangle id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## Parenl Dangle id Parenr
## LR(1) items:
cell -> Parenl Dangle id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Dangle id Parenr

State 113:
## Known stack suffix:
## Parenl Const
## LR(1) items:
cell -> Parenl Const . id string Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## Parenl Const id
## LR(1) items:
cell -> Parenl Const id . string Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## Parenl Const id string
## LR(1) items:
cell -> Parenl Const id string . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## Parenl Const id string Parenr
## LR(1) items:
cell -> Parenl Const id string Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Const id string Parenr

State 117:
## Known stack suffix:
## Parenl Concat
## LR(1) items:
cell -> Parenl Concat . id width width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 118
## Reductions:

State 118:
## Known stack suffix:
## Parenl Concat id
## LR(1) items:
cell -> Parenl Concat id . width width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 119
-- On integer shift to state 19
## Reductions:

State 119:
## Known stack suffix:
## Parenl Concat id width
## LR(1) items:
cell -> Parenl Concat id width . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 120
-- On integer shift to state 19
## Reductions:

State 120:
## Known stack suffix:
## Parenl Concat id width width
## LR(1) items:
cell -> Parenl Concat id width width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## Parenl Concat id width width id
## LR(1) items:
cell -> Parenl Concat id width width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## Parenl Concat id width width id id
## LR(1) items:
cell -> Parenl Concat id width width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## Parenl Concat id width width id id Parenr
## LR(1) items:
cell -> Parenl Concat id width width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Concat id width width id id Parenr

State 124:
## Known stack suffix:
## Parenl Buf
## LR(1) items:
cell -> Parenl Buf . id width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## Parenl Buf id
## LR(1) items:
cell -> Parenl Buf id . width id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 126
-- On integer shift to state 19
## Reductions:

State 126:
## Known stack suffix:
## Parenl Buf id width
## LR(1) items:
cell -> Parenl Buf id width . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## Parenl Buf id width id
## LR(1) items:
cell -> Parenl Buf id width id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## Parenl Buf id width id Parenr
## LR(1) items:
cell -> Parenl Buf id width id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Buf id width id Parenr

State 129:
## Known stack suffix:
## Parenl Bbox
## LR(1) items:
cell -> Parenl Bbox . id string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## Parenl Bbox id
## LR(1) items:
cell -> Parenl Bbox id . string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On String shift to state 3
-- On string shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## Parenl Bbox id string
## LR(1) items:
cell -> Parenl Bbox id string . width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 132
-- On integer shift to state 19
## Reductions:

State 132:
## Known stack suffix:
## Parenl Bbox id string width
## LR(1) items:
cell -> Parenl Bbox id string width . width Parenl integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 133
-- On integer shift to state 19
## Reductions:

State 133:
## Known stack suffix:
## Parenl Bbox id string width width
## LR(1) items:
cell -> Parenl Bbox id string width width . Parenl integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenl shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## Parenl Bbox id string width width Parenl
## LR(1) items:
cell -> Parenl Bbox id string width width Parenl . integers Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On integers_0 shift to state 135
-- On integers shift to state 137
## Reductions:
-- On Parenr Integer
--   reduce production integers_0 ->

State 135:
## Known stack suffix:
## integers_0
## LR(1) items:
integers -> integers_0 . [ Parenr ]
integers_0 -> integers_0 . integer [ Parenr Integer ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 136
## Reductions:
-- On Parenr
--   reduce production integers -> integers_0

State 136:
## Known stack suffix:
## integers_0 integer
## LR(1) items:
integers_0 -> integers_0 integer . [ Parenr Integer ]
## Transitions:
## Reductions:
-- On Parenr Integer
--   reduce production integers_0 -> integers_0 integer

State 137:
## Known stack suffix:
## Parenl Bbox id string width width Parenl integers
## LR(1) items:
cell -> Parenl Bbox id string width width Parenl integers . Parenr id Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## Parenl Bbox id string width width Parenl integers Parenr
## LR(1) items:
cell -> Parenl Bbox id string width width Parenl integers Parenr . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## Parenl Bbox id string width width Parenl integers Parenr id
## LR(1) items:
cell -> Parenl Bbox id string width width Parenl integers Parenr id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## Parenl Bbox id string width width Parenl integers Parenr id Parenr
## LR(1) items:
cell -> Parenl Bbox id string width width Parenl integers Parenr id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Bbox id string width width Parenl integers Parenr id Parenr

State 141:
## Known stack suffix:
## Parenl And
## LR(1) items:
cell -> Parenl And . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## Parenl And id
## LR(1) items:
cell -> Parenl And id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 143
-- On integer shift to state 19
## Reductions:

State 143:
## Known stack suffix:
## Parenl And id width
## LR(1) items:
cell -> Parenl And id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## Parenl And id width id
## LR(1) items:
cell -> Parenl And id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## Parenl And id width id id
## LR(1) items:
cell -> Parenl And id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## Parenl And id width id id Parenr
## LR(1) items:
cell -> Parenl And id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl And id width id id Parenr

State 147:
## Known stack suffix:
## Parenl Add
## LR(1) items:
cell -> Parenl Add . id width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## Parenl Add id
## LR(1) items:
cell -> Parenl Add id . width id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On width shift to state 149
-- On integer shift to state 19
## Reductions:

State 149:
## Known stack suffix:
## Parenl Add id width
## LR(1) items:
cell -> Parenl Add id width . id id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## Parenl Add id width id
## LR(1) items:
cell -> Parenl Add id width id . id Parenr [ Parenr Parenl ]
## Transitions:
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## Parenl Add id width id id
## LR(1) items:
cell -> Parenl Add id width id id . Parenr [ Parenr Parenl ]
## Transitions:
-- On Parenr shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## Parenl Add id width id id Parenr
## LR(1) items:
cell -> Parenl Add id width id id Parenr . [ Parenr Parenl ]
## Transitions:
## Reductions:
-- On Parenr Parenl
--   reduce production cell -> Parenl Add id width id id Parenr

State 153:
## Known stack suffix:
## scope
## LR(1) items:
netlist -> scope . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production netlist -> scope

State 154:
## Known stack suffix:
## netlist
## LR(1) items:
netlist' -> netlist . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept netlist

