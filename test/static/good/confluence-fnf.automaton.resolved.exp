State 0:
netlist' -> . netlist [ # ]
-- On Parenl shift to state 1
-- On scope shift to state 153
-- On netlist shift to state 154

State 1:
scope -> Parenl . Scope scope_name Parenl scope_items Parenr Parenr [ # ]
-- On Scope shift to state 2

State 2:
scope -> Parenl Scope . scope_name Parenl scope_items Parenr Parenr [ # ]
-- On String shift to state 3
-- On string shift to state 4
-- On scope_name shift to state 5
-- On name shift to state 42

State 3:
string -> String . [ String Parenr Parenl Integer ]
-- On String reduce production string -> String
-- On Parenr reduce production string -> String
-- On Parenl reduce production string -> String
-- On Integer reduce production string -> String

State 4:
name -> string . [ String Parenl Integer ]
-- On String reduce production name -> string
-- On Parenl reduce production name -> string
-- On Integer reduce production name -> string

State 5:
scope -> Parenl Scope scope_name . Parenl scope_items Parenr Parenr [ # ]
-- On Parenl shift to state 6

State 6:
scope -> Parenl Scope scope_name Parenl . scope_items Parenr Parenr [ # ]
-- On scope_items shift to state 7
-- On Parenr reduce production scope_items -> 
-- On Parenl reduce production scope_items -> 

State 7:
scope -> Parenl Scope scope_name Parenl scope_items . Parenr Parenr [ # ]
scope_items -> scope_items . scope_item [ Parenr Parenl ]
-- On Parenr shift to state 8
-- On Parenl shift to state 10
-- On scope_item shift to state 39
-- On scope shift to state 40
-- On cell shift to state 41

State 8:
scope -> Parenl Scope scope_name Parenl scope_items Parenr . Parenr [ # ]
-- On Parenr shift to state 9

State 9:
scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr . [ # ]
-- On # reduce production scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr

State 10:
cell -> Parenl . Input id name width Parenr [ Parenr Parenl ]
cell -> Parenl . Output id name width id Parenr [ Parenr Parenl ]
cell -> Parenl . Name id name width id Parenr [ Parenr Parenl ]
cell -> Parenl . Dangle id Parenr [ Parenr Parenl ]
cell -> Parenl . Const id string Parenr [ Parenr Parenl ]
cell -> Parenl . Buf id width id Parenr [ Parenr Parenl ]
cell -> Parenl . Not id width id Parenr [ Parenr Parenl ]
cell -> Parenl . And id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Xor id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Or id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Concat id width width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Select id width bit id Parenr [ Parenr Parenl ]
cell -> Parenl . Eq id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Lt id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Add id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Sub id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Mul id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Mux id width id id id Parenr [ Parenr Parenl ]
cell -> Parenl . Ff id width id id Parenr [ Parenr Parenl ]
cell -> Parenl . Ffc id width id id id Parenr [ Parenr Parenl ]
cell -> Parenl . Bbox id string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
scope -> Parenl . Scope scope_name Parenl scope_items Parenr Parenr [ Parenr Parenl ]
-- On Xor shift to state 11
-- On Sub shift to state 20
-- On Select shift to state 26
-- On Scope shift to state 33
-- On Output shift to state 44
-- On Or shift to state 50
-- On Not shift to state 56
-- On Name shift to state 61
-- On Mux shift to state 67
-- On Mul shift to state 74
-- On Lt shift to state 80
-- On Input shift to state 86
-- On Ffc shift to state 91
-- On Ff shift to state 98
-- On Eq shift to state 104
-- On Dangle shift to state 110
-- On Const shift to state 113
-- On Concat shift to state 117
-- On Buf shift to state 124
-- On Bbox shift to state 129
-- On And shift to state 141
-- On Add shift to state 147

State 11:
cell -> Parenl Xor . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 14

State 12:
integer -> Integer . [ String Parenr Parenl Integer ]
-- On String reduce production integer -> Integer
-- On Parenr reduce production integer -> Integer
-- On Parenl reduce production integer -> Integer
-- On Integer reduce production integer -> Integer

State 13:
id -> integer . [ String Parenr Integer ]
-- On String reduce production id -> integer
-- On Parenr reduce production id -> integer
-- On Integer reduce production id -> integer

State 14:
cell -> Parenl Xor id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 15
-- On integer shift to state 19

State 15:
cell -> Parenl Xor id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 16

State 16:
cell -> Parenl Xor id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 17

State 17:
cell -> Parenl Xor id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 18

State 18:
cell -> Parenl Xor id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Xor id width id id Parenr
-- On Parenl reduce production cell -> Parenl Xor id width id id Parenr

State 19:
width -> integer . [ Parenr Parenl Integer ]
-- On Parenr reduce production width -> integer
-- On Parenl reduce production width -> integer
-- On Integer reduce production width -> integer

State 20:
cell -> Parenl Sub . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 21

State 21:
cell -> Parenl Sub id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 22
-- On integer shift to state 19

State 22:
cell -> Parenl Sub id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 23

State 23:
cell -> Parenl Sub id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 24

State 24:
cell -> Parenl Sub id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 25

State 25:
cell -> Parenl Sub id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Sub id width id id Parenr
-- On Parenl reduce production cell -> Parenl Sub id width id id Parenr

State 26:
cell -> Parenl Select . id width bit id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 27

State 27:
cell -> Parenl Select id . width bit id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 28
-- On integer shift to state 19

State 28:
cell -> Parenl Select id width . bit id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 29
-- On bit shift to state 30

State 29:
bit -> integer . [ Integer ]
-- On Integer reduce production bit -> integer

State 30:
cell -> Parenl Select id width bit . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 31

State 31:
cell -> Parenl Select id width bit id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 32

State 32:
cell -> Parenl Select id width bit id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Select id width bit id Parenr
-- On Parenl reduce production cell -> Parenl Select id width bit id Parenr

State 33:
scope -> Parenl Scope . scope_name Parenl scope_items Parenr Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 4
-- On scope_name shift to state 34
-- On name shift to state 42

State 34:
scope -> Parenl Scope scope_name . Parenl scope_items Parenr Parenr [ Parenr Parenl ]
-- On Parenl shift to state 35

State 35:
scope -> Parenl Scope scope_name Parenl . scope_items Parenr Parenr [ Parenr Parenl ]
-- On scope_items shift to state 36
-- On Parenr reduce production scope_items -> 
-- On Parenl reduce production scope_items -> 

State 36:
scope -> Parenl Scope scope_name Parenl scope_items . Parenr Parenr [ Parenr Parenl ]
scope_items -> scope_items . scope_item [ Parenr Parenl ]
-- On Parenr shift to state 37
-- On Parenl shift to state 10
-- On scope_item shift to state 39
-- On scope shift to state 40
-- On cell shift to state 41

State 37:
scope -> Parenl Scope scope_name Parenl scope_items Parenr . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 38

State 38:
scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr . [ Parenr Parenl ]
-- On Parenr reduce production scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr
-- On Parenl reduce production scope -> Parenl Scope scope_name Parenl scope_items Parenr Parenr

State 39:
scope_items -> scope_items scope_item . [ Parenr Parenl ]
-- On Parenr reduce production scope_items -> scope_items scope_item
-- On Parenl reduce production scope_items -> scope_items scope_item

State 40:
scope_item -> scope . [ Parenr Parenl ]
-- On Parenr reduce production scope_item -> scope
-- On Parenl reduce production scope_item -> scope

State 41:
scope_item -> cell . [ Parenr Parenl ]
-- On Parenr reduce production scope_item -> cell
-- On Parenl reduce production scope_item -> cell

State 42:
scope_name -> name . name [ Parenl ]
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 43

State 43:
scope_name -> name name . [ Parenl ]
-- On Parenl reduce production scope_name -> name name

State 44:
cell -> Parenl Output . id name width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 45

State 45:
cell -> Parenl Output id . name width id Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 46

State 46:
cell -> Parenl Output id name . width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 47
-- On integer shift to state 19

State 47:
cell -> Parenl Output id name width . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 48

State 48:
cell -> Parenl Output id name width id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 49

State 49:
cell -> Parenl Output id name width id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Output id name width id Parenr
-- On Parenl reduce production cell -> Parenl Output id name width id Parenr

State 50:
cell -> Parenl Or . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 51

State 51:
cell -> Parenl Or id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 52
-- On integer shift to state 19

State 52:
cell -> Parenl Or id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 53

State 53:
cell -> Parenl Or id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 54

State 54:
cell -> Parenl Or id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 55

State 55:
cell -> Parenl Or id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Or id width id id Parenr
-- On Parenl reduce production cell -> Parenl Or id width id id Parenr

State 56:
cell -> Parenl Not . id width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 57

State 57:
cell -> Parenl Not id . width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 58
-- On integer shift to state 19

State 58:
cell -> Parenl Not id width . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 59

State 59:
cell -> Parenl Not id width id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 60

State 60:
cell -> Parenl Not id width id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Not id width id Parenr
-- On Parenl reduce production cell -> Parenl Not id width id Parenr

State 61:
cell -> Parenl Name . id name width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 62

State 62:
cell -> Parenl Name id . name width id Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 63

State 63:
cell -> Parenl Name id name . width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 64
-- On integer shift to state 19

State 64:
cell -> Parenl Name id name width . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 65

State 65:
cell -> Parenl Name id name width id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 66

State 66:
cell -> Parenl Name id name width id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Name id name width id Parenr
-- On Parenl reduce production cell -> Parenl Name id name width id Parenr

State 67:
cell -> Parenl Mux . id width id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 68

State 68:
cell -> Parenl Mux id . width id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 69
-- On integer shift to state 19

State 69:
cell -> Parenl Mux id width . id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 70

State 70:
cell -> Parenl Mux id width id . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 71

State 71:
cell -> Parenl Mux id width id id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 72

State 72:
cell -> Parenl Mux id width id id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 73

State 73:
cell -> Parenl Mux id width id id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Mux id width id id id Parenr
-- On Parenl reduce production cell -> Parenl Mux id width id id id Parenr

State 74:
cell -> Parenl Mul . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 75

State 75:
cell -> Parenl Mul id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 76
-- On integer shift to state 19

State 76:
cell -> Parenl Mul id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 77

State 77:
cell -> Parenl Mul id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 78

State 78:
cell -> Parenl Mul id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 79

State 79:
cell -> Parenl Mul id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Mul id width id id Parenr
-- On Parenl reduce production cell -> Parenl Mul id width id id Parenr

State 80:
cell -> Parenl Lt . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 81

State 81:
cell -> Parenl Lt id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 82
-- On integer shift to state 19

State 82:
cell -> Parenl Lt id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 83

State 83:
cell -> Parenl Lt id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 84

State 84:
cell -> Parenl Lt id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 85

State 85:
cell -> Parenl Lt id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Lt id width id id Parenr
-- On Parenl reduce production cell -> Parenl Lt id width id id Parenr

State 86:
cell -> Parenl Input . id name width Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 87

State 87:
cell -> Parenl Input id . name width Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 4
-- On name shift to state 88

State 88:
cell -> Parenl Input id name . width Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 89
-- On integer shift to state 19

State 89:
cell -> Parenl Input id name width . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 90

State 90:
cell -> Parenl Input id name width Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Input id name width Parenr
-- On Parenl reduce production cell -> Parenl Input id name width Parenr

State 91:
cell -> Parenl Ffc . id width id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 92

State 92:
cell -> Parenl Ffc id . width id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 93
-- On integer shift to state 19

State 93:
cell -> Parenl Ffc id width . id id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 94

State 94:
cell -> Parenl Ffc id width id . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 95

State 95:
cell -> Parenl Ffc id width id id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 96

State 96:
cell -> Parenl Ffc id width id id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 97

State 97:
cell -> Parenl Ffc id width id id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Ffc id width id id id Parenr
-- On Parenl reduce production cell -> Parenl Ffc id width id id id Parenr

State 98:
cell -> Parenl Ff . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 99

State 99:
cell -> Parenl Ff id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 100
-- On integer shift to state 19

State 100:
cell -> Parenl Ff id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 101

State 101:
cell -> Parenl Ff id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 102

State 102:
cell -> Parenl Ff id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 103

State 103:
cell -> Parenl Ff id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Ff id width id id Parenr
-- On Parenl reduce production cell -> Parenl Ff id width id id Parenr

State 104:
cell -> Parenl Eq . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 105

State 105:
cell -> Parenl Eq id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 106
-- On integer shift to state 19

State 106:
cell -> Parenl Eq id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 107

State 107:
cell -> Parenl Eq id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 108

State 108:
cell -> Parenl Eq id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 109

State 109:
cell -> Parenl Eq id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Eq id width id id Parenr
-- On Parenl reduce production cell -> Parenl Eq id width id id Parenr

State 110:
cell -> Parenl Dangle . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 111

State 111:
cell -> Parenl Dangle id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 112

State 112:
cell -> Parenl Dangle id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Dangle id Parenr
-- On Parenl reduce production cell -> Parenl Dangle id Parenr

State 113:
cell -> Parenl Const . id string Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 114

State 114:
cell -> Parenl Const id . string Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 115

State 115:
cell -> Parenl Const id string . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 116

State 116:
cell -> Parenl Const id string Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Const id string Parenr
-- On Parenl reduce production cell -> Parenl Const id string Parenr

State 117:
cell -> Parenl Concat . id width width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 118

State 118:
cell -> Parenl Concat id . width width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 119
-- On integer shift to state 19

State 119:
cell -> Parenl Concat id width . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 120
-- On integer shift to state 19

State 120:
cell -> Parenl Concat id width width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 121

State 121:
cell -> Parenl Concat id width width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 122

State 122:
cell -> Parenl Concat id width width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 123

State 123:
cell -> Parenl Concat id width width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Concat id width width id id Parenr
-- On Parenl reduce production cell -> Parenl Concat id width width id id Parenr

State 124:
cell -> Parenl Buf . id width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 125

State 125:
cell -> Parenl Buf id . width id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 126
-- On integer shift to state 19

State 126:
cell -> Parenl Buf id width . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 127

State 127:
cell -> Parenl Buf id width id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 128

State 128:
cell -> Parenl Buf id width id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Buf id width id Parenr
-- On Parenl reduce production cell -> Parenl Buf id width id Parenr

State 129:
cell -> Parenl Bbox . id string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 130

State 130:
cell -> Parenl Bbox id . string width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
-- On String shift to state 3
-- On string shift to state 131

State 131:
cell -> Parenl Bbox id string . width width Parenl integers Parenr id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 132
-- On integer shift to state 19

State 132:
cell -> Parenl Bbox id string width . width Parenl integers Parenr id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 133
-- On integer shift to state 19

State 133:
cell -> Parenl Bbox id string width width . Parenl integers Parenr id Parenr [ Parenr Parenl ]
-- On Parenl shift to state 134

State 134:
cell -> Parenl Bbox id string width width Parenl . integers Parenr id Parenr [ Parenr Parenl ]
-- On integers_0 shift to state 135
-- On integers shift to state 137
-- On Parenr reduce production integers_0 -> 
-- On Integer reduce production integers_0 -> 

State 135:
integers -> integers_0 . [ Parenr ]
integers_0 -> integers_0 . integer [ Parenr Integer ]
-- On Integer shift to state 12
-- On integer shift to state 136
-- On Parenr reduce production integers -> integers_0

State 136:
integers_0 -> integers_0 integer . [ Parenr Integer ]
-- On Parenr reduce production integers_0 -> integers_0 integer
-- On Integer reduce production integers_0 -> integers_0 integer

State 137:
cell -> Parenl Bbox id string width width Parenl integers . Parenr id Parenr [ Parenr Parenl ]
-- On Parenr shift to state 138

State 138:
cell -> Parenl Bbox id string width width Parenl integers Parenr . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 139

State 139:
cell -> Parenl Bbox id string width width Parenl integers Parenr id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 140

State 140:
cell -> Parenl Bbox id string width width Parenl integers Parenr id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Bbox id string width width Parenl integers Parenr id Parenr
-- On Parenl reduce production cell -> Parenl Bbox id string width width Parenl integers Parenr id Parenr

State 141:
cell -> Parenl And . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 142

State 142:
cell -> Parenl And id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 143
-- On integer shift to state 19

State 143:
cell -> Parenl And id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 144

State 144:
cell -> Parenl And id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 145

State 145:
cell -> Parenl And id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 146

State 146:
cell -> Parenl And id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl And id width id id Parenr
-- On Parenl reduce production cell -> Parenl And id width id id Parenr

State 147:
cell -> Parenl Add . id width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 148

State 148:
cell -> Parenl Add id . width id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On width shift to state 149
-- On integer shift to state 19

State 149:
cell -> Parenl Add id width . id id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 150

State 150:
cell -> Parenl Add id width id . id Parenr [ Parenr Parenl ]
-- On Integer shift to state 12
-- On integer shift to state 13
-- On id shift to state 151

State 151:
cell -> Parenl Add id width id id . Parenr [ Parenr Parenl ]
-- On Parenr shift to state 152

State 152:
cell -> Parenl Add id width id id Parenr . [ Parenr Parenl ]
-- On Parenr reduce production cell -> Parenl Add id width id id Parenr
-- On Parenl reduce production cell -> Parenl Add id width id id Parenr

State 153:
netlist -> scope . [ # ]
-- On # reduce production netlist -> scope

State 154:
netlist' -> netlist . [ # ]
-- On # accept netlist

