File "confluence.mly", line 58, characters 26-36:
Warning: the token LexerError is unused.
File "confluence.mly", line 65, characters 26-35:
Warning: the token OP_PROP_U is unused.
Grammar has 34 nonterminal symbols, among which 1 start symbols.
Grammar has 105 terminal symbols.
Grammar has 152 productions.
nullable(vector_select) = false
nullable(trifix) = false
nullable(statements) = true
nullable(statement) = false
nullable(record_fields) = false
nullable(record) = false
nullable(primitive) = false
nullable(prefix) = false
nullable(nil) = false
nullable(name_space_sugar) = false
nullable(name_space) = false
nullable(locals) = false
nullable(local) = false
nullable(list_sugar_items) = false
nullable(list_sugar) = false
nullable(infix) = false
nullable(import_file) = false
nullable(ifelse_else) = false
nullable(ifelse) = false
nullable(func) = false
nullable(file_application) = false
nullable(file) = false
nullable(expression_op) = false
nullable(expression_nonop) = false
nullable(expression) = false
nullable(dot) = false
nullable(direction_marker) = true
nullable(connect) = false
nullable(conditional) = false
nullable(component_ports) = true
nullable(component_named) = false
nullable(component_anon) = false
nullable(arguments) = true
nullable(application) = false
first(vector_select) = VECTOR STRING PRIM PAREN_LEFT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(trifix) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(statements) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(statement) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(record_fields) = IDENTIFIER
first(record) = PAREN_LEFT
first(primitive) = PRIM
first(prefix) = OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT
first(nil) = BRACKET_LEFT
first(name_space_sugar) = WITH
first(name_space) = LOCAL
first(locals) = IDENTIFIER
first(local) = IDENTIFIER
first(list_sugar_items) = VECTOR STRING PRIM PAREN_LEFT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(list_sugar) = BRACKET_LEFT
first(infix) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(import_file) = IMPORT
first(ifelse_else) = END ELSE EF
first(ifelse) = IF
first(func) = BRACE_LEFT
first(file_application) = WITH OP_SUB OP_MUL OP_ADD IS IDENTIFIER
first(file) = WITH ROOTENVIRONMENT OP_SUB OP_MUL OP_ADD IS IDENTIFIER ENVIRONMENT
first(expression_op) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(expression_nonop) = VECTOR STRING PRIM PAREN_LEFT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(expression) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(dot) = VECTOR STRING PRIM PAREN_LEFT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(direction_marker) = OP_SUB OP_MUL OP_ADD
first(connect) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(conditional) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(component_ports) = OP_SUB OP_MUL OP_ADD IDENTIFIER
first(component_named) = COMPONENT
first(component_anon) = COMP
first(arguments) = VECTOR STRING PRIM PAREN_LEFT OP_SUB OP_MUL OP_ADD LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
first(application) = BRACE_LEFT
minimal(vector_select) = (* 3 *) STRING OP_VEC_SELECT STRING
minimal(trifix) = (* 5 *) STRING OP_VEC_THEN STRING OP_VEC_ELSE STRING
minimal(statements) = (* 0 *)
minimal(statement) = (* 3 *) IF STRING END
minimal(record_fields) = (* 3 *) IDENTIFIER COLON STRING
minimal(record) = (* 2 *) PAREN_LEFT PAREN_RIGHT
minimal(primitive) = (* 3 *) PRIM IDENTIFIER END
minimal(prefix) = (* 2 *) OP_NOT STRING
minimal(nil) = (* 2 *) BRACKET_LEFT BRACKET_RIGHT
minimal(name_space_sugar) = (* 3 *) WITH IDENTIFIER IS
minimal(name_space) = (* 4 *) LOCAL IDENTIFIER IS END
minimal(locals) = (* 1 *) IDENTIFIER
minimal(local) = (* 1 *) IDENTIFIER
minimal(list_sugar_items) = (* 1 *) STRING
minimal(list_sugar) = (* 3 *) BRACKET_LEFT STRING BRACKET_RIGHT
minimal(infix) = (* 3 *) STRING OP_BW_OR STRING
minimal(import_file) = (* 2 *) IMPORT STRING
minimal(ifelse_else) = (* 1 *) END
minimal(ifelse) = (* 3 *) IF STRING END
minimal(func) = (* 4 *) BRACE_LEFT STRING DOLLAR BRACE_RIGHT
minimal(file_application) = (* 1 *) IS
minimal(file) = (* 2 *) IS EOF
minimal(expression_op) = (* 2 *) OP_NOT STRING
minimal(expression_nonop) = (* 1 *) STRING
minimal(expression) = (* 1 *) STRING
minimal(dot) = (* 3 *) STRING OP_DOT IDENTIFIER
minimal(direction_marker) = (* 0 *)
minimal(connect) = (* 3 *) STRING OP_UNIFY STRING
minimal(conditional) = (* 3 *) STRING OP_AND STRING
minimal(component_ports) = (* 0 *)
minimal(component_named) = (* 4 *) COMPONENT IDENTIFIER IS END
minimal(component_anon) = (* 3 *) COMP IS END
minimal(arguments) = (* 0 *)
minimal(application) = (* 3 *) BRACE_LEFT STRING BRACE_RIGHT
maximal(vector_select) = infinity
maximal(trifix) = infinity
maximal(statements) = infinity
maximal(statement) = infinity
maximal(record_fields) = infinity
maximal(record) = infinity
maximal(primitive) = infinity
maximal(prefix) = infinity
maximal(nil) = 2
maximal(name_space_sugar) = infinity
maximal(name_space) = infinity
maximal(locals) = infinity
maximal(local) = 1
maximal(list_sugar_items) = infinity
maximal(list_sugar) = infinity
maximal(infix) = infinity
maximal(import_file) = 2
maximal(ifelse_else) = infinity
maximal(ifelse) = infinity
maximal(func) = infinity
maximal(file_application) = infinity
maximal(file) = infinity
maximal(expression_op) = infinity
maximal(expression_nonop) = infinity
maximal(expression) = infinity
maximal(dot) = infinity
maximal(direction_marker) = 1
maximal(connect) = infinity
maximal(conditional) = infinity
maximal(component_ports) = infinity
maximal(component_named) = infinity
maximal(component_anon) = infinity
maximal(arguments) = infinity
maximal(application) = infinity
follow(vector_select) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(trifix) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(statements) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(statement) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(record_fields) = PAREN_RIGHT IDENTIFIER
follow(record) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(primitive) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(prefix) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(nil) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(name_space_sugar) = EOF END ELSE EF
follow(name_space) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(locals) = IS IDENTIFIER
follow(local) = IS IDENTIFIER
follow(list_sugar_items) = BRACKET_RIGHT
follow(list_sugar) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(infix) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(import_file) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(ifelse_else) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(ifelse) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(func) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(file_application) = EOF
follow(file) = #
follow(expression_op) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(expression_nonop) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(expression) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(dot) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(direction_marker) = VECTOR STRING PRIM PAREN_LEFT LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT DOLLAR COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(connect) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(conditional) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(component_ports) = WITH OP_SUB OP_MUL OP_ADD IS IDENTIFIER END
follow(component_named) = VECTOR STRING PRIM PAREN_LEFT OP_WIDTH OP_VEC_NOT OP_VEC_MSBS OP_VEC_MSB OP_VEC_LSBS OP_VEC_LSB OP_TAIL OP_PROP_X OP_PROP_NOT OP_NOT OP_LENGTH OP_HEAD OP_BW_NOT LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF COMPONENT COMP BRACKET_LEFT BRACE_LEFT BOOLEAN
follow(component_anon) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(arguments) = VECTOR STRING PRIM PAREN_LEFT OP_SUB OP_MUL OP_ADD LOCAL INTEGER IMPORT IDENTIFIER FREE FLOAT DOLLAR COMP BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
follow(application) = WITH VECTOR STRING PRIM PAREN_RIGHT PAREN_LEFT OP_WIDTH OP_VEC_XOR OP_VEC_THEN OP_VEC_SUB OP_VEC_SELECT OP_VEC_RSHIFT_S OP_VEC_RSHIFT OP_VEC_REPEAT OP_VEC_POW OP_VEC_OR OP_VEC_NOT OP_VEC_NEQ OP_VEC_MUL_S OP_VEC_MUL OP_VEC_MSBS OP_VEC_MSB OP_VEC_MOD OP_VEC_LT_S OP_VEC_LT OP_VEC_LSHIFT OP_VEC_LSBS OP_VEC_LSB OP_VEC_LE_S OP_VEC_LE OP_VEC_GT_S OP_VEC_GT OP_VEC_GE_S OP_VEC_GE OP_VEC_EQU OP_VEC_ELSE OP_VEC_DIV OP_VEC_CONCAT OP_VEC_AND OP_VEC_ADD OP_UNIFY OP_THEN OP_TAIL OP_SUB OP_RSHIFT OP_RETURN OP_REPEAT OP_PROP_XOR OP_PROP_X OP_PROP_OR OP_PROP_NOT OP_PROP_IMPLY OP_PROP_EQUIV OP_PROP_AND OP_POW OP_OR OP_NOT OP_NEQ OP_MUL OP_MOD OP_LT OP_LSHIFT OP_LENGTH OP_LE OP_HEAD OP_GT OP_GE OP_EQU OP_DOT OP_DIV OP_CONS OP_CONNECT_RIGHT OP_CONNECT_LEFT OP_CONCAT OP_BW_XOR OP_BW_OR OP_BW_NOT OP_BW_AND OP_AND OP_ADD LOCAL INTEGER IMPORT IF IDENTIFIER FREE FLOAT EOF END ELSE EF DOLLAR COMPONENT COMP COLON BRACKET_RIGHT BRACKET_LEFT BRACE_RIGHT BRACE_LEFT BOOLEAN
Built an LR(0) automaton with 294 states.
The grammar is not SLR(1) -- 77 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 294 states.
4120 shift/reduce conflicts were silently solved.
File "confluence.mly", line 90, characters 0-5:
Warning: the precedence level assigned to OP_PROP_U is never useful.
92 out of 294 states have a default reduction.
The action table is 31164 entries; 9040 non-zero; 7879 compressed.
The action table occupies roughly 15856 bytes.
The goto table is 10290 entries; 1814 non-zero; 2798 compressed.
The goto table occupies roughly 5688 bytes.
The error table occupies roughly 3928 bytes.
The default_reduction table occupies roughly 328 bytes.
The lhs table occupies roughly 192 bytes.
The trace table occupies roughly 8 bytes.
