Grammar has 15 nonterminal symbols, among which 1 start symbols.
Grammar has 49 terminal symbols.
Grammar has 75 productions.
nullable(unode_list0) = true
nullable(unode) = false
nullable(test) = false
nullable(pnode_or_comma_list0) = true
nullable(pnode_list0) = true
nullable(pnode) = false
nullable(node) = false
nullable(main) = false
nullable(elif_list) = true
nullable(def_args1) = false
nullable(bexpr) = false
nullable(args1) = true
nullable(arg_blank) = true
nullable(aexpr_list) = false
nullable(aexpr) = false
first(unode_list0) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
first(unode) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
first(test) = TRUE OP_PAREN NOT MINUS LNOT INT IDENT FALSE DEFINED
first(pnode_or_comma_list0) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA
first(pnode_list0) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE
first(pnode) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE
first(node) = WARNING UNDEF TEXT LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE
first(main) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR EOF DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
first(elif_list) = ELSE ELIF
first(def_args1) = TEXT IDENT
first(bexpr) = TRUE OP_PAREN NOT MINUS LNOT INT IDENT FALSE DEFINED
first(args1) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA
first(arg_blank) = TEXT
first(aexpr_list) = OP_PAREN MINUS LNOT INT IDENT
first(aexpr) = OP_PAREN MINUS LNOT INT IDENT
minimal(unode_list0) = (* 0 *)
minimal(unode) = (* 1 *) TEXT
minimal(test) = (* 2 *) TRUE ENDTEST
minimal(pnode_or_comma_list0) = (* 0 *)
minimal(pnode_list0) = (* 0 *)
minimal(pnode) = (* 1 *) TEXT
minimal(node) = (* 1 *) TEXT
minimal(main) = (* 1 *) EOF
minimal(elif_list) = (* 0 *)
minimal(def_args1) = (* 1 *) IDENT
minimal(bexpr) = (* 1 *) TRUE
minimal(args1) = (* 0 *)
minimal(arg_blank) = (* 0 *)
minimal(aexpr_list) = (* 1 *) INT
minimal(aexpr) = (* 1 *) INT
follow(unode_list0) = error ENDIF ENDEF ELSE ELIF
follow(unode) = error WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR EOF ENDIF ENDEF ELSE ELIF DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
follow(test) = error WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR ENDIF ELSE ELIF DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
follow(pnode_or_comma_list0) = CL_PAREN
follow(pnode_list0) = COMMA CL_PAREN
follow(pnode) = WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
follow(node) = error WARNING UNDEF TEXT OP_PAREN LINE INCLUDE IFDEF IF IDENT FUNIDENT EXT ERROR EOF ENDIF ENDEF ELSE ELIF DEFUN DEF CURRENT_LINE CURRENT_FILE COMMA CL_PAREN
follow(main) = #
follow(elif_list) = error ENDIF
follow(def_args1) = CL_PAREN
follow(bexpr) = OR ENDTEST CL_PAREN AND
follow(args1) = CL_PAREN
follow(arg_blank) = IDENT
follow(aexpr_list) = CL_PAREN
follow(aexpr) = STAR SLASH PLUS OR NE MOD MINUS LXOR LT LSR LSL LOR LE LAND GT GE EQ ENDTEST COMMA CL_PAREN ASR AND
Built an LR(0) automaton with 133 states.
The grammar is not SLR(1) -- 16 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 173 states.
149 shift/reduce conflicts were silently solved.
81 out of 173 states have a default reduction.
58 out of 173 states are represented.
0 out of 67 symbols keep track of their start position.
0 out of 67 symbols keep track of their end position.
36 out of 76 productions exploit shiftreduce optimization.
19 out of 173 states can peek at an error.
442 functions before inlining, 128 functions after inlining.
