State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On A shift to state 1
-- On main shift to state 2
-- On list(block) shift to state 3
-- On items shift to state 5
-- On item shift to state 6
-- On block shift to state 8
## Reductions:
-- On B
--   reduce production list(block) ->

State 1:
## Known stack suffix:
## A
## LR(1) items:
item -> A . [ B A ]
## Transitions:
## Reductions:
-- On B A
--   reduce production item -> A

State 2:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 3:
## Known stack suffix:
## list(block)
## LR(1) items:
main -> list(block) . B [ # ]
## Transitions:
-- On B shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## list(block) B
## LR(1) items:
main -> list(block) B . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> list(block) B

State 5:
## Known stack suffix:
## items
## LR(1) items:
block -> items . [ B A ]
## Transitions:
## Reductions:
-- On B A
--   reduce production block -> items

State 6:
## Known stack suffix:
## item
## LR(1) items:
items -> item . [ B A ]
items -> item . items [ B A ]
## Transitions:
-- On A shift to state 1
-- On items shift to state 7
-- On item shift to state 6
## Reductions:
-- On B
--   reduce production items -> item

State 7:
## Known stack suffix:
## item items
## LR(1) items:
items -> item items . [ B A ]
## Transitions:
## Reductions:
-- On B A
--   reduce production items -> item items

State 8:
## Known stack suffix:
## block
## LR(1) items:
list(block) -> block . list(block) [ B ]
## Transitions:
-- On A shift to state 1
-- On list(block) shift to state 9
-- On items shift to state 5
-- On item shift to state 6
-- On block shift to state 8
## Reductions:
-- On B
--   reduce production list(block) ->

State 9:
## Known stack suffix:
## block list(block)
## LR(1) items:
list(block) -> block list(block) . [ B ]
## Transitions:
## Reductions:
-- On B
--   reduce production list(block) -> block list(block)

