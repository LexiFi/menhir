Grammar has 5 nonterminal symbols, among which 1 start symbols.
Grammar has 2 terminal symbols.
Grammar has 7 productions.
nullable(main) = false
nullable(list(block)) = true
nullable(items) = false
nullable(item) = false
nullable(block) = false
first(main) = B A
first(list(block)) = A
first(items) = A
first(item) = A
first(block) = A
minimal(main) = (* 1 *) B
minimal(list(block)) = (* 0 *)
minimal(items) = (* 1 *) A
minimal(item) = (* 1 *) A
minimal(block) = (* 1 *) A
follow(main) = #
follow(list(block)) = B
follow(items) = B A
follow(item) = B A
follow(block) = B A
Built an LR(0) automaton with 10 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 10 states.
One shift/reduce conflict was silently solved.
6 out of 10 states have a default reduction.
3 out of 10 states are represented.
0 out of 10 symbols keep track of their start position.
0 out of 10 symbols keep track of their end position.
5 out of 8 productions exploit shiftreduce optimization.
27 functions before inlining, 5 functions after inlining.
