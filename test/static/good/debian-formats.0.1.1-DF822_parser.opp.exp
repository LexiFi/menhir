%{

open ExtLib

exception Dup_stanza

let extend_loc (r1_start, _r1_end) (_r2_start, r2_end) = 
  (r1_start, r2_end)

let loc_of_lexbuf b = 
  (b.Lexing.lex_start_p, b.Lexing.lex_curr_p)

let join (r1, v) (r2, cont) = 
  extend_loc r1 r2, v ^ cont

%}
%start doc_822
%start stanza_822
%token <DFUtils.loc * string> CONT
%token EOF
%token EOL
%token <string * (DFUtils.loc * string)> FIELD
%type <(string * (DFUtils.loc * string)) list list> doc_822
%type <(string * (DFUtils.loc * string)) list option> stanza_822
%%

doc_822:
  _1 = stanzas
    {              ( _1 )}
| _1 = eols _2 = stanzas
    {                 ( _2 )}

stanza_822:
  _1 = stanza
    {           ( Some _1 )}
| _1 = eols _2 = stanza
    {                ( Some _2 )}
| _1 = eols _2 = EOF
    {             ( None )}
| _1 = EOF
    {         ( None )}

eols:
  _1 = EOL
    {         ()}
| _1 = EOL _2 = eols
    {             ()}

stanzas:
  
    {       ( [] )}
| _1 = stanza _2 = EOF
    {                ( [ _1 ] )}
| _1 = stanza _2 = eols _3 = stanzas
    {                        ( _1 :: _3 )}

stanza:
  _1 = fields
    {           ( let keys = List.map fst _1 in
		  (* check for re-defined keys *)
		  if List.length (List.unique keys) < List.length keys then
		    raise Dup_stanza
		  else
		    _1
		)}

fields:
  _1 = field
    {           ( [ _1 ] )}
| _1 = field _2 = fields
    {                 ( _1 :: _2 )}

field:
  _1 = FIELD _2 = EOL
    {               ( _1 )}
| _1 = FIELD _2 = EOL _3 = linecont
    {                       ( let k, v = _1 in
			  k, (join v _3) )}

linecont:
  _1 = CONT _2 = EOL
    {              ( _1 )}
| _1 = CONT _2 = EOL _3 = linecont
    {                      ( join _1 _3 )}

%%


let error_wrapper f =
  fun lexer lexbuf ->
    try
      f lexer lexbuf
    with 
      | Parsing.Parse_error ->
	  raise (DFUtils.Parse_error_822
		   ("RFC 822 (stanza structure) parse error",
		    loc_of_lexbuf lexbuf))
      | Dup_stanza ->
	  raise (DFUtils.Parse_error_822
		   ("duplicate keys in stanza",
		    loc_of_lexbuf lexbuf))

let doc_822 = error_wrapper doc_822
let stanza_822 = error_wrapper stanza_822

