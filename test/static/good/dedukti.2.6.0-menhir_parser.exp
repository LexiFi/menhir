Grammar has 19 nonterminal symbols, among which 1 start symbols.
Grammar has 32 terminal symbols.
Grammar has 77 productions.
nullable(top_pattern) = false
nullable(term) = false
nullable(sterm) = false
nullable(separated_nonempty_list(COMMA,decl)) = false
nullable(rule) = false
nullable(pattern_wp) = false
nullable(pattern) = false
nullable(param) = false
nullable(nonempty_list(rule)) = false
nullable(nonempty_list(pattern_wp)) = false
nullable(nonempty_list(param)) = false
nullable(list(sterm)) = true
nullable(list(pattern_wp)) = true
nullable(list(param)) = true
nullable(line) = false
nullable(eval_config) = false
nullable(decl) = false
nullable(context) = true
nullable(aterm) = false
first(top_pattern) = QID ID
first(term) = UNDERSCORE TYPE QID LEFTPAR ID
first(sterm) = UNDERSCORE TYPE QID LEFTPAR ID
first(separated_nonempty_list(COMMA,decl)) = ID
first(rule) = LEFTSQU LEFTBRA
first(pattern_wp) = UNDERSCORE QID LEFTPAR LEFTBRA ID
first(pattern) = UNDERSCORE QID LEFTPAR LEFTBRA ID
first(param) = LEFTPAR
first(nonempty_list(rule)) = LEFTSQU LEFTBRA
first(nonempty_list(pattern_wp)) = UNDERSCORE QID LEFTPAR LEFTBRA ID
first(nonempty_list(param)) = LEFTPAR
first(list(sterm)) = UNDERSCORE TYPE QID LEFTPAR ID
first(list(pattern_wp)) = UNDERSCORE QID LEFTPAR LEFTBRA ID
first(list(param)) = LEFTPAR
first(line) = REQUIRE PRINT NAME LEFTSQU LEFTBRA KW_THM KW_DEF INFER ID GDT EVAL EOF CHECKNOT CHECK ASSERTNOT ASSERT
first(eval_config) = LEFTSQU
first(decl) = ID
first(context) = ID
first(aterm) = UNDERSCORE TYPE QID LEFTPAR ID
minimal(top_pattern) = (* 1 *) ID
minimal(term) = (* 1 *) QID
minimal(sterm) = (* 1 *) QID
minimal(separated_nonempty_list(COMMA,decl)) = (* 1 *) ID
minimal(rule) = (* 5 *) LEFTSQU RIGHTSQU ID LONGARROW QID
minimal(pattern_wp) = (* 1 *) ID
minimal(pattern) = (* 1 *) ID
minimal(param) = (* 5 *) LEFTPAR ID COLON QID RIGHTPAR
minimal(nonempty_list(rule)) = (* 5 *) LEFTSQU RIGHTSQU ID LONGARROW QID
minimal(nonempty_list(pattern_wp)) = (* 1 *) ID
minimal(nonempty_list(param)) = (* 5 *) LEFTPAR ID COLON QID RIGHTPAR
minimal(list(sterm)) = (* 0 *)
minimal(list(pattern_wp)) = (* 0 *)
minimal(list(param)) = (* 0 *)
minimal(line) = (* 1 *) EOF
minimal(eval_config) = (* 3 *) LEFTSQU ID RIGHTSQU
minimal(decl) = (* 1 *) ID
minimal(context) = (* 0 *)
minimal(aterm) = (* 1 *) QID
follow(top_pattern) = LONGARROW
follow(term) = RIGHTSQU RIGHTPAR RIGHTBRA LEFTSQU LEFTBRA DOT DEF COMMA ARROW
follow(sterm) = UNDERSCORE TYPE RIGHTSQU RIGHTPAR RIGHTBRA QID LEFTSQU LEFTPAR LEFTBRA ID FATARROW EQUAL DOT DEF COMMA COLON ARROW
follow(separated_nonempty_list(COMMA,decl)) = RIGHTSQU
follow(rule) = LEFTSQU LEFTBRA DOT
follow(pattern_wp) = UNDERSCORE RIGHTPAR QID LONGARROW LEFTPAR LEFTBRA ID
follow(pattern) = RIGHTPAR
follow(param) = LEFTPAR DEF COLON
follow(nonempty_list(rule)) = DOT
follow(nonempty_list(pattern_wp)) = RIGHTPAR
follow(nonempty_list(param)) = DEF COLON
follow(list(sterm)) = RIGHTSQU RIGHTPAR RIGHTBRA LEFTSQU LEFTBRA FATARROW EQUAL DOT DEF COMMA COLON ARROW
follow(list(pattern_wp)) = LONGARROW
follow(list(param)) = COLON
follow(line) = #
follow(eval_config) = UNDERSCORE TYPE QID LEFTPAR ID
follow(decl) = RIGHTSQU COMMA
follow(context) = RIGHTSQU
follow(aterm) = RIGHTSQU RIGHTPAR RIGHTBRA LEFTSQU LEFTBRA FATARROW EQUAL DOT DEF COMMA COLON ARROW
Built an LR(0) automaton with 209 states.
The grammar is not SLR(1) -- 13 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 209 states.
8 shift/reduce conflicts were silently solved.
57 out of 209 states have a default reduction.
70 out of 209 states are represented.
9 out of 54 symbols keep track of their start position.
0 out of 54 symbols keep track of their end position.
47 out of 78 productions exploit shiftreduce optimization.
311 functions before inlining, 55 functions after inlining.
