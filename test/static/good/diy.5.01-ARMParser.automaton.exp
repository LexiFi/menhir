State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SEMI shift to state 1
-- On semi_opt shift to state 2
-- On main shift to state 175
## Reductions:
-- On PROC reduce production semi_opt ->

State 1:
## Known stack suffix:
## SEMI
## LR(1) items:
semi_opt -> SEMI . [ PROC ]
## Transitions:
## Reductions:
-- On PROC reduce production semi_opt -> SEMI

State 2:
## Known stack suffix:
## semi_opt
## LR(1) items:
main -> semi_opt . proc_list iol_list EOF [ # ]
## Transitions:
-- On PROC shift to state 3
-- On proc_list shift to state 7
## Reductions:

State 3:
## Known stack suffix:
## PROC
## LR(1) items:
proc_list -> PROC . SEMI [ SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD ]
proc_list -> PROC . PIPE proc_list [ SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD ]
## Transitions:
-- On SEMI shift to state 4
-- On PIPE shift to state 5
## Reductions:

State 4:
## Known stack suffix:
## PROC SEMI
## LR(1) items:
proc_list -> PROC SEMI . [ SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD ]
## Transitions:
## Reductions:
-- On SEMI reduce production proc_list -> PROC SEMI
-- On PIPE reduce production proc_list -> PROC SEMI
-- On NAME reduce production proc_list -> PROC SEMI
-- On I_XORS reduce production proc_list -> PROC SEMI
-- On I_XOR reduce production proc_list -> PROC SEMI
-- On I_STRNE reduce production proc_list -> PROC SEMI
-- On I_STREX reduce production proc_list -> PROC SEMI
-- On I_STREQ reduce production proc_list -> PROC SEMI
-- On I_STR reduce production proc_list -> PROC SEMI
-- On I_MOVNE reduce production proc_list -> PROC SEMI
-- On I_MOVEQ reduce production proc_list -> PROC SEMI
-- On I_MOV reduce production proc_list -> PROC SEMI
-- On I_LDRNE reduce production proc_list -> PROC SEMI
-- On I_LDREX reduce production proc_list -> PROC SEMI
-- On I_LDREQ reduce production proc_list -> PROC SEMI
-- On I_LDR reduce production proc_list -> PROC SEMI
-- On I_ISB reduce production proc_list -> PROC SEMI
-- On I_DSB reduce production proc_list -> PROC SEMI
-- On I_DMB reduce production proc_list -> PROC SEMI
-- On I_CMP reduce production proc_list -> PROC SEMI
-- On I_BNE reduce production proc_list -> PROC SEMI
-- On I_BEQ reduce production proc_list -> PROC SEMI
-- On I_B reduce production proc_list -> PROC SEMI
-- On I_ANDS reduce production proc_list -> PROC SEMI
-- On I_AND reduce production proc_list -> PROC SEMI
-- On I_ADDS reduce production proc_list -> PROC SEMI
-- On I_ADD reduce production proc_list -> PROC SEMI

State 5:
## Known stack suffix:
## PROC PIPE
## LR(1) items:
proc_list -> PROC PIPE . proc_list [ SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD ]
## Transitions:
-- On PROC shift to state 3
-- On proc_list shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## PROC PIPE proc_list
## LR(1) items:
proc_list -> PROC PIPE proc_list . [ SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD ]
## Transitions:
## Reductions:
-- On SEMI reduce production proc_list -> PROC PIPE proc_list
-- On PIPE reduce production proc_list -> PROC PIPE proc_list
-- On NAME reduce production proc_list -> PROC PIPE proc_list
-- On I_XORS reduce production proc_list -> PROC PIPE proc_list
-- On I_XOR reduce production proc_list -> PROC PIPE proc_list
-- On I_STRNE reduce production proc_list -> PROC PIPE proc_list
-- On I_STREX reduce production proc_list -> PROC PIPE proc_list
-- On I_STREQ reduce production proc_list -> PROC PIPE proc_list
-- On I_STR reduce production proc_list -> PROC PIPE proc_list
-- On I_MOVNE reduce production proc_list -> PROC PIPE proc_list
-- On I_MOVEQ reduce production proc_list -> PROC PIPE proc_list
-- On I_MOV reduce production proc_list -> PROC PIPE proc_list
-- On I_LDRNE reduce production proc_list -> PROC PIPE proc_list
-- On I_LDREX reduce production proc_list -> PROC PIPE proc_list
-- On I_LDREQ reduce production proc_list -> PROC PIPE proc_list
-- On I_LDR reduce production proc_list -> PROC PIPE proc_list
-- On I_ISB reduce production proc_list -> PROC PIPE proc_list
-- On I_DSB reduce production proc_list -> PROC PIPE proc_list
-- On I_DMB reduce production proc_list -> PROC PIPE proc_list
-- On I_CMP reduce production proc_list -> PROC PIPE proc_list
-- On I_BNE reduce production proc_list -> PROC PIPE proc_list
-- On I_BEQ reduce production proc_list -> PROC PIPE proc_list
-- On I_B reduce production proc_list -> PROC PIPE proc_list
-- On I_ANDS reduce production proc_list -> PROC PIPE proc_list
-- On I_AND reduce production proc_list -> PROC PIPE proc_list
-- On I_ADDS reduce production proc_list -> PROC PIPE proc_list
-- On I_ADD reduce production proc_list -> PROC PIPE proc_list

State 7:
## Known stack suffix:
## semi_opt proc_list
## LR(1) items:
main -> semi_opt proc_list . iol_list EOF [ # ]
## Transitions:
-- On NAME shift to state 8
-- On I_XORS shift to state 10
-- On I_XOR shift to state 18
-- On I_STRNE shift to state 24
-- On I_STREX shift to state 34
-- On I_STREQ shift to state 42
-- On I_STR shift to state 52
-- On I_MOVNE shift to state 62
-- On I_MOVEQ shift to state 68
-- On I_MOV shift to state 73
-- On I_LDRNE shift to state 78
-- On I_LDREX shift to state 88
-- On I_LDREQ shift to state 95
-- On I_LDR shift to state 105
-- On I_ISB shift to state 115
-- On I_DSB shift to state 116
-- On I_DMB shift to state 126
-- On I_CMP shift to state 128
-- On I_BNE shift to state 133
-- On I_BEQ shift to state 135
-- On I_B shift to state 137
-- On I_ANDS shift to state 139
-- On I_AND shift to state 145
-- On I_ADDS shift to state 151
-- On I_ADD shift to state 158
-- On iol_list shift to state 167
-- On instr_option_list shift to state 169
-- On instr_option shift to state 172
-- On instr shift to state 166
## Reductions:
-- On SEMI reduce production instr_option ->
-- On PIPE reduce production instr_option ->

State 8:
## Known stack suffix:
## NAME
## LR(1) items:
instr_option -> NAME . COLON instr_option [ SEMI PIPE ]
## Transitions:
-- On COLON shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## NAME COLON
## LR(1) items:
instr_option -> NAME COLON . instr_option [ SEMI PIPE ]
## Transitions:
-- On NAME shift to state 8
-- On I_XORS shift to state 10
-- On I_XOR shift to state 18
-- On I_STRNE shift to state 24
-- On I_STREX shift to state 34
-- On I_STREQ shift to state 42
-- On I_STR shift to state 52
-- On I_MOVNE shift to state 62
-- On I_MOVEQ shift to state 68
-- On I_MOV shift to state 73
-- On I_LDRNE shift to state 78
-- On I_LDREX shift to state 88
-- On I_LDREQ shift to state 95
-- On I_LDR shift to state 105
-- On I_ISB shift to state 115
-- On I_DSB shift to state 116
-- On I_DMB shift to state 126
-- On I_CMP shift to state 128
-- On I_BNE shift to state 133
-- On I_BEQ shift to state 135
-- On I_B shift to state 137
-- On I_ANDS shift to state 139
-- On I_AND shift to state 145
-- On I_ADDS shift to state 151
-- On I_ADD shift to state 158
-- On instr_option shift to state 165
-- On instr shift to state 166
## Reductions:
-- On SEMI reduce production instr_option ->
-- On PIPE reduce production instr_option ->

State 10:
## Known stack suffix:
## I_XORS
## LR(1) items:
instr -> I_XORS . reg COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 13
## Reductions:

State 11:
## Known stack suffix:
## SYMB_REG
## LR(1) items:
reg -> SYMB_REG . [ SEMI RBRK PIPE COMMA ]
## Transitions:
## Reductions:
-- On SEMI reduce production reg -> SYMB_REG
-- On RBRK reduce production reg -> SYMB_REG
-- On PIPE reduce production reg -> SYMB_REG
-- On COMMA reduce production reg -> SYMB_REG

State 12:
## Known stack suffix:
## ARCH_REG
## LR(1) items:
reg -> ARCH_REG . [ SEMI RBRK PIPE COMMA ]
## Transitions:
## Reductions:
-- On SEMI reduce production reg -> ARCH_REG
-- On RBRK reduce production reg -> ARCH_REG
-- On PIPE reduce production reg -> ARCH_REG
-- On COMMA reduce production reg -> ARCH_REG

State 13:
## Known stack suffix:
## I_XORS reg
## LR(1) items:
instr -> I_XORS reg . COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## I_XORS reg COMMA
## LR(1) items:
instr -> I_XORS reg COMMA . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## I_XORS reg COMMA reg
## LR(1) items:
instr -> I_XORS reg COMMA reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## I_XORS reg COMMA reg COMMA
## LR(1) items:
instr -> I_XORS reg COMMA reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## I_XORS reg COMMA reg COMMA reg
## LR(1) items:
instr -> I_XORS reg COMMA reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_XORS reg COMMA reg COMMA reg
-- On PIPE reduce production instr -> I_XORS reg COMMA reg COMMA reg

State 18:
## Known stack suffix:
## I_XOR
## LR(1) items:
instr -> I_XOR . reg COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## I_XOR reg
## LR(1) items:
instr -> I_XOR reg . COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## I_XOR reg COMMA
## LR(1) items:
instr -> I_XOR reg COMMA . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## I_XOR reg COMMA reg
## LR(1) items:
instr -> I_XOR reg COMMA reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## I_XOR reg COMMA reg COMMA
## LR(1) items:
instr -> I_XOR reg COMMA reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## I_XOR reg COMMA reg COMMA reg
## LR(1) items:
instr -> I_XOR reg COMMA reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_XOR reg COMMA reg COMMA reg
-- On PIPE reduce production instr -> I_XOR reg COMMA reg COMMA reg

State 24:
## Known stack suffix:
## I_STRNE
## LR(1) items:
instr -> I_STRNE . reg COMMA reg [ SEMI PIPE ]
instr -> I_STRNE . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STRNE . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## I_STRNE reg
## LR(1) items:
instr -> I_STRNE reg . COMMA reg [ SEMI PIPE ]
instr -> I_STRNE reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STRNE reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## I_STRNE reg COMMA
## LR(1) items:
instr -> I_STRNE reg COMMA . reg [ SEMI PIPE ]
instr -> I_STRNE reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STRNE reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 27
-- On ARCH_REG shift to state 12
-- On reg shift to state 33
## Reductions:

State 27:
## Known stack suffix:
## I_STRNE reg COMMA LBRK
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_STRNE reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## I_STRNE reg COMMA LBRK reg
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_STRNE reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 29
-- On COMMA shift to state 30
## Reductions:

State 29:
## Known stack suffix:
## I_STRNE reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STRNE reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_STRNE reg COMMA LBRK reg RBRK

State 30:
## Known stack suffix:
## I_STRNE reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## I_STRNE reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## I_STRNE reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_STRNE reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STRNE reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_STRNE reg COMMA LBRK reg COMMA reg RBRK

State 33:
## Known stack suffix:
## I_STRNE reg COMMA reg
## LR(1) items:
instr -> I_STRNE reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STRNE reg COMMA reg
-- On PIPE reduce production instr -> I_STRNE reg COMMA reg

State 34:
## Known stack suffix:
## I_STREX
## LR(1) items:
instr -> I_STREX . reg COMMA reg COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## I_STREX reg
## LR(1) items:
instr -> I_STREX reg . COMMA reg COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## I_STREX reg COMMA
## LR(1) items:
instr -> I_STREX reg COMMA . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## I_STREX reg COMMA reg
## LR(1) items:
instr -> I_STREX reg COMMA reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## I_STREX reg COMMA reg COMMA
## LR(1) items:
instr -> I_STREX reg COMMA reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On LBRK shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## I_STREX reg COMMA reg COMMA LBRK
## LR(1) items:
instr -> I_STREX reg COMMA reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## I_STREX reg COMMA reg COMMA LBRK reg
## LR(1) items:
instr -> I_STREX reg COMMA reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## I_STREX reg COMMA reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_STREX reg COMMA reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STREX reg COMMA reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_STREX reg COMMA reg COMMA LBRK reg RBRK

State 42:
## Known stack suffix:
## I_STREQ
## LR(1) items:
instr -> I_STREQ . reg COMMA reg [ SEMI PIPE ]
instr -> I_STREQ . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STREQ . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## I_STREQ reg
## LR(1) items:
instr -> I_STREQ reg . COMMA reg [ SEMI PIPE ]
instr -> I_STREQ reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STREQ reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## I_STREQ reg COMMA
## LR(1) items:
instr -> I_STREQ reg COMMA . reg [ SEMI PIPE ]
instr -> I_STREQ reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STREQ reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 45
-- On ARCH_REG shift to state 12
-- On reg shift to state 51
## Reductions:

State 45:
## Known stack suffix:
## I_STREQ reg COMMA LBRK
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_STREQ reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## I_STREQ reg COMMA LBRK reg
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_STREQ reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 47
-- On COMMA shift to state 48
## Reductions:

State 47:
## Known stack suffix:
## I_STREQ reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STREQ reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_STREQ reg COMMA LBRK reg RBRK

State 48:
## Known stack suffix:
## I_STREQ reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## I_STREQ reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## I_STREQ reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_STREQ reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STREQ reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_STREQ reg COMMA LBRK reg COMMA reg RBRK

State 51:
## Known stack suffix:
## I_STREQ reg COMMA reg
## LR(1) items:
instr -> I_STREQ reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STREQ reg COMMA reg
-- On PIPE reduce production instr -> I_STREQ reg COMMA reg

State 52:
## Known stack suffix:
## I_STR
## LR(1) items:
instr -> I_STR . reg COMMA reg [ SEMI PIPE ]
instr -> I_STR . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STR . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## I_STR reg
## LR(1) items:
instr -> I_STR reg . COMMA reg [ SEMI PIPE ]
instr -> I_STR reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STR reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## I_STR reg COMMA
## LR(1) items:
instr -> I_STR reg COMMA . reg [ SEMI PIPE ]
instr -> I_STR reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_STR reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 55
-- On ARCH_REG shift to state 12
-- On reg shift to state 61
## Reductions:

State 55:
## Known stack suffix:
## I_STR reg COMMA LBRK
## LR(1) items:
instr -> I_STR reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_STR reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## I_STR reg COMMA LBRK reg
## LR(1) items:
instr -> I_STR reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_STR reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 57
-- On COMMA shift to state 58
## Reductions:

State 57:
## Known stack suffix:
## I_STR reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_STR reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STR reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_STR reg COMMA LBRK reg RBRK

State 58:
## Known stack suffix:
## I_STR reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_STR reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## I_STR reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_STR reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## I_STR reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_STR reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STR reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_STR reg COMMA LBRK reg COMMA reg RBRK

State 61:
## Known stack suffix:
## I_STR reg COMMA reg
## LR(1) items:
instr -> I_STR reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_STR reg COMMA reg
-- On PIPE reduce production instr -> I_STR reg COMMA reg

State 62:
## Known stack suffix:
## I_MOVNE
## LR(1) items:
instr -> I_MOVNE . reg COMMA k [ SEMI PIPE ]
instr -> I_MOVNE . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## I_MOVNE reg
## LR(1) items:
instr -> I_MOVNE reg . COMMA k [ SEMI PIPE ]
instr -> I_MOVNE reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## I_MOVNE reg COMMA
## LR(1) items:
instr -> I_MOVNE reg COMMA . k [ SEMI PIPE ]
instr -> I_MOVNE reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 66
-- On k shift to state 67
## Reductions:

State 65:
## Known stack suffix:
## NUM
## LR(1) items:
k -> NUM . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production k -> NUM
-- On PIPE reduce production k -> NUM

State 66:
## Known stack suffix:
## I_MOVNE reg COMMA reg
## LR(1) items:
instr -> I_MOVNE reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOVNE reg COMMA reg
-- On PIPE reduce production instr -> I_MOVNE reg COMMA reg

State 67:
## Known stack suffix:
## I_MOVNE reg COMMA k
## LR(1) items:
instr -> I_MOVNE reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOVNE reg COMMA k
-- On PIPE reduce production instr -> I_MOVNE reg COMMA k

State 68:
## Known stack suffix:
## I_MOVEQ
## LR(1) items:
instr -> I_MOVEQ . reg COMMA k [ SEMI PIPE ]
instr -> I_MOVEQ . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## I_MOVEQ reg
## LR(1) items:
instr -> I_MOVEQ reg . COMMA k [ SEMI PIPE ]
instr -> I_MOVEQ reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## I_MOVEQ reg COMMA
## LR(1) items:
instr -> I_MOVEQ reg COMMA . k [ SEMI PIPE ]
instr -> I_MOVEQ reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 71
-- On k shift to state 72
## Reductions:

State 71:
## Known stack suffix:
## I_MOVEQ reg COMMA reg
## LR(1) items:
instr -> I_MOVEQ reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOVEQ reg COMMA reg
-- On PIPE reduce production instr -> I_MOVEQ reg COMMA reg

State 72:
## Known stack suffix:
## I_MOVEQ reg COMMA k
## LR(1) items:
instr -> I_MOVEQ reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOVEQ reg COMMA k
-- On PIPE reduce production instr -> I_MOVEQ reg COMMA k

State 73:
## Known stack suffix:
## I_MOV
## LR(1) items:
instr -> I_MOV . reg COMMA k [ SEMI PIPE ]
instr -> I_MOV . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## I_MOV reg
## LR(1) items:
instr -> I_MOV reg . COMMA k [ SEMI PIPE ]
instr -> I_MOV reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## I_MOV reg COMMA
## LR(1) items:
instr -> I_MOV reg COMMA . k [ SEMI PIPE ]
instr -> I_MOV reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 76
-- On k shift to state 77
## Reductions:

State 76:
## Known stack suffix:
## I_MOV reg COMMA reg
## LR(1) items:
instr -> I_MOV reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOV reg COMMA reg
-- On PIPE reduce production instr -> I_MOV reg COMMA reg

State 77:
## Known stack suffix:
## I_MOV reg COMMA k
## LR(1) items:
instr -> I_MOV reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_MOV reg COMMA k
-- On PIPE reduce production instr -> I_MOV reg COMMA k

State 78:
## Known stack suffix:
## I_LDRNE
## LR(1) items:
instr -> I_LDRNE . reg COMMA reg [ SEMI PIPE ]
instr -> I_LDRNE . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDRNE . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## I_LDRNE reg
## LR(1) items:
instr -> I_LDRNE reg . COMMA reg [ SEMI PIPE ]
instr -> I_LDRNE reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDRNE reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## I_LDRNE reg COMMA
## LR(1) items:
instr -> I_LDRNE reg COMMA . reg [ SEMI PIPE ]
instr -> I_LDRNE reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDRNE reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 81
-- On ARCH_REG shift to state 12
-- On reg shift to state 87
## Reductions:

State 81:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_LDRNE reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK reg
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_LDRNE reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 83
-- On COMMA shift to state 84
## Reductions:

State 83:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDRNE reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_LDRNE reg COMMA LBRK reg RBRK

State 84:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## I_LDRNE reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_LDRNE reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDRNE reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_LDRNE reg COMMA LBRK reg COMMA reg RBRK

State 87:
## Known stack suffix:
## I_LDRNE reg COMMA reg
## LR(1) items:
instr -> I_LDRNE reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDRNE reg COMMA reg
-- On PIPE reduce production instr -> I_LDRNE reg COMMA reg

State 88:
## Known stack suffix:
## I_LDREX
## LR(1) items:
instr -> I_LDREX . reg COMMA reg [ SEMI PIPE ]
instr -> I_LDREX . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## I_LDREX reg
## LR(1) items:
instr -> I_LDREX reg . COMMA reg [ SEMI PIPE ]
instr -> I_LDREX reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## I_LDREX reg COMMA
## LR(1) items:
instr -> I_LDREX reg COMMA . reg [ SEMI PIPE ]
instr -> I_LDREX reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 91
-- On ARCH_REG shift to state 12
-- On reg shift to state 94
## Reductions:

State 91:
## Known stack suffix:
## I_LDREX reg COMMA LBRK
## LR(1) items:
instr -> I_LDREX reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## I_LDREX reg COMMA LBRK reg
## LR(1) items:
instr -> I_LDREX reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## I_LDREX reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_LDREX reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDREX reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_LDREX reg COMMA LBRK reg RBRK

State 94:
## Known stack suffix:
## I_LDREX reg COMMA reg
## LR(1) items:
instr -> I_LDREX reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDREX reg COMMA reg
-- On PIPE reduce production instr -> I_LDREX reg COMMA reg

State 95:
## Known stack suffix:
## I_LDREQ
## LR(1) items:
instr -> I_LDREQ . reg COMMA reg [ SEMI PIPE ]
instr -> I_LDREQ . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDREQ . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## I_LDREQ reg
## LR(1) items:
instr -> I_LDREQ reg . COMMA reg [ SEMI PIPE ]
instr -> I_LDREQ reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDREQ reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## I_LDREQ reg COMMA
## LR(1) items:
instr -> I_LDREQ reg COMMA . reg [ SEMI PIPE ]
instr -> I_LDREQ reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDREQ reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 98
-- On ARCH_REG shift to state 12
-- On reg shift to state 104
## Reductions:

State 98:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_LDREQ reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK reg
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_LDREQ reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 100
-- On COMMA shift to state 101
## Reductions:

State 100:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDREQ reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_LDREQ reg COMMA LBRK reg RBRK

State 101:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## I_LDREQ reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_LDREQ reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDREQ reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_LDREQ reg COMMA LBRK reg COMMA reg RBRK

State 104:
## Known stack suffix:
## I_LDREQ reg COMMA reg
## LR(1) items:
instr -> I_LDREQ reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDREQ reg COMMA reg
-- On PIPE reduce production instr -> I_LDREQ reg COMMA reg

State 105:
## Known stack suffix:
## I_LDR
## LR(1) items:
instr -> I_LDR . reg COMMA reg [ SEMI PIPE ]
instr -> I_LDR . reg COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDR . reg COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## I_LDR reg
## LR(1) items:
instr -> I_LDR reg . COMMA reg [ SEMI PIPE ]
instr -> I_LDR reg . COMMA LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDR reg . COMMA LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## I_LDR reg COMMA
## LR(1) items:
instr -> I_LDR reg COMMA . reg [ SEMI PIPE ]
instr -> I_LDR reg COMMA . LBRK reg RBRK [ SEMI PIPE ]
instr -> I_LDR reg COMMA . LBRK reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On LBRK shift to state 108
-- On ARCH_REG shift to state 12
-- On reg shift to state 114
## Reductions:

State 108:
## Known stack suffix:
## I_LDR reg COMMA LBRK
## LR(1) items:
instr -> I_LDR reg COMMA LBRK . reg RBRK [ SEMI PIPE ]
instr -> I_LDR reg COMMA LBRK . reg COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## I_LDR reg COMMA LBRK reg
## LR(1) items:
instr -> I_LDR reg COMMA LBRK reg . RBRK [ SEMI PIPE ]
instr -> I_LDR reg COMMA LBRK reg . COMMA reg RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 110
-- On COMMA shift to state 111
## Reductions:

State 110:
## Known stack suffix:
## I_LDR reg COMMA LBRK reg RBRK
## LR(1) items:
instr -> I_LDR reg COMMA LBRK reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDR reg COMMA LBRK reg RBRK
-- On PIPE reduce production instr -> I_LDR reg COMMA LBRK reg RBRK

State 111:
## Known stack suffix:
## I_LDR reg COMMA LBRK reg COMMA
## LR(1) items:
instr -> I_LDR reg COMMA LBRK reg COMMA . reg RBRK [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## I_LDR reg COMMA LBRK reg COMMA reg
## LR(1) items:
instr -> I_LDR reg COMMA LBRK reg COMMA reg . RBRK [ SEMI PIPE ]
## Transitions:
-- On RBRK shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## I_LDR reg COMMA LBRK reg COMMA reg RBRK
## LR(1) items:
instr -> I_LDR reg COMMA LBRK reg COMMA reg RBRK . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDR reg COMMA LBRK reg COMMA reg RBRK
-- On PIPE reduce production instr -> I_LDR reg COMMA LBRK reg COMMA reg RBRK

State 114:
## Known stack suffix:
## I_LDR reg COMMA reg
## LR(1) items:
instr -> I_LDR reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_LDR reg COMMA reg
-- On PIPE reduce production instr -> I_LDR reg COMMA reg

State 115:
## Known stack suffix:
## I_ISB
## LR(1) items:
instr -> I_ISB . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ISB
-- On PIPE reduce production instr -> I_ISB

State 116:
## Known stack suffix:
## I_DSB
## LR(1) items:
instr -> I_DSB . opt [ SEMI PIPE ]
instr -> I_DSB . [ SEMI PIPE ]
## Transitions:
-- On I_SY shift to state 117
-- On I_ST shift to state 118
-- On I_OSHST shift to state 119
-- On I_OSH shift to state 120
-- On I_NSHST shift to state 121
-- On I_NSH shift to state 122
-- On I_ISHST shift to state 123
-- On I_ISH shift to state 124
-- On opt shift to state 125
## Reductions:
-- On SEMI reduce production instr -> I_DSB
-- On PIPE reduce production instr -> I_DSB

State 117:
## Known stack suffix:
## I_SY
## LR(1) items:
opt -> I_SY . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_SY
-- On PIPE reduce production opt -> I_SY

State 118:
## Known stack suffix:
## I_ST
## LR(1) items:
opt -> I_ST . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_ST
-- On PIPE reduce production opt -> I_ST

State 119:
## Known stack suffix:
## I_OSHST
## LR(1) items:
opt -> I_OSHST . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_OSHST
-- On PIPE reduce production opt -> I_OSHST

State 120:
## Known stack suffix:
## I_OSH
## LR(1) items:
opt -> I_OSH . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_OSH
-- On PIPE reduce production opt -> I_OSH

State 121:
## Known stack suffix:
## I_NSHST
## LR(1) items:
opt -> I_NSHST . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_NSHST
-- On PIPE reduce production opt -> I_NSHST

State 122:
## Known stack suffix:
## I_NSH
## LR(1) items:
opt -> I_NSH . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_NSH
-- On PIPE reduce production opt -> I_NSH

State 123:
## Known stack suffix:
## I_ISHST
## LR(1) items:
opt -> I_ISHST . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_ISHST
-- On PIPE reduce production opt -> I_ISHST

State 124:
## Known stack suffix:
## I_ISH
## LR(1) items:
opt -> I_ISH . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production opt -> I_ISH
-- On PIPE reduce production opt -> I_ISH

State 125:
## Known stack suffix:
## I_DSB opt
## LR(1) items:
instr -> I_DSB opt . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_DSB opt
-- On PIPE reduce production instr -> I_DSB opt

State 126:
## Known stack suffix:
## I_DMB
## LR(1) items:
instr -> I_DMB . [ SEMI PIPE ]
instr -> I_DMB . opt [ SEMI PIPE ]
## Transitions:
-- On I_SY shift to state 117
-- On I_ST shift to state 118
-- On I_OSHST shift to state 119
-- On I_OSH shift to state 120
-- On I_NSHST shift to state 121
-- On I_NSH shift to state 122
-- On I_ISHST shift to state 123
-- On I_ISH shift to state 124
-- On opt shift to state 127
## Reductions:
-- On SEMI reduce production instr -> I_DMB
-- On PIPE reduce production instr -> I_DMB

State 127:
## Known stack suffix:
## I_DMB opt
## LR(1) items:
instr -> I_DMB opt . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_DMB opt
-- On PIPE reduce production instr -> I_DMB opt

State 128:
## Known stack suffix:
## I_CMP
## LR(1) items:
instr -> I_CMP . reg COMMA k [ SEMI PIPE ]
instr -> I_CMP . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## I_CMP reg
## LR(1) items:
instr -> I_CMP reg . COMMA k [ SEMI PIPE ]
instr -> I_CMP reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## I_CMP reg COMMA
## LR(1) items:
instr -> I_CMP reg COMMA . k [ SEMI PIPE ]
instr -> I_CMP reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 131
-- On k shift to state 132
## Reductions:

State 131:
## Known stack suffix:
## I_CMP reg COMMA reg
## LR(1) items:
instr -> I_CMP reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_CMP reg COMMA reg
-- On PIPE reduce production instr -> I_CMP reg COMMA reg

State 132:
## Known stack suffix:
## I_CMP reg COMMA k
## LR(1) items:
instr -> I_CMP reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_CMP reg COMMA k
-- On PIPE reduce production instr -> I_CMP reg COMMA k

State 133:
## Known stack suffix:
## I_BNE
## LR(1) items:
instr -> I_BNE . NAME [ SEMI PIPE ]
## Transitions:
-- On NAME shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## I_BNE NAME
## LR(1) items:
instr -> I_BNE NAME . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_BNE NAME
-- On PIPE reduce production instr -> I_BNE NAME

State 135:
## Known stack suffix:
## I_BEQ
## LR(1) items:
instr -> I_BEQ . NAME [ SEMI PIPE ]
## Transitions:
-- On NAME shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## I_BEQ NAME
## LR(1) items:
instr -> I_BEQ NAME . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_BEQ NAME
-- On PIPE reduce production instr -> I_BEQ NAME

State 137:
## Known stack suffix:
## I_B
## LR(1) items:
instr -> I_B . NAME [ SEMI PIPE ]
## Transitions:
-- On NAME shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## I_B NAME
## LR(1) items:
instr -> I_B NAME . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_B NAME
-- On PIPE reduce production instr -> I_B NAME

State 139:
## Known stack suffix:
## I_ANDS
## LR(1) items:
instr -> I_ANDS . reg COMMA reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## I_ANDS reg
## LR(1) items:
instr -> I_ANDS reg . COMMA reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## I_ANDS reg COMMA
## LR(1) items:
instr -> I_ANDS reg COMMA . reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## I_ANDS reg COMMA reg
## LR(1) items:
instr -> I_ANDS reg COMMA reg . COMMA k [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## I_ANDS reg COMMA reg COMMA
## LR(1) items:
instr -> I_ANDS reg COMMA reg COMMA . k [ SEMI PIPE ]
## Transitions:
-- On NUM shift to state 65
-- On k shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## I_ANDS reg COMMA reg COMMA k
## LR(1) items:
instr -> I_ANDS reg COMMA reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ANDS reg COMMA reg COMMA k
-- On PIPE reduce production instr -> I_ANDS reg COMMA reg COMMA k

State 145:
## Known stack suffix:
## I_AND
## LR(1) items:
instr -> I_AND . reg COMMA reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## I_AND reg
## LR(1) items:
instr -> I_AND reg . COMMA reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## I_AND reg COMMA
## LR(1) items:
instr -> I_AND reg COMMA . reg COMMA k [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## I_AND reg COMMA reg
## LR(1) items:
instr -> I_AND reg COMMA reg . COMMA k [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## I_AND reg COMMA reg COMMA
## LR(1) items:
instr -> I_AND reg COMMA reg COMMA . k [ SEMI PIPE ]
## Transitions:
-- On NUM shift to state 65
-- On k shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## I_AND reg COMMA reg COMMA k
## LR(1) items:
instr -> I_AND reg COMMA reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_AND reg COMMA reg COMMA k
-- On PIPE reduce production instr -> I_AND reg COMMA reg COMMA k

State 151:
## Known stack suffix:
## I_ADDS
## LR(1) items:
instr -> I_ADDS . reg COMMA reg COMMA k [ SEMI PIPE ]
instr -> I_ADDS . reg COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## I_ADDS reg
## LR(1) items:
instr -> I_ADDS reg . COMMA reg COMMA k [ SEMI PIPE ]
instr -> I_ADDS reg . COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## I_ADDS reg COMMA
## LR(1) items:
instr -> I_ADDS reg COMMA . reg COMMA k [ SEMI PIPE ]
instr -> I_ADDS reg COMMA . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## I_ADDS reg COMMA reg
## LR(1) items:
instr -> I_ADDS reg COMMA reg . COMMA k [ SEMI PIPE ]
instr -> I_ADDS reg COMMA reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## I_ADDS reg COMMA reg COMMA
## LR(1) items:
instr -> I_ADDS reg COMMA reg COMMA . k [ SEMI PIPE ]
instr -> I_ADDS reg COMMA reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 156
-- On k shift to state 157
## Reductions:

State 156:
## Known stack suffix:
## I_ADDS reg COMMA reg COMMA reg
## LR(1) items:
instr -> I_ADDS reg COMMA reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ADDS reg COMMA reg COMMA reg
-- On PIPE reduce production instr -> I_ADDS reg COMMA reg COMMA reg

State 157:
## Known stack suffix:
## I_ADDS reg COMMA reg COMMA k
## LR(1) items:
instr -> I_ADDS reg COMMA reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ADDS reg COMMA reg COMMA k
-- On PIPE reduce production instr -> I_ADDS reg COMMA reg COMMA k

State 158:
## Known stack suffix:
## I_ADD
## LR(1) items:
instr -> I_ADD . reg COMMA reg COMMA k [ SEMI PIPE ]
instr -> I_ADD . reg COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## I_ADD reg
## LR(1) items:
instr -> I_ADD reg . COMMA reg COMMA k [ SEMI PIPE ]
instr -> I_ADD reg . COMMA reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## I_ADD reg COMMA
## LR(1) items:
instr -> I_ADD reg COMMA . reg COMMA k [ SEMI PIPE ]
instr -> I_ADD reg COMMA . reg COMMA reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On ARCH_REG shift to state 12
-- On reg shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## I_ADD reg COMMA reg
## LR(1) items:
instr -> I_ADD reg COMMA reg . COMMA k [ SEMI PIPE ]
instr -> I_ADD reg COMMA reg . COMMA reg [ SEMI PIPE ]
## Transitions:
-- On COMMA shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## I_ADD reg COMMA reg COMMA
## LR(1) items:
instr -> I_ADD reg COMMA reg COMMA . k [ SEMI PIPE ]
instr -> I_ADD reg COMMA reg COMMA . reg [ SEMI PIPE ]
## Transitions:
-- On SYMB_REG shift to state 11
-- On NUM shift to state 65
-- On ARCH_REG shift to state 12
-- On reg shift to state 163
-- On k shift to state 164
## Reductions:

State 163:
## Known stack suffix:
## I_ADD reg COMMA reg COMMA reg
## LR(1) items:
instr -> I_ADD reg COMMA reg COMMA reg . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ADD reg COMMA reg COMMA reg
-- On PIPE reduce production instr -> I_ADD reg COMMA reg COMMA reg

State 164:
## Known stack suffix:
## I_ADD reg COMMA reg COMMA k
## LR(1) items:
instr -> I_ADD reg COMMA reg COMMA k . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr -> I_ADD reg COMMA reg COMMA k
-- On PIPE reduce production instr -> I_ADD reg COMMA reg COMMA k

State 165:
## Known stack suffix:
## NAME COLON instr_option
## LR(1) items:
instr_option -> NAME COLON instr_option . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr_option -> NAME COLON instr_option
-- On PIPE reduce production instr_option -> NAME COLON instr_option

State 166:
## Known stack suffix:
## instr
## LR(1) items:
instr_option -> instr . [ SEMI PIPE ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr_option -> instr
-- On PIPE reduce production instr_option -> instr

State 167:
## Known stack suffix:
## semi_opt proc_list iol_list
## LR(1) items:
main -> semi_opt proc_list iol_list . EOF [ # ]
## Transitions:
-- On EOF shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## semi_opt proc_list iol_list EOF
## LR(1) items:
main -> semi_opt proc_list iol_list EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production main -> semi_opt proc_list iol_list EOF

State 169:
## Known stack suffix:
## instr_option_list
## LR(1) items:
iol_list -> instr_option_list . SEMI [ EOF ]
iol_list -> instr_option_list . SEMI iol_list [ EOF ]
## Transitions:
-- On SEMI shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## instr_option_list SEMI
## LR(1) items:
iol_list -> instr_option_list SEMI . [ EOF ]
iol_list -> instr_option_list SEMI . iol_list [ EOF ]
## Transitions:
-- On NAME shift to state 8
-- On I_XORS shift to state 10
-- On I_XOR shift to state 18
-- On I_STRNE shift to state 24
-- On I_STREX shift to state 34
-- On I_STREQ shift to state 42
-- On I_STR shift to state 52
-- On I_MOVNE shift to state 62
-- On I_MOVEQ shift to state 68
-- On I_MOV shift to state 73
-- On I_LDRNE shift to state 78
-- On I_LDREX shift to state 88
-- On I_LDREQ shift to state 95
-- On I_LDR shift to state 105
-- On I_ISB shift to state 115
-- On I_DSB shift to state 116
-- On I_DMB shift to state 126
-- On I_CMP shift to state 128
-- On I_BNE shift to state 133
-- On I_BEQ shift to state 135
-- On I_B shift to state 137
-- On I_ANDS shift to state 139
-- On I_AND shift to state 145
-- On I_ADDS shift to state 151
-- On I_ADD shift to state 158
-- On iol_list shift to state 171
-- On instr_option_list shift to state 169
-- On instr_option shift to state 172
-- On instr shift to state 166
## Reductions:
-- On SEMI reduce production instr_option ->
-- On PIPE reduce production instr_option ->
-- On EOF reduce production iol_list -> instr_option_list SEMI

State 171:
## Known stack suffix:
## instr_option_list SEMI iol_list
## LR(1) items:
iol_list -> instr_option_list SEMI iol_list . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production iol_list -> instr_option_list SEMI iol_list

State 172:
## Known stack suffix:
## instr_option
## LR(1) items:
instr_option_list -> instr_option . [ SEMI ]
instr_option_list -> instr_option . PIPE instr_option_list [ SEMI ]
## Transitions:
-- On PIPE shift to state 173
## Reductions:
-- On SEMI reduce production instr_option_list -> instr_option

State 173:
## Known stack suffix:
## instr_option PIPE
## LR(1) items:
instr_option_list -> instr_option PIPE . instr_option_list [ SEMI ]
## Transitions:
-- On NAME shift to state 8
-- On I_XORS shift to state 10
-- On I_XOR shift to state 18
-- On I_STRNE shift to state 24
-- On I_STREX shift to state 34
-- On I_STREQ shift to state 42
-- On I_STR shift to state 52
-- On I_MOVNE shift to state 62
-- On I_MOVEQ shift to state 68
-- On I_MOV shift to state 73
-- On I_LDRNE shift to state 78
-- On I_LDREX shift to state 88
-- On I_LDREQ shift to state 95
-- On I_LDR shift to state 105
-- On I_ISB shift to state 115
-- On I_DSB shift to state 116
-- On I_DMB shift to state 126
-- On I_CMP shift to state 128
-- On I_BNE shift to state 133
-- On I_BEQ shift to state 135
-- On I_B shift to state 137
-- On I_ANDS shift to state 139
-- On I_AND shift to state 145
-- On I_ADDS shift to state 151
-- On I_ADD shift to state 158
-- On instr_option_list shift to state 174
-- On instr_option shift to state 172
-- On instr shift to state 166
## Reductions:
-- On SEMI reduce production instr_option ->
-- On PIPE reduce production instr_option ->

State 174:
## Known stack suffix:
## instr_option PIPE instr_option_list
## LR(1) items:
instr_option_list -> instr_option PIPE instr_option_list . [ SEMI ]
## Transitions:
## Reductions:
-- On SEMI reduce production instr_option_list -> instr_option PIPE instr_option_list

State 175:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On # accept main

