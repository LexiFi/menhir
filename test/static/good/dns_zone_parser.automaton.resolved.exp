State 0:
## Known stack suffix:
##
## LR(1) items:
zfile' -> . zfile [ # ]
## Transitions:
-- On zfile shift to state 1
-- On lines shift to state 2
## Default reduction:
-- After reading the next token, reduce production lines ->

State 1:
## Known stack suffix:
## zfile
## LR(1) items:
zfile' -> zfile . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept zfile

State 2:
## Known stack suffix:
## lines
## LR(1) items:
lines -> lines . EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
lines -> lines . origin EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
lines -> lines . ttl EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
lines -> lines . rrline EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
zfile -> lines . EOF [ # ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On STTL shift to state 15
-- On SORIGIN shift to state 21
-- On NUMBER shift to state 23
-- On EOL shift to state 43
-- On EOF shift to state 44
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On ttl shift to state 45
-- On rrline shift to state 47
-- On owner shift to state 49
-- On origin shift to state 179
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On domain shift to state 181
## Reductions:
-- On SPACE
--   reduce production owner ->

State 3:
## Known stack suffix:
## TYPE_TXT
## LR(1) items:
keyword_or_number -> TYPE_TXT . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_TXT

State 4:
## Known stack suffix:
## TYPE_TLSA
## LR(1) items:
keyword_or_number -> TYPE_TLSA . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_TLSA

State 5:
## Known stack suffix:
## TYPE_SSHFP
## LR(1) items:
keyword_or_number -> TYPE_SSHFP . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_SSHFP

State 6:
## Known stack suffix:
## TYPE_SRV
## LR(1) items:
keyword_or_number -> TYPE_SRV . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_SRV

State 7:
## Known stack suffix:
## TYPE_SOA
## LR(1) items:
keyword_or_number -> TYPE_SOA . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_SOA

State 8:
## Known stack suffix:
## TYPE_PTR
## LR(1) items:
keyword_or_number -> TYPE_PTR . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_PTR

State 9:
## Known stack suffix:
## TYPE_NS
## LR(1) items:
keyword_or_number -> TYPE_NS . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_NS

State 10:
## Known stack suffix:
## TYPE_MX
## LR(1) items:
keyword_or_number -> TYPE_MX . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_MX

State 11:
## Known stack suffix:
## TYPE_DNSKEY
## LR(1) items:
keyword_or_number -> TYPE_DNSKEY . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_DNSKEY

State 12:
## Known stack suffix:
## TYPE_CNAME
## LR(1) items:
keyword_or_number -> TYPE_CNAME . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_CNAME

State 13:
## Known stack suffix:
## TYPE_AAAA
## LR(1) items:
keyword_or_number -> TYPE_AAAA . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_AAAA

State 14:
## Known stack suffix:
## TYPE_A
## LR(1) items:
keyword_or_number -> TYPE_A . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> TYPE_A

State 15:
## Known stack suffix:
## STTL
## LR(1) items:
ttl -> STTL . s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 17
## Reductions:

State 16:
## Known stack suffix:
## SPACE
## LR(1) items:
s -> SPACE . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE NUMBER GENERIC EOL DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production s -> SPACE

State 17:
## Known stack suffix:
## STTL s
## LR(1) items:
s -> s . SPACE [ SPACE NUMBER ]
ttl -> STTL s . int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 20
## Reductions:

State 18:
## Known stack suffix:
## s SPACE
## LR(1) items:
s -> s SPACE . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE NUMBER GENERIC EOL DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production s -> s SPACE

State 19:
## Known stack suffix:
## NUMBER
## LR(1) items:
int32 -> NUMBER . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production int32 -> NUMBER

State 20:
## Known stack suffix:
## STTL s int32
## LR(1) items:
ttl -> STTL s int32 . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ttl -> STTL s int32

State 21:
## Known stack suffix:
## SORIGIN
## LR(1) items:
origin -> SORIGIN . s domain [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## SORIGIN s
## LR(1) items:
origin -> SORIGIN s . domain [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On domain shift to state 42
## Reductions:

State 23:
## Known stack suffix:
## NUMBER
## LR(1) items:
keyword_or_number -> NUMBER . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> NUMBER

State 24:
## Known stack suffix:
## DOT
## LR(1) items:
domain -> DOT . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production domain -> DOT

State 25:
## Known stack suffix:
## CLASS_IN
## LR(1) items:
keyword_or_number -> CLASS_IN . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> CLASS_IN

State 26:
## Known stack suffix:
## CLASS_HS
## LR(1) items:
keyword_or_number -> CLASS_HS . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> CLASS_HS

State 27:
## Known stack suffix:
## CLASS_CS
## LR(1) items:
keyword_or_number -> CLASS_CS . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> CLASS_CS

State 28:
## Known stack suffix:
## CLASS_CH
## LR(1) items:
keyword_or_number -> CLASS_CH . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production keyword_or_number -> CLASS_CH

State 29:
## Known stack suffix:
## CHARSTRING
## LR(1) items:
label_except_specials -> CHARSTRING . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_except_specials -> CHARSTRING

State 30:
## Known stack suffix:
## AT
## LR(1) items:
domain -> AT . [ SPACE EOL ]
label -> AT . [ DOT ]
## Transitions:
## Reductions:
-- On SPACE EOL
--   reduce production domain -> AT
-- On DOT
--   reduce production label -> AT

State 31:
## Known stack suffix:
## label_except_specials
## LR(1) items:
label_except_at -> label_except_specials . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_except_at -> label_except_specials

State 32:
## Known stack suffix:
## label_except_at
## LR(1) items:
domain -> label_except_at . [ SPACE EOL ]
label -> label_except_at . [ DOT ]
## Transitions:
## Reductions:
-- On SPACE EOL
--   reduce production domain -> label_except_at
-- On DOT
--   reduce production label -> label_except_at

State 33:
## Known stack suffix:
## label
## LR(1) items:
domain -> label . DOT [ SPACE EOL ]
domain -> label . DOT domain_labels [ SPACE EOL ]
domain -> label . DOT domain_labels DOT [ SPACE EOL ]
## Transitions:
-- On DOT shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## label DOT
## LR(1) items:
domain -> label DOT . [ SPACE EOL ]
domain -> label DOT . domain_labels [ SPACE EOL ]
domain -> label DOT . domain_labels DOT [ SPACE EOL ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 35
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 36
-- On label shift to state 37
-- On keyword_or_number shift to state 38
-- On domain_labels shift to state 39
## Reductions:
-- On SPACE EOL
--   reduce production domain -> label DOT

State 35:
## Known stack suffix:
## AT
## LR(1) items:
label -> AT . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> AT

State 36:
## Known stack suffix:
## label_except_at
## LR(1) items:
label -> label_except_at . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> label_except_at

State 37:
## Known stack suffix:
## label
## LR(1) items:
domain_labels -> label . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production domain_labels -> label

State 38:
## Known stack suffix:
## keyword_or_number
## LR(1) items:
label_except_at -> keyword_or_number . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_except_at -> keyword_or_number

State 39:
## Known stack suffix:
## label DOT domain_labels
## LR(1) items:
domain -> label DOT domain_labels . [ SPACE EOL ]
domain -> label DOT domain_labels . DOT [ SPACE EOL ]
domain_labels -> domain_labels . DOT label [ SPACE EOL DOT ]
## Transitions:
-- On DOT shift to state 40
## Reductions:
-- On SPACE EOL
--   reduce production domain -> label DOT domain_labels

State 40:
## Known stack suffix:
## label DOT domain_labels DOT
## LR(1) items:
domain -> label DOT domain_labels DOT . [ SPACE EOL ]
domain_labels -> domain_labels DOT . label [ SPACE EOL DOT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 35
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 36
-- On label shift to state 41
-- On keyword_or_number shift to state 38
## Reductions:
-- On SPACE EOL
--   reduce production domain -> label DOT domain_labels DOT

State 41:
## Known stack suffix:
## domain_labels DOT label
## LR(1) items:
domain_labels -> domain_labels DOT label . [ SPACE EOL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production domain_labels -> domain_labels DOT label

State 42:
## Known stack suffix:
## SORIGIN s domain
## LR(1) items:
origin -> SORIGIN s domain . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production origin -> SORIGIN s domain

State 43:
## Known stack suffix:
## lines EOL
## LR(1) items:
lines -> lines EOL . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lines -> lines EOL

State 44:
## Known stack suffix:
## lines EOF
## LR(1) items:
zfile -> lines EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production zfile -> lines EOF

State 45:
## Known stack suffix:
## lines ttl
## LR(1) items:
lines -> lines ttl . EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On EOL shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## lines ttl EOL
## LR(1) items:
lines -> lines ttl EOL . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lines -> lines ttl EOL

State 47:
## Known stack suffix:
## lines rrline
## LR(1) items:
lines -> lines rrline . EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On EOL shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## lines rrline EOL
## LR(1) items:
lines -> lines rrline EOL . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lines -> lines rrline EOL

State 49:
## Known stack suffix:
## owner
## LR(1) items:
rrline -> owner . s int32 s rrclass s rr [ EOL ]
rrline -> owner . s rrclass s int32 s rr [ EOL ]
rrline -> owner . s rrclass s rr [ EOL ]
rrline -> owner . s int32 s rr [ EOL ]
rrline -> owner . s rr [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## owner s
## LR(1) items:
rrline -> owner s . int32 s rrclass s rr [ EOL ]
rrline -> owner s . rrclass s int32 s rr [ EOL ]
rrline -> owner s . rrclass s rr [ EOL ]
rrline -> owner s . int32 s rr [ EOL ]
rrline -> owner s . rr [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING ]
## Transitions:
-- On TYPE_TXT shift to state 51
-- On TYPE_TLSA shift to state 60
-- On TYPE_SSHFP shift to state 74
-- On TYPE_SRV shift to state 81
-- On TYPE_SOA shift to state 92
-- On TYPE_PTR shift to state 107
-- On TYPE_NS shift to state 110
-- On TYPE_MX shift to state 113
-- On TYPE_GENERIC shift to state 118
-- On TYPE_DNSKEY shift to state 119
-- On TYPE_CNAME shift to state 128
-- On TYPE_CAA shift to state 131
-- On TYPE_AAAA shift to state 138
-- On TYPE_A shift to state 142
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On CLASS_IN shift to state 152
-- On CLASS_HS shift to state 153
-- On CLASS_CS shift to state 154
-- On CLASS_CH shift to state 155
-- On CHARSTRING shift to state 156
-- On rrclass shift to state 158
-- On rr shift to state 172
-- On int32 shift to state 173
-- On generic_type shift to state 164
## Reductions:

State 51:
## Known stack suffix:
## TYPE_TXT
## LR(1) items:
rr -> TYPE_TXT . s charstrings [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## TYPE_TXT s
## LR(1) items:
rr -> TYPE_TXT s . charstrings [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On charstrings shift to state 56
-- On charstring shift to state 59
## Reductions:

State 53:
## Known stack suffix:
## CHARSTRING
## LR(1) items:
charstring -> CHARSTRING . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charstring -> CHARSTRING

State 54:
## Known stack suffix:
## AT
## LR(1) items:
charstring -> AT . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charstring -> AT

State 55:
## Known stack suffix:
## keyword_or_number
## LR(1) items:
charstring -> keyword_or_number . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charstring -> keyword_or_number

State 56:
## Known stack suffix:
## TYPE_TXT s charstrings
## LR(1) items:
charstrings -> charstrings . s charstring [ SPACE EOL ]
rr -> TYPE_TXT s charstrings . [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 57
## Reductions:
-- On EOL
--   reduce production rr -> TYPE_TXT s charstrings

State 57:
## Known stack suffix:
## charstrings s
## LR(1) items:
charstrings -> charstrings s . charstring [ SPACE EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On charstring shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## charstrings s charstring
## LR(1) items:
charstrings -> charstrings s charstring . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charstrings -> charstrings s charstring

State 59:
## Known stack suffix:
## charstring
## LR(1) items:
charstrings -> charstring . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production charstrings -> charstring

State 60:
## Known stack suffix:
## TYPE_TLSA
## LR(1) items:
rr -> TYPE_TLSA . s int8 s int8 s int8 s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## TYPE_TLSA s
## LR(1) items:
rr -> TYPE_TLSA s . int8 s int8 s int8 s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 62
-- On int8 shift to state 63
## Reductions:

State 62:
## Known stack suffix:
## NUMBER
## LR(1) items:
int8 -> NUMBER . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production int8 -> NUMBER

State 63:
## Known stack suffix:
## TYPE_TLSA s int8
## LR(1) items:
rr -> TYPE_TLSA s int8 . s int8 s int8 s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## TYPE_TLSA s int8 s
## LR(1) items:
rr -> TYPE_TLSA s int8 s . int8 s int8 s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 62
-- On int8 shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## TYPE_TLSA s int8 s int8
## LR(1) items:
rr -> TYPE_TLSA s int8 s int8 . s int8 s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## TYPE_TLSA s int8 s int8 s
## LR(1) items:
rr -> TYPE_TLSA s int8 s int8 s . int8 s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 62
-- On int8 shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## TYPE_TLSA s int8 s int8 s int8
## LR(1) items:
rr -> TYPE_TLSA s int8 s int8 s int8 . s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## TYPE_TLSA s int8 s int8 s int8 s
## LR(1) items:
rr -> TYPE_TLSA s int8 s int8 s int8 s . hex [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On single_hex shift to state 69
-- On keyword_or_number shift to state 55
-- On hex shift to state 70
-- On charstring shift to state 73
## Reductions:

State 69:
## Known stack suffix:
## single_hex
## LR(1) items:
hex -> single_hex . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hex -> single_hex

State 70:
## Known stack suffix:
## TYPE_TLSA s int8 s int8 s int8 s hex
## LR(1) items:
hex -> hex . s single_hex [ SPACE EOL ]
rr -> TYPE_TLSA s int8 s int8 s int8 s hex . [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 71
## Reductions:
-- On EOL
--   reduce production rr -> TYPE_TLSA s int8 s int8 s int8 s hex

State 71:
## Known stack suffix:
## hex s
## LR(1) items:
hex -> hex s . single_hex [ SPACE EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On single_hex shift to state 72
-- On keyword_or_number shift to state 55
-- On charstring shift to state 73
## Reductions:

State 72:
## Known stack suffix:
## hex s single_hex
## LR(1) items:
hex -> hex s single_hex . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hex -> hex s single_hex

State 73:
## Known stack suffix:
## charstring
## LR(1) items:
single_hex -> charstring . [ SPACE EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production single_hex -> charstring

State 74:
## Known stack suffix:
## TYPE_SSHFP
## LR(1) items:
rr -> TYPE_SSHFP . s int8 s int8 s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## TYPE_SSHFP s
## LR(1) items:
rr -> TYPE_SSHFP s . int8 s int8 s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 62
-- On int8 shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## TYPE_SSHFP s int8
## LR(1) items:
rr -> TYPE_SSHFP s int8 . s int8 s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## TYPE_SSHFP s int8 s
## LR(1) items:
rr -> TYPE_SSHFP s int8 s . int8 s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 62
-- On int8 shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## TYPE_SSHFP s int8 s int8
## LR(1) items:
rr -> TYPE_SSHFP s int8 s int8 . s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## TYPE_SSHFP s int8 s int8 s
## LR(1) items:
rr -> TYPE_SSHFP s int8 s int8 s . hex [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On single_hex shift to state 69
-- On keyword_or_number shift to state 55
-- On hex shift to state 80
-- On charstring shift to state 73
## Reductions:

State 80:
## Known stack suffix:
## TYPE_SSHFP s int8 s int8 s hex
## LR(1) items:
hex -> hex . s single_hex [ SPACE EOL ]
rr -> TYPE_SSHFP s int8 s int8 s hex . [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 71
## Reductions:
-- On EOL
--   reduce production rr -> TYPE_SSHFP s int8 s int8 s hex

State 81:
## Known stack suffix:
## TYPE_SRV
## LR(1) items:
rr -> TYPE_SRV . s int16 s int16 s int16 s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## TYPE_SRV s
## LR(1) items:
rr -> TYPE_SRV s . int16 s int16 s int16 s hostname [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 84
## Reductions:

State 83:
## Known stack suffix:
## NUMBER
## LR(1) items:
int16 -> NUMBER . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production int16 -> NUMBER

State 84:
## Known stack suffix:
## TYPE_SRV s int16
## LR(1) items:
rr -> TYPE_SRV s int16 . s int16 s int16 s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## TYPE_SRV s int16 s
## LR(1) items:
rr -> TYPE_SRV s int16 s . int16 s int16 s hostname [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## TYPE_SRV s int16 s int16
## LR(1) items:
rr -> TYPE_SRV s int16 s int16 . s int16 s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## TYPE_SRV s int16 s int16 s
## LR(1) items:
rr -> TYPE_SRV s int16 s int16 s . int16 s hostname [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## TYPE_SRV s int16 s int16 s int16
## LR(1) items:
rr -> TYPE_SRV s int16 s int16 s int16 . s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## TYPE_SRV s int16 s int16 s int16 s
## LR(1) items:
rr -> TYPE_SRV s int16 s int16 s int16 s . hostname [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On hostname shift to state 90
-- On domain shift to state 91
## Reductions:

State 90:
## Known stack suffix:
## TYPE_SRV s int16 s int16 s int16 s hostname
## LR(1) items:
rr -> TYPE_SRV s int16 s int16 s int16 s hostname . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_SRV s int16 s int16 s int16 s hostname

State 91:
## Known stack suffix:
## domain
## LR(1) items:
hostname -> domain . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hostname -> domain

State 92:
## Known stack suffix:
## TYPE_SOA
## LR(1) items:
rr -> TYPE_SOA . s domain s domain s int32 s int32 s int32 s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## TYPE_SOA s
## LR(1) items:
rr -> TYPE_SOA s . domain s domain s int32 s int32 s int32 s int32 s int32 [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On domain shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## TYPE_SOA s domain
## LR(1) items:
rr -> TYPE_SOA s domain . s domain s int32 s int32 s int32 s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## TYPE_SOA s domain s
## LR(1) items:
rr -> TYPE_SOA s domain s . domain s int32 s int32 s int32 s int32 s int32 [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On domain shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## TYPE_SOA s domain s domain
## LR(1) items:
rr -> TYPE_SOA s domain s domain . s int32 s int32 s int32 s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## TYPE_SOA s domain s domain s
## LR(1) items:
rr -> TYPE_SOA s domain s domain s . int32 s int32 s int32 s int32 s int32 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 . s int32 s int32 s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s . int32 s int32 s int32 s int32 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 . s int32 s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s . int32 s int32 s int32 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s int32
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 . s int32 s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s int32 s
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 s . int32 s int32 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s int32 s int32
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 . s int32 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 s
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 s . int32 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On int32 shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 s int32
## LR(1) items:
rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 s int32 . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_SOA s domain s domain s int32 s int32 s int32 s int32 s int32

State 107:
## Known stack suffix:
## TYPE_PTR
## LR(1) items:
rr -> TYPE_PTR . s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## TYPE_PTR s
## LR(1) items:
rr -> TYPE_PTR s . hostname [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On hostname shift to state 109
-- On domain shift to state 91
## Reductions:

State 109:
## Known stack suffix:
## TYPE_PTR s hostname
## LR(1) items:
rr -> TYPE_PTR s hostname . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_PTR s hostname

State 110:
## Known stack suffix:
## TYPE_NS
## LR(1) items:
rr -> TYPE_NS . s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## TYPE_NS s
## LR(1) items:
rr -> TYPE_NS s . hostname [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On hostname shift to state 112
-- On domain shift to state 91
## Reductions:

State 112:
## Known stack suffix:
## TYPE_NS s hostname
## LR(1) items:
rr -> TYPE_NS s hostname . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_NS s hostname

State 113:
## Known stack suffix:
## TYPE_MX
## LR(1) items:
rr -> TYPE_MX . s int16 s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## TYPE_MX s
## LR(1) items:
rr -> TYPE_MX s . int16 s hostname [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## TYPE_MX s int16
## LR(1) items:
rr -> TYPE_MX s int16 . s hostname [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## TYPE_MX s int16 s
## LR(1) items:
rr -> TYPE_MX s int16 s . hostname [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On hostname shift to state 117
-- On domain shift to state 91
## Reductions:

State 117:
## Known stack suffix:
## TYPE_MX s int16 s hostname
## LR(1) items:
rr -> TYPE_MX s int16 s hostname . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_MX s int16 s hostname

State 118:
## Known stack suffix:
## TYPE_GENERIC
## LR(1) items:
generic_type -> TYPE_GENERIC . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_type -> TYPE_GENERIC

State 119:
## Known stack suffix:
## TYPE_DNSKEY
## LR(1) items:
rr -> TYPE_DNSKEY . s int16 s int16 s int16 s charstring [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## TYPE_DNSKEY s
## LR(1) items:
rr -> TYPE_DNSKEY s . int16 s int16 s int16 s charstring [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## TYPE_DNSKEY s int16
## LR(1) items:
rr -> TYPE_DNSKEY s int16 . s int16 s int16 s charstring [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## TYPE_DNSKEY s int16 s
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s . int16 s int16 s charstring [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## TYPE_DNSKEY s int16 s int16
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s int16 . s int16 s charstring [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## TYPE_DNSKEY s int16 s int16 s
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s int16 s . int16 s charstring [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## TYPE_DNSKEY s int16 s int16 s int16
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s int16 s int16 . s charstring [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## TYPE_DNSKEY s int16 s int16 s int16 s
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s int16 s int16 s . charstring [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On charstring shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## TYPE_DNSKEY s int16 s int16 s int16 s charstring
## LR(1) items:
rr -> TYPE_DNSKEY s int16 s int16 s int16 s charstring . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_DNSKEY s int16 s int16 s int16 s charstring

State 128:
## Known stack suffix:
## TYPE_CNAME
## LR(1) items:
rr -> TYPE_CNAME . s domain [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## TYPE_CNAME s
## LR(1) items:
rr -> TYPE_CNAME s . domain [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On DOT shift to state 24
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 29
-- On AT shift to state 30
-- On label_except_specials shift to state 31
-- On label_except_at shift to state 32
-- On label shift to state 33
-- On keyword_or_number shift to state 38
-- On domain shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## TYPE_CNAME s domain
## LR(1) items:
rr -> TYPE_CNAME s domain . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_CNAME s domain

State 131:
## Known stack suffix:
## TYPE_CAA
## LR(1) items:
rr -> TYPE_CAA . s int16 s charstring s charstrings [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## TYPE_CAA s
## LR(1) items:
rr -> TYPE_CAA s . int16 s charstring s charstrings [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 83
-- On int16 shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## TYPE_CAA s int16
## LR(1) items:
rr -> TYPE_CAA s int16 . s charstring s charstrings [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## TYPE_CAA s int16 s
## LR(1) items:
rr -> TYPE_CAA s int16 s . charstring s charstrings [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On charstring shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## TYPE_CAA s int16 s charstring
## LR(1) items:
rr -> TYPE_CAA s int16 s charstring . s charstrings [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## TYPE_CAA s int16 s charstring s
## LR(1) items:
rr -> TYPE_CAA s int16 s charstring s . charstrings [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On charstrings shift to state 137
-- On charstring shift to state 59
## Reductions:

State 137:
## Known stack suffix:
## TYPE_CAA s int16 s charstring s charstrings
## LR(1) items:
charstrings -> charstrings . s charstring [ SPACE EOL ]
rr -> TYPE_CAA s int16 s charstring s charstrings . [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 57
## Reductions:
-- On EOL
--   reduce production rr -> TYPE_CAA s int16 s charstring s charstrings

State 138:
## Known stack suffix:
## TYPE_AAAA
## LR(1) items:
rr -> TYPE_AAAA . s ipv6 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## TYPE_AAAA s
## LR(1) items:
rr -> TYPE_AAAA s . ipv6 [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On keyword_or_number shift to state 55
-- On ipv6 shift to state 140
-- On charstring shift to state 141
## Reductions:

State 140:
## Known stack suffix:
## TYPE_AAAA s ipv6
## LR(1) items:
rr -> TYPE_AAAA s ipv6 . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_AAAA s ipv6

State 141:
## Known stack suffix:
## charstring
## LR(1) items:
ipv6 -> charstring . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipv6 -> charstring

State 142:
## Known stack suffix:
## TYPE_A
## LR(1) items:
rr -> TYPE_A . s ipv4 [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## TYPE_A s
## LR(1) items:
rr -> TYPE_A s . ipv4 [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 144
-- On ipv4 shift to state 151
## Reductions:

State 144:
## Known stack suffix:
## NUMBER
## LR(1) items:
ipv4 -> NUMBER . DOT NUMBER DOT NUMBER DOT NUMBER [ EOL ]
## Transitions:
-- On DOT shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## NUMBER DOT
## LR(1) items:
ipv4 -> NUMBER DOT . NUMBER DOT NUMBER DOT NUMBER [ EOL ]
## Transitions:
-- On NUMBER shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## NUMBER DOT NUMBER
## LR(1) items:
ipv4 -> NUMBER DOT NUMBER . DOT NUMBER DOT NUMBER [ EOL ]
## Transitions:
-- On DOT shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## NUMBER DOT NUMBER DOT
## LR(1) items:
ipv4 -> NUMBER DOT NUMBER DOT . NUMBER DOT NUMBER [ EOL ]
## Transitions:
-- On NUMBER shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## NUMBER DOT NUMBER DOT NUMBER
## LR(1) items:
ipv4 -> NUMBER DOT NUMBER DOT NUMBER . DOT NUMBER [ EOL ]
## Transitions:
-- On DOT shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## NUMBER DOT NUMBER DOT NUMBER DOT
## LR(1) items:
ipv4 -> NUMBER DOT NUMBER DOT NUMBER DOT . NUMBER [ EOL ]
## Transitions:
-- On NUMBER shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## NUMBER DOT NUMBER DOT NUMBER DOT NUMBER
## LR(1) items:
ipv4 -> NUMBER DOT NUMBER DOT NUMBER DOT NUMBER . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipv4 -> NUMBER DOT NUMBER DOT NUMBER DOT NUMBER

State 151:
## Known stack suffix:
## TYPE_A s ipv4
## LR(1) items:
rr -> TYPE_A s ipv4 . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> TYPE_A s ipv4

State 152:
## Known stack suffix:
## CLASS_IN
## LR(1) items:
rrclass -> CLASS_IN . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrclass -> CLASS_IN

State 153:
## Known stack suffix:
## CLASS_HS
## LR(1) items:
rrclass -> CLASS_HS . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrclass -> CLASS_HS

State 154:
## Known stack suffix:
## CLASS_CS
## LR(1) items:
rrclass -> CLASS_CS . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrclass -> CLASS_CS

State 155:
## Known stack suffix:
## CLASS_CH
## LR(1) items:
rrclass -> CLASS_CH . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrclass -> CLASS_CH

State 156:
## Known stack suffix:
## CHARSTRING
## LR(1) items:
rr -> CHARSTRING . s [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## CHARSTRING s
## LR(1) items:
rr -> CHARSTRING s . [ EOL ]
s -> s . SPACE [ SPACE EOL ]
## Transitions:
-- On SPACE shift to state 18
## Reductions:
-- On EOL
--   reduce production rr -> CHARSTRING s

State 158:
## Known stack suffix:
## owner s rrclass
## LR(1) items:
rrline -> owner s rrclass . s int32 s rr [ EOL ]
rrline -> owner s rrclass . s rr [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## owner s rrclass s
## LR(1) items:
rrline -> owner s rrclass s . int32 s rr [ EOL ]
rrline -> owner s rrclass s . rr [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE NUMBER CHARSTRING ]
## Transitions:
-- On TYPE_TXT shift to state 51
-- On TYPE_TLSA shift to state 60
-- On TYPE_SSHFP shift to state 74
-- On TYPE_SRV shift to state 81
-- On TYPE_SOA shift to state 92
-- On TYPE_PTR shift to state 107
-- On TYPE_NS shift to state 110
-- On TYPE_MX shift to state 113
-- On TYPE_GENERIC shift to state 118
-- On TYPE_DNSKEY shift to state 119
-- On TYPE_CNAME shift to state 128
-- On TYPE_CAA shift to state 131
-- On TYPE_AAAA shift to state 138
-- On TYPE_A shift to state 142
-- On SPACE shift to state 18
-- On NUMBER shift to state 19
-- On CHARSTRING shift to state 156
-- On rr shift to state 160
-- On int32 shift to state 161
-- On generic_type shift to state 164
## Reductions:

State 160:
## Known stack suffix:
## owner s rrclass s rr
## LR(1) items:
rrline -> owner s rrclass s rr . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrline -> owner s rrclass s rr

State 161:
## Known stack suffix:
## owner s rrclass s int32
## LR(1) items:
rrline -> owner s rrclass s int32 . s rr [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## owner s rrclass s int32 s
## LR(1) items:
rrline -> owner s rrclass s int32 s . rr [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE CHARSTRING ]
## Transitions:
-- On TYPE_TXT shift to state 51
-- On TYPE_TLSA shift to state 60
-- On TYPE_SSHFP shift to state 74
-- On TYPE_SRV shift to state 81
-- On TYPE_SOA shift to state 92
-- On TYPE_PTR shift to state 107
-- On TYPE_NS shift to state 110
-- On TYPE_MX shift to state 113
-- On TYPE_GENERIC shift to state 118
-- On TYPE_DNSKEY shift to state 119
-- On TYPE_CNAME shift to state 128
-- On TYPE_CAA shift to state 131
-- On TYPE_AAAA shift to state 138
-- On TYPE_A shift to state 142
-- On SPACE shift to state 18
-- On CHARSTRING shift to state 156
-- On rr shift to state 163
-- On generic_type shift to state 164
## Reductions:

State 163:
## Known stack suffix:
## owner s rrclass s int32 s rr
## LR(1) items:
rrline -> owner s rrclass s int32 s rr . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrline -> owner s rrclass s int32 s rr

State 164:
## Known stack suffix:
## generic_type
## LR(1) items:
rr -> generic_type . s generic_rdata [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## generic_type s
## LR(1) items:
rr -> generic_type s . generic_rdata [ EOL ]
s -> s . SPACE [ SPACE GENERIC ]
## Transitions:
-- On SPACE shift to state 18
-- On GENERIC shift to state 166
-- On generic_rdata shift to state 171
## Reductions:

State 166:
## Known stack suffix:
## GENERIC
## LR(1) items:
generic_rdata -> GENERIC . s NUMBER s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## GENERIC s
## LR(1) items:
generic_rdata -> GENERIC s . NUMBER s hex [ EOL ]
s -> s . SPACE [ SPACE NUMBER ]
## Transitions:
-- On SPACE shift to state 18
-- On NUMBER shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## GENERIC s NUMBER
## LR(1) items:
generic_rdata -> GENERIC s NUMBER . s hex [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## GENERIC s NUMBER s
## LR(1) items:
generic_rdata -> GENERIC s NUMBER s . hex [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A SPACE NUMBER CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On TYPE_TXT shift to state 3
-- On TYPE_TLSA shift to state 4
-- On TYPE_SSHFP shift to state 5
-- On TYPE_SRV shift to state 6
-- On TYPE_SOA shift to state 7
-- On TYPE_PTR shift to state 8
-- On TYPE_NS shift to state 9
-- On TYPE_MX shift to state 10
-- On TYPE_DNSKEY shift to state 11
-- On TYPE_CNAME shift to state 12
-- On TYPE_AAAA shift to state 13
-- On TYPE_A shift to state 14
-- On SPACE shift to state 18
-- On NUMBER shift to state 23
-- On CLASS_IN shift to state 25
-- On CLASS_HS shift to state 26
-- On CLASS_CS shift to state 27
-- On CLASS_CH shift to state 28
-- On CHARSTRING shift to state 53
-- On AT shift to state 54
-- On single_hex shift to state 69
-- On keyword_or_number shift to state 55
-- On hex shift to state 170
-- On charstring shift to state 73
## Reductions:

State 170:
## Known stack suffix:
## GENERIC s NUMBER s hex
## LR(1) items:
generic_rdata -> GENERIC s NUMBER s hex . [ EOL ]
hex -> hex . s single_hex [ SPACE EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 71
## Reductions:
-- On EOL
--   reduce production generic_rdata -> GENERIC s NUMBER s hex

State 171:
## Known stack suffix:
## generic_type s generic_rdata
## LR(1) items:
rr -> generic_type s generic_rdata . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rr -> generic_type s generic_rdata

State 172:
## Known stack suffix:
## owner s rr
## LR(1) items:
rrline -> owner s rr . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrline -> owner s rr

State 173:
## Known stack suffix:
## owner s int32
## LR(1) items:
rrline -> owner s int32 . s rrclass s rr [ EOL ]
rrline -> owner s int32 . s rr [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## owner s int32 s
## LR(1) items:
rrline -> owner s int32 s . rrclass s rr [ EOL ]
rrline -> owner s int32 s . rr [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING ]
## Transitions:
-- On TYPE_TXT shift to state 51
-- On TYPE_TLSA shift to state 60
-- On TYPE_SSHFP shift to state 74
-- On TYPE_SRV shift to state 81
-- On TYPE_SOA shift to state 92
-- On TYPE_PTR shift to state 107
-- On TYPE_NS shift to state 110
-- On TYPE_MX shift to state 113
-- On TYPE_GENERIC shift to state 118
-- On TYPE_DNSKEY shift to state 119
-- On TYPE_CNAME shift to state 128
-- On TYPE_CAA shift to state 131
-- On TYPE_AAAA shift to state 138
-- On TYPE_A shift to state 142
-- On SPACE shift to state 18
-- On CLASS_IN shift to state 152
-- On CLASS_HS shift to state 153
-- On CLASS_CS shift to state 154
-- On CLASS_CH shift to state 155
-- On CHARSTRING shift to state 156
-- On rrclass shift to state 175
-- On rr shift to state 178
-- On generic_type shift to state 164
## Reductions:

State 175:
## Known stack suffix:
## owner s int32 s rrclass
## LR(1) items:
rrline -> owner s int32 s rrclass . s rr [ EOL ]
## Transitions:
-- On SPACE shift to state 16
-- On s shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## owner s int32 s rrclass s
## LR(1) items:
rrline -> owner s int32 s rrclass s . rr [ EOL ]
s -> s . SPACE [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_GENERIC TYPE_DNSKEY TYPE_CNAME TYPE_CAA TYPE_AAAA TYPE_A SPACE CHARSTRING ]
## Transitions:
-- On TYPE_TXT shift to state 51
-- On TYPE_TLSA shift to state 60
-- On TYPE_SSHFP shift to state 74
-- On TYPE_SRV shift to state 81
-- On TYPE_SOA shift to state 92
-- On TYPE_PTR shift to state 107
-- On TYPE_NS shift to state 110
-- On TYPE_MX shift to state 113
-- On TYPE_GENERIC shift to state 118
-- On TYPE_DNSKEY shift to state 119
-- On TYPE_CNAME shift to state 128
-- On TYPE_CAA shift to state 131
-- On TYPE_AAAA shift to state 138
-- On TYPE_A shift to state 142
-- On SPACE shift to state 18
-- On CHARSTRING shift to state 156
-- On rr shift to state 177
-- On generic_type shift to state 164
## Reductions:

State 177:
## Known stack suffix:
## owner s int32 s rrclass s rr
## LR(1) items:
rrline -> owner s int32 s rrclass s rr . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrline -> owner s int32 s rrclass s rr

State 178:
## Known stack suffix:
## owner s int32 s rr
## LR(1) items:
rrline -> owner s int32 s rr . [ EOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rrline -> owner s int32 s rr

State 179:
## Known stack suffix:
## lines origin
## LR(1) items:
lines -> lines origin . EOL [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
-- On EOL shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## lines origin EOL
## LR(1) items:
lines -> lines origin EOL . [ TYPE_TXT TYPE_TLSA TYPE_SSHFP TYPE_SRV TYPE_SOA TYPE_PTR TYPE_NS TYPE_MX TYPE_DNSKEY TYPE_CNAME TYPE_AAAA TYPE_A STTL SPACE SORIGIN NUMBER EOL EOF DOT CLASS_IN CLASS_HS CLASS_CS CLASS_CH CHARSTRING AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lines -> lines origin EOL

State 181:
## Known stack suffix:
## domain
## LR(1) items:
owner -> domain . [ SPACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production owner -> domain

