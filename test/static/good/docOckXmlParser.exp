Grammar has 159 nonterminal symbols, among which 2 start symbols.
Grammar has 117 terminal symbols.
Grammar has 410 productions.
nullable(variance) = false
nullable(value_resolved_reference) = false
nullable(value_reference) = false
nullable(value_identifier) = false
nullable(unit_import) = false
nullable(unit_content) = false
nullable(unit) = false
nullable(type_subst_parameter) = false
nullable(type_resolved_reference) = false
nullable(type_resolved_path) = false
nullable(type_resolved_fragment) = false
nullable(type_representation) = false
nullable(type_reference) = false
nullable(type_path) = false
nullable(type_parameter) = false
nullable(type_identifier) = false
nullable(type_fragment) = false
nullable(type_expr) = false
nullable(type_equation) = true
nullable(type_constraint) = false
nullable(text_element) = false
nullable(tag) = false
nullable(substitution) = false
nullable(special) = false
nullable(source_file) = false
nullable(source_build_dir) = false
nullable(source) = false
nullable(signature_resolved_reference) = false
nullable(signature_resolved_fragment) = false
nullable(signature_item) = false
nullable(signature_identifier) = false
nullable(signature_fragment) = false
nullable(see) = false
nullable(reference) = false
nullable(position) = false
nullable(poly_variant_kind) = false
nullable(poly_variant_element) = false
nullable(poly_variant) = false
nullable(parent_resolved_reference) = false
nullable(parent_reference) = false
nullable(parent_identifier) = false
nullable(packed_item) = false
nullable(package_substitution) = false
nullable(package) = false
nullable(option(variance)) = true
nullable(option(type_representation)) = true
nullable(option(type_expr)) = true
nullable(option(source)) = true
nullable(option(module_type_expr)) = true
nullable(option(location)) = true
nullable(option(label_identifier)) = true
nullable(option(digest)) = true
nullable(option(argument_label)) = true
nullable(offset) = false
nullable(object_method) = false
nullable(object_) = true
nullable(nonempty_list(type_expr)) = false
nullable(nonempty_list(text_element)) = false
nullable(nonempty_list(substitution)) = false
nullable(nonempty_list(name)) = false
nullable(nonempty_list(module_argument)) = false
nullable(nonempty_list(item)) = false
nullable(nonempty_list(field)) = false
nullable(nonempty_list(external_primitive)) = false
nullable(nonempty_list(extension_constructor)) = false
nullable(nonempty_list(constructor)) = false
nullable(name) = false
nullable(module_type_resolved_reference) = false
nullable(module_type_resolved_path) = false
nullable(module_type_reference) = false
nullable(module_type_path) = false
nullable(module_type_identifier) = false
nullable(module_type_expr) = false
nullable(module_resolved_reference) = false
nullable(module_resolved_path) = false
nullable(module_resolved_fragment) = false
nullable(module_reference) = false
nullable(module_path) = false
nullable(module_identifier) = false
nullable(module_fragment) = false
nullable(module_decl) = false
nullable(module_argument) = false
nullable(method_resolved_reference) = false
nullable(method_reference) = false
nullable(method_identifier) = false
nullable(location) = false
nullable(list(unit_import)) = true
nullable(list(type_subst_parameter)) = true
nullable(list(type_parameter)) = true
nullable(list(type_expr)) = true
nullable(list(type_constraint)) = true
nullable(list(text_element)) = true
nullable(list(tag)) = true
nullable(list(signature_item)) = true
nullable(list(poly_variant_element)) = true
nullable(list(packed_item)) = true
nullable(list(package_substitution)) = true
nullable(list(object_method)) = true
nullable(list(name)) = true
nullable(list(module_reference)) = true
nullable(list(class_signature_item)) = true
nullable(line) = false
nullable(label_resolved_reference) = false
nullable(label_reference) = false
nullable(label_identifier) = false
nullable(item) = false
nullable(int) = false
nullable(instance_variable_resolved_reference) = false
nullable(instance_variable_reference) = false
nullable(instance_variable_identifier) = false
nullable(flag(VIRTUAL)) = true
nullable(flag(PRIVATE)) = true
nullable(flag(OPEN)) = true
nullable(flag(MUTABLE)) = true
nullable(flag(INTERFACE)) = true
nullable(flag(CONSTANT)) = true
nullable(filename) = false
nullable(file) = false
nullable(field_resolved_reference) = false
nullable(field_reference) = false
nullable(field_identifier) = false
nullable(field) = false
nullable(external_primitive) = false
nullable(extension_resolved_reference) = false
nullable(extension_reference) = false
nullable(extension_identifier) = false
nullable(extension_constructor) = false
nullable(exception_resolved_reference) = false
nullable(exception_reference) = false
nullable(exception_identifier) = false
nullable(element_resolved_reference) = false
nullable(element_reference) = false
nullable(element_identifier) = false
nullable(doc_error) = false
nullable(doc) = true
nullable(digest) = false
nullable(datatype_resolved_reference) = false
nullable(constructor_result) = true
nullable(constructor_resolved_reference) = false
nullable(constructor_reference) = false
nullable(constructor_identifier) = false
nullable(constructor_arguments) = true
nullable(constructor) = false
nullable(comment) = false
nullable(column) = false
nullable(class_type_resolved_reference) = false
nullable(class_type_resolved_path) = false
nullable(class_type_reference) = false
nullable(class_type_path) = false
nullable(class_type_identifier) = false
nullable(class_type_expr) = false
nullable(class_signature_item) = false
nullable(class_signature_identifier) = false
nullable(class_resolved_reference) = false
nullable(class_resolved_path) = false
nullable(class_reference) = false
nullable(class_identifier) = false
nullable(class_decl) = false
nullable(argument_label) = false
first(variance) = POS NEG
first(value_resolved_reference) = VALUE IDENTIFIER
first(value_reference) = ROOT RESOLVED DOT
first(value_identifier) = VALUE
first(unit_import) = IMPORT
first(unit_content) = PACK MODULE
first(unit) = UNIT
first(type_subst_parameter) = PARAM
first(type_resolved_reference) = TYPE IDENTIFIER CLASS_TYPE CLASS
first(type_resolved_path) = TYPE IDENTIFIER CLASS_TYPE CLASS
first(type_resolved_fragment) = TYPE CLASS_TYPE CLASS
first(type_representation) = VARIANT RECORD EXTENSIBLE
first(type_reference) = ROOT RESOLVED DOT
first(type_path) = RESOLVED DOT
first(type_parameter) = PARAM
first(type_identifier) = TYPE
first(type_fragment) = RESOLVED DOT
first(type_expr) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
first(type_equation) = VAR TUPLE PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OBJECT CONSTRAINT CLASS ARROW ANY ALIAS
first(type_constraint) = CONSTRAINT
first(text_element) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CENTER BOLD
first(tag) = VERSION TAG SINCE SEE RETURN RAISE PARAM DEPRECATED BEFORE AUTHOR
first(substitution) = TYPE_SUBST TYPE MODULE_SUBST MODULE
first(special) = MODULES INDEX
first(source_file) = FILE
first(source_build_dir) = DIR
first(source) = SOURCE
first(signature_resolved_reference) = MODULE_TYPE MODULE IDENTIFIER
first(signature_resolved_fragment) = SUBST_ALIAS SUBST ROOT MODULE
first(signature_item) = VALUE TYPE STOP MODULE_TYPE MODULE INCLUDE EXTERNAL EXTENSION EXCEPTION COMMENT CLASS_TYPE CLASS
first(signature_identifier) = ROOT MODULE_TYPE MODULE Argument
first(signature_fragment) = RESOLVED DOT
first(see) = URL FILE DOC
first(reference) = VALUE TYPE SECTION MODULE_TYPE MODULE METHOD LINK INSTANCE_VARIABLE FIELD EXTENSION EXCEPTION ELEMENT Custom CONSTRUCTOR CLASS_TYPE CLASS
first(position) = POSITION
first(poly_variant_kind) = OPEN FIXED CLOSED
first(poly_variant_element) = TYPE CONSTRUCTOR
first(poly_variant) = OPEN FIXED CLOSED
first(parent_resolved_reference) = TYPE MODULE_TYPE MODULE IDENTIFIER CLASS_TYPE CLASS
first(parent_reference) = ROOT RESOLVED DOT
first(parent_identifier) = TYPE ROOT MODULE_TYPE MODULE CLASS_TYPE CLASS Argument
first(packed_item) = ITEM
first(package_substitution) = RESOLVED DOT
first(package) = RESOLVED DOT
first(option(variance)) = POS NEG
first(option(type_representation)) = VARIANT RECORD EXTENSIBLE
first(option(type_expr)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
first(option(source)) = SOURCE
first(option(module_type_expr)) = WITH TYPEOF SIGNATURE RESOLVED FUNCTOR DOT
first(option(location)) = LOCATION
first(option(label_identifier)) = LABEL
first(option(digest)) = DIGEST
first(option(argument_label)) = OPTIONAL LABEL
first(offset) = OFFSET
first(object_method) = NAME
first(object_) = OPEN NAME
first(nonempty_list(type_expr)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
first(nonempty_list(text_element)) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CENTER BOLD
first(nonempty_list(substitution)) = TYPE_SUBST TYPE MODULE_SUBST MODULE
first(nonempty_list(name)) = NAME
first(nonempty_list(module_argument)) = Argument
first(nonempty_list(item)) = ITEM
first(nonempty_list(field)) = FIELD
first(nonempty_list(external_primitive)) = PRIMITIVE
first(nonempty_list(extension_constructor)) = CONSTRUCTOR
first(nonempty_list(constructor)) = CONSTRUCTOR
first(name) = NAME
first(module_type_resolved_reference) = MODULE_TYPE IDENTIFIER
first(module_type_resolved_path) = MODULE_TYPE IDENTIFIER
first(module_type_reference) = ROOT RESOLVED DOT
first(module_type_path) = RESOLVED DOT
first(module_type_identifier) = MODULE_TYPE
first(module_type_expr) = WITH TYPEOF SIGNATURE RESOLVED FUNCTOR DOT
first(module_resolved_reference) = MODULE IDENTIFIER
first(module_resolved_path) = SUBST_ALIAS SUBST MODULE IDENTIFIER APPLY
first(module_resolved_fragment) = SUBST_ALIAS SUBST MODULE
first(module_reference) = ROOT RESOLVED DOT
first(module_path) = ROOT RESOLVED DOT APPLY
first(module_identifier) = ROOT MODULE Argument
first(module_fragment) = RESOLVED DOT
first(module_decl) = TYPE ALIAS
first(module_argument) = Argument
first(method_resolved_reference) = METHOD IDENTIFIER
first(method_reference) = ROOT RESOLVED DOT
first(method_identifier) = METHOD
first(location) = LOCATION
first(list(unit_import)) = IMPORT
first(list(type_subst_parameter)) = PARAM
first(list(type_parameter)) = PARAM
first(list(type_expr)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
first(list(type_constraint)) = CONSTRAINT
first(list(text_element)) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CENTER BOLD
first(list(tag)) = VERSION TAG SINCE SEE RETURN RAISE PARAM DEPRECATED BEFORE AUTHOR
first(list(signature_item)) = VALUE TYPE STOP MODULE_TYPE MODULE INCLUDE EXTERNAL EXTENSION EXCEPTION COMMENT CLASS_TYPE CLASS
first(list(poly_variant_element)) = TYPE CONSTRUCTOR
first(list(packed_item)) = ITEM
first(list(package_substitution)) = RESOLVED DOT
first(list(object_method)) = NAME
first(list(name)) = NAME
first(list(module_reference)) = ROOT RESOLVED DOT
first(list(class_signature_item)) = STOP METHOD INSTANCE_VARIABLE INHERIT CONSTRAINT COMMENT
first(line) = LINE
first(label_resolved_reference) = LABEL IDENTIFIER
first(label_reference) = ROOT RESOLVED DOT
first(label_identifier) = LABEL
first(item) = ITEM
first(int) = Data
first(instance_variable_resolved_reference) = INSTANCE_VARIABLE IDENTIFIER
first(instance_variable_reference) = ROOT RESOLVED DOT
first(instance_variable_identifier) = INSTANCE_VARIABLE
first(flag(VIRTUAL)) = VIRTUAL
first(flag(PRIVATE)) = PRIVATE
first(flag(OPEN)) = OPEN
first(flag(MUTABLE)) = MUTABLE
first(flag(INTERFACE)) = INTERFACE
first(flag(CONSTANT)) = CONSTANT
first(filename) = FILENAME
first(file) = DTD
first(field_resolved_reference) = IDENTIFIER FIELD
first(field_reference) = ROOT RESOLVED DOT
first(field_identifier) = FIELD
first(field) = FIELD
first(external_primitive) = PRIMITIVE
first(extension_resolved_reference) = IDENTIFIER EXTENSION EXCEPTION
first(extension_reference) = ROOT RESOLVED DOT
first(extension_identifier) = EXTENSION
first(extension_constructor) = CONSTRUCTOR
first(exception_resolved_reference) = IDENTIFIER EXCEPTION
first(exception_reference) = ROOT RESOLVED DOT
first(exception_identifier) = EXCEPTION
first(element_resolved_reference) = VALUE TYPE MODULE_TYPE MODULE METHOD LABEL INSTANCE_VARIABLE IDENTIFIER FIELD EXTENSION EXCEPTION CONSTRUCTOR CLASS_TYPE CLASS
first(element_reference) = ROOT RESOLVED DOT
first(element_identifier) = VALUE TYPE ROOT MODULE_TYPE MODULE METHOD LABEL INSTANCE_VARIABLE FIELD EXTENSION EXCEPTION CONSTRUCTOR CLASS_TYPE CLASS Argument
first(doc_error) = ERROR
first(doc) = DOC
first(digest) = DIGEST
first(datatype_resolved_reference) = TYPE IDENTIFIER
first(constructor_result) = RESULT
first(constructor_resolved_reference) = IDENTIFIER EXTENSION EXCEPTION CONSTRUCTOR
first(constructor_reference) = ROOT RESOLVED DOT
first(constructor_identifier) = CONSTRUCTOR
first(constructor_arguments) = ARGUMENTS
first(constructor) = CONSTRUCTOR
first(comment) = STOP COMMENT
first(column) = COLUMN
first(class_type_resolved_reference) = IDENTIFIER CLASS_TYPE CLASS
first(class_type_resolved_path) = IDENTIFIER CLASS_TYPE CLASS
first(class_type_reference) = ROOT RESOLVED DOT
first(class_type_path) = RESOLVED DOT
first(class_type_identifier) = CLASS_TYPE
first(class_type_expr) = SIGNATURE PATH
first(class_signature_item) = STOP METHOD INSTANCE_VARIABLE INHERIT CONSTRAINT COMMENT
first(class_signature_identifier) = CLASS_TYPE CLASS
first(class_resolved_reference) = IDENTIFIER CLASS
first(class_resolved_path) = IDENTIFIER CLASS
first(class_reference) = ROOT RESOLVED DOT
first(class_identifier) = CLASS
first(class_decl) = SIGNATURE PATH ARROW
first(argument_label) = OPTIONAL LABEL
minimal(variance) = (* 2 *) POS CLOSE
minimal(value_resolved_reference) = (* 9 *) IDENTIFIER VALUE ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(value_reference) = (* 3 *) ROOT Data CLOSE
minimal(value_identifier) = (* 7 *) VALUE ROOT Base Data CLOSE Data CLOSE
minimal(unit_import) = (* 3 *) IMPORT Data CLOSE
minimal(unit_content) = (* 2 *) MODULE CLOSE
minimal(unit) = (* 11 *) UNIT ROOT Base Data CLOSE DIGEST Data CLOSE MODULE CLOSE CLOSE
minimal(type_subst_parameter) = (* 3 *) PARAM Data CLOSE
minimal(type_resolved_reference) = (* 5 *) IDENTIFIER TYPE Data CLOSE CLOSE
minimal(type_resolved_path) = (* 5 *) IDENTIFIER TYPE Data CLOSE CLOSE
minimal(type_resolved_fragment) = (* 5 *) TYPE ROOT CLOSE Data CLOSE
minimal(type_representation) = (* 2 *) EXTENSIBLE CLOSE
minimal(type_reference) = (* 3 *) ROOT Data CLOSE
minimal(type_path) = (* 6 *) DOT ROOT Data CLOSE Data CLOSE
minimal(type_parameter) = (* 2 *) PARAM CLOSE
minimal(type_identifier) = (* 3 *) TYPE Data CLOSE
minimal(type_fragment) = (* 7 *) RESOLVED TYPE ROOT CLOSE Data CLOSE CLOSE
minimal(type_expr) = (* 2 *) ANY CLOSE
minimal(type_equation) = (* 0 *)
minimal(type_constraint) = (* 6 *) CONSTRAINT ANY CLOSE ANY CLOSE CLOSE
minimal(text_element) = (* 1 *) Data
minimal(tag) = (* 2 *) DEPRECATED CLOSE
minimal(substitution) = (* 9 *) TYPE RESOLVED TYPE ROOT CLOSE Data CLOSE CLOSE CLOSE
minimal(special) = (* 2 *) MODULES CLOSE
minimal(source_file) = (* 3 *) FILE Data CLOSE
minimal(source_build_dir) = (* 3 *) DIR Data CLOSE
minimal(source) = (* 11 *) SOURCE FILE Data CLOSE DIR Data CLOSE DIGEST Data CLOSE CLOSE
minimal(signature_resolved_reference) = (* 6 *) IDENTIFIER ROOT Base Data CLOSE CLOSE
minimal(signature_resolved_fragment) = (* 2 *) ROOT CLOSE
minimal(signature_item) = (* 2 *) COMMENT CLOSE
minimal(signature_identifier) = (* 4 *) ROOT Base Data CLOSE
minimal(signature_fragment) = (* 4 *) RESOLVED ROOT CLOSE CLOSE
minimal(see) = (* 3 *) URL Data CLOSE
minimal(reference) = (* 3 *) LINK Data CLOSE
minimal(position) = (* 8 *) POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE
minimal(poly_variant_kind) = (* 2 *) FIXED CLOSE
minimal(poly_variant_element) = (* 3 *) CONSTRUCTOR Data CLOSE
minimal(poly_variant) = (* 2 *) FIXED CLOSE
minimal(parent_resolved_reference) = (* 5 *) IDENTIFIER TYPE Data CLOSE CLOSE
minimal(parent_reference) = (* 3 *) ROOT Data CLOSE
minimal(parent_identifier) = (* 3 *) TYPE Data CLOSE
minimal(packed_item) = (* 9 *) ITEM ROOT Base Data CLOSE ROOT Data CLOSE CLOSE
minimal(package_substitution) = (* 9 *) RESOLVED TYPE ROOT CLOSE Data CLOSE CLOSE ANY CLOSE
minimal(package) = (* 6 *) DOT ROOT Data CLOSE Data CLOSE
minimal(option(variance)) = (* 0 *)
minimal(option(type_representation)) = (* 0 *)
minimal(option(type_expr)) = (* 0 *)
minimal(option(source)) = (* 0 *)
minimal(option(module_type_expr)) = (* 0 *)
minimal(option(location)) = (* 0 *)
minimal(option(label_identifier)) = (* 0 *)
minimal(option(digest)) = (* 0 *)
minimal(option(argument_label)) = (* 0 *)
minimal(offset) = (* 18 *) OFFSET POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE CLOSE
minimal(object_method) = (* 5 *) NAME Data CLOSE ANY CLOSE
minimal(object_) = (* 0 *)
minimal(nonempty_list(type_expr)) = (* 2 *) ANY CLOSE
minimal(nonempty_list(text_element)) = (* 1 *) Data
minimal(nonempty_list(substitution)) = (* 9 *) TYPE RESOLVED TYPE ROOT CLOSE Data CLOSE CLOSE CLOSE
minimal(nonempty_list(name)) = (* 3 *) NAME Data CLOSE
minimal(nonempty_list(module_argument)) = (* 2 *) Argument CLOSE
minimal(nonempty_list(item)) = (* 2 *) ITEM CLOSE
minimal(nonempty_list(field)) = (* 10 *) FIELD FIELD TYPE Data CLOSE Data CLOSE ANY CLOSE CLOSE
minimal(nonempty_list(external_primitive)) = (* 3 *) PRIMITIVE Data CLOSE
minimal(nonempty_list(extension_constructor)) = (* 9 *) CONSTRUCTOR EXTENSION ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(nonempty_list(constructor)) = (* 8 *) CONSTRUCTOR CONSTRUCTOR TYPE Data CLOSE Data CLOSE CLOSE
minimal(name) = (* 3 *) NAME Data CLOSE
minimal(module_type_resolved_reference) = (* 9 *) IDENTIFIER MODULE_TYPE ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(module_type_resolved_path) = (* 9 *) IDENTIFIER MODULE_TYPE ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(module_type_reference) = (* 3 *) ROOT Data CLOSE
minimal(module_type_path) = (* 6 *) DOT ROOT Data CLOSE Data CLOSE
minimal(module_type_identifier) = (* 7 *) MODULE_TYPE ROOT Base Data CLOSE Data CLOSE
minimal(module_type_expr) = (* 2 *) SIGNATURE CLOSE
minimal(module_resolved_reference) = (* 6 *) IDENTIFIER ROOT Base Data CLOSE CLOSE
minimal(module_resolved_path) = (* 6 *) IDENTIFIER ROOT Base Data CLOSE CLOSE
minimal(module_resolved_fragment) = (* 5 *) MODULE ROOT CLOSE Data CLOSE
minimal(module_reference) = (* 3 *) ROOT Data CLOSE
minimal(module_path) = (* 3 *) ROOT Data CLOSE
minimal(module_identifier) = (* 4 *) ROOT Base Data CLOSE
minimal(module_fragment) = (* 7 *) RESOLVED MODULE ROOT CLOSE Data CLOSE CLOSE
minimal(module_decl) = (* 4 *) TYPE SIGNATURE CLOSE CLOSE
minimal(module_argument) = (* 2 *) Argument CLOSE
minimal(method_resolved_reference) = (* 12 *) IDENTIFIER METHOD CLASS ROOT Base Data CLOSE Data CLOSE Data CLOSE CLOSE
minimal(method_reference) = (* 3 *) ROOT Data CLOSE
minimal(method_identifier) = (* 10 *) METHOD CLASS ROOT Base Data CLOSE Data CLOSE Data CLOSE
minimal(location) = (* 21 *) LOCATION FILENAME Data CLOSE POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE CLOSE
minimal(list(unit_import)) = (* 0 *)
minimal(list(type_subst_parameter)) = (* 0 *)
minimal(list(type_parameter)) = (* 0 *)
minimal(list(type_expr)) = (* 0 *)
minimal(list(type_constraint)) = (* 0 *)
minimal(list(text_element)) = (* 0 *)
minimal(list(tag)) = (* 0 *)
minimal(list(signature_item)) = (* 0 *)
minimal(list(poly_variant_element)) = (* 0 *)
minimal(list(packed_item)) = (* 0 *)
minimal(list(package_substitution)) = (* 0 *)
minimal(list(object_method)) = (* 0 *)
minimal(list(name)) = (* 0 *)
minimal(list(module_reference)) = (* 0 *)
minimal(list(class_signature_item)) = (* 0 *)
minimal(line) = (* 3 *) LINE Data CLOSE
minimal(label_resolved_reference) = (* 8 *) IDENTIFIER LABEL TYPE Data CLOSE Data CLOSE CLOSE
minimal(label_reference) = (* 3 *) ROOT Data CLOSE
minimal(label_identifier) = (* 6 *) LABEL TYPE Data CLOSE Data CLOSE
minimal(item) = (* 2 *) ITEM CLOSE
minimal(int) = (* 1 *) Data
minimal(instance_variable_resolved_reference) = (* 12 *) IDENTIFIER INSTANCE_VARIABLE CLASS ROOT Base Data CLOSE Data CLOSE Data CLOSE CLOSE
minimal(instance_variable_reference) = (* 3 *) ROOT Data CLOSE
minimal(instance_variable_identifier) = (* 10 *) INSTANCE_VARIABLE CLASS ROOT Base Data CLOSE Data CLOSE Data CLOSE
minimal(flag(VIRTUAL)) = (* 0 *)
minimal(flag(PRIVATE)) = (* 0 *)
minimal(flag(OPEN)) = (* 0 *)
minimal(flag(MUTABLE)) = (* 0 *)
minimal(flag(INTERFACE)) = (* 0 *)
minimal(flag(CONSTANT)) = (* 0 *)
minimal(filename) = (* 3 *) FILENAME Data CLOSE
minimal(file) = (* 13 *) DTD UNIT ROOT Base Data CLOSE DIGEST Data CLOSE MODULE CLOSE CLOSE EOF
minimal(field_resolved_reference) = (* 8 *) IDENTIFIER FIELD TYPE Data CLOSE Data CLOSE CLOSE
minimal(field_reference) = (* 3 *) ROOT Data CLOSE
minimal(field_identifier) = (* 6 *) FIELD TYPE Data CLOSE Data CLOSE
minimal(field) = (* 10 *) FIELD FIELD TYPE Data CLOSE Data CLOSE ANY CLOSE CLOSE
minimal(external_primitive) = (* 3 *) PRIMITIVE Data CLOSE
minimal(extension_resolved_reference) = (* 5 *) IDENTIFIER EXCEPTION Data CLOSE CLOSE
minimal(extension_reference) = (* 3 *) ROOT Data CLOSE
minimal(extension_identifier) = (* 7 *) EXTENSION ROOT Base Data CLOSE Data CLOSE
minimal(extension_constructor) = (* 9 *) CONSTRUCTOR EXTENSION ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(exception_resolved_reference) = (* 5 *) IDENTIFIER EXCEPTION Data CLOSE CLOSE
minimal(exception_reference) = (* 3 *) ROOT Data CLOSE
minimal(exception_identifier) = (* 3 *) EXCEPTION Data CLOSE
minimal(element_resolved_reference) = (* 5 *) IDENTIFIER TYPE Data CLOSE CLOSE
minimal(element_reference) = (* 3 *) ROOT Data CLOSE
minimal(element_identifier) = (* 3 *) TYPE Data CLOSE
minimal(doc_error) = (* 24 *) ERROR TYPE Data CLOSE OFFSET POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE POSITION LINE Data CLOSE COLUMN Data CLOSE CLOSE CLOSE Data CLOSE
minimal(doc) = (* 0 *)
minimal(digest) = (* 3 *) DIGEST Data CLOSE
minimal(datatype_resolved_reference) = (* 5 *) IDENTIFIER TYPE Data CLOSE CLOSE
minimal(constructor_result) = (* 0 *)
minimal(constructor_resolved_reference) = (* 5 *) IDENTIFIER EXCEPTION Data CLOSE CLOSE
minimal(constructor_reference) = (* 3 *) ROOT Data CLOSE
minimal(constructor_identifier) = (* 6 *) CONSTRUCTOR TYPE Data CLOSE Data CLOSE
minimal(constructor_arguments) = (* 0 *)
minimal(constructor) = (* 8 *) CONSTRUCTOR CONSTRUCTOR TYPE Data CLOSE Data CLOSE CLOSE
minimal(comment) = (* 2 *) COMMENT CLOSE
minimal(column) = (* 3 *) COLUMN Data CLOSE
minimal(class_type_resolved_reference) = (* 9 *) IDENTIFIER CLASS_TYPE ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(class_type_resolved_path) = (* 9 *) IDENTIFIER CLASS_TYPE ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(class_type_reference) = (* 3 *) ROOT Data CLOSE
minimal(class_type_path) = (* 6 *) DOT ROOT Data CLOSE Data CLOSE
minimal(class_type_identifier) = (* 7 *) CLASS_TYPE ROOT Base Data CLOSE Data CLOSE
minimal(class_type_expr) = (* 2 *) SIGNATURE CLOSE
minimal(class_signature_item) = (* 2 *) COMMENT CLOSE
minimal(class_signature_identifier) = (* 7 *) CLASS ROOT Base Data CLOSE Data CLOSE
minimal(class_resolved_reference) = (* 9 *) IDENTIFIER CLASS ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(class_resolved_path) = (* 9 *) IDENTIFIER CLASS ROOT Base Data CLOSE Data CLOSE CLOSE
minimal(class_reference) = (* 3 *) ROOT Data CLOSE
minimal(class_identifier) = (* 7 *) CLASS ROOT Base Data CLOSE Data CLOSE
minimal(class_decl) = (* 2 *) SIGNATURE CLOSE
minimal(argument_label) = (* 3 *) LABEL Data CLOSE
maximal(variance) = 2
maximal(value_resolved_reference) = infinity
maximal(value_reference) = infinity
maximal(value_identifier) = infinity
maximal(unit_import) = 6
maximal(unit_content) = infinity
maximal(unit) = infinity
maximal(type_subst_parameter) = 3
maximal(type_resolved_reference) = infinity
maximal(type_resolved_path) = infinity
maximal(type_resolved_fragment) = infinity
maximal(type_representation) = infinity
maximal(type_reference) = infinity
maximal(type_path) = infinity
maximal(type_parameter) = 5
maximal(type_identifier) = infinity
maximal(type_fragment) = infinity
maximal(type_expr) = infinity
maximal(type_equation) = infinity
maximal(type_constraint) = infinity
maximal(text_element) = infinity
maximal(tag) = infinity
maximal(substitution) = infinity
maximal(special) = infinity
maximal(source_file) = 3
maximal(source_build_dir) = 3
maximal(source) = 11
maximal(signature_resolved_reference) = infinity
maximal(signature_resolved_fragment) = infinity
maximal(signature_item) = infinity
maximal(signature_identifier) = infinity
maximal(signature_fragment) = infinity
maximal(see) = 3
maximal(reference) = infinity
maximal(position) = 8
maximal(poly_variant_kind) = infinity
maximal(poly_variant_element) = infinity
maximal(poly_variant) = infinity
maximal(parent_resolved_reference) = infinity
maximal(parent_reference) = infinity
maximal(parent_identifier) = infinity
maximal(packed_item) = infinity
maximal(package_substitution) = infinity
maximal(package) = infinity
maximal(option(variance)) = 2
maximal(option(type_representation)) = infinity
maximal(option(type_expr)) = infinity
maximal(option(source)) = 11
maximal(option(module_type_expr)) = infinity
maximal(option(location)) = 21
maximal(option(label_identifier)) = infinity
maximal(option(digest)) = 3
maximal(option(argument_label)) = 3
maximal(offset) = 18
maximal(object_method) = infinity
maximal(object_) = infinity
maximal(nonempty_list(type_expr)) = infinity
maximal(nonempty_list(text_element)) = infinity
maximal(nonempty_list(substitution)) = infinity
maximal(nonempty_list(name)) = infinity
maximal(nonempty_list(module_argument)) = infinity
maximal(nonempty_list(item)) = infinity
maximal(nonempty_list(field)) = infinity
maximal(nonempty_list(external_primitive)) = infinity
maximal(nonempty_list(extension_constructor)) = infinity
maximal(nonempty_list(constructor)) = infinity
maximal(name) = 3
maximal(module_type_resolved_reference) = infinity
maximal(module_type_resolved_path) = infinity
maximal(module_type_reference) = infinity
maximal(module_type_path) = infinity
maximal(module_type_identifier) = infinity
maximal(module_type_expr) = infinity
maximal(module_resolved_reference) = infinity
maximal(module_resolved_path) = infinity
maximal(module_resolved_fragment) = infinity
maximal(module_reference) = infinity
maximal(module_path) = infinity
maximal(module_identifier) = infinity
maximal(module_fragment) = infinity
maximal(module_decl) = infinity
maximal(module_argument) = infinity
maximal(method_resolved_reference) = infinity
maximal(method_reference) = infinity
maximal(method_identifier) = infinity
maximal(location) = 21
maximal(list(unit_import)) = infinity
maximal(list(type_subst_parameter)) = infinity
maximal(list(type_parameter)) = infinity
maximal(list(type_expr)) = infinity
maximal(list(type_constraint)) = infinity
maximal(list(text_element)) = infinity
maximal(list(tag)) = infinity
maximal(list(signature_item)) = infinity
maximal(list(poly_variant_element)) = infinity
maximal(list(packed_item)) = infinity
maximal(list(package_substitution)) = infinity
maximal(list(object_method)) = infinity
maximal(list(name)) = infinity
maximal(list(module_reference)) = infinity
maximal(list(class_signature_item)) = infinity
maximal(line) = 3
maximal(label_resolved_reference) = infinity
maximal(label_reference) = infinity
maximal(label_identifier) = infinity
maximal(item) = infinity
maximal(int) = 1
maximal(instance_variable_resolved_reference) = infinity
maximal(instance_variable_reference) = infinity
maximal(instance_variable_identifier) = infinity
maximal(flag(VIRTUAL)) = 2
maximal(flag(PRIVATE)) = 2
maximal(flag(OPEN)) = 2
maximal(flag(MUTABLE)) = 2
maximal(flag(INTERFACE)) = 2
maximal(flag(CONSTANT)) = 2
maximal(filename) = 3
maximal(file) = infinity
maximal(field_resolved_reference) = infinity
maximal(field_reference) = infinity
maximal(field_identifier) = infinity
maximal(field) = infinity
maximal(external_primitive) = 3
maximal(extension_resolved_reference) = infinity
maximal(extension_reference) = infinity
maximal(extension_identifier) = infinity
maximal(extension_constructor) = infinity
maximal(exception_resolved_reference) = infinity
maximal(exception_reference) = infinity
maximal(exception_identifier) = infinity
maximal(element_resolved_reference) = infinity
maximal(element_reference) = infinity
maximal(element_identifier) = infinity
maximal(doc_error) = infinity
maximal(doc) = infinity
maximal(digest) = 3
maximal(datatype_resolved_reference) = infinity
maximal(constructor_result) = infinity
maximal(constructor_resolved_reference) = infinity
maximal(constructor_reference) = infinity
maximal(constructor_identifier) = infinity
maximal(constructor_arguments) = infinity
maximal(constructor) = infinity
maximal(comment) = infinity
maximal(column) = 3
maximal(class_type_resolved_reference) = infinity
maximal(class_type_resolved_path) = infinity
maximal(class_type_reference) = infinity
maximal(class_type_path) = infinity
maximal(class_type_identifier) = infinity
maximal(class_type_expr) = infinity
maximal(class_signature_item) = infinity
maximal(class_signature_identifier) = infinity
maximal(class_resolved_reference) = infinity
maximal(class_resolved_path) = infinity
maximal(class_reference) = infinity
maximal(class_identifier) = infinity
maximal(class_decl) = infinity
maximal(argument_label) = 3
follow(variance) = CLOSE
follow(value_resolved_reference) = CLOSE
follow(value_reference) = CLOSE
follow(value_identifier) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OFFSET OBJECT DOC CLOSE CLASS ARROW ANY ALIAS
follow(unit_import) = SOURCE PACK MODULE INTERFACE IMPORT
follow(unit_content) = CLOSE
follow(unit) = EOF #
follow(type_subst_parameter) = RESOLVED PARAM DOT
follow(type_resolved_reference) = CLOSE
follow(type_resolved_path) = CLOSE
follow(type_resolved_fragment) = CLOSE
follow(type_representation) = CLOSE
follow(type_reference) = CLOSE
follow(type_path) = VAR TUPLE PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OBJECT DOC CONSTRUCTOR CLOSE CLASS ARROW ANY ALIAS
follow(type_parameter) = VIRTUAL VARIANT VAR TUPLE SIGNATURE RECORD PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OBJECT EXTENSIBLE CONSTRUCTOR CONSTRAINT CLOSE CLASS ARROW ANY ALIAS
follow(type_identifier) = VARIANT VAR TUPLE RECORD PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OFFSET OBJECT EXTENSIBLE Data DOC CONSTRAINT CLOSE CLASS ARROW ANY ALIAS
follow(type_fragment) = VAR TUPLE RESOLVED PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OBJECT DOT CONSTRAINT CLOSE CLASS ARROW ANY ALIAS
follow(type_expr) = VARIANT VAR TUPLE STOP SIGNATURE RESOLVED RECORD PRIMITIVE POLY_VARIANT POLY PATH PACKAGE OPEN OBJECT NAME METHOD INSTANCE_VARIABLE INHERIT EXTENSIBLE Data DOT CONSTRAINT COMMENT CLOSE CLASS ARROW ANY ALIAS
follow(type_equation) = VARIANT RECORD EXTENSIBLE CLOSE
follow(type_constraint) = VARIANT RECORD EXTENSIBLE CONSTRAINT CLOSE
follow(text_element) = VERSION VERBATIM Title Target TAG SUPERSCRIPT SUBSCRIPT SPECIAL SINCE SEE RIGHT RETURN REFERENCE RAISE PRECODE PARAM NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data DEPRECATED Custom CODE CLOSE CENTER BOLD BEFORE AUTHOR
follow(tag) = VERSION TAG SINCE SEE RETURN RAISE PARAM DEPRECATED CLOSE BEFORE AUTHOR
follow(substitution) = TYPE_SUBST TYPE MODULE_SUBST MODULE CLOSE
follow(special) = CLOSE
follow(source_file) = DIR
follow(source_build_dir) = DIGEST
follow(source) = PACK MODULE INTERFACE
follow(signature_resolved_reference) = Data CLOSE
follow(signature_resolved_fragment) = Data CLOSE
follow(signature_item) = VALUE TYPE STOP MODULE_TYPE MODULE INCLUDE EXTERNAL EXTENSION EXCEPTION COMMENT CLOSE CLASS_TYPE CLASS
follow(signature_identifier) = Data
follow(signature_fragment) = Data
follow(see) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CLOSE CENTER BOLD
follow(reference) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CLOSE CENTER BOLD
follow(position) = POSITION CLOSE
follow(poly_variant_kind) = TYPE CONSTRUCTOR CLOSE
follow(poly_variant_element) = TYPE CONSTRUCTOR CLOSE
follow(poly_variant) = CLOSE
follow(parent_resolved_reference) = Data CLOSE
follow(parent_reference) = Data
follow(parent_identifier) = Data
follow(packed_item) = ITEM CLOSE
follow(package_substitution) = RESOLVED DOT CLOSE
follow(package) = CLOSE
follow(option(variance)) = CLOSE
follow(option(type_representation)) = CLOSE
follow(option(type_expr)) = VARIANT STOP RECORD METHOD INSTANCE_VARIABLE INHERIT EXTENSIBLE CONSTRAINT COMMENT CLOSE
follow(option(source)) = PACK MODULE INTERFACE
follow(option(module_type_expr)) = CLOSE
follow(option(location)) = Data
follow(option(label_identifier)) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CLOSE CENTER BOLD
follow(option(digest)) = CLOSE
follow(option(argument_label)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
follow(offset) = LOCATION Data
follow(object_method) = OPEN NAME CLOSE
follow(object_) = CLOSE
follow(nonempty_list(type_expr)) = CLOSE
follow(nonempty_list(text_element)) = CLOSE
follow(nonempty_list(substitution)) = CLOSE
follow(nonempty_list(name)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
follow(nonempty_list(module_argument)) = WITH TYPEOF SIGNATURE RESOLVED FUNCTOR DOT
follow(nonempty_list(item)) = CLOSE
follow(nonempty_list(field)) = CLOSE
follow(nonempty_list(external_primitive)) = CLOSE
follow(nonempty_list(extension_constructor)) = CLOSE
follow(nonempty_list(constructor)) = CLOSE
follow(name) = VERBATIM VAR Title Target TUPLE SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE POLY_VARIANT POLY PATH PACKAGE OBJECT NEWLINE NAME LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CLOSE CLASS CENTER BOLD ARROW ANY ALIAS
follow(module_type_resolved_reference) = Data CLOSE
follow(module_type_resolved_path) = SUBST_ALIAS SUBST ROOT MODULE IDENTIFIER CLOSE APPLY
follow(module_type_reference) = CLOSE
follow(module_type_path) = TYPE_SUBST TYPE RESOLVED MODULE_SUBST MODULE DOT CLOSE
follow(module_type_identifier) = WITH TYPEOF SIGNATURE RESOLVED OFFSET FUNCTOR Data DOT DOC CLOSE
follow(module_type_expr) = TYPE_SUBST TYPE MODULE_SUBST MODULE CLOSE
follow(module_resolved_reference) = Data CLOSE
follow(module_resolved_path) = SUBST_ALIAS SUBST ROOT RESOLVED MODULE IDENTIFIER Data DOT CLOSE APPLY
follow(module_resolved_fragment) = CLOSE
follow(module_reference) = ROOT RESOLVED DOT CLOSE
follow(module_path) = ROOT RESOLVED Data DOT CLOSE APPLY
follow(module_identifier) = WITH TYPEOF TYPE SIGNATURE ROOT RESOLVED OFFSET FUNCTOR Data DOT DOC DIGEST CLOSE APPLY ALIAS
follow(module_fragment) = TYPE ROOT RESOLVED DOT APPLY ALIAS
follow(module_decl) = CLOSE
follow(module_argument) = WITH TYPEOF SIGNATURE RESOLVED FUNCTOR DOT Argument
follow(method_resolved_reference) = CLOSE
follow(method_reference) = CLOSE
follow(method_identifier) = VIRTUAL VAR TUPLE PRIVATE POLY_VARIANT POLY PATH PACKAGE OFFSET OBJECT DOC CLOSE CLASS ARROW ANY ALIAS
follow(location) = Data
follow(list(unit_import)) = SOURCE PACK MODULE INTERFACE
follow(list(type_subst_parameter)) = RESOLVED DOT
follow(list(type_parameter)) = VIRTUAL VARIANT VAR TUPLE SIGNATURE RECORD PRIVATE POLY_VARIANT POLY PATH PACKAGE OBJECT EXTENSIBLE CONSTRUCTOR CONSTRAINT CLOSE CLASS ARROW ANY ALIAS
follow(list(type_expr)) = CLOSE
follow(list(type_constraint)) = VARIANT RECORD EXTENSIBLE CLOSE
follow(list(text_element)) = VERSION TAG SINCE SEE RETURN RAISE PARAM DEPRECATED CLOSE BEFORE AUTHOR
follow(list(tag)) = CLOSE
follow(list(signature_item)) = CLOSE
follow(list(poly_variant_element)) = CLOSE
follow(list(packed_item)) = CLOSE
follow(list(package_substitution)) = CLOSE
follow(list(object_method)) = OPEN CLOSE
follow(list(name)) = CLOSE
follow(list(module_reference)) = CLOSE
follow(list(class_signature_item)) = CLOSE
follow(line) = COLUMN
follow(label_resolved_reference) = CLOSE
follow(label_reference) = CLOSE
follow(label_identifier) = VERBATIM Title Target SUPERSCRIPT SUBSCRIPT SPECIAL RIGHT REFERENCE PRECODE OFFSET NEWLINE LIST LEFT ITALIC ENUM EMPHASIZE Data Custom CODE CLOSE CENTER BOLD
follow(item) = ITEM CLOSE
follow(int) = CLOSE
follow(instance_variable_resolved_reference) = CLOSE
follow(instance_variable_reference) = CLOSE
follow(instance_variable_identifier) = VIRTUAL VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OFFSET OBJECT MUTABLE DOC CLOSE CLASS ARROW ANY ALIAS
follow(flag(VIRTUAL)) = VAR TUPLE SIGNATURE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
follow(flag(PRIVATE)) = VIRTUAL VARIANT VAR TUPLE RECORD POLY_VARIANT POLY PATH PACKAGE OBJECT EXTENSIBLE CONSTRUCTOR CONSTRAINT CLOSE CLASS ARROW ANY ALIAS
follow(flag(OPEN)) = CLOSE
follow(flag(MUTABLE)) = VIRTUAL VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
follow(flag(INTERFACE)) = PACK MODULE
follow(flag(CONSTANT)) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLOSE CLASS ARROW ANY ALIAS
follow(filename) = POSITION
follow(file) = #
follow(field_resolved_reference) = CLOSE
follow(field_reference) = CLOSE
follow(field_identifier) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OFFSET OBJECT MUTABLE DOC CLOSE CLASS ARROW ANY ALIAS
follow(field) = FIELD CLOSE
follow(external_primitive) = PRIMITIVE CLOSE
follow(extension_resolved_reference) = CLOSE
follow(extension_reference) = CLOSE
follow(extension_identifier) = RESULT OFFSET DOC CLOSE ARGUMENTS
follow(extension_constructor) = CONSTRUCTOR CLOSE
follow(exception_resolved_reference) = CLOSE
follow(exception_reference) = CLOSE
follow(exception_identifier) = RESULT OFFSET DOC CLOSE ARGUMENTS
follow(element_resolved_reference) = CLOSE
follow(element_reference) = CLOSE
follow(element_identifier) = OFFSET CLOSE
follow(doc_error) = CLOSE
follow(doc) = WITH VIRTUAL VARIANT VAR TYPEOF TYPE TUPLE SIGNATURE RESULT RESOLVED RECORD PRIVATE POLY_VARIANT POLY PATH PARAM PACKAGE OBJECT MUTABLE FUNCTOR EXTENSIBLE DOT DIGEST CONSTRUCTOR CONSTRAINT CLOSE CLASS ARROW ARGUMENTS ANY ALIAS
follow(digest) = SOURCE PACK MODULE INTERFACE IMPORT CLOSE
follow(datatype_resolved_reference) = Data CLOSE
follow(constructor_result) = CLOSE
follow(constructor_resolved_reference) = CLOSE
follow(constructor_reference) = CLOSE
follow(constructor_identifier) = RESULT OFFSET DOC CLOSE ARGUMENTS
follow(constructor_arguments) = RESULT CLOSE
follow(constructor) = CONSTRUCTOR CLOSE
follow(comment) = VALUE TYPE STOP MODULE_TYPE MODULE METHOD INSTANCE_VARIABLE INHERIT INCLUDE EXTERNAL EXTENSION EXCEPTION CONSTRAINT COMMENT CLOSE CLASS_TYPE CLASS
follow(column) = CLOSE
follow(class_type_resolved_reference) = Data CLOSE
follow(class_type_resolved_path) = CLOSE
follow(class_type_reference) = CLOSE
follow(class_type_path) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLOSE CLASS ARROW ANY ALIAS
follow(class_type_identifier) = VIRTUAL SIGNATURE PATH PARAM OFFSET Data DOC CLOSE
follow(class_type_expr) = CLOSE
follow(class_signature_item) = STOP METHOD INSTANCE_VARIABLE INHERIT CONSTRAINT COMMENT CLOSE
follow(class_signature_identifier) = Data
follow(class_resolved_reference) = Data CLOSE
follow(class_resolved_path) = CLOSE
follow(class_reference) = CLOSE
follow(class_identifier) = VIRTUAL SIGNATURE PATH PARAM OFFSET Data DOC CLOSE ARROW
follow(class_decl) = CLOSE
follow(argument_label) = VAR TUPLE POLY_VARIANT POLY PATH PACKAGE OBJECT CLASS ARROW ANY ALIAS
Built an LR(0) automaton with 1124 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 1133 states.
370 out of 1133 states have a default reduction.
328 out of 1133 states are represented.
0 out of 280 symbols keep track of their start position.
0 out of 280 symbols keep track of their end position.
307 out of 412 productions exploit shiftreduce optimization.
0 out of 1133 states can peek at an error.
2843 functions before inlining, 318 functions after inlining.
