Grammar has 8 nonterminal symbols, among which 2 start symbols.
Grammar has 6 terminal symbols.
Grammar has 15 productions.
nullable(start) = false
nullable(nonempty_list(atom)) = false
nullable(list(NEWLINE)) = true
nullable(input) = false
nullable(file) = false
nullable(cnf) = false
nullable(clause) = false
nullable(atom) = false
first(start) = P
first(nonempty_list(atom)) = INT
first(list(NEWLINE)) = NEWLINE
first(input) = P NEWLINE INT EOF
first(file) = P NEWLINE
first(cnf) = NEWLINE INT EOF
first(clause) = INT
first(atom) = INT
minimal(start) = (* 5 *) P CNF INT INT NEWLINE
minimal(nonempty_list(atom)) = (* 1 *) INT
minimal(list(NEWLINE)) = (* 0 *)
minimal(input) = (* 1 *) EOF
minimal(file) = (* 6 *) P CNF INT INT NEWLINE EOF
minimal(cnf) = (* 1 *) EOF
minimal(clause) = (* 3 *) INT ZERO NEWLINE
minimal(atom) = (* 1 *) INT
maximal(start) = 5
maximal(nonempty_list(atom)) = infinity
maximal(list(NEWLINE)) = infinity
maximal(input) = infinity
maximal(file) = infinity
maximal(cnf) = infinity
maximal(clause) = infinity
maximal(atom) = 1
follow(start) = NEWLINE INT EOF #
follow(nonempty_list(atom)) = ZERO
follow(list(NEWLINE)) = P
follow(input) = #
follow(file) = #
follow(cnf) = #
follow(clause) = NEWLINE INT EOF #
follow(atom) = ZERO INT
Built an LR(0) automaton with 30 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 38 states.
17 out of 38 states have a default reduction.
9 out of 38 states are represented.
4 out of 18 symbols keep track of their start position.
2 out of 18 symbols keep track of their end position.
11 out of 17 productions exploit shiftreduce optimization.
0 out of 38 states can peek at an error.
107 functions before inlining, 19 functions after inlining.
