State 0:
## Known stack suffix:
##
## LR(1) items:
core' -> . core [ # ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 285
-- On dule_label shift to state 217
-- On core shift to state 287
## Reductions:

State 1:
## Known stack suffix:
## UNFOLD
## LR(1) items:
valu -> UNFOLD . embedding [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MINUSGREATER shift to state 6
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 152
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 232
-- On valu shift to state 233
-- On pattern shift to state 234
-- On embedding shift to state 284
-- On dule_label shift to state 217
## Reductions:

State 2:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
pattern -> UNDERSCORE . [ TILDE MINUSGREATER EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> UNDERSCORE

State 3:
## Known stack suffix:
## UNDE
## LR(1) items:
valu -> UNDE . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNDE

State 4:
## Known stack suffix:
## UNCON
## LR(1) items:
valu -> UNCON . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNCON

State 5:
## Known stack suffix:
## UIDENT
## LR(1) items:
dule_label -> UIDENT . [ WITH UNDERSCORE UIDENT TILDE THEN STRUCT SPEC SEMI REC RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIDENT LIBRARY LBRACE IN EQUAL EOF ELSE DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule_label -> UIDENT

State 6:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
embedding -> MINUSGREATER . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 283
-- On dule_label shift to state 217
## Reductions:

State 7:
## Known stack suffix:
## MATCH
## LR(1) items:
valu -> MATCH . valu WITH valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 280
-- On dule_label shift to state 217
## Reductions:

State 8:
## Known stack suffix:
## MAP
## LR(1) items:
valu -> MAP . embedding [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MINUSGREATER shift to state 6
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 152
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 232
-- On valu shift to state 233
-- On pattern shift to state 234
-- On embedding shift to state 279
-- On dule_label shift to state 217
## Reductions:

State 9:
## Known stack suffix:
## LPAREN
## LR(1) items:
valu -> LPAREN . valu RPAREN [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LPAREN . valu error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 276
-- On dule_label shift to state 207
## Reductions:

State 10:
## Known stack suffix:
## UNFOLD
## LR(1) items:
valu -> UNFOLD . embedding [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MINUSGREATER shift to state 14
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 34
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 218
-- On valu shift to state 219
-- On pattern shift to state 220
-- On embedding shift to state 275
-- On dule_label shift to state 207
## Reductions:

State 11:
## Known stack suffix:
## UNDE
## LR(1) items:
valu -> UNDE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNDE

State 12:
## Known stack suffix:
## UNCON
## LR(1) items:
valu -> UNCON . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNCON

State 13:
## Known stack suffix:
## UIDENT
## LR(1) items:
dule_label -> UIDENT . [ error WITH VALUE UIDENT TYPE TILDE SPEC SEMI RPAREN RBRACKET RBRACE MODULE LPAREN LIBRARY EQUAL END DOT COLONGREATER COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule_label -> UIDENT

State 14:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
embedding -> MINUSGREATER . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 274
-- On dule_label shift to state 207
## Reductions:

State 15:
## Known stack suffix:
## MATCH
## LR(1) items:
valu -> MATCH . valu WITH valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 271
-- On dule_label shift to state 217
## Reductions:

State 16:
## Known stack suffix:
## LIDENT
## LR(1) items:
value_label -> LIDENT . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_label -> LIDENT

State 17:
## Known stack suffix:
## LET
## LR(1) items:
valu -> LET . list0_declaration IN valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On list0_declaration shift to state 18
## Default reduction:
-- After reading the next token, reduce production list0_declaration ->

State 18:
## Known stack suffix:
## LET list0_declaration
## LR(1) items:
list0_declaration -> list0_declaration . declaration [ UNDERSCORE REC LIDENT LBRACE IN ]
valu -> LET list0_declaration . IN valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNDERSCORE shift to state 2
-- On REC shift to state 19
-- On LIDENT shift to state 16
-- On LBRACE shift to state 20
-- On IN shift to state 269
-- On value_label shift to state 146
-- On pattern shift to state 254
-- On declaration shift to state 257
## Reductions:

State 19:
## Known stack suffix:
## REC
## LR(1) items:
declaration -> REC . pattern EQUAL valu [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
-- On UNDERSCORE shift to state 2
-- On LIDENT shift to state 16
-- On LBRACE shift to state 20
-- On value_label shift to state 146
-- On pattern shift to state 266
## Reductions:

State 20:
## Known stack suffix:
## LBRACE
## LR(1) items:
pattern -> LBRACE . list0_field RBRACE [ TILDE MINUSGREATER EQUAL ]
pattern -> LBRACE . list0_field error [ TILDE MINUSGREATER EQUAL ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On list1_field shift to state 35
-- On list0_field shift to state 263
-- On field shift to state 41
## Reductions:
-- On error reduce production list0_field ->
-- On RBRACE reduce production list0_field ->

State 21:
## Known stack suffix:
## LIDENT
## LR(1) items:
value_label -> LIDENT . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE MINUSGREATER LPAREN EQUAL END DOT COLON BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_label -> LIDENT

State 22:
## Known stack suffix:
## value_label
## LR(1) items:
field -> value_label . EQUAL valu [ error SEMI RBRACE ]
field -> value_label . [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 23
## Reductions:
-- On error reduce production field -> value_label
-- On SEMI reduce production field -> value_label
-- On RBRACE reduce production field -> value_label

State 23:
## Known stack suffix:
## value_label EQUAL
## LR(1) items:
field -> value_label EQUAL . valu [ error SEMI RBRACE ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 262
-- On dule_label shift to state 207
## Reductions:

State 24:
## Known stack suffix:
## MAP
## LR(1) items:
valu -> MAP . embedding [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MINUSGREATER shift to state 14
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 34
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 218
-- On valu shift to state 219
-- On pattern shift to state 220
-- On embedding shift to state 261
-- On dule_label shift to state 207
## Reductions:

State 25:
## Known stack suffix:
## LPAREN
## LR(1) items:
valu -> LPAREN . valu RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LPAREN . valu error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 258
-- On dule_label shift to state 207
## Reductions:

State 26:
## Known stack suffix:
## LET
## LR(1) items:
valu -> LET . list0_declaration IN valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On list0_declaration shift to state 27
## Default reduction:
-- After reading the next token, reduce production list0_declaration ->

State 27:
## Known stack suffix:
## LET list0_declaration
## LR(1) items:
list0_declaration -> list0_declaration . declaration [ UNDERSCORE REC LIDENT LBRACE IN ]
valu -> LET list0_declaration . IN valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNDERSCORE shift to state 2
-- On REC shift to state 19
-- On LIDENT shift to state 16
-- On LBRACE shift to state 20
-- On IN shift to state 28
-- On value_label shift to state 146
-- On pattern shift to state 254
-- On declaration shift to state 257
## Reductions:

State 28:
## Known stack suffix:
## LET list0_declaration IN
## LR(1) items:
valu -> LET list0_declaration IN . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 253
-- On dule_label shift to state 207
## Reductions:

State 29:
## Known stack suffix:
## LBRACKET
## LR(1) items:
valu -> LBRACKET . list0_case RBRACKET [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACKET . list0_case error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On BACKQUOTE shift to state 30
-- On list1_case shift to state 45
-- On list0_case shift to state 250
-- On case shift to state 51
## Reductions:
-- On error reduce production list0_case ->
-- On RBRACKET reduce production list0_case ->

State 30:
## Known stack suffix:
## BACKQUOTE
## LR(1) items:
case -> BACKQUOTE . case_label embedding [ error RBRACKET BAR ]
## Transitions:
-- On UIDENT shift to state 31
-- On LIDENT shift to state 32
-- On case_label shift to state 33
## Reductions:

State 31:
## Known stack suffix:
## UIDENT
## LR(1) items:
case_label -> UIDENT . [ WITH UNFOLD UNDERSCORE UNDE UNCON UIDENT TILDE THEN REC MINUSGREATER MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IN IF FUN FOLD FAIL EOF ELSE DOT DE CON COLON BACKQUOTE ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_label -> UIDENT

State 32:
## Known stack suffix:
## LIDENT
## LR(1) items:
case_label -> LIDENT . [ WITH UNFOLD UNDERSCORE UNDE UNCON UIDENT TILDE THEN REC MINUSGREATER MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IN IF FUN FOLD FAIL EOF ELSE DOT DE CON COLON BACKQUOTE ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_label -> LIDENT

State 33:
## Known stack suffix:
## BACKQUOTE case_label
## LR(1) items:
case -> BACKQUOTE case_label . embedding [ error RBRACKET BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MINUSGREATER shift to state 14
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 34
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 218
-- On valu shift to state 219
-- On pattern shift to state 220
-- On embedding shift to state 249
-- On dule_label shift to state 207
## Reductions:

State 34:
## Known stack suffix:
## LBRACE
## LR(1) items:
pattern -> LBRACE . list0_field RBRACE [ MINUSGREATER ]
pattern -> LBRACE . list0_field error [ MINUSGREATER ]
valu -> LBRACE . list0_field RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACE . list0_field error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On list1_field shift to state 35
-- On list0_field shift to state 38
-- On field shift to state 41
## Reductions:
-- On error reduce production list0_field ->
-- On RBRACE reduce production list0_field ->

State 35:
## Known stack suffix:
## list1_field
## LR(1) items:
list0_field -> list1_field . [ error RBRACE ]
list1_field -> list1_field . SEMI field [ error SEMI RBRACE ]
## Transitions:
-- On SEMI shift to state 36
## Reductions:
-- On error reduce production list0_field -> list1_field
-- On RBRACE reduce production list0_field -> list1_field

State 36:
## Known stack suffix:
## list1_field SEMI
## LR(1) items:
list1_field -> list1_field SEMI . field [ error SEMI RBRACE ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On field shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## list1_field SEMI field
## LR(1) items:
list1_field -> list1_field SEMI field . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field -> list1_field SEMI field

State 38:
## Known stack suffix:
## LBRACE list0_field
## LR(1) items:
pattern -> LBRACE list0_field . RBRACE [ MINUSGREATER ]
pattern -> LBRACE list0_field . error [ MINUSGREATER ]
valu -> LBRACE list0_field . RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACE list0_field . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 39
-- On RBRACE shift to state 40
## Reductions:

State 39:
## Known stack suffix:
## LBRACE list0_field error
## LR(1) items:
pattern -> LBRACE list0_field error . [ MINUSGREATER ]
valu -> LBRACE list0_field error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Reductions:
-- On error reduce production valu -> LBRACE list0_field error
-- On VALUE reduce production valu -> LBRACE list0_field error
-- On TYPE reduce production valu -> LBRACE list0_field error
-- On TILDE reduce production valu -> LBRACE list0_field error
-- On SEMI reduce production valu -> LBRACE list0_field error
-- On RPAREN reduce production valu -> LBRACE list0_field error
-- On RBRACKET reduce production valu -> LBRACE list0_field error
-- On RBRACE reduce production valu -> LBRACE list0_field error
-- On MINUSGREATER reduce production pattern -> LBRACE list0_field error
-- On LPAREN reduce production valu -> LBRACE list0_field error
-- On END reduce production valu -> LBRACE list0_field error
-- On DOT reduce production valu -> LBRACE list0_field error
-- On BAR reduce production valu -> LBRACE list0_field error

State 40:
## Known stack suffix:
## LBRACE list0_field RBRACE
## LR(1) items:
pattern -> LBRACE list0_field RBRACE . [ MINUSGREATER ]
valu -> LBRACE list0_field RBRACE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Reductions:
-- On error reduce production valu -> LBRACE list0_field RBRACE
-- On VALUE reduce production valu -> LBRACE list0_field RBRACE
-- On TYPE reduce production valu -> LBRACE list0_field RBRACE
-- On TILDE reduce production valu -> LBRACE list0_field RBRACE
-- On SEMI reduce production valu -> LBRACE list0_field RBRACE
-- On RPAREN reduce production valu -> LBRACE list0_field RBRACE
-- On RBRACKET reduce production valu -> LBRACE list0_field RBRACE
-- On RBRACE reduce production valu -> LBRACE list0_field RBRACE
-- On MINUSGREATER reduce production pattern -> LBRACE list0_field RBRACE
-- On LPAREN reduce production valu -> LBRACE list0_field RBRACE
-- On END reduce production valu -> LBRACE list0_field RBRACE
-- On DOT reduce production valu -> LBRACE list0_field RBRACE
-- On BAR reduce production valu -> LBRACE list0_field RBRACE

State 41:
## Known stack suffix:
## field
## LR(1) items:
list1_field -> field . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field -> field

State 42:
## Known stack suffix:
## INT
## LR(1) items:
valu -> INT . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> INT

State 43:
## Known stack suffix:
## IF
## LR(1) items:
valu -> IF . valu THEN valu ELSE valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 244
-- On dule_label shift to state 217
## Reductions:

State 44:
## Known stack suffix:
## LBRACKET
## LR(1) items:
valu -> LBRACKET . list0_case RBRACKET [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACKET . list0_case error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On BACKQUOTE shift to state 30
-- On list1_case shift to state 45
-- On list0_case shift to state 48
-- On case shift to state 51
## Reductions:
-- On error reduce production list0_case ->
-- On RBRACKET reduce production list0_case ->

State 45:
## Known stack suffix:
## list1_case
## LR(1) items:
list0_case -> list1_case . [ error RBRACKET ]
list1_case -> list1_case . BAR case [ error RBRACKET BAR ]
## Transitions:
-- On BAR shift to state 46
## Reductions:
-- On error reduce production list0_case -> list1_case
-- On RBRACKET reduce production list0_case -> list1_case

State 46:
## Known stack suffix:
## list1_case BAR
## LR(1) items:
list1_case -> list1_case BAR . case [ error RBRACKET BAR ]
## Transitions:
-- On BACKQUOTE shift to state 30
-- On case shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## list1_case BAR case
## LR(1) items:
list1_case -> list1_case BAR case . [ error RBRACKET BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_case -> list1_case BAR case

State 48:
## Known stack suffix:
## LBRACKET list0_case
## LR(1) items:
valu -> LBRACKET list0_case . RBRACKET [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACKET list0_case . error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On error shift to state 49
-- On RBRACKET shift to state 50
## Reductions:

State 49:
## Known stack suffix:
## LBRACKET list0_case error
## LR(1) items:
valu -> LBRACKET list0_case error . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACKET list0_case error

State 50:
## Known stack suffix:
## LBRACKET list0_case RBRACKET
## LR(1) items:
valu -> LBRACKET list0_case RBRACKET . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACKET list0_case RBRACKET

State 51:
## Known stack suffix:
## case
## LR(1) items:
list1_case -> case . [ error RBRACKET BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_case -> case

State 52:
## Known stack suffix:
## LBRACE
## LR(1) items:
valu -> LBRACE . list0_field RBRACE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACE . list0_field error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On list1_field shift to state 35
-- On list0_field shift to state 53
-- On field shift to state 41
## Reductions:
-- On error reduce production list0_field ->
-- On RBRACE reduce production list0_field ->

State 53:
## Known stack suffix:
## LBRACE list0_field
## LR(1) items:
valu -> LBRACE list0_field . RBRACE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACE list0_field . error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On error shift to state 54
-- On RBRACE shift to state 55
## Reductions:

State 54:
## Known stack suffix:
## LBRACE list0_field error
## LR(1) items:
valu -> LBRACE list0_field error . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACE list0_field error

State 55:
## Known stack suffix:
## LBRACE list0_field RBRACE
## LR(1) items:
valu -> LBRACE list0_field RBRACE . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACE list0_field RBRACE

State 56:
## Known stack suffix:
## INT
## LR(1) items:
valu -> INT . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> INT

State 57:
## Known stack suffix:
## IF
## LR(1) items:
valu -> IF . valu THEN valu ELSE valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 239
-- On dule_label shift to state 217
## Reductions:

State 58:
## Known stack suffix:
## FUN
## LR(1) items:
valu -> FUN . list0_param MINUSGREATER valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On list0_param shift to state 59
## Default reduction:
-- After reading the next token, reduce production list0_param ->

State 59:
## Known stack suffix:
## FUN list0_param
## LR(1) items:
list0_param -> list0_param . param [ TILDE MINUSGREATER ]
valu -> FUN list0_param . MINUSGREATER valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 60
-- On MINUSGREATER shift to state 150
-- On param shift to state 225
## Reductions:

State 60:
## Known stack suffix:
## TILDE
## LR(1) items:
param -> TILDE . value_label [ TILDE MINUSGREATER ]
param -> TILDE . value_label COLON pattern [ TILDE MINUSGREATER ]
param -> TILDE . LPAREN value_label COLON typ RPAREN [ TILDE MINUSGREATER ]
param -> TILDE . LPAREN value_label COLON typ error [ TILDE MINUSGREATER ]
## Transitions:
-- On LPAREN shift to state 61
-- On LIDENT shift to state 16
-- On value_label shift to state 144
## Reductions:

State 61:
## Known stack suffix:
## TILDE LPAREN
## LR(1) items:
param -> TILDE LPAREN . value_label COLON typ RPAREN [ TILDE MINUSGREATER ]
param -> TILDE LPAREN . value_label COLON typ error [ TILDE MINUSGREATER ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## TILDE LPAREN value_label
## LR(1) items:
param -> TILDE LPAREN value_label . COLON typ RPAREN [ TILDE MINUSGREATER ]
param -> TILDE LPAREN value_label . COLON typ error [ TILDE MINUSGREATER ]
## Transitions:
-- On COLON shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## TILDE LPAREN value_label COLON
## LR(1) items:
param -> TILDE LPAREN value_label COLON . typ RPAREN [ TILDE MINUSGREATER ]
param -> TILDE LPAREN value_label COLON . typ error [ TILDE MINUSGREATER ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 141
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 64:
## Known stack suffix:
## LPAREN
## LR(1) items:
typ -> LPAREN . typ RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LPAREN . typ error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 138
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 65:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_label -> LIDENT . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_label -> LIDENT

State 66:
## Known stack suffix:
## LBRACKET
## LR(1) items:
typ -> LBRACKET . list0_case_typ RBRACKET [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LBRACKET . list0_case_typ error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On BACKQUOTE shift to state 67
-- On list1_case_typ shift to state 95
-- On list0_case_typ shift to state 135
-- On case_typ shift to state 101
## Reductions:
-- On error reduce production list0_case_typ ->
-- On RBRACKET reduce production list0_case_typ ->

State 67:
## Known stack suffix:
## BACKQUOTE
## LR(1) items:
case_typ -> BACKQUOTE . case_label typ [ error RBRACKET BAR ]
case_typ -> BACKQUOTE . case_label [ error RBRACKET BAR ]
## Transitions:
-- On UIDENT shift to state 68
-- On LIDENT shift to state 69
-- On case_label shift to state 70
## Reductions:

State 68:
## Known stack suffix:
## UIDENT
## LR(1) items:
case_label -> UIDENT . [ error VALUE UIDENT TYPE TILDE SEMI RPAREN RBRACKET RBRACE MINUSGREATER LPAREN LIDENT LBRACKET LBRACE IND END DOT COIND BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_label -> UIDENT

State 69:
## Known stack suffix:
## LIDENT
## LR(1) items:
case_label -> LIDENT . [ error VALUE UIDENT TYPE TILDE SEMI RPAREN RBRACKET RBRACE MINUSGREATER LPAREN LIDENT LBRACKET LBRACE IND END DOT COIND BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_label -> LIDENT

State 70:
## Known stack suffix:
## BACKQUOTE case_label
## LR(1) items:
case_typ -> BACKQUOTE case_label . typ [ error RBRACKET BAR ]
case_typ -> BACKQUOTE case_label . [ error RBRACKET BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 134
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On error reduce production case_typ -> BACKQUOTE case_label
-- On TILDE reduce production list0_param_typ ->
-- On RBRACKET reduce production case_typ -> BACKQUOTE case_label
-- On MINUSGREATER reduce production list0_param_typ ->
-- On BAR reduce production case_typ -> BACKQUOTE case_label

State 71:
## Known stack suffix:
## LBRACE
## LR(1) items:
typ -> LBRACE . list0_field_typ RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LBRACE . list0_field_typ error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 72
-- On list1_field_typ shift to state 103
-- On list0_field_typ shift to state 131
-- On field_typ shift to state 109
## Reductions:
-- On error reduce production list0_field_typ ->
-- On RBRACE reduce production list0_field_typ ->

State 72:
## Known stack suffix:
## value_label
## LR(1) items:
field_typ -> value_label . COLON typ [ error SEMI RBRACE ]
## Transitions:
-- On COLON shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## value_label COLON
## LR(1) items:
field_typ -> value_label COLON . typ [ error SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 130
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 74:
## Known stack suffix:
## IND
## LR(1) items:
typ -> IND . type_label COLON typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 75
-- On type_label shift to state 76
## Reductions:

State 75:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_label -> LIDENT . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_label -> LIDENT

State 76:
## Known stack suffix:
## IND type_label
## LR(1) items:
typ -> IND type_label . COLON typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On COLON shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## IND type_label COLON
## LR(1) items:
typ -> IND type_label COLON . typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 129
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 78:
## Known stack suffix:
## COIND
## LR(1) items:
typ -> COIND . type_label COLON typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 75
-- On type_label shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## COIND type_label
## LR(1) items:
typ -> COIND type_label . COLON typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On COLON shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## COIND type_label COLON
## LR(1) items:
typ -> COIND type_label COLON . typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 82
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 81:
## Known stack suffix:
## type_label
## LR(1) items:
typ -> type_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> type_label

State 82:
## Known stack suffix:
## COIND type_label COLON typ
## LR(1) items:
typ -> typ . DOT typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> COIND type_label COLON typ . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production typ -> COIND type_label COLON typ
-- On VALUE reduce production typ -> COIND type_label COLON typ
-- On TYPE reduce production typ -> COIND type_label COLON typ
-- On TILDE reduce production typ -> COIND type_label COLON typ
-- On SEMI reduce production typ -> COIND type_label COLON typ
-- On RPAREN reduce production typ -> COIND type_label COLON typ
-- On RBRACKET reduce production typ -> COIND type_label COLON typ
-- On RBRACE reduce production typ -> COIND type_label COLON typ
-- On LPAREN reduce production typ -> COIND type_label COLON typ
-- On END reduce production typ -> COIND type_label COLON typ
-- On BAR reduce production typ -> COIND type_label COLON typ

State 83:
## Known stack suffix:
## typ DOT
## LR(1) items:
typ -> typ DOT . typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 84
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 84:
## Known stack suffix:
## typ DOT typ
## LR(1) items:
typ -> typ . DOT typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> typ DOT typ . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> typ DOT typ

State 85:
## Known stack suffix:
## list0_param_typ
## LR(1) items:
list0_param_typ -> list0_param_typ . param_typ [ TILDE MINUSGREATER ]
typ -> list0_param_typ . MINUSGREATER typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 86
-- On MINUSGREATER shift to state 127
-- On param_typ shift to state 124
## Reductions:

State 86:
## Known stack suffix:
## TILDE
## LR(1) items:
param_typ -> TILDE . value_label COLON typ [ TILDE MINUSGREATER ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## TILDE value_label
## LR(1) items:
param_typ -> TILDE value_label . COLON typ [ TILDE MINUSGREATER ]
## Transitions:
-- On COLON shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## TILDE value_label COLON
## LR(1) items:
param_typ -> TILDE value_label COLON . typ [ TILDE MINUSGREATER ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 126
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 89:
## Known stack suffix:
## LPAREN
## LR(1) items:
typ -> LPAREN . typ RPAREN [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LPAREN . typ error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 90
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 90:
## Known stack suffix:
## LPAREN typ
## LR(1) items:
typ -> typ . DOT typ [ error RPAREN DOT ]
typ -> LPAREN typ . RPAREN [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LPAREN typ . error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On error shift to state 91
-- On RPAREN shift to state 92
-- On DOT shift to state 83
## Reductions:

State 91:
## Known stack suffix:
## LPAREN typ error
## LR(1) items:
typ -> LPAREN typ error . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LPAREN typ error

State 92:
## Known stack suffix:
## LPAREN typ RPAREN
## LR(1) items:
typ -> LPAREN typ RPAREN . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LPAREN typ RPAREN

State 93:
## Known stack suffix:
## dule_label
## LR(1) items:
typ -> dule_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> dule_label

State 94:
## Known stack suffix:
## LBRACKET
## LR(1) items:
typ -> LBRACKET . list0_case_typ RBRACKET [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LBRACKET . list0_case_typ error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On BACKQUOTE shift to state 67
-- On list1_case_typ shift to state 95
-- On list0_case_typ shift to state 98
-- On case_typ shift to state 101
## Reductions:
-- On error reduce production list0_case_typ ->
-- On RBRACKET reduce production list0_case_typ ->

State 95:
## Known stack suffix:
## list1_case_typ
## LR(1) items:
list0_case_typ -> list1_case_typ . [ error RBRACKET ]
list1_case_typ -> list1_case_typ . BAR case_typ [ error RBRACKET BAR ]
## Transitions:
-- On BAR shift to state 96
## Reductions:
-- On error reduce production list0_case_typ -> list1_case_typ
-- On RBRACKET reduce production list0_case_typ -> list1_case_typ

State 96:
## Known stack suffix:
## list1_case_typ BAR
## LR(1) items:
list1_case_typ -> list1_case_typ BAR . case_typ [ error RBRACKET BAR ]
## Transitions:
-- On BACKQUOTE shift to state 67
-- On case_typ shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## list1_case_typ BAR case_typ
## LR(1) items:
list1_case_typ -> list1_case_typ BAR case_typ . [ error RBRACKET BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_case_typ -> list1_case_typ BAR case_typ

State 98:
## Known stack suffix:
## LBRACKET list0_case_typ
## LR(1) items:
typ -> LBRACKET list0_case_typ . RBRACKET [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LBRACKET list0_case_typ . error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On error shift to state 99
-- On RBRACKET shift to state 100
## Reductions:

State 99:
## Known stack suffix:
## LBRACKET list0_case_typ error
## LR(1) items:
typ -> LBRACKET list0_case_typ error . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACKET list0_case_typ error

State 100:
## Known stack suffix:
## LBRACKET list0_case_typ RBRACKET
## LR(1) items:
typ -> LBRACKET list0_case_typ RBRACKET . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACKET list0_case_typ RBRACKET

State 101:
## Known stack suffix:
## case_typ
## LR(1) items:
list1_case_typ -> case_typ . [ error RBRACKET BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_case_typ -> case_typ

State 102:
## Known stack suffix:
## LBRACE
## LR(1) items:
typ -> LBRACE . list0_field_typ RBRACE [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LBRACE . list0_field_typ error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 72
-- On list1_field_typ shift to state 103
-- On list0_field_typ shift to state 106
-- On field_typ shift to state 109
## Reductions:
-- On error reduce production list0_field_typ ->
-- On RBRACE reduce production list0_field_typ ->

State 103:
## Known stack suffix:
## list1_field_typ
## LR(1) items:
list0_field_typ -> list1_field_typ . [ error RBRACE ]
list1_field_typ -> list1_field_typ . SEMI field_typ [ error SEMI RBRACE ]
## Transitions:
-- On SEMI shift to state 104
## Reductions:
-- On error reduce production list0_field_typ -> list1_field_typ
-- On RBRACE reduce production list0_field_typ -> list1_field_typ

State 104:
## Known stack suffix:
## list1_field_typ SEMI
## LR(1) items:
list1_field_typ -> list1_field_typ SEMI . field_typ [ error SEMI RBRACE ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 72
-- On field_typ shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## list1_field_typ SEMI field_typ
## LR(1) items:
list1_field_typ -> list1_field_typ SEMI field_typ . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_typ -> list1_field_typ SEMI field_typ

State 106:
## Known stack suffix:
## LBRACE list0_field_typ
## LR(1) items:
typ -> LBRACE list0_field_typ . RBRACE [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> LBRACE list0_field_typ . error [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On error shift to state 107
-- On RBRACE shift to state 108
## Reductions:

State 107:
## Known stack suffix:
## LBRACE list0_field_typ error
## LR(1) items:
typ -> LBRACE list0_field_typ error . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACE list0_field_typ error

State 108:
## Known stack suffix:
## LBRACE list0_field_typ RBRACE
## LR(1) items:
typ -> LBRACE list0_field_typ RBRACE . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACE list0_field_typ RBRACE

State 109:
## Known stack suffix:
## field_typ
## LR(1) items:
list1_field_typ -> field_typ . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_typ -> field_typ

State 110:
## Known stack suffix:
## IND
## LR(1) items:
typ -> IND . type_label COLON typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 75
-- On type_label shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## IND type_label
## LR(1) items:
typ -> IND type_label . COLON typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On COLON shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## IND type_label COLON
## LR(1) items:
typ -> IND type_label COLON . typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 125
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 113:
## Known stack suffix:
## COIND
## LR(1) items:
typ -> COIND . type_label COLON typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 75
-- On type_label shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## COIND type_label
## LR(1) items:
typ -> COIND type_label . COLON typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On COLON shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## COIND type_label COLON
## LR(1) items:
typ -> COIND type_label COLON . typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 117
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 116:
## Known stack suffix:
## type_label
## LR(1) items:
typ -> type_label . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> type_label

State 117:
## Known stack suffix:
## COIND type_label COLON typ
## LR(1) items:
typ -> typ . DOT typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> COIND type_label COLON typ . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On WITH reduce production typ -> COIND type_label COLON typ
-- On UNDERSCORE reduce production typ -> COIND type_label COLON typ
-- On TILDE reduce production typ -> COIND type_label COLON typ
-- On THEN reduce production typ -> COIND type_label COLON typ
-- On REC reduce production typ -> COIND type_label COLON typ
-- On MINUSGREATER reduce production typ -> COIND type_label COLON typ
-- On LPAREN reduce production typ -> COIND type_label COLON typ
-- On LIDENT reduce production typ -> COIND type_label COLON typ
-- On LBRACE reduce production typ -> COIND type_label COLON typ
-- On IN reduce production typ -> COIND type_label COLON typ
-- On EQUAL reduce production typ -> COIND type_label COLON typ
-- On EOF reduce production typ -> COIND type_label COLON typ
-- On ELSE reduce production typ -> COIND type_label COLON typ

State 118:
## Known stack suffix:
## typ DOT
## LR(1) items:
typ -> typ DOT . typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 119
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 119:
## Known stack suffix:
## typ DOT typ
## LR(1) items:
typ -> typ . DOT typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> typ DOT typ . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> typ DOT typ

State 120:
## Known stack suffix:
## list0_param_typ
## LR(1) items:
list0_param_typ -> list0_param_typ . param_typ [ TILDE MINUSGREATER ]
typ -> list0_param_typ . MINUSGREATER typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 86
-- On MINUSGREATER shift to state 121
-- On param_typ shift to state 124
## Reductions:

State 121:
## Known stack suffix:
## list0_param_typ MINUSGREATER
## LR(1) items:
typ -> list0_param_typ MINUSGREATER . typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 122
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 122:
## Known stack suffix:
## list0_param_typ MINUSGREATER typ
## LR(1) items:
typ -> typ . DOT typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> list0_param_typ MINUSGREATER typ . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On WITH reduce production typ -> list0_param_typ MINUSGREATER typ
-- On UNDERSCORE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On TILDE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On THEN reduce production typ -> list0_param_typ MINUSGREATER typ
-- On REC reduce production typ -> list0_param_typ MINUSGREATER typ
-- On MINUSGREATER reduce production typ -> list0_param_typ MINUSGREATER typ
-- On LPAREN reduce production typ -> list0_param_typ MINUSGREATER typ
-- On LIDENT reduce production typ -> list0_param_typ MINUSGREATER typ
-- On LBRACE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On IN reduce production typ -> list0_param_typ MINUSGREATER typ
-- On EQUAL reduce production typ -> list0_param_typ MINUSGREATER typ
-- On EOF reduce production typ -> list0_param_typ MINUSGREATER typ
-- On ELSE reduce production typ -> list0_param_typ MINUSGREATER typ

State 123:
## Known stack suffix:
## dule_label
## LR(1) items:
typ -> dule_label . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> dule_label

State 124:
## Known stack suffix:
## list0_param_typ param_typ
## LR(1) items:
list0_param_typ -> list0_param_typ param_typ . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_param_typ -> list0_param_typ param_typ

State 125:
## Known stack suffix:
## IND type_label COLON typ
## LR(1) items:
typ -> typ . DOT typ [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
typ -> IND type_label COLON typ . [ WITH UNDERSCORE TILDE THEN REC MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF ELSE DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On WITH reduce production typ -> IND type_label COLON typ
-- On UNDERSCORE reduce production typ -> IND type_label COLON typ
-- On TILDE reduce production typ -> IND type_label COLON typ
-- On THEN reduce production typ -> IND type_label COLON typ
-- On REC reduce production typ -> IND type_label COLON typ
-- On MINUSGREATER reduce production typ -> IND type_label COLON typ
-- On LPAREN reduce production typ -> IND type_label COLON typ
-- On LIDENT reduce production typ -> IND type_label COLON typ
-- On LBRACE reduce production typ -> IND type_label COLON typ
-- On IN reduce production typ -> IND type_label COLON typ
-- On EQUAL reduce production typ -> IND type_label COLON typ
-- On EOF reduce production typ -> IND type_label COLON typ
-- On ELSE reduce production typ -> IND type_label COLON typ

State 126:
## Known stack suffix:
## TILDE value_label COLON typ
## LR(1) items:
param_typ -> TILDE value_label COLON typ . [ TILDE MINUSGREATER ]
typ -> typ . DOT typ [ TILDE MINUSGREATER DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On TILDE reduce production param_typ -> TILDE value_label COLON typ
-- On MINUSGREATER reduce production param_typ -> TILDE value_label COLON typ

State 127:
## Known stack suffix:
## list0_param_typ MINUSGREATER
## LR(1) items:
typ -> list0_param_typ MINUSGREATER . typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 128
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 128:
## Known stack suffix:
## list0_param_typ MINUSGREATER typ
## LR(1) items:
typ -> typ . DOT typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> list0_param_typ MINUSGREATER typ . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production typ -> list0_param_typ MINUSGREATER typ
-- On VALUE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On TYPE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On TILDE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On SEMI reduce production typ -> list0_param_typ MINUSGREATER typ
-- On RPAREN reduce production typ -> list0_param_typ MINUSGREATER typ
-- On RBRACKET reduce production typ -> list0_param_typ MINUSGREATER typ
-- On RBRACE reduce production typ -> list0_param_typ MINUSGREATER typ
-- On LPAREN reduce production typ -> list0_param_typ MINUSGREATER typ
-- On END reduce production typ -> list0_param_typ MINUSGREATER typ
-- On BAR reduce production typ -> list0_param_typ MINUSGREATER typ

State 129:
## Known stack suffix:
## IND type_label COLON typ
## LR(1) items:
typ -> typ . DOT typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> IND type_label COLON typ . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production typ -> IND type_label COLON typ
-- On VALUE reduce production typ -> IND type_label COLON typ
-- On TYPE reduce production typ -> IND type_label COLON typ
-- On TILDE reduce production typ -> IND type_label COLON typ
-- On SEMI reduce production typ -> IND type_label COLON typ
-- On RPAREN reduce production typ -> IND type_label COLON typ
-- On RBRACKET reduce production typ -> IND type_label COLON typ
-- On RBRACE reduce production typ -> IND type_label COLON typ
-- On LPAREN reduce production typ -> IND type_label COLON typ
-- On END reduce production typ -> IND type_label COLON typ
-- On BAR reduce production typ -> IND type_label COLON typ

State 130:
## Known stack suffix:
## value_label COLON typ
## LR(1) items:
field_typ -> value_label COLON typ . [ error SEMI RBRACE ]
typ -> typ . DOT typ [ error SEMI RBRACE DOT ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production field_typ -> value_label COLON typ
-- On SEMI reduce production field_typ -> value_label COLON typ
-- On RBRACE reduce production field_typ -> value_label COLON typ

State 131:
## Known stack suffix:
## LBRACE list0_field_typ
## LR(1) items:
typ -> LBRACE list0_field_typ . RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LBRACE list0_field_typ . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 132
-- On RBRACE shift to state 133
## Reductions:

State 132:
## Known stack suffix:
## LBRACE list0_field_typ error
## LR(1) items:
typ -> LBRACE list0_field_typ error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACE list0_field_typ error

State 133:
## Known stack suffix:
## LBRACE list0_field_typ RBRACE
## LR(1) items:
typ -> LBRACE list0_field_typ RBRACE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACE list0_field_typ RBRACE

State 134:
## Known stack suffix:
## BACKQUOTE case_label typ
## LR(1) items:
case_typ -> BACKQUOTE case_label typ . [ error RBRACKET BAR ]
typ -> typ . DOT typ [ error RBRACKET DOT BAR ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production case_typ -> BACKQUOTE case_label typ
-- On RBRACKET reduce production case_typ -> BACKQUOTE case_label typ
-- On BAR reduce production case_typ -> BACKQUOTE case_label typ

State 135:
## Known stack suffix:
## LBRACKET list0_case_typ
## LR(1) items:
typ -> LBRACKET list0_case_typ . RBRACKET [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LBRACKET list0_case_typ . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 136
-- On RBRACKET shift to state 137
## Reductions:

State 136:
## Known stack suffix:
## LBRACKET list0_case_typ error
## LR(1) items:
typ -> LBRACKET list0_case_typ error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACKET list0_case_typ error

State 137:
## Known stack suffix:
## LBRACKET list0_case_typ RBRACKET
## LR(1) items:
typ -> LBRACKET list0_case_typ RBRACKET . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LBRACKET list0_case_typ RBRACKET

State 138:
## Known stack suffix:
## LPAREN typ
## LR(1) items:
typ -> typ . DOT typ [ error RPAREN DOT ]
typ -> LPAREN typ . RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
typ -> LPAREN typ . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 139
-- On RPAREN shift to state 140
-- On DOT shift to state 83
## Reductions:

State 139:
## Known stack suffix:
## LPAREN typ error
## LR(1) items:
typ -> LPAREN typ error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LPAREN typ error

State 140:
## Known stack suffix:
## LPAREN typ RPAREN
## LR(1) items:
typ -> LPAREN typ RPAREN . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> LPAREN typ RPAREN

State 141:
## Known stack suffix:
## TILDE LPAREN value_label COLON typ
## LR(1) items:
param -> TILDE LPAREN value_label COLON typ . RPAREN [ TILDE MINUSGREATER ]
param -> TILDE LPAREN value_label COLON typ . error [ TILDE MINUSGREATER ]
typ -> typ . DOT typ [ error RPAREN DOT ]
## Transitions:
-- On error shift to state 142
-- On RPAREN shift to state 143
-- On DOT shift to state 83
## Reductions:

State 142:
## Known stack suffix:
## TILDE LPAREN value_label COLON typ error
## LR(1) items:
param -> TILDE LPAREN value_label COLON typ error . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param -> TILDE LPAREN value_label COLON typ error

State 143:
## Known stack suffix:
## TILDE LPAREN value_label COLON typ RPAREN
## LR(1) items:
param -> TILDE LPAREN value_label COLON typ RPAREN . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param -> TILDE LPAREN value_label COLON typ RPAREN

State 144:
## Known stack suffix:
## TILDE value_label
## LR(1) items:
param -> TILDE value_label . [ TILDE MINUSGREATER ]
param -> TILDE value_label . COLON pattern [ TILDE MINUSGREATER ]
## Transitions:
-- On COLON shift to state 145
## Reductions:
-- On TILDE reduce production param -> TILDE value_label
-- On MINUSGREATER reduce production param -> TILDE value_label

State 145:
## Known stack suffix:
## TILDE value_label COLON
## LR(1) items:
param -> TILDE value_label COLON . pattern [ TILDE MINUSGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 2
-- On LIDENT shift to state 16
-- On LBRACE shift to state 20
-- On value_label shift to state 146
-- On pattern shift to state 149
## Reductions:

State 146:
## Known stack suffix:
## value_label
## LR(1) items:
pattern -> value_label . COLON typ [ TILDE MINUSGREATER EQUAL ]
pattern -> value_label . [ TILDE MINUSGREATER EQUAL ]
## Transitions:
-- On COLON shift to state 147
## Reductions:
-- On TILDE reduce production pattern -> value_label
-- On MINUSGREATER reduce production pattern -> value_label
-- On EQUAL reduce production pattern -> value_label

State 147:
## Known stack suffix:
## value_label COLON
## LR(1) items:
pattern -> value_label COLON . typ [ TILDE MINUSGREATER EQUAL ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 148
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 148:
## Known stack suffix:
## value_label COLON typ
## LR(1) items:
pattern -> value_label COLON typ . [ TILDE MINUSGREATER EQUAL ]
typ -> typ . DOT typ [ TILDE MINUSGREATER EQUAL DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On TILDE reduce production pattern -> value_label COLON typ
-- On MINUSGREATER reduce production pattern -> value_label COLON typ
-- On EQUAL reduce production pattern -> value_label COLON typ

State 149:
## Known stack suffix:
## TILDE value_label COLON pattern
## LR(1) items:
param -> TILDE value_label COLON pattern . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param -> TILDE value_label COLON pattern

State 150:
## Known stack suffix:
## FUN list0_param MINUSGREATER
## LR(1) items:
valu -> FUN list0_param MINUSGREATER . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 238
-- On dule_label shift to state 217
## Reductions:

State 151:
## Known stack suffix:
## FOLD
## LR(1) items:
valu -> FOLD . embedding [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MINUSGREATER shift to state 6
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 152
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 232
-- On valu shift to state 233
-- On pattern shift to state 234
-- On embedding shift to state 237
-- On dule_label shift to state 217
## Reductions:

State 152:
## Known stack suffix:
## LBRACE
## LR(1) items:
pattern -> LBRACE . list0_field RBRACE [ MINUSGREATER ]
pattern -> LBRACE . list0_field error [ MINUSGREATER ]
valu -> LBRACE . list0_field RBRACE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACE . list0_field error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On list1_field shift to state 35
-- On list0_field shift to state 153
-- On field shift to state 41
## Reductions:
-- On error reduce production list0_field ->
-- On RBRACE reduce production list0_field ->

State 153:
## Known stack suffix:
## LBRACE list0_field
## LR(1) items:
pattern -> LBRACE list0_field . RBRACE [ MINUSGREATER ]
pattern -> LBRACE list0_field . error [ MINUSGREATER ]
valu -> LBRACE list0_field . RBRACE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LBRACE list0_field . error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On error shift to state 154
-- On RBRACE shift to state 155
## Reductions:

State 154:
## Known stack suffix:
## LBRACE list0_field error
## LR(1) items:
pattern -> LBRACE list0_field error . [ MINUSGREATER ]
valu -> LBRACE list0_field error . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Reductions:
-- On WITH reduce production valu -> LBRACE list0_field error
-- On UNDERSCORE reduce production valu -> LBRACE list0_field error
-- On TILDE reduce production valu -> LBRACE list0_field error
-- On THEN reduce production valu -> LBRACE list0_field error
-- On REC reduce production valu -> LBRACE list0_field error
-- On MINUSGREATER reduce production pattern -> LBRACE list0_field error
-- On LPAREN reduce production valu -> LBRACE list0_field error
-- On LIDENT reduce production valu -> LBRACE list0_field error
-- On LBRACE reduce production valu -> LBRACE list0_field error
-- On IN reduce production valu -> LBRACE list0_field error
-- On EOF reduce production valu -> LBRACE list0_field error
-- On ELSE reduce production valu -> LBRACE list0_field error
-- On DOT reduce production valu -> LBRACE list0_field error

State 155:
## Known stack suffix:
## LBRACE list0_field RBRACE
## LR(1) items:
pattern -> LBRACE list0_field RBRACE . [ MINUSGREATER ]
valu -> LBRACE list0_field RBRACE . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Reductions:
-- On WITH reduce production valu -> LBRACE list0_field RBRACE
-- On UNDERSCORE reduce production valu -> LBRACE list0_field RBRACE
-- On TILDE reduce production valu -> LBRACE list0_field RBRACE
-- On THEN reduce production valu -> LBRACE list0_field RBRACE
-- On REC reduce production valu -> LBRACE list0_field RBRACE
-- On MINUSGREATER reduce production pattern -> LBRACE list0_field RBRACE
-- On LPAREN reduce production valu -> LBRACE list0_field RBRACE
-- On LIDENT reduce production valu -> LBRACE list0_field RBRACE
-- On LBRACE reduce production valu -> LBRACE list0_field RBRACE
-- On IN reduce production valu -> LBRACE list0_field RBRACE
-- On EOF reduce production valu -> LBRACE list0_field RBRACE
-- On ELSE reduce production valu -> LBRACE list0_field RBRACE
-- On DOT reduce production valu -> LBRACE list0_field RBRACE

State 156:
## Known stack suffix:
## FAIL
## LR(1) items:
valu -> FAIL . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> FAIL

State 157:
## Known stack suffix:
## DE
## LR(1) items:
valu -> DE . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> DE

State 158:
## Known stack suffix:
## CON
## LR(1) items:
valu -> CON . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> CON

State 159:
## Known stack suffix:
## COLON
## LR(1) items:
valu -> COLON . typ [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 5
-- On LPAREN shift to state 89
-- On LIDENT shift to state 75
-- On LBRACKET shift to state 94
-- On LBRACE shift to state 102
-- On IND shift to state 110
-- On COIND shift to state 113
-- On type_label shift to state 116
-- On typ shift to state 160
-- On list0_param_typ shift to state 120
-- On dule_label shift to state 123
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 160:
## Known stack suffix:
## COLON typ
## LR(1) items:
typ -> typ . DOT typ [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> COLON typ . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On DOT shift to state 118
## Reductions:
-- On WITH reduce production valu -> COLON typ
-- On UNDERSCORE reduce production valu -> COLON typ
-- On TILDE reduce production valu -> COLON typ
-- On THEN reduce production valu -> COLON typ
-- On REC reduce production valu -> COLON typ
-- On LPAREN reduce production valu -> COLON typ
-- On LIDENT reduce production valu -> COLON typ
-- On LBRACE reduce production valu -> COLON typ
-- On IN reduce production valu -> COLON typ
-- On EOF reduce production valu -> COLON typ
-- On ELSE reduce production valu -> COLON typ

State 161:
## Known stack suffix:
## BACKQUOTE
## LR(1) items:
valu -> BACKQUOTE . case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 31
-- On LIDENT shift to state 32
-- On case_label shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## BACKQUOTE case_label
## LR(1) items:
valu -> BACKQUOTE case_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> BACKQUOTE case_label

State 163:
## Known stack suffix:
## ASSERT
## LR(1) items:
valu -> ASSERT . valu IN valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 165
-- On dule_label shift to state 217
## Reductions:

State 164:
## Known stack suffix:
## value_label
## LR(1) items:
valu -> value_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> value_label

State 165:
## Known stack suffix:
## ASSERT valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE LPAREN IN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE LPAREN IN DOT ]
valu -> valu . list1_argument [ TILDE LPAREN IN DOT ]
valu -> valu . TILDE [ TILDE LPAREN IN DOT ]
valu -> valu . partial_arguments [ TILDE LPAREN IN DOT ]
valu -> ASSERT valu . IN valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On IN shift to state 230
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 166:
## Known stack suffix:
## valu TILDE
## LR(1) items:
argument -> TILDE . value_label COLON valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
argument -> TILDE . value_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu TILDE . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 167
## Reductions:
-- On WITH reduce production valu -> valu TILDE
-- On UNDERSCORE reduce production valu -> valu TILDE
-- On TILDE reduce production valu -> valu TILDE
-- On THEN reduce production valu -> valu TILDE
-- On REC reduce production valu -> valu TILDE
-- On LPAREN reduce production valu -> valu TILDE
-- On LBRACE reduce production valu -> valu TILDE
-- On IN reduce production valu -> valu TILDE
-- On EOF reduce production valu -> valu TILDE
-- On ELSE reduce production valu -> valu TILDE
-- On DOT reduce production valu -> valu TILDE

State 167:
## Known stack suffix:
## TILDE value_label
## LR(1) items:
argument -> TILDE value_label . COLON valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
argument -> TILDE value_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On COLON shift to state 168
## Reductions:
-- On WITH reduce production argument -> TILDE value_label
-- On UNDERSCORE reduce production argument -> TILDE value_label
-- On TILDE reduce production argument -> TILDE value_label
-- On THEN reduce production argument -> TILDE value_label
-- On REC reduce production argument -> TILDE value_label
-- On LPAREN reduce production argument -> TILDE value_label
-- On LIDENT reduce production argument -> TILDE value_label
-- On LBRACE reduce production argument -> TILDE value_label
-- On IN reduce production argument -> TILDE value_label
-- On EOF reduce production argument -> TILDE value_label
-- On ELSE reduce production argument -> TILDE value_label
-- On DOT reduce production argument -> TILDE value_label

State 168:
## Known stack suffix:
## TILDE value_label COLON
## LR(1) items:
argument -> TILDE value_label COLON . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 169
-- On dule_label shift to state 217
## Reductions:

State 169:
## Known stack suffix:
## TILDE value_label COLON valu
## LR(1) items:
argument -> TILDE value_label COLON valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production argument -> TILDE value_label COLON valu
-- On UNDERSCORE reduce production argument -> TILDE value_label COLON valu
-- On TILDE reduce production argument -> TILDE value_label COLON valu
-- On THEN reduce production argument -> TILDE value_label COLON valu
-- On REC reduce production argument -> TILDE value_label COLON valu
-- On LIDENT reduce production argument -> TILDE value_label COLON valu
-- On LBRACE reduce production argument -> TILDE value_label COLON valu
-- On IN reduce production argument -> TILDE value_label COLON valu
-- On EOF reduce production argument -> TILDE value_label COLON valu
-- On ELSE reduce production argument -> TILDE value_label COLON valu

State 170:
## Known stack suffix:
## LPAREN
## LR(1) items:
partial_arguments -> LPAREN . list1_argument RPAREN [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
partial_arguments -> LPAREN . list1_argument error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 171
-- On list1_argument shift to state 227
-- On argument shift to state 200
## Reductions:

State 171:
## Known stack suffix:
## TILDE
## LR(1) items:
argument -> TILDE . value_label COLON valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
argument -> TILDE . value_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## TILDE value_label
## LR(1) items:
argument -> TILDE value_label . COLON valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
argument -> TILDE value_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On COLON shift to state 173
## Reductions:
-- On error reduce production argument -> TILDE value_label
-- On VALUE reduce production argument -> TILDE value_label
-- On TYPE reduce production argument -> TILDE value_label
-- On TILDE reduce production argument -> TILDE value_label
-- On SEMI reduce production argument -> TILDE value_label
-- On RPAREN reduce production argument -> TILDE value_label
-- On RBRACKET reduce production argument -> TILDE value_label
-- On RBRACE reduce production argument -> TILDE value_label
-- On LPAREN reduce production argument -> TILDE value_label
-- On END reduce production argument -> TILDE value_label
-- On DOT reduce production argument -> TILDE value_label
-- On BAR reduce production argument -> TILDE value_label

State 173:
## Known stack suffix:
## TILDE value_label COLON
## LR(1) items:
argument -> TILDE value_label COLON . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 226
-- On dule_label shift to state 207
## Reductions:

State 174:
## Known stack suffix:
## LBRACE
## LR(1) items:
valu -> LBRACE . list0_field RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACE . list0_field error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 22
-- On list1_field shift to state 35
-- On list0_field shift to state 175
-- On field shift to state 41
## Reductions:
-- On error reduce production list0_field ->
-- On RBRACE reduce production list0_field ->

State 175:
## Known stack suffix:
## LBRACE list0_field
## LR(1) items:
valu -> LBRACE list0_field . RBRACE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACE list0_field . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 176
-- On RBRACE shift to state 177
## Reductions:

State 176:
## Known stack suffix:
## LBRACE list0_field error
## LR(1) items:
valu -> LBRACE list0_field error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACE list0_field error

State 177:
## Known stack suffix:
## LBRACE list0_field RBRACE
## LR(1) items:
valu -> LBRACE list0_field RBRACE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACE list0_field RBRACE

State 178:
## Known stack suffix:
## FUN
## LR(1) items:
valu -> FUN . list0_param MINUSGREATER valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On list0_param shift to state 179
## Default reduction:
-- After reading the next token, reduce production list0_param ->

State 179:
## Known stack suffix:
## FUN list0_param
## LR(1) items:
list0_param -> list0_param . param [ TILDE MINUSGREATER ]
valu -> FUN list0_param . MINUSGREATER valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 60
-- On MINUSGREATER shift to state 180
-- On param shift to state 225
## Reductions:

State 180:
## Known stack suffix:
## FUN list0_param MINUSGREATER
## LR(1) items:
valu -> FUN list0_param MINUSGREATER . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 224
-- On dule_label shift to state 207
## Reductions:

State 181:
## Known stack suffix:
## FOLD
## LR(1) items:
valu -> FOLD . embedding [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDERSCORE shift to state 2
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MINUSGREATER shift to state 14
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 34
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 218
-- On valu shift to state 219
-- On pattern shift to state 220
-- On embedding shift to state 223
-- On dule_label shift to state 207
## Reductions:

State 182:
## Known stack suffix:
## FAIL
## LR(1) items:
valu -> FAIL . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> FAIL

State 183:
## Known stack suffix:
## DE
## LR(1) items:
valu -> DE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> DE

State 184:
## Known stack suffix:
## CON
## LR(1) items:
valu -> CON . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> CON

State 185:
## Known stack suffix:
## COLON
## LR(1) items:
valu -> COLON . typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 186
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 186:
## Known stack suffix:
## COLON typ
## LR(1) items:
typ -> typ . DOT typ [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> COLON typ . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production valu -> COLON typ
-- On VALUE reduce production valu -> COLON typ
-- On TYPE reduce production valu -> COLON typ
-- On TILDE reduce production valu -> COLON typ
-- On SEMI reduce production valu -> COLON typ
-- On RPAREN reduce production valu -> COLON typ
-- On RBRACKET reduce production valu -> COLON typ
-- On RBRACE reduce production valu -> COLON typ
-- On LPAREN reduce production valu -> COLON typ
-- On END reduce production valu -> COLON typ
-- On BAR reduce production valu -> COLON typ

State 187:
## Known stack suffix:
## BACKQUOTE
## LR(1) items:
valu -> BACKQUOTE . case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 68
-- On LIDENT shift to state 69
-- On case_label shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## BACKQUOTE case_label
## LR(1) items:
valu -> BACKQUOTE case_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> BACKQUOTE case_label

State 189:
## Known stack suffix:
## ASSERT
## LR(1) items:
valu -> ASSERT . valu IN valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 190
-- On dule_label shift to state 217
## Reductions:

State 190:
## Known stack suffix:
## ASSERT valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE LPAREN IN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE LPAREN IN DOT ]
valu -> valu . list1_argument [ TILDE LPAREN IN DOT ]
valu -> valu . TILDE [ TILDE LPAREN IN DOT ]
valu -> valu . partial_arguments [ TILDE LPAREN IN DOT ]
valu -> ASSERT valu . IN valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On IN shift to state 191
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 191:
## Known stack suffix:
## ASSERT valu IN
## LR(1) items:
valu -> ASSERT valu IN . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 193
-- On dule_label shift to state 207
## Reductions:

State 192:
## Known stack suffix:
## value_label
## LR(1) items:
valu -> value_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> value_label

State 193:
## Known stack suffix:
## ASSERT valu IN valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> ASSERT valu IN valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production valu -> ASSERT valu IN valu
-- On VALUE reduce production valu -> ASSERT valu IN valu
-- On TYPE reduce production valu -> ASSERT valu IN valu
-- On SEMI reduce production valu -> ASSERT valu IN valu
-- On RPAREN reduce production valu -> ASSERT valu IN valu
-- On RBRACKET reduce production valu -> ASSERT valu IN valu
-- On RBRACE reduce production valu -> ASSERT valu IN valu
-- On END reduce production valu -> ASSERT valu IN valu
-- On BAR reduce production valu -> ASSERT valu IN valu

State 194:
## Known stack suffix:
## valu TILDE
## LR(1) items:
argument -> TILDE . value_label COLON valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
argument -> TILDE . value_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu TILDE . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LIDENT shift to state 21
-- On value_label shift to state 172
## Reductions:
-- On error reduce production valu -> valu TILDE
-- On VALUE reduce production valu -> valu TILDE
-- On TYPE reduce production valu -> valu TILDE
-- On TILDE reduce production valu -> valu TILDE
-- On SEMI reduce production valu -> valu TILDE
-- On RPAREN reduce production valu -> valu TILDE
-- On RBRACKET reduce production valu -> valu TILDE
-- On RBRACE reduce production valu -> valu TILDE
-- On LPAREN reduce production valu -> valu TILDE
-- On END reduce production valu -> valu TILDE
-- On DOT reduce production valu -> valu TILDE
-- On BAR reduce production valu -> valu TILDE

State 195:
## Known stack suffix:
## LPAREN
## LR(1) items:
partial_arguments -> LPAREN . list1_argument RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
partial_arguments -> LPAREN . list1_argument error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 171
-- On list1_argument shift to state 196
-- On argument shift to state 200
## Reductions:

State 196:
## Known stack suffix:
## LPAREN list1_argument
## LR(1) items:
list1_argument -> list1_argument . argument [ error TILDE RPAREN ]
partial_arguments -> LPAREN list1_argument . RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
partial_arguments -> LPAREN list1_argument . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 197
-- On TILDE shift to state 171
-- On RPAREN shift to state 198
-- On argument shift to state 199
## Reductions:

State 197:
## Known stack suffix:
## LPAREN list1_argument error
## LR(1) items:
partial_arguments -> LPAREN list1_argument error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partial_arguments -> LPAREN list1_argument error

State 198:
## Known stack suffix:
## LPAREN list1_argument RPAREN
## LR(1) items:
partial_arguments -> LPAREN list1_argument RPAREN . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partial_arguments -> LPAREN list1_argument RPAREN

State 199:
## Known stack suffix:
## list1_argument argument
## LR(1) items:
list1_argument -> list1_argument argument . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_argument -> list1_argument argument

State 200:
## Known stack suffix:
## argument
## LR(1) items:
list1_argument -> argument . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_argument -> argument

State 201:
## Known stack suffix:
## valu DOT
## LR(1) items:
valu -> valu DOT . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu DOT . BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 202
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 204
-- On dule_label shift to state 207
## Reductions:

State 202:
## Known stack suffix:
## valu DOT BACKQUOTE
## LR(1) items:
valu -> valu DOT BACKQUOTE . case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> BACKQUOTE . case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UIDENT shift to state 68
-- On LIDENT shift to state 69
-- On case_label shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## valu DOT BACKQUOTE case_label
## LR(1) items:
valu -> valu DOT BACKQUOTE case_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> BACKQUOTE case_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> valu DOT BACKQUOTE case_label

State 204:
## Known stack suffix:
## valu DOT valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu DOT valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Default reduction:
-- After reading the next token, reduce production valu -> valu DOT valu

State 205:
## Known stack suffix:
## valu partial_arguments
## LR(1) items:
valu -> valu partial_arguments . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> valu partial_arguments

State 206:
## Known stack suffix:
## valu list1_argument
## LR(1) items:
list1_argument -> list1_argument . argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu list1_argument . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 171
-- On argument shift to state 199
## Reductions:
-- On error reduce production valu -> valu list1_argument
-- On VALUE reduce production valu -> valu list1_argument
-- On TYPE reduce production valu -> valu list1_argument
-- On SEMI reduce production valu -> valu list1_argument
-- On RPAREN reduce production valu -> valu list1_argument
-- On RBRACKET reduce production valu -> valu list1_argument
-- On RBRACE reduce production valu -> valu list1_argument
-- On LPAREN reduce production valu -> valu list1_argument
-- On END reduce production valu -> valu list1_argument
-- On DOT reduce production valu -> valu list1_argument
-- On BAR reduce production valu -> valu list1_argument

State 207:
## Known stack suffix:
## dule_label
## LR(1) items:
valu -> dule_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> dule_label

State 208:
## Known stack suffix:
## valu DOT
## LR(1) items:
valu -> valu DOT . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu DOT . BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 209
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 211
-- On dule_label shift to state 217
## Reductions:

State 209:
## Known stack suffix:
## valu DOT BACKQUOTE
## LR(1) items:
valu -> valu DOT BACKQUOTE . case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> BACKQUOTE . case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UIDENT shift to state 31
-- On LIDENT shift to state 32
-- On case_label shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## valu DOT BACKQUOTE case_label
## LR(1) items:
valu -> valu DOT BACKQUOTE case_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> BACKQUOTE case_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> valu DOT BACKQUOTE case_label

State 211:
## Known stack suffix:
## valu DOT valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu DOT valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Default reduction:
-- After reading the next token, reduce production valu -> valu DOT valu

State 212:
## Known stack suffix:
## valu partial_arguments
## LR(1) items:
valu -> valu partial_arguments . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> valu partial_arguments

State 213:
## Known stack suffix:
## valu list1_argument
## LR(1) items:
list1_argument -> list1_argument . argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu list1_argument . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 214
-- On argument shift to state 215
## Reductions:
-- On WITH reduce production valu -> valu list1_argument
-- On UNDERSCORE reduce production valu -> valu list1_argument
-- On THEN reduce production valu -> valu list1_argument
-- On REC reduce production valu -> valu list1_argument
-- On LPAREN reduce production valu -> valu list1_argument
-- On LIDENT reduce production valu -> valu list1_argument
-- On LBRACE reduce production valu -> valu list1_argument
-- On IN reduce production valu -> valu list1_argument
-- On EOF reduce production valu -> valu list1_argument
-- On ELSE reduce production valu -> valu list1_argument
-- On DOT reduce production valu -> valu list1_argument

State 214:
## Known stack suffix:
## TILDE
## LR(1) items:
argument -> TILDE . value_label COLON valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
argument -> TILDE . value_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 167
## Reductions:

State 215:
## Known stack suffix:
## list1_argument argument
## LR(1) items:
list1_argument -> list1_argument argument . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_argument -> list1_argument argument

State 216:
## Known stack suffix:
## argument
## LR(1) items:
list1_argument -> argument . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_argument -> argument

State 217:
## Known stack suffix:
## dule_label
## LR(1) items:
valu -> dule_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> dule_label

State 218:
## Known stack suffix:
## value_label
## LR(1) items:
pattern -> value_label . COLON typ [ MINUSGREATER ]
pattern -> value_label . [ MINUSGREATER ]
valu -> value_label . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On COLON shift to state 147
## Reductions:
-- On error reduce production valu -> value_label
-- On VALUE reduce production valu -> value_label
-- On TYPE reduce production valu -> value_label
-- On TILDE reduce production valu -> value_label
-- On SEMI reduce production valu -> value_label
-- On RPAREN reduce production valu -> value_label
-- On RBRACKET reduce production valu -> value_label
-- On RBRACE reduce production valu -> value_label
-- On MINUSGREATER reduce production pattern -> value_label
-- On LPAREN reduce production valu -> value_label
-- On END reduce production valu -> value_label
-- On DOT reduce production valu -> value_label
-- On BAR reduce production valu -> value_label

State 219:
## Known stack suffix:
## valu
## LR(1) items:
embedding -> valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production embedding -> valu
-- On VALUE reduce production embedding -> valu
-- On TYPE reduce production embedding -> valu
-- On SEMI reduce production embedding -> valu
-- On RPAREN reduce production embedding -> valu
-- On RBRACKET reduce production embedding -> valu
-- On RBRACE reduce production embedding -> valu
-- On END reduce production embedding -> valu
-- On BAR reduce production embedding -> valu

State 220:
## Known stack suffix:
## pattern
## LR(1) items:
embedding -> pattern . MINUSGREATER valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On MINUSGREATER shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## pattern MINUSGREATER
## LR(1) items:
embedding -> pattern MINUSGREATER . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 222
-- On dule_label shift to state 207
## Reductions:

State 222:
## Known stack suffix:
## pattern MINUSGREATER valu
## LR(1) items:
embedding -> pattern MINUSGREATER valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production embedding -> pattern MINUSGREATER valu
-- On VALUE reduce production embedding -> pattern MINUSGREATER valu
-- On TYPE reduce production embedding -> pattern MINUSGREATER valu
-- On SEMI reduce production embedding -> pattern MINUSGREATER valu
-- On RPAREN reduce production embedding -> pattern MINUSGREATER valu
-- On RBRACKET reduce production embedding -> pattern MINUSGREATER valu
-- On RBRACE reduce production embedding -> pattern MINUSGREATER valu
-- On END reduce production embedding -> pattern MINUSGREATER valu
-- On BAR reduce production embedding -> pattern MINUSGREATER valu

State 223:
## Known stack suffix:
## FOLD embedding
## LR(1) items:
valu -> FOLD embedding . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> FOLD embedding

State 224:
## Known stack suffix:
## FUN list0_param MINUSGREATER valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> FUN list0_param MINUSGREATER valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production valu -> FUN list0_param MINUSGREATER valu
-- On VALUE reduce production valu -> FUN list0_param MINUSGREATER valu
-- On TYPE reduce production valu -> FUN list0_param MINUSGREATER valu
-- On SEMI reduce production valu -> FUN list0_param MINUSGREATER valu
-- On RPAREN reduce production valu -> FUN list0_param MINUSGREATER valu
-- On RBRACKET reduce production valu -> FUN list0_param MINUSGREATER valu
-- On RBRACE reduce production valu -> FUN list0_param MINUSGREATER valu
-- On END reduce production valu -> FUN list0_param MINUSGREATER valu
-- On BAR reduce production valu -> FUN list0_param MINUSGREATER valu

State 225:
## Known stack suffix:
## list0_param param
## LR(1) items:
list0_param -> list0_param param . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_param -> list0_param param

State 226:
## Known stack suffix:
## TILDE value_label COLON valu
## LR(1) items:
argument -> TILDE value_label COLON valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production argument -> TILDE value_label COLON valu
-- On VALUE reduce production argument -> TILDE value_label COLON valu
-- On TYPE reduce production argument -> TILDE value_label COLON valu
-- On TILDE reduce production argument -> TILDE value_label COLON valu
-- On SEMI reduce production argument -> TILDE value_label COLON valu
-- On RPAREN reduce production argument -> TILDE value_label COLON valu
-- On RBRACKET reduce production argument -> TILDE value_label COLON valu
-- On RBRACE reduce production argument -> TILDE value_label COLON valu
-- On END reduce production argument -> TILDE value_label COLON valu
-- On BAR reduce production argument -> TILDE value_label COLON valu

State 227:
## Known stack suffix:
## LPAREN list1_argument
## LR(1) items:
list1_argument -> list1_argument . argument [ error TILDE RPAREN ]
partial_arguments -> LPAREN list1_argument . RPAREN [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
partial_arguments -> LPAREN list1_argument . error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On error shift to state 228
-- On TILDE shift to state 171
-- On RPAREN shift to state 229
-- On argument shift to state 199
## Reductions:

State 228:
## Known stack suffix:
## LPAREN list1_argument error
## LR(1) items:
partial_arguments -> LPAREN list1_argument error . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partial_arguments -> LPAREN list1_argument error

State 229:
## Known stack suffix:
## LPAREN list1_argument RPAREN
## LR(1) items:
partial_arguments -> LPAREN list1_argument RPAREN . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partial_arguments -> LPAREN list1_argument RPAREN

State 230:
## Known stack suffix:
## ASSERT valu IN
## LR(1) items:
valu -> ASSERT valu IN . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 231
-- On dule_label shift to state 217
## Reductions:

State 231:
## Known stack suffix:
## ASSERT valu IN valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> ASSERT valu IN valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production valu -> ASSERT valu IN valu
-- On UNDERSCORE reduce production valu -> ASSERT valu IN valu
-- On THEN reduce production valu -> ASSERT valu IN valu
-- On REC reduce production valu -> ASSERT valu IN valu
-- On LIDENT reduce production valu -> ASSERT valu IN valu
-- On LBRACE reduce production valu -> ASSERT valu IN valu
-- On IN reduce production valu -> ASSERT valu IN valu
-- On EOF reduce production valu -> ASSERT valu IN valu
-- On ELSE reduce production valu -> ASSERT valu IN valu

State 232:
## Known stack suffix:
## value_label
## LR(1) items:
pattern -> value_label . COLON typ [ MINUSGREATER ]
pattern -> value_label . [ MINUSGREATER ]
valu -> value_label . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On COLON shift to state 147
## Reductions:
-- On WITH reduce production valu -> value_label
-- On UNDERSCORE reduce production valu -> value_label
-- On TILDE reduce production valu -> value_label
-- On THEN reduce production valu -> value_label
-- On REC reduce production valu -> value_label
-- On MINUSGREATER reduce production pattern -> value_label
-- On LPAREN reduce production valu -> value_label
-- On LIDENT reduce production valu -> value_label
-- On LBRACE reduce production valu -> value_label
-- On IN reduce production valu -> value_label
-- On EOF reduce production valu -> value_label
-- On ELSE reduce production valu -> value_label
-- On DOT reduce production valu -> value_label

State 233:
## Known stack suffix:
## valu
## LR(1) items:
embedding -> valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production embedding -> valu
-- On UNDERSCORE reduce production embedding -> valu
-- On THEN reduce production embedding -> valu
-- On REC reduce production embedding -> valu
-- On LIDENT reduce production embedding -> valu
-- On LBRACE reduce production embedding -> valu
-- On IN reduce production embedding -> valu
-- On EOF reduce production embedding -> valu
-- On ELSE reduce production embedding -> valu

State 234:
## Known stack suffix:
## pattern
## LR(1) items:
embedding -> pattern . MINUSGREATER valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On MINUSGREATER shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## pattern MINUSGREATER
## LR(1) items:
embedding -> pattern MINUSGREATER . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 236
-- On dule_label shift to state 217
## Reductions:

State 236:
## Known stack suffix:
## pattern MINUSGREATER valu
## LR(1) items:
embedding -> pattern MINUSGREATER valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production embedding -> pattern MINUSGREATER valu
-- On UNDERSCORE reduce production embedding -> pattern MINUSGREATER valu
-- On THEN reduce production embedding -> pattern MINUSGREATER valu
-- On REC reduce production embedding -> pattern MINUSGREATER valu
-- On LIDENT reduce production embedding -> pattern MINUSGREATER valu
-- On LBRACE reduce production embedding -> pattern MINUSGREATER valu
-- On IN reduce production embedding -> pattern MINUSGREATER valu
-- On EOF reduce production embedding -> pattern MINUSGREATER valu
-- On ELSE reduce production embedding -> pattern MINUSGREATER valu

State 237:
## Known stack suffix:
## FOLD embedding
## LR(1) items:
valu -> FOLD embedding . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> FOLD embedding

State 238:
## Known stack suffix:
## FUN list0_param MINUSGREATER valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> FUN list0_param MINUSGREATER valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production valu -> FUN list0_param MINUSGREATER valu
-- On UNDERSCORE reduce production valu -> FUN list0_param MINUSGREATER valu
-- On THEN reduce production valu -> FUN list0_param MINUSGREATER valu
-- On REC reduce production valu -> FUN list0_param MINUSGREATER valu
-- On LIDENT reduce production valu -> FUN list0_param MINUSGREATER valu
-- On LBRACE reduce production valu -> FUN list0_param MINUSGREATER valu
-- On IN reduce production valu -> FUN list0_param MINUSGREATER valu
-- On EOF reduce production valu -> FUN list0_param MINUSGREATER valu
-- On ELSE reduce production valu -> FUN list0_param MINUSGREATER valu

State 239:
## Known stack suffix:
## IF valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE THEN LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE THEN LPAREN DOT ]
valu -> valu . list1_argument [ TILDE THEN LPAREN DOT ]
valu -> valu . TILDE [ TILDE THEN LPAREN DOT ]
valu -> valu . partial_arguments [ TILDE THEN LPAREN DOT ]
valu -> IF valu . THEN valu ELSE valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On THEN shift to state 240
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 240:
## Known stack suffix:
## IF valu THEN
## LR(1) items:
valu -> IF valu THEN . valu ELSE valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 241
-- On dule_label shift to state 217
## Reductions:

State 241:
## Known stack suffix:
## IF valu THEN valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE LPAREN ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE LPAREN ELSE DOT ]
valu -> valu . list1_argument [ TILDE LPAREN ELSE DOT ]
valu -> valu . TILDE [ TILDE LPAREN ELSE DOT ]
valu -> valu . partial_arguments [ TILDE LPAREN ELSE DOT ]
valu -> IF valu THEN valu . ELSE valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On ELSE shift to state 242
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 242:
## Known stack suffix:
## IF valu THEN valu ELSE
## LR(1) items:
valu -> IF valu THEN valu ELSE . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 243
-- On dule_label shift to state 217
## Reductions:

State 243:
## Known stack suffix:
## IF valu THEN valu ELSE valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> IF valu THEN valu ELSE valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production valu -> IF valu THEN valu ELSE valu
-- On UNDERSCORE reduce production valu -> IF valu THEN valu ELSE valu
-- On THEN reduce production valu -> IF valu THEN valu ELSE valu
-- On REC reduce production valu -> IF valu THEN valu ELSE valu
-- On LIDENT reduce production valu -> IF valu THEN valu ELSE valu
-- On LBRACE reduce production valu -> IF valu THEN valu ELSE valu
-- On IN reduce production valu -> IF valu THEN valu ELSE valu
-- On EOF reduce production valu -> IF valu THEN valu ELSE valu
-- On ELSE reduce production valu -> IF valu THEN valu ELSE valu

State 244:
## Known stack suffix:
## IF valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE THEN LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE THEN LPAREN DOT ]
valu -> valu . list1_argument [ TILDE THEN LPAREN DOT ]
valu -> valu . TILDE [ TILDE THEN LPAREN DOT ]
valu -> valu . partial_arguments [ TILDE THEN LPAREN DOT ]
valu -> IF valu . THEN valu ELSE valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 166
-- On THEN shift to state 245
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 245:
## Known stack suffix:
## IF valu THEN
## LR(1) items:
valu -> IF valu THEN . valu ELSE valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 246
-- On dule_label shift to state 217
## Reductions:

State 246:
## Known stack suffix:
## IF valu THEN valu
## LR(1) items:
valu -> valu . DOT valu [ TILDE LPAREN ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE LPAREN ELSE DOT ]
valu -> valu . list1_argument [ TILDE LPAREN ELSE DOT ]
valu -> valu . TILDE [ TILDE LPAREN ELSE DOT ]
valu -> valu . partial_arguments [ TILDE LPAREN ELSE DOT ]
valu -> IF valu THEN valu . ELSE valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On ELSE shift to state 247
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 247:
## Known stack suffix:
## IF valu THEN valu ELSE
## LR(1) items:
valu -> IF valu THEN valu ELSE . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 248
-- On dule_label shift to state 207
## Reductions:

State 248:
## Known stack suffix:
## IF valu THEN valu ELSE valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> IF valu THEN valu ELSE valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production valu -> IF valu THEN valu ELSE valu
-- On VALUE reduce production valu -> IF valu THEN valu ELSE valu
-- On TYPE reduce production valu -> IF valu THEN valu ELSE valu
-- On SEMI reduce production valu -> IF valu THEN valu ELSE valu
-- On RPAREN reduce production valu -> IF valu THEN valu ELSE valu
-- On RBRACKET reduce production valu -> IF valu THEN valu ELSE valu
-- On RBRACE reduce production valu -> IF valu THEN valu ELSE valu
-- On END reduce production valu -> IF valu THEN valu ELSE valu
-- On BAR reduce production valu -> IF valu THEN valu ELSE valu

State 249:
## Known stack suffix:
## BACKQUOTE case_label embedding
## LR(1) items:
case -> BACKQUOTE case_label embedding . [ error RBRACKET BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case -> BACKQUOTE case_label embedding

State 250:
## Known stack suffix:
## LBRACKET list0_case
## LR(1) items:
valu -> LBRACKET list0_case . RBRACKET [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LBRACKET list0_case . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 251
-- On RBRACKET shift to state 252
## Reductions:

State 251:
## Known stack suffix:
## LBRACKET list0_case error
## LR(1) items:
valu -> LBRACKET list0_case error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACKET list0_case error

State 252:
## Known stack suffix:
## LBRACKET list0_case RBRACKET
## LR(1) items:
valu -> LBRACKET list0_case RBRACKET . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LBRACKET list0_case RBRACKET

State 253:
## Known stack suffix:
## LET list0_declaration IN valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LET list0_declaration IN valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production valu -> LET list0_declaration IN valu
-- On VALUE reduce production valu -> LET list0_declaration IN valu
-- On TYPE reduce production valu -> LET list0_declaration IN valu
-- On SEMI reduce production valu -> LET list0_declaration IN valu
-- On RPAREN reduce production valu -> LET list0_declaration IN valu
-- On RBRACKET reduce production valu -> LET list0_declaration IN valu
-- On RBRACE reduce production valu -> LET list0_declaration IN valu
-- On END reduce production valu -> LET list0_declaration IN valu
-- On BAR reduce production valu -> LET list0_declaration IN valu

State 254:
## Known stack suffix:
## pattern
## LR(1) items:
declaration -> pattern . EQUAL valu [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
-- On EQUAL shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## pattern EQUAL
## LR(1) items:
declaration -> pattern EQUAL . valu [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 256
-- On dule_label shift to state 217
## Reductions:

State 256:
## Known stack suffix:
## pattern EQUAL valu
## LR(1) items:
declaration -> pattern EQUAL valu . [ UNDERSCORE REC LIDENT LBRACE IN ]
valu -> valu . DOT valu [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . list1_argument [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . TILDE [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . partial_arguments [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On UNDERSCORE reduce production declaration -> pattern EQUAL valu
-- On REC reduce production declaration -> pattern EQUAL valu
-- On LIDENT reduce production declaration -> pattern EQUAL valu
-- On LBRACE reduce production declaration -> pattern EQUAL valu
-- On IN reduce production declaration -> pattern EQUAL valu

State 257:
## Known stack suffix:
## list0_declaration declaration
## LR(1) items:
list0_declaration -> list0_declaration declaration . [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_declaration -> list0_declaration declaration

State 258:
## Known stack suffix:
## LPAREN valu
## LR(1) items:
valu -> valu . DOT valu [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . list1_argument [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . TILDE [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . partial_arguments [ error TILDE RPAREN LPAREN DOT ]
valu -> LPAREN valu . RPAREN [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> LPAREN valu . error [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On error shift to state 259
-- On TILDE shift to state 194
-- On RPAREN shift to state 260
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:

State 259:
## Known stack suffix:
## LPAREN valu error
## LR(1) items:
valu -> LPAREN valu error . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LPAREN valu error

State 260:
## Known stack suffix:
## LPAREN valu RPAREN
## LR(1) items:
valu -> LPAREN valu RPAREN . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LPAREN valu RPAREN

State 261:
## Known stack suffix:
## MAP embedding
## LR(1) items:
valu -> MAP embedding . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> MAP embedding

State 262:
## Known stack suffix:
## value_label EQUAL valu
## LR(1) items:
field -> value_label EQUAL valu . [ error SEMI RBRACE ]
valu -> valu . DOT valu [ error TILDE SEMI RBRACE LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ error TILDE SEMI RBRACE LPAREN DOT ]
valu -> valu . list1_argument [ error TILDE SEMI RBRACE LPAREN DOT ]
valu -> valu . TILDE [ error TILDE SEMI RBRACE LPAREN DOT ]
valu -> valu . partial_arguments [ error TILDE SEMI RBRACE LPAREN DOT ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production field -> value_label EQUAL valu
-- On SEMI reduce production field -> value_label EQUAL valu
-- On RBRACE reduce production field -> value_label EQUAL valu

State 263:
## Known stack suffix:
## LBRACE list0_field
## LR(1) items:
pattern -> LBRACE list0_field . RBRACE [ TILDE MINUSGREATER EQUAL ]
pattern -> LBRACE list0_field . error [ TILDE MINUSGREATER EQUAL ]
## Transitions:
-- On error shift to state 264
-- On RBRACE shift to state 265
## Reductions:

State 264:
## Known stack suffix:
## LBRACE list0_field error
## LR(1) items:
pattern -> LBRACE list0_field error . [ TILDE MINUSGREATER EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> LBRACE list0_field error

State 265:
## Known stack suffix:
## LBRACE list0_field RBRACE
## LR(1) items:
pattern -> LBRACE list0_field RBRACE . [ TILDE MINUSGREATER EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> LBRACE list0_field RBRACE

State 266:
## Known stack suffix:
## REC pattern
## LR(1) items:
declaration -> REC pattern . EQUAL valu [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
-- On EQUAL shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## REC pattern EQUAL
## LR(1) items:
declaration -> REC pattern EQUAL . valu [ UNDERSCORE REC LIDENT LBRACE IN ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 268
-- On dule_label shift to state 217
## Reductions:

State 268:
## Known stack suffix:
## REC pattern EQUAL valu
## LR(1) items:
declaration -> REC pattern EQUAL valu . [ UNDERSCORE REC LIDENT LBRACE IN ]
valu -> valu . DOT valu [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . list1_argument [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . TILDE [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
valu -> valu . partial_arguments [ UNDERSCORE TILDE REC LPAREN LIDENT LBRACE IN DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On UNDERSCORE reduce production declaration -> REC pattern EQUAL valu
-- On REC reduce production declaration -> REC pattern EQUAL valu
-- On LIDENT reduce production declaration -> REC pattern EQUAL valu
-- On LBRACE reduce production declaration -> REC pattern EQUAL valu
-- On IN reduce production declaration -> REC pattern EQUAL valu

State 269:
## Known stack suffix:
## LET list0_declaration IN
## LR(1) items:
valu -> LET list0_declaration IN . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 270
-- On dule_label shift to state 217
## Reductions:

State 270:
## Known stack suffix:
## LET list0_declaration IN valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LET list0_declaration IN valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production valu -> LET list0_declaration IN valu
-- On UNDERSCORE reduce production valu -> LET list0_declaration IN valu
-- On THEN reduce production valu -> LET list0_declaration IN valu
-- On REC reduce production valu -> LET list0_declaration IN valu
-- On LIDENT reduce production valu -> LET list0_declaration IN valu
-- On LBRACE reduce production valu -> LET list0_declaration IN valu
-- On IN reduce production valu -> LET list0_declaration IN valu
-- On EOF reduce production valu -> LET list0_declaration IN valu
-- On ELSE reduce production valu -> LET list0_declaration IN valu

State 271:
## Known stack suffix:
## MATCH valu
## LR(1) items:
valu -> valu . DOT valu [ WITH TILDE LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH TILDE LPAREN DOT ]
valu -> valu . list1_argument [ WITH TILDE LPAREN DOT ]
valu -> valu . TILDE [ WITH TILDE LPAREN DOT ]
valu -> MATCH valu . WITH valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ WITH TILDE LPAREN DOT ]
## Transitions:
-- On WITH shift to state 272
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 272:
## Known stack suffix:
## MATCH valu WITH
## LR(1) items:
valu -> MATCH valu WITH . valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 273
-- On dule_label shift to state 207
## Reductions:

State 273:
## Known stack suffix:
## MATCH valu WITH valu
## LR(1) items:
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> MATCH valu WITH valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production valu -> MATCH valu WITH valu
-- On VALUE reduce production valu -> MATCH valu WITH valu
-- On TYPE reduce production valu -> MATCH valu WITH valu
-- On SEMI reduce production valu -> MATCH valu WITH valu
-- On RPAREN reduce production valu -> MATCH valu WITH valu
-- On RBRACKET reduce production valu -> MATCH valu WITH valu
-- On RBRACE reduce production valu -> MATCH valu WITH valu
-- On END reduce production valu -> MATCH valu WITH valu
-- On BAR reduce production valu -> MATCH valu WITH valu

State 274:
## Known stack suffix:
## MINUSGREATER valu
## LR(1) items:
embedding -> MINUSGREATER valu . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . TILDE [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production embedding -> MINUSGREATER valu
-- On VALUE reduce production embedding -> MINUSGREATER valu
-- On TYPE reduce production embedding -> MINUSGREATER valu
-- On SEMI reduce production embedding -> MINUSGREATER valu
-- On RPAREN reduce production embedding -> MINUSGREATER valu
-- On RBRACKET reduce production embedding -> MINUSGREATER valu
-- On RBRACE reduce production embedding -> MINUSGREATER valu
-- On END reduce production embedding -> MINUSGREATER valu
-- On BAR reduce production embedding -> MINUSGREATER valu

State 275:
## Known stack suffix:
## UNFOLD embedding
## LR(1) items:
valu -> UNFOLD embedding . [ error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNFOLD embedding

State 276:
## Known stack suffix:
## LPAREN valu
## LR(1) items:
valu -> valu . DOT valu [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . list1_argument [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . TILDE [ error TILDE RPAREN LPAREN DOT ]
valu -> valu . partial_arguments [ error TILDE RPAREN LPAREN DOT ]
valu -> LPAREN valu . RPAREN [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> LPAREN valu . error [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On error shift to state 277
-- On TILDE shift to state 194
-- On RPAREN shift to state 278
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:

State 277:
## Known stack suffix:
## LPAREN valu error
## LR(1) items:
valu -> LPAREN valu error . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LPAREN valu error

State 278:
## Known stack suffix:
## LPAREN valu RPAREN
## LR(1) items:
valu -> LPAREN valu RPAREN . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> LPAREN valu RPAREN

State 279:
## Known stack suffix:
## MAP embedding
## LR(1) items:
valu -> MAP embedding . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> MAP embedding

State 280:
## Known stack suffix:
## MATCH valu
## LR(1) items:
valu -> valu . DOT valu [ WITH TILDE LPAREN DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH TILDE LPAREN DOT ]
valu -> valu . list1_argument [ WITH TILDE LPAREN DOT ]
valu -> valu . TILDE [ WITH TILDE LPAREN DOT ]
valu -> MATCH valu . WITH valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH TILDE LPAREN DOT ]
## Transitions:
-- On WITH shift to state 281
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 281:
## Known stack suffix:
## MATCH valu WITH
## LR(1) items:
valu -> MATCH valu WITH . valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On UNFOLD shift to state 1
-- On UNDE shift to state 3
-- On UNCON shift to state 4
-- On UIDENT shift to state 5
-- On MATCH shift to state 7
-- On MAP shift to state 8
-- On LPAREN shift to state 9
-- On LIDENT shift to state 16
-- On LET shift to state 17
-- On LBRACKET shift to state 44
-- On LBRACE shift to state 52
-- On INT shift to state 56
-- On IF shift to state 57
-- On FUN shift to state 58
-- On FOLD shift to state 151
-- On FAIL shift to state 156
-- On DE shift to state 157
-- On CON shift to state 158
-- On COLON shift to state 159
-- On BACKQUOTE shift to state 161
-- On ASSERT shift to state 163
-- On value_label shift to state 164
-- On valu shift to state 282
-- On dule_label shift to state 217
## Reductions:

State 282:
## Known stack suffix:
## MATCH valu WITH valu
## LR(1) items:
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> MATCH valu WITH valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production valu -> MATCH valu WITH valu
-- On UNDERSCORE reduce production valu -> MATCH valu WITH valu
-- On THEN reduce production valu -> MATCH valu WITH valu
-- On REC reduce production valu -> MATCH valu WITH valu
-- On LIDENT reduce production valu -> MATCH valu WITH valu
-- On LBRACE reduce production valu -> MATCH valu WITH valu
-- On IN reduce production valu -> MATCH valu WITH valu
-- On EOF reduce production valu -> MATCH valu WITH valu
-- On ELSE reduce production valu -> MATCH valu WITH valu

State 283:
## Known stack suffix:
## MINUSGREATER valu
## LR(1) items:
embedding -> MINUSGREATER valu . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT valu [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . DOT BACKQUOTE case_label [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . list1_argument [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . TILDE [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
valu -> valu . partial_arguments [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:
-- On WITH reduce production embedding -> MINUSGREATER valu
-- On UNDERSCORE reduce production embedding -> MINUSGREATER valu
-- On THEN reduce production embedding -> MINUSGREATER valu
-- On REC reduce production embedding -> MINUSGREATER valu
-- On LIDENT reduce production embedding -> MINUSGREATER valu
-- On LBRACE reduce production embedding -> MINUSGREATER valu
-- On IN reduce production embedding -> MINUSGREATER valu
-- On EOF reduce production embedding -> MINUSGREATER valu
-- On ELSE reduce production embedding -> MINUSGREATER valu

State 284:
## Known stack suffix:
## UNFOLD embedding
## LR(1) items:
valu -> UNFOLD embedding . [ WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production valu -> UNFOLD embedding

State 285:
## Known stack suffix:
## valu
## LR(1) items:
core -> valu . EOF [ # ]
valu -> valu . DOT valu [ TILDE LPAREN EOF DOT ]
valu -> valu . DOT BACKQUOTE case_label [ TILDE LPAREN EOF DOT ]
valu -> valu . list1_argument [ TILDE LPAREN EOF DOT ]
valu -> valu . TILDE [ TILDE LPAREN EOF DOT ]
valu -> valu . partial_arguments [ TILDE LPAREN EOF DOT ]
## Transitions:
-- On TILDE shift to state 166
-- On LPAREN shift to state 170
-- On EOF shift to state 286
-- On DOT shift to state 208
-- On partial_arguments shift to state 212
-- On list1_argument shift to state 213
-- On argument shift to state 216
## Reductions:

State 286:
## Known stack suffix:
## valu EOF
## LR(1) items:
core -> valu EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production core -> valu EOF

State 287:
## Known stack suffix:
## core
## LR(1) items:
core' -> core . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept core

State 288:
## Known stack suffix:
##
## LR(1) items:
start' -> . start [ # ]
## Transitions:
-- On start shift to state 289
-- On list0_link_item shift to state 290
## Default reduction:
-- After reading the next token, reduce production list0_link_item ->

State 289:
## Known stack suffix:
## start
## LR(1) items:
start' -> start . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept start

State 290:
## Known stack suffix:
## list0_link_item
## LR(1) items:
list0_link_item -> list0_link_item . link_item [ UIDENT SPEC MODULE LIBRARY EOF ]
start -> list0_link_item . EOF [ # ]
## Transitions:
-- On UIDENT shift to state 5
-- On SPEC shift to state 291
-- On MODULE shift to state 510
-- On LIBRARY shift to state 522
-- On EOF shift to state 528
-- On link_item shift to state 529
-- On dule_label shift to state 514
-- On def_dule shift to state 530
## Reductions:

State 291:
## Known stack suffix:
## SPEC
## LR(1) items:
link_item -> SPEC . def_sp [ UIDENT SPEC MODULE LIBRARY EOF ]
link_item -> SPEC . REC one_sp [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 292
-- On REC shift to state 293
-- On sp_label shift to state 294
-- On def_sp shift to state 509
## Reductions:

State 292:
## Known stack suffix:
## UIDENT
## LR(1) items:
sp_label -> UIDENT . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EQUAL EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp_label -> UIDENT

State 293:
## Known stack suffix:
## SPEC REC
## LR(1) items:
link_item -> SPEC REC . one_sp [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 292
-- On sp_label shift to state 294
-- On one_sp shift to state 505
-- On def_sp shift to state 508
## Reductions:

State 294:
## Known stack suffix:
## sp_label
## LR(1) items:
def_sp -> sp_label . EQUAL sp [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On EQUAL shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## sp_label EQUAL
## LR(1) items:
def_sp -> sp_label EQUAL . sp [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 504
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 296:
## Known stack suffix:
## SIG
## LR(1) items:
sp -> SIG . list0_bb_item END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> SIG . list0_bb_item error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On list0_bb_item shift to state 297
## Default reduction:
-- After reading the next token, reduce production list0_bb_item ->

State 297:
## Known stack suffix:
## SIG list0_bb_item
## LR(1) items:
list0_bb_item -> list0_bb_item . bb_item [ error VALUE TYPE END ]
sp -> SIG list0_bb_item . END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> SIG list0_bb_item . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 298
-- On VALUE shift to state 299
-- On TYPE shift to state 303
-- On END shift to state 305
-- On bb_item shift to state 306
## Reductions:

State 298:
## Known stack suffix:
## SIG list0_bb_item error
## LR(1) items:
sp -> SIG list0_bb_item error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> SIG list0_bb_item error

State 299:
## Known stack suffix:
## VALUE
## LR(1) items:
bb_item -> VALUE . value_label COLON typ [ error VALUE TYPE END ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## VALUE value_label
## LR(1) items:
bb_item -> VALUE value_label . COLON typ [ error VALUE TYPE END ]
## Transitions:
-- On COLON shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## VALUE value_label COLON
## LR(1) items:
bb_item -> VALUE value_label COLON . typ [ error VALUE TYPE END ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 302
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 302:
## Known stack suffix:
## VALUE value_label COLON typ
## LR(1) items:
bb_item -> VALUE value_label COLON typ . [ error VALUE TYPE END ]
typ -> typ . DOT typ [ error VALUE TYPE END DOT ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production bb_item -> VALUE value_label COLON typ
-- On VALUE reduce production bb_item -> VALUE value_label COLON typ
-- On TYPE reduce production bb_item -> VALUE value_label COLON typ
-- On END reduce production bb_item -> VALUE value_label COLON typ

State 303:
## Known stack suffix:
## TYPE
## LR(1) items:
bb_item -> TYPE . type_label [ error VALUE TYPE END ]
## Transitions:
-- On LIDENT shift to state 65
-- On type_label shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## TYPE type_label
## LR(1) items:
bb_item -> TYPE type_label . [ error VALUE TYPE END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bb_item -> TYPE type_label

State 305:
## Known stack suffix:
## SIG list0_bb_item END
## LR(1) items:
sp -> SIG list0_bb_item END . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> SIG list0_bb_item END

State 306:
## Known stack suffix:
## list0_bb_item bb_item
## LR(1) items:
list0_bb_item -> list0_bb_item bb_item . [ error VALUE TYPE END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_bb_item -> list0_bb_item bb_item

State 307:
## Known stack suffix:
## LPAREN
## LR(1) items:
sp -> LPAREN . sp RPAREN [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LPAREN . sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 501
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 308:
## Known stack suffix:
## UIDENT
## LR(1) items:
sp_label -> UIDENT . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp_label -> UIDENT

State 309:
## Known stack suffix:
## SIG
## LR(1) items:
sp -> SIG . list0_bb_item END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> SIG . list0_bb_item error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On list0_bb_item shift to state 310
## Default reduction:
-- After reading the next token, reduce production list0_bb_item ->

State 310:
## Known stack suffix:
## SIG list0_bb_item
## LR(1) items:
list0_bb_item -> list0_bb_item . bb_item [ error VALUE TYPE END ]
sp -> SIG list0_bb_item . END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> SIG list0_bb_item . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 311
-- On VALUE shift to state 299
-- On TYPE shift to state 303
-- On END shift to state 312
-- On bb_item shift to state 306
## Reductions:

State 311:
## Known stack suffix:
## SIG list0_bb_item error
## LR(1) items:
sp -> SIG list0_bb_item error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> SIG list0_bb_item error

State 312:
## Known stack suffix:
## SIG list0_bb_item END
## LR(1) items:
sp -> SIG list0_bb_item END . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> SIG list0_bb_item END

State 313:
## Known stack suffix:
## LPAREN
## LR(1) items:
sp -> LPAREN . sp RPAREN [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LPAREN . sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 498
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 314:
## Known stack suffix:
## LBRACE
## LR(1) items:
sp -> LBRACE . list0_field_sp RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE . list0_field_sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE . LBRACE list0_field_sp RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE . LBRACE list0_field_sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On LBRACE shift to state 315
-- On list1_field_sp shift to state 316
-- On list0_field_sp shift to state 495
-- On field_sp shift to state 363
-- On dule_label shift to state 319
## Reductions:
-- On error reduce production list0_field_sp ->
-- On RBRACE reduce production list0_field_sp ->

State 315:
## Known stack suffix:
## LBRACE LBRACE
## LR(1) items:
sp -> LBRACE LBRACE . list0_field_sp RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE LBRACE . list0_field_sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On list1_field_sp shift to state 316
-- On list0_field_sp shift to state 491
-- On field_sp shift to state 363
-- On dule_label shift to state 319
## Reductions:
-- On error reduce production list0_field_sp ->
-- On RBRACE reduce production list0_field_sp ->

State 316:
## Known stack suffix:
## list1_field_sp
## LR(1) items:
list0_field_sp -> list1_field_sp . [ error RBRACE ]
list1_field_sp -> list1_field_sp . SEMI field_sp [ error SEMI RBRACE ]
## Transitions:
-- On SEMI shift to state 317
## Reductions:
-- On error reduce production list0_field_sp -> list1_field_sp
-- On RBRACE reduce production list0_field_sp -> list1_field_sp

State 317:
## Known stack suffix:
## list1_field_sp SEMI
## LR(1) items:
list1_field_sp -> list1_field_sp SEMI . field_sp [ error SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 13
-- On field_sp shift to state 318
-- On dule_label shift to state 319
## Reductions:

State 318:
## Known stack suffix:
## list1_field_sp SEMI field_sp
## LR(1) items:
list1_field_sp -> list1_field_sp SEMI field_sp . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_sp -> list1_field_sp SEMI field_sp

State 319:
## Known stack suffix:
## dule_label
## LR(1) items:
field_sp -> dule_label . COLON sp [ error SEMI RBRACE ]
field_sp -> dule_label . [ error SEMI RBRACE ]
## Transitions:
-- On COLON shift to state 320
## Reductions:
-- On error reduce production field_sp -> dule_label
-- On SEMI reduce production field_sp -> dule_label
-- On RBRACE reduce production field_sp -> dule_label

State 320:
## Known stack suffix:
## dule_label COLON
## LR(1) items:
field_sp -> dule_label COLON . sp [ error SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 322
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 321:
## Known stack suffix:
## sp_label
## LR(1) items:
sp -> sp_label . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> sp_label

State 322:
## Known stack suffix:
## dule_label COLON sp
## LR(1) items:
field_sp -> dule_label COLON sp . [ error SEMI RBRACE ]
sp -> sp . WITH dule [ error WITH SEMI RBRACE ]
## Transitions:
-- On WITH shift to state 323
## Reductions:
-- On error reduce production field_sp -> dule_label COLON sp
-- On SEMI reduce production field_sp -> dule_label COLON sp
-- On RBRACE reduce production field_sp -> dule_label COLON sp

State 323:
## Known stack suffix:
## sp WITH
## LR(1) items:
sp -> sp WITH . dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 490
## Reductions:

State 324:
## Known stack suffix:
## STRUCT
## LR(1) items:
dule -> STRUCT . list0_base_item END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> STRUCT . list0_base_item error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On list0_base_item shift to state 325
## Default reduction:
-- After reading the next token, reduce production list0_base_item ->

State 325:
## Known stack suffix:
## STRUCT list0_base_item
## LR(1) items:
dule -> STRUCT list0_base_item . END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> STRUCT list0_base_item . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
list0_base_item -> list0_base_item . base_item [ error VALUE TYPE END ]
## Transitions:
-- On error shift to state 326
-- On VALUE shift to state 327
-- On TYPE shift to state 335
-- On END shift to state 339
-- On base_item shift to state 340
## Reductions:

State 326:
## Known stack suffix:
## STRUCT list0_base_item error
## LR(1) items:
dule -> STRUCT list0_base_item error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> STRUCT list0_base_item error

State 327:
## Known stack suffix:
## VALUE
## LR(1) items:
base_item -> VALUE . value_label EQUAL valu [ error VALUE TYPE END ]
base_item -> VALUE . REC value_label EQUAL valu [ error VALUE TYPE END ]
## Transitions:
-- On REC shift to state 328
-- On LIDENT shift to state 16
-- On value_label shift to state 332
## Reductions:

State 328:
## Known stack suffix:
## VALUE REC
## LR(1) items:
base_item -> VALUE REC . value_label EQUAL valu [ error VALUE TYPE END ]
## Transitions:
-- On LIDENT shift to state 16
-- On value_label shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## VALUE REC value_label
## LR(1) items:
base_item -> VALUE REC value_label . EQUAL valu [ error VALUE TYPE END ]
## Transitions:
-- On EQUAL shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## VALUE REC value_label EQUAL
## LR(1) items:
base_item -> VALUE REC value_label EQUAL . valu [ error VALUE TYPE END ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 331
-- On dule_label shift to state 207
## Reductions:

State 331:
## Known stack suffix:
## VALUE REC value_label EQUAL valu
## LR(1) items:
base_item -> VALUE REC value_label EQUAL valu . [ error VALUE TYPE END ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . TILDE [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE LPAREN END DOT ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production base_item -> VALUE REC value_label EQUAL valu
-- On VALUE reduce production base_item -> VALUE REC value_label EQUAL valu
-- On TYPE reduce production base_item -> VALUE REC value_label EQUAL valu
-- On END reduce production base_item -> VALUE REC value_label EQUAL valu

State 332:
## Known stack suffix:
## VALUE value_label
## LR(1) items:
base_item -> VALUE value_label . EQUAL valu [ error VALUE TYPE END ]
## Transitions:
-- On EQUAL shift to state 333
## Reductions:

State 333:
## Known stack suffix:
## VALUE value_label EQUAL
## LR(1) items:
base_item -> VALUE value_label EQUAL . valu [ error VALUE TYPE END ]
## Transitions:
-- On UNFOLD shift to state 10
-- On UNDE shift to state 11
-- On UNCON shift to state 12
-- On UIDENT shift to state 13
-- On MATCH shift to state 15
-- On MAP shift to state 24
-- On LPAREN shift to state 25
-- On LIDENT shift to state 21
-- On LET shift to state 26
-- On LBRACKET shift to state 29
-- On LBRACE shift to state 174
-- On INT shift to state 42
-- On IF shift to state 43
-- On FUN shift to state 178
-- On FOLD shift to state 181
-- On FAIL shift to state 182
-- On DE shift to state 183
-- On CON shift to state 184
-- On COLON shift to state 185
-- On BACKQUOTE shift to state 187
-- On ASSERT shift to state 189
-- On value_label shift to state 192
-- On valu shift to state 334
-- On dule_label shift to state 207
## Reductions:

State 334:
## Known stack suffix:
## VALUE value_label EQUAL valu
## LR(1) items:
base_item -> VALUE value_label EQUAL valu . [ error VALUE TYPE END ]
valu -> valu . DOT valu [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . DOT BACKQUOTE case_label [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . list1_argument [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . TILDE [ error VALUE TYPE TILDE LPAREN END DOT ]
valu -> valu . partial_arguments [ error VALUE TYPE TILDE LPAREN END DOT ]
## Transitions:
-- On TILDE shift to state 194
-- On LPAREN shift to state 195
-- On DOT shift to state 201
-- On partial_arguments shift to state 205
-- On list1_argument shift to state 206
-- On argument shift to state 200
## Reductions:
-- On error reduce production base_item -> VALUE value_label EQUAL valu
-- On VALUE reduce production base_item -> VALUE value_label EQUAL valu
-- On TYPE reduce production base_item -> VALUE value_label EQUAL valu
-- On END reduce production base_item -> VALUE value_label EQUAL valu

State 335:
## Known stack suffix:
## TYPE
## LR(1) items:
base_item -> TYPE . type_label EQUAL typ [ error VALUE TYPE END ]
## Transitions:
-- On LIDENT shift to state 75
-- On type_label shift to state 336
## Reductions:

State 336:
## Known stack suffix:
## TYPE type_label
## LR(1) items:
base_item -> TYPE type_label . EQUAL typ [ error VALUE TYPE END ]
## Transitions:
-- On EQUAL shift to state 337
## Reductions:

State 337:
## Known stack suffix:
## TYPE type_label EQUAL
## LR(1) items:
base_item -> TYPE type_label EQUAL . typ [ error VALUE TYPE END ]
## Transitions:
-- On UIDENT shift to state 13
-- On LPAREN shift to state 64
-- On LIDENT shift to state 65
-- On LBRACKET shift to state 66
-- On LBRACE shift to state 71
-- On IND shift to state 74
-- On COIND shift to state 78
-- On type_label shift to state 81
-- On typ shift to state 338
-- On list0_param_typ shift to state 85
-- On dule_label shift to state 93
## Reductions:
-- On TILDE reduce production list0_param_typ ->
-- On MINUSGREATER reduce production list0_param_typ ->

State 338:
## Known stack suffix:
## TYPE type_label EQUAL typ
## LR(1) items:
base_item -> TYPE type_label EQUAL typ . [ error VALUE TYPE END ]
typ -> typ . DOT typ [ error VALUE TYPE END DOT ]
## Transitions:
-- On DOT shift to state 83
## Reductions:
-- On error reduce production base_item -> TYPE type_label EQUAL typ
-- On VALUE reduce production base_item -> TYPE type_label EQUAL typ
-- On TYPE reduce production base_item -> TYPE type_label EQUAL typ
-- On END reduce production base_item -> TYPE type_label EQUAL typ

State 339:
## Known stack suffix:
## STRUCT list0_base_item END
## LR(1) items:
dule -> STRUCT list0_base_item END . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> STRUCT list0_base_item END

State 340:
## Known stack suffix:
## list0_base_item base_item
## LR(1) items:
list0_base_item -> list0_base_item base_item . [ error VALUE TYPE END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_base_item -> list0_base_item base_item

State 341:
## Known stack suffix:
## LPAREN
## LR(1) items:
dule -> LPAREN . dule RPAREN [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LPAREN . dule error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 487
## Reductions:

State 342:
## Known stack suffix:
## LOAD
## LR(1) items:
dule -> LOAD . dule_label [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On dule_label shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## LOAD dule_label
## LR(1) items:
dule -> LOAD dule_label . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LOAD dule_label

State 344:
## Known stack suffix:
## LINK
## LR(1) items:
dule -> LINK . list0_link_item END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LINK . list0_link_item error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On list0_link_item shift to state 345
## Default reduction:
-- After reading the next token, reduce production list0_link_item ->

State 345:
## Known stack suffix:
## LINK list0_link_item
## LR(1) items:
dule -> LINK list0_link_item . END [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LINK list0_link_item . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
list0_link_item -> list0_link_item . link_item [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On error shift to state 346
-- On UIDENT shift to state 5
-- On SPEC shift to state 347
-- On MODULE shift to state 428
-- On LIBRARY shift to state 440
-- On END shift to state 486
-- On link_item shift to state 447
-- On dule_label shift to state 432
-- On def_dule shift to state 448
## Reductions:

State 346:
## Known stack suffix:
## LINK list0_link_item error
## LR(1) items:
dule -> LINK list0_link_item error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LINK list0_link_item error

State 347:
## Known stack suffix:
## SPEC
## LR(1) items:
link_item -> SPEC . def_sp [ error UIDENT SPEC MODULE LIBRARY END ]
link_item -> SPEC . REC one_sp [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 292
-- On REC shift to state 348
-- On sp_label shift to state 349
-- On def_sp shift to state 485
## Reductions:

State 348:
## Known stack suffix:
## SPEC REC
## LR(1) items:
link_item -> SPEC REC . one_sp [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 292
-- On sp_label shift to state 349
-- On one_sp shift to state 481
-- On def_sp shift to state 484
## Reductions:

State 349:
## Known stack suffix:
## sp_label
## LR(1) items:
def_sp -> sp_label . EQUAL sp [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On EQUAL shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## sp_label EQUAL
## LR(1) items:
def_sp -> sp_label EQUAL . sp [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 351
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 351:
## Known stack suffix:
## sp_label EQUAL sp
## LR(1) items:
def_sp -> sp_label EQUAL sp . [ error UIDENT SPEC MODULE LIBRARY END AND ]
sp -> sp . WITH dule [ error WITH UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On WITH shift to state 323
## Reductions:
-- On error reduce production def_sp -> sp_label EQUAL sp
-- On UIDENT reduce production def_sp -> sp_label EQUAL sp
-- On SPEC reduce production def_sp -> sp_label EQUAL sp
-- On MODULE reduce production def_sp -> sp_label EQUAL sp
-- On LIBRARY reduce production def_sp -> sp_label EQUAL sp
-- On END reduce production def_sp -> sp_label EQUAL sp
-- On AND reduce production def_sp -> sp_label EQUAL sp

State 352:
## Known stack suffix:
## list0_param_sp
## LR(1) items:
list0_param_sp -> list0_param_sp . param_sp [ TILDE MINUSGREATER ]
sp -> list0_param_sp . MINUSGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On TILDE shift to state 353
-- On MINUSGREATER shift to state 479
-- On param_sp shift to state 410
## Reductions:

State 353:
## Known stack suffix:
## TILDE
## LR(1) items:
param_sp -> TILDE . field_sp [ TILDE MINUSGREATER ]
## Transitions:
-- On UIDENT shift to state 5
-- On field_sp shift to state 354
-- On dule_label shift to state 355
## Reductions:

State 354:
## Known stack suffix:
## TILDE field_sp
## LR(1) items:
param_sp -> TILDE field_sp . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_sp -> TILDE field_sp

State 355:
## Known stack suffix:
## dule_label
## LR(1) items:
field_sp -> dule_label . COLON sp [ TILDE SEMI RBRACE MINUSGREATER ]
field_sp -> dule_label . [ TILDE SEMI RBRACE MINUSGREATER ]
## Transitions:
-- On COLON shift to state 356
## Reductions:
-- On TILDE reduce production field_sp -> dule_label
-- On SEMI reduce production field_sp -> dule_label
-- On RBRACE reduce production field_sp -> dule_label
-- On MINUSGREATER reduce production field_sp -> dule_label

State 356:
## Known stack suffix:
## dule_label COLON
## LR(1) items:
field_sp -> dule_label COLON . sp [ TILDE SEMI RBRACE MINUSGREATER ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 368
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 357:
## Known stack suffix:
## LBRACE
## LR(1) items:
sp -> LBRACE . list0_field_sp RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE . list0_field_sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE . LBRACE list0_field_sp RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE . LBRACE list0_field_sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On LBRACE shift to state 358
-- On list1_field_sp shift to state 316
-- On list0_field_sp shift to state 364
-- On field_sp shift to state 363
-- On dule_label shift to state 319
## Reductions:
-- On error reduce production list0_field_sp ->
-- On RBRACE reduce production list0_field_sp ->

State 358:
## Known stack suffix:
## LBRACE LBRACE
## LR(1) items:
sp -> LBRACE LBRACE . list0_field_sp RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE LBRACE . list0_field_sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On list1_field_sp shift to state 316
-- On list0_field_sp shift to state 359
-- On field_sp shift to state 363
-- On dule_label shift to state 319
## Reductions:
-- On error reduce production list0_field_sp ->
-- On RBRACE reduce production list0_field_sp ->

State 359:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp . RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE LBRACE list0_field_sp . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 360
-- On RBRACE shift to state 361
## Reductions:

State 360:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp error
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE LBRACE list0_field_sp error

State 361:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp RBRACE
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp RBRACE . RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On RBRACE shift to state 362
## Reductions:

State 362:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp RBRACE RBRACE
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp RBRACE RBRACE . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE LBRACE list0_field_sp RBRACE RBRACE

State 363:
## Known stack suffix:
## field_sp
## LR(1) items:
list1_field_sp -> field_sp . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_sp -> field_sp

State 364:
## Known stack suffix:
## LBRACE list0_field_sp
## LR(1) items:
sp -> LBRACE list0_field_sp . RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LBRACE list0_field_sp . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 365
-- On RBRACE shift to state 366
## Reductions:

State 365:
## Known stack suffix:
## LBRACE list0_field_sp error
## LR(1) items:
sp -> LBRACE list0_field_sp error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE list0_field_sp error

State 366:
## Known stack suffix:
## LBRACE list0_field_sp RBRACE
## LR(1) items:
sp -> LBRACE list0_field_sp RBRACE . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE list0_field_sp RBRACE

State 367:
## Known stack suffix:
## sp_label
## LR(1) items:
sp -> sp_label . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> sp_label

State 368:
## Known stack suffix:
## dule_label COLON sp
## LR(1) items:
field_sp -> dule_label COLON sp . [ TILDE SEMI RBRACE MINUSGREATER ]
sp -> sp . WITH dule [ WITH TILDE SEMI RBRACE MINUSGREATER ]
## Transitions:
-- On WITH shift to state 369
## Reductions:
-- On TILDE reduce production field_sp -> dule_label COLON sp
-- On SEMI reduce production field_sp -> dule_label COLON sp
-- On RBRACE reduce production field_sp -> dule_label COLON sp
-- On MINUSGREATER reduce production field_sp -> dule_label COLON sp

State 369:
## Known stack suffix:
## sp WITH
## LR(1) items:
sp -> sp WITH . dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 478
## Reductions:

State 370:
## Known stack suffix:
## STRUCT
## LR(1) items:
dule -> STRUCT . list0_base_item END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> STRUCT . list0_base_item error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On list0_base_item shift to state 371
## Default reduction:
-- After reading the next token, reduce production list0_base_item ->

State 371:
## Known stack suffix:
## STRUCT list0_base_item
## LR(1) items:
dule -> STRUCT list0_base_item . END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> STRUCT list0_base_item . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
list0_base_item -> list0_base_item . base_item [ error VALUE TYPE END ]
## Transitions:
-- On error shift to state 372
-- On VALUE shift to state 327
-- On TYPE shift to state 335
-- On END shift to state 373
-- On base_item shift to state 340
## Reductions:

State 372:
## Known stack suffix:
## STRUCT list0_base_item error
## LR(1) items:
dule -> STRUCT list0_base_item error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> STRUCT list0_base_item error

State 373:
## Known stack suffix:
## STRUCT list0_base_item END
## LR(1) items:
dule -> STRUCT list0_base_item END . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> STRUCT list0_base_item END

State 374:
## Known stack suffix:
## LPAREN
## LR(1) items:
dule -> LPAREN . dule RPAREN [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LPAREN . dule error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 420
## Reductions:

State 375:
## Known stack suffix:
## LBRACE
## LR(1) items:
dule -> LBRACE . list0_field_dule RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE . list0_field_dule error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE . LBRACE list0_field_dule RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE . LBRACE list0_field_dule error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On LBRACE shift to state 376
-- On list1_field_dule shift to state 377
-- On list0_field_dule shift to state 417
-- On field_dule shift to state 416
-- On dule_label shift to state 380
## Reductions:
-- On error reduce production list0_field_dule ->
-- On RBRACE reduce production list0_field_dule ->

State 376:
## Known stack suffix:
## LBRACE LBRACE
## LR(1) items:
dule -> LBRACE LBRACE . list0_field_dule RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE LBRACE . list0_field_dule error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On list1_field_dule shift to state 377
-- On list0_field_dule shift to state 412
-- On field_dule shift to state 416
-- On dule_label shift to state 380
## Reductions:
-- On error reduce production list0_field_dule ->
-- On RBRACE reduce production list0_field_dule ->

State 377:
## Known stack suffix:
## list1_field_dule
## LR(1) items:
list0_field_dule -> list1_field_dule . [ error RBRACE ]
list1_field_dule -> list1_field_dule . SEMI field_dule [ error SEMI RBRACE ]
## Transitions:
-- On SEMI shift to state 378
## Reductions:
-- On error reduce production list0_field_dule -> list1_field_dule
-- On RBRACE reduce production list0_field_dule -> list1_field_dule

State 378:
## Known stack suffix:
## list1_field_dule SEMI
## LR(1) items:
list1_field_dule -> list1_field_dule SEMI . field_dule [ error SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 13
-- On field_dule shift to state 379
-- On dule_label shift to state 380
## Reductions:

State 379:
## Known stack suffix:
## list1_field_dule SEMI field_dule
## LR(1) items:
list1_field_dule -> list1_field_dule SEMI field_dule . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_dule -> list1_field_dule SEMI field_dule

State 380:
## Known stack suffix:
## dule_label
## LR(1) items:
field_dule -> dule_label . EQUAL dule [ error SEMI RBRACE ]
field_dule -> dule_label . [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 381
## Reductions:
-- On error reduce production field_dule -> dule_label
-- On SEMI reduce production field_dule -> dule_label
-- On RBRACE reduce production field_dule -> dule_label

State 381:
## Known stack suffix:
## dule_label EQUAL
## LR(1) items:
field_dule -> dule_label EQUAL . dule [ error SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 411
## Reductions:

State 382:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
dule -> COLONCOLON . sp dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 383
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 383:
## Known stack suffix:
## COLONCOLON sp
## LR(1) items:
dule -> COLONCOLON sp . dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> sp . WITH dule [ WITH UIDENT STRUCT LPAREN LOAD LINK LBRACE COLONCOLON COLON ]
## Transitions:
-- On WITH shift to state 369
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 398
## Reductions:

State 384:
## Known stack suffix:
## COLON
## LR(1) items:
dule -> COLON . LBRACE LBRACE list0_field_sp RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> COLON . LBRACE LBRACE sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On LBRACE shift to state 385
## Reductions:

State 385:
## Known stack suffix:
## COLON LBRACE
## LR(1) items:
dule -> COLON LBRACE . LBRACE list0_field_sp RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> COLON LBRACE . LBRACE sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On LBRACE shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## COLON LBRACE LBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE . list0_field_sp RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> COLON LBRACE LBRACE . sp error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 387
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 388
-- On list1_field_sp shift to state 390
-- On list0_param_sp shift to state 352
-- On list0_field_sp shift to state 393
-- On field_sp shift to state 396
-- On dule_label shift to state 355
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On RBRACE reduce production list0_field_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 387:
## Known stack suffix:
## UIDENT
## LR(1) items:
dule_label -> UIDENT . [ SEMI RBRACE COLON ]
sp_label -> UIDENT . [ error WITH ]
## Transitions:
## Reductions:
-- On error reduce production sp_label -> UIDENT
-- On WITH reduce production sp_label -> UIDENT
-- On SEMI reduce production dule_label -> UIDENT
-- On RBRACE reduce production dule_label -> UIDENT
-- On COLON reduce production dule_label -> UIDENT

State 388:
## Known stack suffix:
## COLON LBRACE LBRACE sp
## LR(1) items:
dule -> COLON LBRACE LBRACE sp . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> sp . WITH dule [ error WITH ]
## Transitions:
-- On error shift to state 389
-- On WITH shift to state 323
## Reductions:

State 389:
## Known stack suffix:
## COLON LBRACE LBRACE sp error
## LR(1) items:
dule -> COLON LBRACE LBRACE sp error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> COLON LBRACE LBRACE sp error

State 390:
## Known stack suffix:
## list1_field_sp
## LR(1) items:
list0_field_sp -> list1_field_sp . [ RBRACE ]
list1_field_sp -> list1_field_sp . SEMI field_sp [ SEMI RBRACE ]
## Transitions:
-- On SEMI shift to state 391
## Reductions:
-- On RBRACE reduce production list0_field_sp -> list1_field_sp

State 391:
## Known stack suffix:
## list1_field_sp SEMI
## LR(1) items:
list1_field_sp -> list1_field_sp SEMI . field_sp [ SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 5
-- On field_sp shift to state 392
-- On dule_label shift to state 355
## Reductions:

State 392:
## Known stack suffix:
## list1_field_sp SEMI field_sp
## LR(1) items:
list1_field_sp -> list1_field_sp SEMI field_sp . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_sp -> list1_field_sp SEMI field_sp

State 393:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp . RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On RBRACE shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp RBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp RBRACE . RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On RBRACE shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE

State 396:
## Known stack suffix:
## field_sp
## LR(1) items:
list1_field_sp -> field_sp . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_sp -> field_sp

State 397:
## Known stack suffix:
## dule_label
## LR(1) items:
dule -> dule_label . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule_label

State 398:
## Known stack suffix:
## COLONCOLON sp dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> COLONCOLON sp dule . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On WITH shift to state 399
-- On DOT shift to state 401
-- On COLONGREATER shift to state 405
-- On BAR shift to state 403
## Reductions:
-- On error reduce production dule -> COLONCOLON sp dule
-- On UIDENT reduce production dule -> COLONCOLON sp dule
-- On SPEC reduce production dule -> COLONCOLON sp dule
-- On SEMI reduce production dule -> COLONCOLON sp dule
-- On RPAREN reduce production dule -> COLONCOLON sp dule
-- On RBRACE reduce production dule -> COLONCOLON sp dule
-- On MODULE reduce production dule -> COLONCOLON sp dule
-- On LIBRARY reduce production dule -> COLONCOLON sp dule
-- On END reduce production dule -> COLONCOLON sp dule
-- On AND reduce production dule -> COLONCOLON sp dule

State 399:
## Known stack suffix:
## dule WITH
## LR(1) items:
dule -> dule WITH . dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## dule WITH dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule WITH dule . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On DOT shift to state 401
-- On BAR shift to state 403
## Reductions:
-- On error reduce production dule -> dule WITH dule
-- On WITH reduce production dule -> dule WITH dule
-- On UIDENT reduce production dule -> dule WITH dule
-- On SPEC reduce production dule -> dule WITH dule
-- On SEMI reduce production dule -> dule WITH dule
-- On RPAREN reduce production dule -> dule WITH dule
-- On RBRACE reduce production dule -> dule WITH dule
-- On MODULE reduce production dule -> dule WITH dule
-- On LIBRARY reduce production dule -> dule WITH dule
-- On END reduce production dule -> dule WITH dule
-- On COLONGREATER reduce production dule -> dule WITH dule
-- On AND reduce production dule -> dule WITH dule

State 401:
## Known stack suffix:
## dule DOT
## LR(1) items:
dule -> dule DOT . dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 402
## Reductions:

State 402:
## Known stack suffix:
## dule DOT dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule DOT dule . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule DOT dule

State 403:
## Known stack suffix:
## dule BAR
## LR(1) items:
dule -> dule BAR . dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## dule BAR dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule BAR dule . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule BAR dule

State 405:
## Known stack suffix:
## dule COLONGREATER
## LR(1) items:
dule -> dule COLONGREATER . sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 406
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 406:
## Known stack suffix:
## dule COLONGREATER sp
## LR(1) items:
dule -> dule COLONGREATER sp . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> sp . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On WITH shift to state 323
## Reductions:
-- On error reduce production dule -> dule COLONGREATER sp
-- On UIDENT reduce production dule -> dule COLONGREATER sp
-- On SPEC reduce production dule -> dule COLONGREATER sp
-- On SEMI reduce production dule -> dule COLONGREATER sp
-- On RPAREN reduce production dule -> dule COLONGREATER sp
-- On RBRACE reduce production dule -> dule COLONGREATER sp
-- On MODULE reduce production dule -> dule COLONGREATER sp
-- On LIBRARY reduce production dule -> dule COLONGREATER sp
-- On END reduce production dule -> dule COLONGREATER sp
-- On DOT reduce production dule -> dule COLONGREATER sp
-- On COLONGREATER reduce production dule -> dule COLONGREATER sp
-- On BAR reduce production dule -> dule COLONGREATER sp
-- On AND reduce production dule -> dule COLONGREATER sp

State 407:
## Known stack suffix:
## list0_param_sp
## LR(1) items:
list0_param_sp -> list0_param_sp . param_sp [ TILDE MINUSGREATER ]
sp -> list0_param_sp . MINUSGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On TILDE shift to state 353
-- On MINUSGREATER shift to state 408
-- On param_sp shift to state 410
## Reductions:

State 408:
## Known stack suffix:
## list0_param_sp MINUSGREATER
## LR(1) items:
sp -> list0_param_sp MINUSGREATER . sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 409
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 409:
## Known stack suffix:
## list0_param_sp MINUSGREATER sp
## LR(1) items:
sp -> list0_param_sp MINUSGREATER sp . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> sp . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On WITH shift to state 369
## Reductions:
-- On UIDENT reduce production sp -> list0_param_sp MINUSGREATER sp
-- On TILDE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On STRUCT reduce production sp -> list0_param_sp MINUSGREATER sp
-- On SPEC reduce production sp -> list0_param_sp MINUSGREATER sp
-- On SEMI reduce production sp -> list0_param_sp MINUSGREATER sp
-- On RBRACE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On MODULE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On MINUSGREATER reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LPAREN reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LOAD reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LINK reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LIBRARY reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LBRACE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On EOF reduce production sp -> list0_param_sp MINUSGREATER sp
-- On DOT reduce production sp -> list0_param_sp MINUSGREATER sp
-- On COLONGREATER reduce production sp -> list0_param_sp MINUSGREATER sp
-- On COLONCOLON reduce production sp -> list0_param_sp MINUSGREATER sp
-- On COLON reduce production sp -> list0_param_sp MINUSGREATER sp
-- On BAR reduce production sp -> list0_param_sp MINUSGREATER sp
-- On AND reduce production sp -> list0_param_sp MINUSGREATER sp

State 410:
## Known stack suffix:
## list0_param_sp param_sp
## LR(1) items:
list0_param_sp -> list0_param_sp param_sp . [ TILDE MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_param_sp -> list0_param_sp param_sp

State 411:
## Known stack suffix:
## dule_label EQUAL dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH SEMI RBRACE DOT COLONGREATER BAR ]
dule -> dule . BAR dule [ error WITH SEMI RBRACE DOT COLONGREATER BAR ]
dule -> dule . WITH dule [ error WITH SEMI RBRACE DOT COLONGREATER BAR ]
dule -> dule . COLONGREATER sp [ error WITH SEMI RBRACE DOT COLONGREATER BAR ]
field_dule -> dule_label EQUAL dule . [ error SEMI RBRACE ]
## Transitions:
-- On WITH shift to state 399
-- On DOT shift to state 401
-- On COLONGREATER shift to state 405
-- On BAR shift to state 403
## Reductions:
-- On error reduce production field_dule -> dule_label EQUAL dule
-- On SEMI reduce production field_dule -> dule_label EQUAL dule
-- On RBRACE reduce production field_dule -> dule_label EQUAL dule

State 412:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule . RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE LBRACE list0_field_dule . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 413
-- On RBRACE shift to state 414
## Reductions:

State 413:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule error
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE LBRACE list0_field_dule error

State 414:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule RBRACE
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule RBRACE . RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On RBRACE shift to state 415
## Reductions:

State 415:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule RBRACE RBRACE
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule RBRACE RBRACE . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE LBRACE list0_field_dule RBRACE RBRACE

State 416:
## Known stack suffix:
## field_dule
## LR(1) items:
list1_field_dule -> field_dule . [ error SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list1_field_dule -> field_dule

State 417:
## Known stack suffix:
## LBRACE list0_field_dule
## LR(1) items:
dule -> LBRACE list0_field_dule . RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LBRACE list0_field_dule . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 418
-- On RBRACE shift to state 419
## Reductions:

State 418:
## Known stack suffix:
## LBRACE list0_field_dule error
## LR(1) items:
dule -> LBRACE list0_field_dule error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE list0_field_dule error

State 419:
## Known stack suffix:
## LBRACE list0_field_dule RBRACE
## LR(1) items:
dule -> LBRACE list0_field_dule RBRACE . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE list0_field_dule RBRACE

State 420:
## Known stack suffix:
## LPAREN dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . BAR dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . WITH dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . COLONGREATER sp [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> LPAREN dule . RPAREN [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LPAREN dule . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 421
-- On WITH shift to state 399
-- On RPAREN shift to state 422
-- On DOT shift to state 401
-- On COLONGREATER shift to state 405
-- On BAR shift to state 403
## Reductions:

State 421:
## Known stack suffix:
## LPAREN dule error
## LR(1) items:
dule -> LPAREN dule error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LPAREN dule error

State 422:
## Known stack suffix:
## LPAREN dule RPAREN
## LR(1) items:
dule -> LPAREN dule RPAREN . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LPAREN dule RPAREN

State 423:
## Known stack suffix:
## LOAD
## LR(1) items:
dule -> LOAD . dule_label [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On dule_label shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## LOAD dule_label
## LR(1) items:
dule -> LOAD dule_label . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LOAD dule_label

State 425:
## Known stack suffix:
## LINK
## LR(1) items:
dule -> LINK . list0_link_item END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LINK . list0_link_item error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On list0_link_item shift to state 426
## Default reduction:
-- After reading the next token, reduce production list0_link_item ->

State 426:
## Known stack suffix:
## LINK list0_link_item
## LR(1) items:
dule -> LINK list0_link_item . END [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LINK list0_link_item . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
list0_link_item -> list0_link_item . link_item [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On error shift to state 427
-- On UIDENT shift to state 5
-- On SPEC shift to state 347
-- On MODULE shift to state 428
-- On LIBRARY shift to state 440
-- On END shift to state 446
-- On link_item shift to state 447
-- On dule_label shift to state 432
-- On def_dule shift to state 448
## Reductions:

State 427:
## Known stack suffix:
## LINK list0_link_item error
## LR(1) items:
dule -> LINK list0_link_item error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LINK list0_link_item error

State 428:
## Known stack suffix:
## MODULE
## LR(1) items:
link_item -> MODULE . def_dule [ error UIDENT SPEC MODULE LIBRARY END ]
link_item -> MODULE . IND one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
link_item -> MODULE . COIND one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On IND shift to state 429
-- On COIND shift to state 437
-- On dule_label shift to state 432
-- On def_dule shift to state 439
## Reductions:

State 429:
## Known stack suffix:
## MODULE IND
## LR(1) items:
link_item -> MODULE IND . one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 430
-- On dule_label shift to state 432
-- On def_dule shift to state 436
## Reductions:

State 430:
## Known stack suffix:
## MODULE IND one_dule
## LR(1) items:
link_item -> MODULE IND one_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
one_dule -> one_dule . AND def_dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On AND shift to state 431
## Reductions:
-- On error reduce production link_item -> MODULE IND one_dule
-- On UIDENT reduce production link_item -> MODULE IND one_dule
-- On SPEC reduce production link_item -> MODULE IND one_dule
-- On MODULE reduce production link_item -> MODULE IND one_dule
-- On LIBRARY reduce production link_item -> MODULE IND one_dule
-- On END reduce production link_item -> MODULE IND one_dule

State 431:
## Known stack suffix:
## one_dule AND
## LR(1) items:
one_dule -> one_dule AND . def_dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On dule_label shift to state 432
-- On def_dule shift to state 435
## Reductions:

State 432:
## Known stack suffix:
## dule_label
## LR(1) items:
def_dule -> dule_label . EQUAL dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On EQUAL shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## dule_label EQUAL
## LR(1) items:
def_dule -> dule_label EQUAL . dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On STRUCT shift to state 324
-- On LPAREN shift to state 341
-- On LOAD shift to state 342
-- On LINK shift to state 344
-- On LBRACE shift to state 375
-- On COLONCOLON shift to state 382
-- On COLON shift to state 384
-- On dule_label shift to state 397
-- On dule shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## dule_label EQUAL dule
## LR(1) items:
def_dule -> dule_label EQUAL dule . [ error UIDENT SPEC MODULE LIBRARY END AND ]
dule -> dule . DOT dule [ error WITH UIDENT SPEC MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On WITH shift to state 399
-- On DOT shift to state 401
-- On COLONGREATER shift to state 405
-- On BAR shift to state 403
## Reductions:
-- On error reduce production def_dule -> dule_label EQUAL dule
-- On UIDENT reduce production def_dule -> dule_label EQUAL dule
-- On SPEC reduce production def_dule -> dule_label EQUAL dule
-- On MODULE reduce production def_dule -> dule_label EQUAL dule
-- On LIBRARY reduce production def_dule -> dule_label EQUAL dule
-- On END reduce production def_dule -> dule_label EQUAL dule
-- On AND reduce production def_dule -> dule_label EQUAL dule

State 435:
## Known stack suffix:
## one_dule AND def_dule
## LR(1) items:
one_dule -> one_dule AND def_dule . [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dule -> one_dule AND def_dule

State 436:
## Known stack suffix:
## def_dule
## LR(1) items:
one_dule -> def_dule . [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dule -> def_dule

State 437:
## Known stack suffix:
## MODULE COIND
## LR(1) items:
link_item -> MODULE COIND . one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 438
-- On dule_label shift to state 432
-- On def_dule shift to state 436
## Reductions:

State 438:
## Known stack suffix:
## MODULE COIND one_dule
## LR(1) items:
link_item -> MODULE COIND one_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
one_dule -> one_dule . AND def_dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On AND shift to state 431
## Reductions:
-- On error reduce production link_item -> MODULE COIND one_dule
-- On UIDENT reduce production link_item -> MODULE COIND one_dule
-- On SPEC reduce production link_item -> MODULE COIND one_dule
-- On MODULE reduce production link_item -> MODULE COIND one_dule
-- On LIBRARY reduce production link_item -> MODULE COIND one_dule
-- On END reduce production link_item -> MODULE COIND one_dule

State 439:
## Known stack suffix:
## MODULE def_dule
## LR(1) items:
link_item -> MODULE def_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> MODULE def_dule

State 440:
## Known stack suffix:
## LIBRARY
## LR(1) items:
link_item -> LIBRARY . def_dule [ error UIDENT SPEC MODULE LIBRARY END ]
link_item -> LIBRARY . IND one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
link_item -> LIBRARY . COIND one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On IND shift to state 441
-- On COIND shift to state 443
-- On dule_label shift to state 432
-- On def_dule shift to state 445
## Reductions:

State 441:
## Known stack suffix:
## LIBRARY IND
## LR(1) items:
link_item -> LIBRARY IND . one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 442
-- On dule_label shift to state 432
-- On def_dule shift to state 436
## Reductions:

State 442:
## Known stack suffix:
## LIBRARY IND one_dule
## LR(1) items:
link_item -> LIBRARY IND one_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
one_dule -> one_dule . AND def_dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On AND shift to state 431
## Reductions:
-- On error reduce production link_item -> LIBRARY IND one_dule
-- On UIDENT reduce production link_item -> LIBRARY IND one_dule
-- On SPEC reduce production link_item -> LIBRARY IND one_dule
-- On MODULE reduce production link_item -> LIBRARY IND one_dule
-- On LIBRARY reduce production link_item -> LIBRARY IND one_dule
-- On END reduce production link_item -> LIBRARY IND one_dule

State 443:
## Known stack suffix:
## LIBRARY COIND
## LR(1) items:
link_item -> LIBRARY COIND . one_dule [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 444
-- On dule_label shift to state 432
-- On def_dule shift to state 436
## Reductions:

State 444:
## Known stack suffix:
## LIBRARY COIND one_dule
## LR(1) items:
link_item -> LIBRARY COIND one_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
one_dule -> one_dule . AND def_dule [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On AND shift to state 431
## Reductions:
-- On error reduce production link_item -> LIBRARY COIND one_dule
-- On UIDENT reduce production link_item -> LIBRARY COIND one_dule
-- On SPEC reduce production link_item -> LIBRARY COIND one_dule
-- On MODULE reduce production link_item -> LIBRARY COIND one_dule
-- On LIBRARY reduce production link_item -> LIBRARY COIND one_dule
-- On END reduce production link_item -> LIBRARY COIND one_dule

State 445:
## Known stack suffix:
## LIBRARY def_dule
## LR(1) items:
link_item -> LIBRARY def_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> LIBRARY def_dule

State 446:
## Known stack suffix:
## LINK list0_link_item END
## LR(1) items:
dule -> LINK list0_link_item END . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LINK list0_link_item END

State 447:
## Known stack suffix:
## list0_link_item link_item
## LR(1) items:
list0_link_item -> list0_link_item link_item . [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_link_item -> list0_link_item link_item

State 448:
## Known stack suffix:
## def_dule
## LR(1) items:
link_item -> def_dule . [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> def_dule

State 449:
## Known stack suffix:
## LBRACE
## LR(1) items:
dule -> LBRACE . list0_field_dule RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE . list0_field_dule error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE . LBRACE list0_field_dule RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE . LBRACE list0_field_dule error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On LBRACE shift to state 450
-- On list1_field_dule shift to state 377
-- On list0_field_dule shift to state 455
-- On field_dule shift to state 416
-- On dule_label shift to state 380
## Reductions:
-- On error reduce production list0_field_dule ->
-- On RBRACE reduce production list0_field_dule ->

State 450:
## Known stack suffix:
## LBRACE LBRACE
## LR(1) items:
dule -> LBRACE LBRACE . list0_field_dule RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE LBRACE . list0_field_dule error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 13
-- On list1_field_dule shift to state 377
-- On list0_field_dule shift to state 451
-- On field_dule shift to state 416
-- On dule_label shift to state 380
## Reductions:
-- On error reduce production list0_field_dule ->
-- On RBRACE reduce production list0_field_dule ->

State 451:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule . RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE LBRACE list0_field_dule . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 452
-- On RBRACE shift to state 453
## Reductions:

State 452:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule error
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE LBRACE list0_field_dule error

State 453:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule RBRACE
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule RBRACE . RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On RBRACE shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## LBRACE LBRACE list0_field_dule RBRACE RBRACE
## LR(1) items:
dule -> LBRACE LBRACE list0_field_dule RBRACE RBRACE . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE LBRACE list0_field_dule RBRACE RBRACE

State 455:
## Known stack suffix:
## LBRACE list0_field_dule
## LR(1) items:
dule -> LBRACE list0_field_dule . RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> LBRACE list0_field_dule . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 456
-- On RBRACE shift to state 457
## Reductions:

State 456:
## Known stack suffix:
## LBRACE list0_field_dule error
## LR(1) items:
dule -> LBRACE list0_field_dule error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE list0_field_dule error

State 457:
## Known stack suffix:
## LBRACE list0_field_dule RBRACE
## LR(1) items:
dule -> LBRACE list0_field_dule RBRACE . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LBRACE list0_field_dule RBRACE

State 458:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
dule -> COLONCOLON . sp dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 459
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 459:
## Known stack suffix:
## COLONCOLON sp
## LR(1) items:
dule -> COLONCOLON sp . dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> sp . WITH dule [ WITH UIDENT STRUCT LPAREN LOAD LINK LBRACE COLONCOLON COLON ]
## Transitions:
-- On WITH shift to state 369
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 469
## Reductions:

State 460:
## Known stack suffix:
## COLON
## LR(1) items:
dule -> COLON . LBRACE LBRACE list0_field_sp RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> COLON . LBRACE LBRACE sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On LBRACE shift to state 461
## Reductions:

State 461:
## Known stack suffix:
## COLON LBRACE
## LR(1) items:
dule -> COLON LBRACE . LBRACE list0_field_sp RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> COLON LBRACE . LBRACE sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On LBRACE shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## COLON LBRACE LBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE . list0_field_sp RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> COLON LBRACE LBRACE . sp error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 387
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 463
-- On list1_field_sp shift to state 390
-- On list0_param_sp shift to state 352
-- On list0_field_sp shift to state 465
-- On field_sp shift to state 396
-- On dule_label shift to state 355
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On RBRACE reduce production list0_field_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 463:
## Known stack suffix:
## COLON LBRACE LBRACE sp
## LR(1) items:
dule -> COLON LBRACE LBRACE sp . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> sp . WITH dule [ error WITH ]
## Transitions:
-- On error shift to state 464
-- On WITH shift to state 323
## Reductions:

State 464:
## Known stack suffix:
## COLON LBRACE LBRACE sp error
## LR(1) items:
dule -> COLON LBRACE LBRACE sp error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> COLON LBRACE LBRACE sp error

State 465:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp . RBRACE RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On RBRACE shift to state 466
## Reductions:

State 466:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp RBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp RBRACE . RBRACE [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On RBRACE shift to state 467
## Reductions:

State 467:
## Known stack suffix:
## COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE
## LR(1) items:
dule -> COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> COLON LBRACE LBRACE list0_field_sp RBRACE RBRACE

State 468:
## Known stack suffix:
## dule_label
## LR(1) items:
dule -> dule_label . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule_label

State 469:
## Known stack suffix:
## COLONCOLON sp dule
## LR(1) items:
dule -> dule . DOT dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> COLONCOLON sp dule . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On WITH shift to state 470
-- On DOT shift to state 472
-- On COLONGREATER shift to state 476
-- On BAR shift to state 474
## Reductions:
-- On UIDENT reduce production dule -> COLONCOLON sp dule
-- On TILDE reduce production dule -> COLONCOLON sp dule
-- On STRUCT reduce production dule -> COLONCOLON sp dule
-- On SPEC reduce production dule -> COLONCOLON sp dule
-- On SEMI reduce production dule -> COLONCOLON sp dule
-- On RBRACE reduce production dule -> COLONCOLON sp dule
-- On MODULE reduce production dule -> COLONCOLON sp dule
-- On MINUSGREATER reduce production dule -> COLONCOLON sp dule
-- On LPAREN reduce production dule -> COLONCOLON sp dule
-- On LOAD reduce production dule -> COLONCOLON sp dule
-- On LINK reduce production dule -> COLONCOLON sp dule
-- On LIBRARY reduce production dule -> COLONCOLON sp dule
-- On LBRACE reduce production dule -> COLONCOLON sp dule
-- On EOF reduce production dule -> COLONCOLON sp dule
-- On COLONCOLON reduce production dule -> COLONCOLON sp dule
-- On COLON reduce production dule -> COLONCOLON sp dule
-- On AND reduce production dule -> COLONCOLON sp dule

State 470:
## Known stack suffix:
## dule WITH
## LR(1) items:
dule -> dule WITH . dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## dule WITH dule
## LR(1) items:
dule -> dule . DOT dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule WITH dule . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On DOT shift to state 472
-- On BAR shift to state 474
## Reductions:
-- On WITH reduce production dule -> dule WITH dule
-- On UIDENT reduce production dule -> dule WITH dule
-- On TILDE reduce production dule -> dule WITH dule
-- On STRUCT reduce production dule -> dule WITH dule
-- On SPEC reduce production dule -> dule WITH dule
-- On SEMI reduce production dule -> dule WITH dule
-- On RBRACE reduce production dule -> dule WITH dule
-- On MODULE reduce production dule -> dule WITH dule
-- On MINUSGREATER reduce production dule -> dule WITH dule
-- On LPAREN reduce production dule -> dule WITH dule
-- On LOAD reduce production dule -> dule WITH dule
-- On LINK reduce production dule -> dule WITH dule
-- On LIBRARY reduce production dule -> dule WITH dule
-- On LBRACE reduce production dule -> dule WITH dule
-- On EOF reduce production dule -> dule WITH dule
-- On COLONGREATER reduce production dule -> dule WITH dule
-- On COLONCOLON reduce production dule -> dule WITH dule
-- On COLON reduce production dule -> dule WITH dule
-- On AND reduce production dule -> dule WITH dule

State 472:
## Known stack suffix:
## dule DOT
## LR(1) items:
dule -> dule DOT . dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## dule DOT dule
## LR(1) items:
dule -> dule . DOT dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule DOT dule . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule DOT dule

State 474:
## Known stack suffix:
## dule BAR
## LR(1) items:
dule -> dule BAR . dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## dule BAR dule
## LR(1) items:
dule -> dule . DOT dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule BAR dule . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> dule BAR dule

State 476:
## Known stack suffix:
## dule COLONGREATER
## LR(1) items:
dule -> dule COLONGREATER . sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On SIG shift to state 296
-- On LPAREN shift to state 307
-- On LBRACE shift to state 357
-- On sp_label shift to state 367
-- On sp shift to state 477
-- On list0_param_sp shift to state 407
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 477:
## Known stack suffix:
## dule COLONGREATER sp
## LR(1) items:
dule -> dule COLONGREATER sp . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> sp . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On WITH shift to state 369
## Reductions:
-- On UIDENT reduce production dule -> dule COLONGREATER sp
-- On TILDE reduce production dule -> dule COLONGREATER sp
-- On STRUCT reduce production dule -> dule COLONGREATER sp
-- On SPEC reduce production dule -> dule COLONGREATER sp
-- On SEMI reduce production dule -> dule COLONGREATER sp
-- On RBRACE reduce production dule -> dule COLONGREATER sp
-- On MODULE reduce production dule -> dule COLONGREATER sp
-- On MINUSGREATER reduce production dule -> dule COLONGREATER sp
-- On LPAREN reduce production dule -> dule COLONGREATER sp
-- On LOAD reduce production dule -> dule COLONGREATER sp
-- On LINK reduce production dule -> dule COLONGREATER sp
-- On LIBRARY reduce production dule -> dule COLONGREATER sp
-- On LBRACE reduce production dule -> dule COLONGREATER sp
-- On EOF reduce production dule -> dule COLONGREATER sp
-- On DOT reduce production dule -> dule COLONGREATER sp
-- On COLONGREATER reduce production dule -> dule COLONGREATER sp
-- On COLONCOLON reduce production dule -> dule COLONGREATER sp
-- On COLON reduce production dule -> dule COLONGREATER sp
-- On BAR reduce production dule -> dule COLONGREATER sp
-- On AND reduce production dule -> dule COLONGREATER sp

State 478:
## Known stack suffix:
## sp WITH dule
## LR(1) items:
dule -> dule . DOT dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> sp WITH dule . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On DOT shift to state 472
-- On BAR shift to state 474
## Reductions:
-- On WITH reduce production sp -> sp WITH dule
-- On UIDENT reduce production sp -> sp WITH dule
-- On TILDE reduce production sp -> sp WITH dule
-- On STRUCT reduce production sp -> sp WITH dule
-- On SPEC reduce production sp -> sp WITH dule
-- On SEMI reduce production sp -> sp WITH dule
-- On RBRACE reduce production sp -> sp WITH dule
-- On MODULE reduce production sp -> sp WITH dule
-- On MINUSGREATER reduce production sp -> sp WITH dule
-- On LPAREN reduce production sp -> sp WITH dule
-- On LOAD reduce production sp -> sp WITH dule
-- On LINK reduce production sp -> sp WITH dule
-- On LIBRARY reduce production sp -> sp WITH dule
-- On LBRACE reduce production sp -> sp WITH dule
-- On EOF reduce production sp -> sp WITH dule
-- On COLONGREATER reduce production sp -> sp WITH dule
-- On COLONCOLON reduce production sp -> sp WITH dule
-- On COLON reduce production sp -> sp WITH dule
-- On AND reduce production sp -> sp WITH dule

State 479:
## Known stack suffix:
## list0_param_sp MINUSGREATER
## LR(1) items:
sp -> list0_param_sp MINUSGREATER . sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 308
-- On SIG shift to state 309
-- On LPAREN shift to state 313
-- On LBRACE shift to state 314
-- On sp_label shift to state 321
-- On sp shift to state 480
-- On list0_param_sp shift to state 352
## Reductions:
-- On TILDE reduce production list0_param_sp ->
-- On MINUSGREATER reduce production list0_param_sp ->

State 480:
## Known stack suffix:
## list0_param_sp MINUSGREATER sp
## LR(1) items:
sp -> list0_param_sp MINUSGREATER sp . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> sp . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On WITH shift to state 323
## Reductions:
-- On error reduce production sp -> list0_param_sp MINUSGREATER sp
-- On UIDENT reduce production sp -> list0_param_sp MINUSGREATER sp
-- On SPEC reduce production sp -> list0_param_sp MINUSGREATER sp
-- On SEMI reduce production sp -> list0_param_sp MINUSGREATER sp
-- On RPAREN reduce production sp -> list0_param_sp MINUSGREATER sp
-- On RBRACE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On MODULE reduce production sp -> list0_param_sp MINUSGREATER sp
-- On LIBRARY reduce production sp -> list0_param_sp MINUSGREATER sp
-- On END reduce production sp -> list0_param_sp MINUSGREATER sp
-- On DOT reduce production sp -> list0_param_sp MINUSGREATER sp
-- On COLONGREATER reduce production sp -> list0_param_sp MINUSGREATER sp
-- On BAR reduce production sp -> list0_param_sp MINUSGREATER sp
-- On AND reduce production sp -> list0_param_sp MINUSGREATER sp

State 481:
## Known stack suffix:
## SPEC REC one_sp
## LR(1) items:
link_item -> SPEC REC one_sp . [ error UIDENT SPEC MODULE LIBRARY END ]
one_sp -> one_sp . AND def_sp [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On AND shift to state 482
## Reductions:
-- On error reduce production link_item -> SPEC REC one_sp
-- On UIDENT reduce production link_item -> SPEC REC one_sp
-- On SPEC reduce production link_item -> SPEC REC one_sp
-- On MODULE reduce production link_item -> SPEC REC one_sp
-- On LIBRARY reduce production link_item -> SPEC REC one_sp
-- On END reduce production link_item -> SPEC REC one_sp

State 482:
## Known stack suffix:
## one_sp AND
## LR(1) items:
one_sp -> one_sp AND . def_sp [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On sp_label shift to state 349
-- On def_sp shift to state 483
## Reductions:

State 483:
## Known stack suffix:
## one_sp AND def_sp
## LR(1) items:
one_sp -> one_sp AND def_sp . [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_sp -> one_sp AND def_sp

State 484:
## Known stack suffix:
## def_sp
## LR(1) items:
one_sp -> def_sp . [ error UIDENT SPEC MODULE LIBRARY END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_sp -> def_sp

State 485:
## Known stack suffix:
## SPEC def_sp
## LR(1) items:
link_item -> SPEC def_sp . [ error UIDENT SPEC MODULE LIBRARY END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> SPEC def_sp

State 486:
## Known stack suffix:
## LINK list0_link_item END
## LR(1) items:
dule -> LINK list0_link_item END . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LINK list0_link_item END

State 487:
## Known stack suffix:
## LPAREN dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . BAR dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . WITH dule [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> dule . COLONGREATER sp [ error WITH RPAREN DOT COLONGREATER BAR ]
dule -> LPAREN dule . RPAREN [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> LPAREN dule . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 488
-- On WITH shift to state 399
-- On RPAREN shift to state 489
-- On DOT shift to state 401
-- On COLONGREATER shift to state 405
-- On BAR shift to state 403
## Reductions:

State 488:
## Known stack suffix:
## LPAREN dule error
## LR(1) items:
dule -> LPAREN dule error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LPAREN dule error

State 489:
## Known stack suffix:
## LPAREN dule RPAREN
## LR(1) items:
dule -> LPAREN dule RPAREN . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dule -> LPAREN dule RPAREN

State 490:
## Known stack suffix:
## sp WITH dule
## LR(1) items:
dule -> dule . DOT dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> sp WITH dule . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On DOT shift to state 401
-- On BAR shift to state 403
## Reductions:
-- On error reduce production sp -> sp WITH dule
-- On WITH reduce production sp -> sp WITH dule
-- On UIDENT reduce production sp -> sp WITH dule
-- On SPEC reduce production sp -> sp WITH dule
-- On SEMI reduce production sp -> sp WITH dule
-- On RPAREN reduce production sp -> sp WITH dule
-- On RBRACE reduce production sp -> sp WITH dule
-- On MODULE reduce production sp -> sp WITH dule
-- On LIBRARY reduce production sp -> sp WITH dule
-- On END reduce production sp -> sp WITH dule
-- On COLONGREATER reduce production sp -> sp WITH dule
-- On AND reduce production sp -> sp WITH dule

State 491:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp . RBRACE RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE LBRACE list0_field_sp . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 492
-- On RBRACE shift to state 493
## Reductions:

State 492:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp error
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE LBRACE list0_field_sp error

State 493:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp RBRACE
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp RBRACE . RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On RBRACE shift to state 494
## Reductions:

State 494:
## Known stack suffix:
## LBRACE LBRACE list0_field_sp RBRACE RBRACE
## LR(1) items:
sp -> LBRACE LBRACE list0_field_sp RBRACE RBRACE . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE LBRACE list0_field_sp RBRACE RBRACE

State 495:
## Known stack suffix:
## LBRACE list0_field_sp
## LR(1) items:
sp -> LBRACE list0_field_sp . RBRACE [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LBRACE list0_field_sp . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 496
-- On RBRACE shift to state 497
## Reductions:

State 496:
## Known stack suffix:
## LBRACE list0_field_sp error
## LR(1) items:
sp -> LBRACE list0_field_sp error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE list0_field_sp error

State 497:
## Known stack suffix:
## LBRACE list0_field_sp RBRACE
## LR(1) items:
sp -> LBRACE list0_field_sp RBRACE . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LBRACE list0_field_sp RBRACE

State 498:
## Known stack suffix:
## LPAREN sp
## LR(1) items:
sp -> sp . WITH dule [ error WITH RPAREN ]
sp -> LPAREN sp . RPAREN [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
sp -> LPAREN sp . error [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
-- On error shift to state 499
-- On WITH shift to state 323
-- On RPAREN shift to state 500
## Reductions:

State 499:
## Known stack suffix:
## LPAREN sp error
## LR(1) items:
sp -> LPAREN sp error . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LPAREN sp error

State 500:
## Known stack suffix:
## LPAREN sp RPAREN
## LR(1) items:
sp -> LPAREN sp RPAREN . [ error WITH UIDENT SPEC SEMI RPAREN RBRACE MODULE LIBRARY END DOT COLONGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LPAREN sp RPAREN

State 501:
## Known stack suffix:
## LPAREN sp
## LR(1) items:
sp -> sp . WITH dule [ error WITH RPAREN ]
sp -> LPAREN sp . RPAREN [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
sp -> LPAREN sp . error [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
-- On error shift to state 502
-- On WITH shift to state 323
-- On RPAREN shift to state 503
## Reductions:

State 502:
## Known stack suffix:
## LPAREN sp error
## LR(1) items:
sp -> LPAREN sp error . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LPAREN sp error

State 503:
## Known stack suffix:
## LPAREN sp RPAREN
## LR(1) items:
sp -> LPAREN sp RPAREN . [ WITH UIDENT TILDE STRUCT SPEC SEMI RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF DOT COLONGREATER COLONCOLON COLON BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sp -> LPAREN sp RPAREN

State 504:
## Known stack suffix:
## sp_label EQUAL sp
## LR(1) items:
def_sp -> sp_label EQUAL sp . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
sp -> sp . WITH dule [ WITH UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On WITH shift to state 369
## Reductions:
-- On UIDENT reduce production def_sp -> sp_label EQUAL sp
-- On SPEC reduce production def_sp -> sp_label EQUAL sp
-- On MODULE reduce production def_sp -> sp_label EQUAL sp
-- On LIBRARY reduce production def_sp -> sp_label EQUAL sp
-- On EOF reduce production def_sp -> sp_label EQUAL sp
-- On AND reduce production def_sp -> sp_label EQUAL sp

State 505:
## Known stack suffix:
## SPEC REC one_sp
## LR(1) items:
link_item -> SPEC REC one_sp . [ UIDENT SPEC MODULE LIBRARY EOF ]
one_sp -> one_sp . AND def_sp [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On AND shift to state 506
## Reductions:
-- On UIDENT reduce production link_item -> SPEC REC one_sp
-- On SPEC reduce production link_item -> SPEC REC one_sp
-- On MODULE reduce production link_item -> SPEC REC one_sp
-- On LIBRARY reduce production link_item -> SPEC REC one_sp
-- On EOF reduce production link_item -> SPEC REC one_sp

State 506:
## Known stack suffix:
## one_sp AND
## LR(1) items:
one_sp -> one_sp AND . def_sp [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On UIDENT shift to state 292
-- On sp_label shift to state 294
-- On def_sp shift to state 507
## Reductions:

State 507:
## Known stack suffix:
## one_sp AND def_sp
## LR(1) items:
one_sp -> one_sp AND def_sp . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_sp -> one_sp AND def_sp

State 508:
## Known stack suffix:
## def_sp
## LR(1) items:
one_sp -> def_sp . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_sp -> def_sp

State 509:
## Known stack suffix:
## SPEC def_sp
## LR(1) items:
link_item -> SPEC def_sp . [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> SPEC def_sp

State 510:
## Known stack suffix:
## MODULE
## LR(1) items:
link_item -> MODULE . def_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
link_item -> MODULE . IND one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
link_item -> MODULE . COIND one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On IND shift to state 511
-- On COIND shift to state 519
-- On dule_label shift to state 514
-- On def_dule shift to state 521
## Reductions:

State 511:
## Known stack suffix:
## MODULE IND
## LR(1) items:
link_item -> MODULE IND . one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 512
-- On dule_label shift to state 514
-- On def_dule shift to state 518
## Reductions:

State 512:
## Known stack suffix:
## MODULE IND one_dule
## LR(1) items:
link_item -> MODULE IND one_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
one_dule -> one_dule . AND def_dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On AND shift to state 513
## Reductions:
-- On UIDENT reduce production link_item -> MODULE IND one_dule
-- On SPEC reduce production link_item -> MODULE IND one_dule
-- On MODULE reduce production link_item -> MODULE IND one_dule
-- On LIBRARY reduce production link_item -> MODULE IND one_dule
-- On EOF reduce production link_item -> MODULE IND one_dule

State 513:
## Known stack suffix:
## one_dule AND
## LR(1) items:
one_dule -> one_dule AND . def_dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On dule_label shift to state 514
-- On def_dule shift to state 517
## Reductions:

State 514:
## Known stack suffix:
## dule_label
## LR(1) items:
def_dule -> dule_label . EQUAL dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On EQUAL shift to state 515
## Reductions:

State 515:
## Known stack suffix:
## dule_label EQUAL
## LR(1) items:
def_dule -> dule_label EQUAL . dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On STRUCT shift to state 370
-- On LPAREN shift to state 374
-- On LOAD shift to state 423
-- On LINK shift to state 425
-- On LBRACE shift to state 449
-- On COLONCOLON shift to state 458
-- On COLON shift to state 460
-- On dule_label shift to state 468
-- On dule shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## dule_label EQUAL dule
## LR(1) items:
def_dule -> dule_label EQUAL dule . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
dule -> dule . DOT dule [ WITH UIDENT SPEC MODULE LIBRARY EOF DOT COLONGREATER BAR AND ]
dule -> dule . BAR dule [ WITH UIDENT SPEC MODULE LIBRARY EOF DOT COLONGREATER BAR AND ]
dule -> dule . WITH dule [ WITH UIDENT SPEC MODULE LIBRARY EOF DOT COLONGREATER BAR AND ]
dule -> dule . COLONGREATER sp [ WITH UIDENT SPEC MODULE LIBRARY EOF DOT COLONGREATER BAR AND ]
## Transitions:
-- On WITH shift to state 470
-- On DOT shift to state 472
-- On COLONGREATER shift to state 476
-- On BAR shift to state 474
## Reductions:
-- On UIDENT reduce production def_dule -> dule_label EQUAL dule
-- On SPEC reduce production def_dule -> dule_label EQUAL dule
-- On MODULE reduce production def_dule -> dule_label EQUAL dule
-- On LIBRARY reduce production def_dule -> dule_label EQUAL dule
-- On EOF reduce production def_dule -> dule_label EQUAL dule
-- On AND reduce production def_dule -> dule_label EQUAL dule

State 517:
## Known stack suffix:
## one_dule AND def_dule
## LR(1) items:
one_dule -> one_dule AND def_dule . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dule -> one_dule AND def_dule

State 518:
## Known stack suffix:
## def_dule
## LR(1) items:
one_dule -> def_dule . [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_dule -> def_dule

State 519:
## Known stack suffix:
## MODULE COIND
## LR(1) items:
link_item -> MODULE COIND . one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 520
-- On dule_label shift to state 514
-- On def_dule shift to state 518
## Reductions:

State 520:
## Known stack suffix:
## MODULE COIND one_dule
## LR(1) items:
link_item -> MODULE COIND one_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
one_dule -> one_dule . AND def_dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On AND shift to state 513
## Reductions:
-- On UIDENT reduce production link_item -> MODULE COIND one_dule
-- On SPEC reduce production link_item -> MODULE COIND one_dule
-- On MODULE reduce production link_item -> MODULE COIND one_dule
-- On LIBRARY reduce production link_item -> MODULE COIND one_dule
-- On EOF reduce production link_item -> MODULE COIND one_dule

State 521:
## Known stack suffix:
## MODULE def_dule
## LR(1) items:
link_item -> MODULE def_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> MODULE def_dule

State 522:
## Known stack suffix:
## LIBRARY
## LR(1) items:
link_item -> LIBRARY . def_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
link_item -> LIBRARY . IND one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
link_item -> LIBRARY . COIND one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On IND shift to state 523
-- On COIND shift to state 525
-- On dule_label shift to state 514
-- On def_dule shift to state 527
## Reductions:

State 523:
## Known stack suffix:
## LIBRARY IND
## LR(1) items:
link_item -> LIBRARY IND . one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 524
-- On dule_label shift to state 514
-- On def_dule shift to state 518
## Reductions:

State 524:
## Known stack suffix:
## LIBRARY IND one_dule
## LR(1) items:
link_item -> LIBRARY IND one_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
one_dule -> one_dule . AND def_dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On AND shift to state 513
## Reductions:
-- On UIDENT reduce production link_item -> LIBRARY IND one_dule
-- On SPEC reduce production link_item -> LIBRARY IND one_dule
-- On MODULE reduce production link_item -> LIBRARY IND one_dule
-- On LIBRARY reduce production link_item -> LIBRARY IND one_dule
-- On EOF reduce production link_item -> LIBRARY IND one_dule

State 525:
## Known stack suffix:
## LIBRARY COIND
## LR(1) items:
link_item -> LIBRARY COIND . one_dule [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
-- On UIDENT shift to state 5
-- On one_dule shift to state 526
-- On dule_label shift to state 514
-- On def_dule shift to state 518
## Reductions:

State 526:
## Known stack suffix:
## LIBRARY COIND one_dule
## LR(1) items:
link_item -> LIBRARY COIND one_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
one_dule -> one_dule . AND def_dule [ UIDENT SPEC MODULE LIBRARY EOF AND ]
## Transitions:
-- On AND shift to state 513
## Reductions:
-- On UIDENT reduce production link_item -> LIBRARY COIND one_dule
-- On SPEC reduce production link_item -> LIBRARY COIND one_dule
-- On MODULE reduce production link_item -> LIBRARY COIND one_dule
-- On LIBRARY reduce production link_item -> LIBRARY COIND one_dule
-- On EOF reduce production link_item -> LIBRARY COIND one_dule

State 527:
## Known stack suffix:
## LIBRARY def_dule
## LR(1) items:
link_item -> LIBRARY def_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> LIBRARY def_dule

State 528:
## Known stack suffix:
## list0_link_item EOF
## LR(1) items:
start -> list0_link_item EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production start -> list0_link_item EOF

State 529:
## Known stack suffix:
## list0_link_item link_item
## LR(1) items:
list0_link_item -> list0_link_item link_item . [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list0_link_item -> list0_link_item link_item

State 530:
## Known stack suffix:
## def_dule
## LR(1) items:
link_item -> def_dule . [ UIDENT SPEC MODULE LIBRARY EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production link_item -> def_dule

