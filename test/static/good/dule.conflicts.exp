
** Conflict (shift/reduce) in state 480.
** Token involved: WITH
** This state is reached from start after reading:

list0_link_item SPEC sp_label EQUAL LPAREN list0_param_sp MINUSGREATER sp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
list0_link_item EOF 
list0_link_item link_item 
                SPEC def_sp 
                     sp_label EQUAL sp 
                                    LPAREN sp RPAREN 
                                           (?)

** In state 480, looking ahead at WITH, reducing production
** sp -> list0_param_sp MINUSGREATER sp
** is permitted because of the following sub-derivation:

sp WITH dule // lookahead token appears
list0_param_sp MINUSGREATER sp . 

** In state 480, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

list0_param_sp MINUSGREATER sp 
                            sp . WITH dule 

** Conflict (shift/reduce) in state 469.
** Tokens involved: WITH DOT COLONGREATER BAR
** The following explanations concentrate on token WITH.
** This state is reached from start after reading:

list0_link_item dule_label EQUAL COLONCOLON sp dule

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
list0_link_item EOF 
list0_link_item link_item 
                def_dule 
                dule_label EQUAL dule 
                                 (?)

** In state 469, looking ahead at WITH, reducing production
** dule -> COLONCOLON sp dule
** is permitted because of the following sub-derivation:

dule WITH dule // lookahead token appears
COLONCOLON sp dule . 

** In state 469, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

COLONCOLON sp dule 
              dule . WITH dule 

** Conflict (shift/reduce) in state 409.
** Token involved: WITH
** This state is reached from start after reading:

list0_link_item SPEC sp_label EQUAL list0_param_sp MINUSGREATER sp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
list0_link_item EOF 
list0_link_item link_item 
                SPEC def_sp 
                     sp_label EQUAL sp 
                                    (?)

** In state 409, looking ahead at WITH, reducing production
** sp -> list0_param_sp MINUSGREATER sp
** is permitted because of the following sub-derivation:

sp WITH dule // lookahead token appears
list0_param_sp MINUSGREATER sp . 

** In state 409, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

list0_param_sp MINUSGREATER sp 
                            sp . WITH dule 

** Conflict (shift/reduce) in state 398.
** Tokens involved: WITH DOT COLONGREATER BAR
** The following explanations concentrate on token WITH.
** This state is reached from start after reading:

list0_link_item dule_label EQUAL LPAREN COLONCOLON sp dule

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
list0_link_item EOF 
list0_link_item link_item 
                def_dule 
                dule_label EQUAL dule 
                                 LPAREN dule RPAREN 
                                        (?)

** In state 398, looking ahead at WITH, reducing production
** dule -> COLONCOLON sp dule
** is permitted because of the following sub-derivation:

dule WITH dule // lookahead token appears
COLONCOLON sp dule . 

** In state 398, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

COLONCOLON sp dule 
              dule . WITH dule 

** Conflict (shift/reduce) in state 283.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

UNFOLD MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 283, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       MINUSGREATER valu 
                    valu list1_argument 
                         argument 
                         . TILDE value_label COLON valu 

** In state 283, looking ahead at TILDE, reducing production
** embedding -> MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       MINUSGREATER valu . 

** Conflict (shift/reduce) in state 274.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN UNFOLD MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 274, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       MINUSGREATER valu 
                    valu list1_argument 
                         argument 
                         . TILDE value_label COLON valu 

** In state 274, looking ahead at TILDE, reducing production
** embedding -> MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       MINUSGREATER valu . 

** Conflict (shift/reduce) in state 270.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LET list0_declaration IN valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 270, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

LET list0_declaration IN valu 
                         valu list1_argument 
                              argument 
                              . TILDE value_label COLON valu 

** In state 270, looking ahead at TILDE, reducing production
** valu -> LET list0_declaration IN valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
LET list0_declaration IN valu . 

** Conflict (shift/reduce) in state 253.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN LET list0_declaration IN valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 253, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

LET list0_declaration IN valu 
                         valu list1_argument 
                              argument 
                              . TILDE value_label COLON valu 

** In state 253, looking ahead at TILDE, reducing production
** valu -> LET list0_declaration IN valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
LET list0_declaration IN valu . 

** Conflict (shift/reduce) in state 248.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN IF valu THEN valu ELSE valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 248, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

IF valu THEN valu ELSE valu 
                       valu list1_argument 
                            argument 
                            . TILDE value_label COLON valu 

** In state 248, looking ahead at TILDE, reducing production
** valu -> IF valu THEN valu ELSE valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
IF valu THEN valu ELSE valu . 

** Conflict (shift/reduce) in state 243.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

IF valu THEN valu ELSE valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 243, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

IF valu THEN valu ELSE valu 
                       valu list1_argument 
                            argument 
                            . TILDE value_label COLON valu 

** In state 243, looking ahead at TILDE, reducing production
** valu -> IF valu THEN valu ELSE valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
IF valu THEN valu ELSE valu . 

** Conflict (shift/reduce) in state 238.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

FUN list0_param MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 238, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

FUN list0_param MINUSGREATER valu 
                             valu list1_argument 
                                  argument 
                                  . TILDE value_label COLON valu 

** In state 238, looking ahead at TILDE, reducing production
** valu -> FUN list0_param MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
FUN list0_param MINUSGREATER valu . 

** Conflict (shift/reduce) in state 236.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

UNFOLD pattern MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 236, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       pattern MINUSGREATER valu 
                            valu list1_argument 
                                 argument 
                                 . TILDE value_label COLON valu 

** In state 236, looking ahead at TILDE, reducing production
** embedding -> pattern MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       pattern MINUSGREATER valu . 

** Conflict (shift/reduce) in state 233.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

UNFOLD valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 233, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       valu 
       valu list1_argument 
            argument 
            . TILDE value_label COLON valu 

** In state 233, looking ahead at TILDE, reducing production
** embedding -> valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       valu . 

** Conflict (shift/reduce) in state 231.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

ASSERT valu IN valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 231, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

ASSERT valu IN valu 
               valu list1_argument 
                    argument 
                    . TILDE value_label COLON valu 

** In state 231, looking ahead at TILDE, reducing production
** valu -> ASSERT valu IN valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
ASSERT valu IN valu . 

** Conflict (shift/reduce) in state 224.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN FUN list0_param MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 224, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

FUN list0_param MINUSGREATER valu 
                             valu list1_argument 
                                  argument 
                                  . TILDE value_label COLON valu 

** In state 224, looking ahead at TILDE, reducing production
** valu -> FUN list0_param MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
FUN list0_param MINUSGREATER valu . 

** Conflict (shift/reduce) in state 222.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN UNFOLD pattern MINUSGREATER valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 222, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       pattern MINUSGREATER valu 
                            valu list1_argument 
                                 argument 
                                 . TILDE value_label COLON valu 

** In state 222, looking ahead at TILDE, reducing production
** embedding -> pattern MINUSGREATER valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       pattern MINUSGREATER valu . 

** Conflict (shift/reduce) in state 219.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN UNFOLD valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 219, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

UNFOLD embedding 
       valu 
       valu list1_argument 
            argument 
            . TILDE value_label COLON valu 

** In state 219, looking ahead at TILDE, reducing production
** embedding -> valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
UNFOLD embedding // lookahead token is inherited
       valu . 

** Conflict (shift/reduce) in state 213.
** Token involved: TILDE
** This state is reached from core after reading:

valu list1_argument

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 213, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

valu list1_argument 
     list1_argument argument 
                    . TILDE value_label COLON valu 

** In state 213, looking ahead at TILDE, reducing production
** valu -> valu list1_argument
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
valu list1_argument . 

** Conflict (reduce/reduce) in state 210.
** Tokens involved: WITH UNDERSCORE TILDE THEN REC LPAREN LIDENT LBRACE IN EOF ELSE DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

valu DOT BACKQUOTE case_label

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 210, looking ahead at TILDE, reducing production
** valu -> valu DOT BACKQUOTE case_label
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
valu DOT BACKQUOTE case_label . 

** In state 210, looking ahead at TILDE, reducing production
** valu -> BACKQUOTE case_label
** is permitted because of the following sub-derivation:

valu DOT valu 
         valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
         BACKQUOTE case_label . 

** Conflict (shift/reduce) in state 206.
** Token involved: TILDE
** This state is reached from core after reading:

LPAREN valu list1_argument

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 206, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

valu list1_argument 
     list1_argument argument 
                    . TILDE value_label COLON valu 

** In state 206, looking ahead at TILDE, reducing production
** valu -> valu list1_argument
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
valu list1_argument . 

** Conflict (reduce/reduce) in state 203.
** Tokens involved: error VALUE TYPE TILDE SEMI RPAREN RBRACKET RBRACE LPAREN END DOT BAR
** The following explanations concentrate on token error.
** This state is reached from core after reading:

LPAREN valu DOT BACKQUOTE case_label

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu error // lookahead token appears
       (?)

** In state 203, looking ahead at error, reducing production
** valu -> valu DOT BACKQUOTE case_label
** is permitted because of the following sub-derivation:

valu DOT BACKQUOTE case_label . 

** In state 203, looking ahead at error, reducing production
** valu -> BACKQUOTE case_label
** is permitted because of the following sub-derivation:

valu DOT valu // lookahead token is inherited
         BACKQUOTE case_label . 

** Conflict (shift/reduce) in state 193.
** Tokens involved: TILDE LPAREN DOT
** The following explanations concentrate on token TILDE.
** This state is reached from core after reading:

LPAREN ASSERT valu IN valu

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 193, looking ahead at TILDE, shifting is permitted
** because of the following sub-derivation:

ASSERT valu IN valu 
               valu list1_argument 
                    argument 
                    . TILDE value_label COLON valu 

** In state 193, looking ahead at TILDE, reducing production
** valu -> ASSERT valu IN valu
** is permitted because of the following sub-derivation:

valu list1_argument // lookahead token appears because list1_argument can begin with TILDE
ASSERT valu IN valu . 

** Conflict (shift/reduce) in state 186.
** Token involved: DOT
** This state is reached from core after reading:

LPAREN COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       (?)

** In state 186, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

COLON typ 
      typ . DOT typ 

** In state 186, looking ahead at DOT, reducing production
** valu -> COLON typ
** is permitted because of the following sub-derivation:

valu DOT valu // lookahead token appears
COLON typ . 

** Conflict (shift/reduce) in state 166.
** Token involved: LIDENT
** This state is reached from core after reading:

LET list0_declaration pattern EQUAL valu TILDE

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LET list0_declaration IN valu 
    (?)

** In state 166, looking ahead at LIDENT, reducing production
** valu -> valu TILDE
** is permitted because of the following sub-derivation:

list0_declaration declaration // lookahead token appears because declaration can begin with LIDENT
list0_declaration declaration // lookahead token is inherited
                  pattern EQUAL valu // lookahead token is inherited
                                valu TILDE . 

** In state 166, looking ahead at LIDENT, shifting is permitted
** because of the following sub-derivation:

list0_declaration declaration 
                  pattern EQUAL valu 
                                valu list1_argument 
                                     argument 
                                     TILDE value_label COLON valu 
                                           . LIDENT 

** Conflict (shift/reduce) in state 160.
** Token involved: DOT
** This state is reached from core after reading:

COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
(?)

** In state 160, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

COLON typ 
      typ . DOT typ 

** In state 160, looking ahead at DOT, reducing production
** valu -> COLON typ
** is permitted because of the following sub-derivation:

valu DOT valu // lookahead token appears
COLON typ . 

** Conflict (shift/reduce) in state 129.
** Token involved: DOT
** This state is reached from core after reading:

LPAREN COLON IND type_label COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       COLON typ 
             (?)

** In state 129, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

IND type_label COLON typ 
                     typ . DOT typ 

** In state 129, looking ahead at DOT, reducing production
** typ -> IND type_label COLON typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
IND type_label COLON typ . 

** Conflict (shift/reduce) in state 128.
** Token involved: DOT
** This state is reached from core after reading:

LPAREN COLON list0_param_typ MINUSGREATER typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       COLON typ 
             (?)

** In state 128, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

list0_param_typ MINUSGREATER typ 
                             typ . DOT typ 

** In state 128, looking ahead at DOT, reducing production
** typ -> list0_param_typ MINUSGREATER typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
list0_param_typ MINUSGREATER typ . 

** Conflict (shift/reduce) in state 125.
** Token involved: DOT
** This state is reached from core after reading:

COLON IND type_label COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
COLON typ 
      (?)

** In state 125, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

IND type_label COLON typ 
                     typ . DOT typ 

** In state 125, looking ahead at DOT, reducing production
** typ -> IND type_label COLON typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
IND type_label COLON typ . 

** Conflict (shift/reduce) in state 122.
** Token involved: DOT
** This state is reached from core after reading:

COLON list0_param_typ MINUSGREATER typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
COLON typ 
      (?)

** In state 122, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

list0_param_typ MINUSGREATER typ 
                             typ . DOT typ 

** In state 122, looking ahead at DOT, reducing production
** typ -> list0_param_typ MINUSGREATER typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
list0_param_typ MINUSGREATER typ . 

** Conflict (shift/reduce) in state 117.
** Token involved: DOT
** This state is reached from core after reading:

COLON COIND type_label COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
COLON typ 
      (?)

** In state 117, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

COIND type_label COLON typ 
                       typ . DOT typ 

** In state 117, looking ahead at DOT, reducing production
** typ -> COIND type_label COLON typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
COIND type_label COLON typ . 

** Conflict (shift/reduce) in state 82.
** Token involved: DOT
** This state is reached from core after reading:

LPAREN COLON COIND type_label COLON typ

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

core 
valu EOF 
LPAREN valu RPAREN 
       COLON typ 
             (?)

** In state 82, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

COIND type_label COLON typ 
                       typ . DOT typ 

** In state 82, looking ahead at DOT, reducing production
** typ -> COIND type_label COLON typ
** is permitted because of the following sub-derivation:

typ DOT typ // lookahead token appears
COIND type_label COLON typ . 
