File "dule.mly", line 66, characters 7-17:
Warning: the token AMPERAMPER is unused.
File "dule.mly", line 67, characters 7-16:
Warning: the token AMPERSAND is unused.
File "dule.mly", line 72, characters 7-13:
Warning: the token BARBAR is unused.
File "dule.mly", line 73, characters 7-18:
Warning: the token BARRBRACKET is unused.
File "dule.mly", line 74, characters 14-18:
Warning: the token CHAR is unused.
File "dule.mly", line 79, characters 7-12:
Warning: the token COMMA is unused.
File "dule.mly", line 83, characters 7-13:
Warning: the token DOTDOT is unused.
File "dule.mly", line 88, characters 7-16:
Warning: the token EXCEPTION is unused.
File "dule.mly", line 90, characters 16-21:
Warning: the token FLOAT is unused.
File "dule.mly", line 93, characters 7-14:
Warning: the token GREATER is unused.
File "dule.mly", line 94, characters 7-20:
Warning: the token GREATERRBRACE is unused.
File "dule.mly", line 95, characters 7-22:
Warning: the token GREATERRBRACKET is unused.
File "dule.mly", line 98, characters 7-14:
Warning: the token INCLUDE is unused.
File "dule.mly", line 102, characters 7-17:
Warning: the token LBRACELESS is unused.
File "dule.mly", line 104, characters 7-18:
Warning: the token LBRACKETBAR is unused.
File "dule.mly", line 105, characters 7-19:
Warning: the token LBRACKETLESS is unused.
File "dule.mly", line 106, characters 7-11:
Warning: the token LESS is unused.
File "dule.mly", line 115, characters 7-12:
Warning: the token MINUS is unused.
File "dule.mly", line 116, characters 7-15:
Warning: the token MINUSDOT is unused.
File "dule.mly", line 119, characters 7-9:
Warning: the token OF is unused.
File "dule.mly", line 120, characters 7-11:
Warning: the token OPEN is unused.
File "dule.mly", line 121, characters 7-11:
Warning: the token PLUS is unused.
File "dule.mly", line 122, characters 7-15:
Warning: the token QUESTION is unused.
File "dule.mly", line 123, characters 7-12:
Warning: the token QUOTE is unused.
File "dule.mly", line 129, characters 7-15:
Warning: the token SEMISEMI is unused.
File "dule.mly", line 130, characters 7-12:
Warning: the token SHARP is unused.
File "dule.mly", line 133, characters 7-11:
Warning: the token STAR is unused.
File "dule.mly", line 134, characters 16-22:
Warning: the token STRING is unused.
File "dule.mly", line 145, characters 7-11:
Warning: the token WHEN is unused.
Grammar has 52 nonterminal symbols, among which 2 start symbols.
Grammar has 81 terminal symbols.
Grammar has 169 productions.
nullable(value_label) = false
nullable(valu) = false
nullable(type_label) = false
nullable(typ) = false
nullable(start) = false
nullable(sp_label) = false
nullable(sp) = false
nullable(pattern) = false
nullable(partial_arguments) = false
nullable(param_typ) = false
nullable(param_sp) = false
nullable(param) = false
nullable(one_sp) = false
nullable(one_dule) = false
nullable(list1_field_typ) = false
nullable(list1_field_sp) = false
nullable(list1_field_dule) = false
nullable(list1_field) = false
nullable(list1_case_typ) = false
nullable(list1_case) = false
nullable(list1_argument) = false
nullable(list0_param_typ) = true
nullable(list0_param_sp) = true
nullable(list0_param) = true
nullable(list0_link_item) = true
nullable(list0_field_typ) = true
nullable(list0_field_sp) = true
nullable(list0_field_dule) = true
nullable(list0_field) = true
nullable(list0_declaration) = true
nullable(list0_case_typ) = true
nullable(list0_case) = true
nullable(list0_bb_item) = true
nullable(list0_base_item) = true
nullable(link_item) = false
nullable(field_typ) = false
nullable(field_sp) = false
nullable(field_dule) = false
nullable(field) = false
nullable(embedding) = false
nullable(dule_label) = false
nullable(dule) = false
nullable(def_sp) = false
nullable(def_dule) = false
nullable(declaration) = false
nullable(core) = false
nullable(case_typ) = false
nullable(case_label) = false
nullable(case) = false
nullable(bb_item) = false
nullable(base_item) = false
nullable(argument) = false
first(value_label) = LIDENT
first(valu) = UNFOLD UNDE UNCON UIDENT MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IF FUN FOLD FAIL DE CON COLON BACKQUOTE ASSERT
first(type_label) = LIDENT
first(typ) = UIDENT TILDE MINUSGREATER LPAREN LIDENT LBRACKET LBRACE IND COIND
first(start) = UIDENT SPEC MODULE LIBRARY EOF
first(sp_label) = UIDENT
first(sp) = UIDENT TILDE SIG MINUSGREATER LPAREN LBRACE
first(pattern) = UNDERSCORE LIDENT LBRACE
first(partial_arguments) = LPAREN
first(param_typ) = TILDE
first(param_sp) = TILDE
first(param) = TILDE
first(one_sp) = UIDENT
first(one_dule) = UIDENT
first(list1_field_typ) = LIDENT
first(list1_field_sp) = UIDENT
first(list1_field_dule) = UIDENT
first(list1_field) = LIDENT
first(list1_case_typ) = BACKQUOTE
first(list1_case) = BACKQUOTE
first(list1_argument) = TILDE
first(list0_param_typ) = TILDE
first(list0_param_sp) = TILDE
first(list0_param) = TILDE
first(list0_link_item) = UIDENT SPEC MODULE LIBRARY
first(list0_field_typ) = LIDENT
first(list0_field_sp) = UIDENT
first(list0_field_dule) = UIDENT
first(list0_field) = LIDENT
first(list0_declaration) = UNDERSCORE REC LIDENT LBRACE
first(list0_case_typ) = BACKQUOTE
first(list0_case) = BACKQUOTE
first(list0_bb_item) = VALUE TYPE
first(list0_base_item) = VALUE TYPE
first(link_item) = UIDENT SPEC MODULE LIBRARY
first(field_typ) = LIDENT
first(field_sp) = UIDENT
first(field_dule) = UIDENT
first(field) = LIDENT
first(embedding) = UNFOLD UNDERSCORE UNDE UNCON UIDENT MINUSGREATER MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IF FUN FOLD FAIL DE CON COLON BACKQUOTE ASSERT
first(dule_label) = UIDENT
first(dule) = UIDENT STRUCT LPAREN LOAD LINK LBRACE COLONCOLON COLON
first(def_sp) = UIDENT
first(def_dule) = UIDENT
first(declaration) = UNDERSCORE REC LIDENT LBRACE
first(core) = UNFOLD UNDE UNCON UIDENT MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IF FUN FOLD FAIL DE CON COLON BACKQUOTE ASSERT
first(case_typ) = BACKQUOTE
first(case_label) = UIDENT LIDENT
first(case) = BACKQUOTE
first(bb_item) = VALUE TYPE
first(base_item) = VALUE TYPE
first(argument) = TILDE
minimal(value_label) = (* 1 *) LIDENT
minimal(valu) = (* 1 *) LIDENT
minimal(type_label) = (* 1 *) LIDENT
minimal(typ) = (* 1 *) LIDENT
minimal(start) = (* 1 *) EOF
minimal(sp_label) = (* 1 *) UIDENT
minimal(sp) = (* 1 *) UIDENT
minimal(pattern) = (* 1 *) LIDENT
minimal(partial_arguments) = (* 4 *) LPAREN TILDE LIDENT RPAREN
minimal(param_typ) = (* 4 *) TILDE LIDENT COLON LIDENT
minimal(param_sp) = (* 2 *) TILDE UIDENT
minimal(param) = (* 2 *) TILDE LIDENT
minimal(one_sp) = (* 3 *) UIDENT EQUAL UIDENT
minimal(one_dule) = (* 3 *) UIDENT EQUAL UIDENT
minimal(list1_field_typ) = (* 3 *) LIDENT COLON LIDENT
minimal(list1_field_sp) = (* 1 *) UIDENT
minimal(list1_field_dule) = (* 1 *) UIDENT
minimal(list1_field) = (* 1 *) LIDENT
minimal(list1_case_typ) = (* 2 *) BACKQUOTE UIDENT
minimal(list1_case) = (* 3 *) BACKQUOTE UIDENT LIDENT
minimal(list1_argument) = (* 2 *) TILDE LIDENT
minimal(list0_param_typ) = (* 0 *)
minimal(list0_param_sp) = (* 0 *)
minimal(list0_param) = (* 0 *)
minimal(list0_link_item) = (* 0 *)
minimal(list0_field_typ) = (* 0 *)
minimal(list0_field_sp) = (* 0 *)
minimal(list0_field_dule) = (* 0 *)
minimal(list0_field) = (* 0 *)
minimal(list0_declaration) = (* 0 *)
minimal(list0_case_typ) = (* 0 *)
minimal(list0_case) = (* 0 *)
minimal(list0_bb_item) = (* 0 *)
minimal(list0_base_item) = (* 0 *)
minimal(link_item) = (* 3 *) UIDENT EQUAL UIDENT
minimal(field_typ) = (* 3 *) LIDENT COLON LIDENT
minimal(field_sp) = (* 1 *) UIDENT
minimal(field_dule) = (* 1 *) UIDENT
minimal(field) = (* 1 *) LIDENT
minimal(embedding) = (* 1 *) LIDENT
minimal(dule_label) = (* 1 *) UIDENT
minimal(dule) = (* 1 *) UIDENT
minimal(def_sp) = (* 3 *) UIDENT EQUAL UIDENT
minimal(def_dule) = (* 3 *) UIDENT EQUAL UIDENT
minimal(declaration) = (* 3 *) LIDENT EQUAL LIDENT
minimal(core) = (* 2 *) LIDENT EOF
minimal(case_typ) = (* 2 *) BACKQUOTE UIDENT
minimal(case_label) = (* 1 *) UIDENT
minimal(case) = (* 3 *) BACKQUOTE UIDENT LIDENT
minimal(bb_item) = (* 2 *) TYPE LIDENT
minimal(base_item) = (* 4 *) TYPE LIDENT EQUAL LIDENT
minimal(argument) = (* 2 *) TILDE LIDENT
follow(value_label) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF END ELSE DOT COLON BAR
follow(valu) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE LPAREN LIDENT LBRACE IN EOF END ELSE DOT BAR
follow(type_label) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF END ELSE DOT COLON BAR
follow(typ) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE MINUSGREATER LPAREN LIDENT LBRACE IN EQUAL EOF END ELSE DOT BAR
follow(start) = #
follow(sp_label) = error WITH UIDENT TILDE STRUCT SPEC SEMI RPAREN RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EQUAL EOF END DOT COLONGREATER COLONCOLON COLON BAR AND
follow(sp) = error WITH UIDENT TILDE STRUCT SPEC SEMI RPAREN RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF END DOT COLONGREATER COLONCOLON COLON BAR AND
follow(pattern) = TILDE MINUSGREATER EQUAL
follow(partial_arguments) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE LPAREN LIDENT LBRACE IN EOF END ELSE DOT BAR
follow(param_typ) = TILDE MINUSGREATER
follow(param_sp) = TILDE MINUSGREATER
follow(param) = TILDE MINUSGREATER
follow(one_sp) = error UIDENT SPEC MODULE LIBRARY EOF END AND
follow(one_dule) = error UIDENT SPEC MODULE LIBRARY EOF END AND
follow(list1_field_typ) = error SEMI RBRACE
follow(list1_field_sp) = error SEMI RBRACE
follow(list1_field_dule) = error SEMI RBRACE
follow(list1_field) = error SEMI RBRACE
follow(list1_case_typ) = error RBRACKET BAR
follow(list1_case) = error RBRACKET BAR
follow(list1_argument) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE LPAREN LIDENT LBRACE IN EOF END ELSE DOT BAR
follow(list0_param_typ) = TILDE MINUSGREATER
follow(list0_param_sp) = TILDE MINUSGREATER
follow(list0_param) = TILDE MINUSGREATER
follow(list0_link_item) = error UIDENT SPEC MODULE LIBRARY EOF END
follow(list0_field_typ) = error RBRACE
follow(list0_field_sp) = error RBRACE
follow(list0_field_dule) = error RBRACE
follow(list0_field) = error RBRACE
follow(list0_declaration) = UNDERSCORE REC LIDENT LBRACE IN
follow(list0_case_typ) = error RBRACKET
follow(list0_case) = error RBRACKET
follow(list0_bb_item) = error VALUE TYPE END
follow(list0_base_item) = error VALUE TYPE END
follow(link_item) = error UIDENT SPEC MODULE LIBRARY EOF END
follow(field_typ) = error SEMI RBRACE
follow(field_sp) = error TILDE SEMI RBRACE MINUSGREATER
follow(field_dule) = error SEMI RBRACE
follow(field) = error SEMI RBRACE
follow(embedding) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE LPAREN LIDENT LBRACE IN EOF END ELSE DOT BAR
follow(dule_label) = error WITH VALUE UNDERSCORE UIDENT TYPE TILDE THEN STRUCT SPEC SEMI RPAREN REC RBRACKET RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIDENT LIBRARY LBRACE IN EQUAL EOF END ELSE DOT COLONGREATER COLONCOLON COLON BAR AND
follow(dule) = error WITH UIDENT TILDE STRUCT SPEC SEMI RPAREN RBRACE MODULE MINUSGREATER LPAREN LOAD LINK LIBRARY LBRACE EOF END DOT COLONGREATER COLONCOLON COLON BAR AND
follow(def_sp) = error UIDENT SPEC MODULE LIBRARY EOF END AND
follow(def_dule) = error UIDENT SPEC MODULE LIBRARY EOF END AND
follow(declaration) = UNDERSCORE REC LIDENT LBRACE IN
follow(core) = #
follow(case_typ) = error RBRACKET BAR
follow(case_label) = error WITH VALUE UNFOLD UNDERSCORE UNDE UNCON UIDENT TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE MINUSGREATER MATCH MAP LPAREN LIDENT LET LBRACKET LBRACE INT IND IN IF FUN FOLD FAIL EOF END ELSE DOT DE CON COLON COIND BAR BACKQUOTE ASSERT
follow(case) = error RBRACKET BAR
follow(bb_item) = error VALUE TYPE END
follow(base_item) = error VALUE TYPE END
follow(argument) = error WITH VALUE UNDERSCORE TYPE TILDE THEN SEMI RPAREN REC RBRACKET RBRACE LPAREN LIDENT LBRACE IN EOF END ELSE DOT BAR
Built an LR(0) automaton with 315 states.
The grammar is not SLR(1) -- 29 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 531 states.
54 shift/reduce conflicts were silently solved.
Warning: 29 states have shift/reduce conflicts.
Warning: 2 states have reduce/reduce conflicts.
Warning: 63 shift/reduce conflicts were arbitrarily resolved.
Warning: 24 reduce/reduce conflicts were arbitrarily resolved.
192 out of 531 states have a default reduction.
275 out of 531 states are represented.
0 out of 137 symbols keep track of their start position.
0 out of 137 symbols keep track of their end position.
The action table is 43542 entries; 2476 non-zero; 2134 compressed.
The action table occupies roughly 4360 bytes.
The goto table is 28674 entries; 611 non-zero; 1025 compressed.
The goto table occupies roughly 2144 bytes.
The error table occupies roughly 5480 bytes.
The default_reduction table occupies roughly 568 bytes.
The lhs table occupies roughly 208 bytes.
The trace table occupies roughly 8 bytes.
