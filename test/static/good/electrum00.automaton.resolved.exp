State 0:
## Known stack suffix:
##
## LR(1) items:
file' -> . file [ # ]
## Transitions:
-- On MODULE shift to state 1
-- On specification shift to state 20
-- On option(module_decl) shift to state 22
-- On module_decl shift to state 371
-- On file shift to state 372
## Reductions:
-- On VAR reduce production option(module_decl) ->
-- On SOME reduce production option(module_decl) ->
-- On SIG reduce production option(module_decl) ->
-- On RUN reduce production option(module_decl) ->
-- On PRIVATE reduce production option(module_decl) ->
-- On PRED reduce production option(module_decl) ->
-- On OPEN reduce production option(module_decl) ->
-- On ONE reduce production option(module_decl) ->
-- On NICKNAME reduce production option(module_decl) ->
-- On LONE reduce production option(module_decl) ->
-- On FUN reduce production option(module_decl) ->
-- On FACT reduce production option(module_decl) ->
-- On EOF reduce production option(module_decl) ->
-- On ENUM reduce production option(module_decl) ->
-- On CHECK reduce production option(module_decl) ->
-- On ASSERT reduce production option(module_decl) ->
-- On ABSTRACT reduce production option(module_decl) ->

State 1:
## Known stack suffix:
## MODULE
## LR(1) items:
module_decl -> MODULE . qname loption(brackets(comma_sep1(param))) [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 9
## Reductions:

State 2:
## Known stack suffix:
## THIS
## LR(1) items:
qname -> THIS . SLASH separated_nonempty_list(SLASH,IDENT) [ VAR SOME SIG RUN RBRACKET PRIVATE PRED PLUS OPEN ONE NICKNAME LONE LBRACKET LBRACE FUN FOR FACT EXPECT EOF ENUM COMMA CHECK ASSERT AS ABSTRACT ]
## Transitions:
-- On SLASH shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## THIS SLASH
## LR(1) items:
qname -> THIS SLASH . separated_nonempty_list(SLASH,IDENT) [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 7
## Reductions:

State 4:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(SLASH,IDENT) -> IDENT . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
separated_nonempty_list(SLASH,IDENT) -> IDENT . SLASH separated_nonempty_list(SLASH,IDENT) [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
-- On SLASH shift to state 5
## Reductions:
-- On VAR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On UNTIL reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On UNIV reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On TILDE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On THIS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On STAR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SINCE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SIG reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RUN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RPROJ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RPAREN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RBRACKET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RBRACE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QSOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QNO reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QLONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QALL reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PRIVATE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PRIME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PREVIOUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PRED reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PLUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On OVERRIDE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On OR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On OPEN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONCE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NUMBER reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NOT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NO reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NICKNAME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NEXT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NEQ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MSOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MSET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MLONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MINUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LTE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LPROJ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LPAREN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LBRACKET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LBRACE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On INTER reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On INT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IMPLIES reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IFF reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IDENT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IDEN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On HISTORICALLY reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On GTE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On GT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On FUN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On FOR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On FACT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EXPECT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EVENTUALLY reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EQ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EOF reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ENUM reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ELSE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On DOT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On COMMA reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On CHECK reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On CARET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On CARD reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On BAR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On AT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ASSERT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On AS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On AND reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ALWAYS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ABSTRACT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT

State 5:
## Known stack suffix:
## IDENT SLASH
## LR(1) items:
separated_nonempty_list(SLASH,IDENT) -> IDENT SLASH . separated_nonempty_list(SLASH,IDENT) [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## IDENT SLASH separated_nonempty_list(SLASH,IDENT)
## LR(1) items:
separated_nonempty_list(SLASH,IDENT) -> IDENT SLASH separated_nonempty_list(SLASH,IDENT) . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT SLASH separated_nonempty_list(SLASH,IDENT)

State 7:
## Known stack suffix:
## THIS SLASH separated_nonempty_list(SLASH,IDENT)
## LR(1) items:
qname -> THIS SLASH separated_nonempty_list(SLASH,IDENT) . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qname -> THIS SLASH separated_nonempty_list(SLASH,IDENT)

State 8:
## Known stack suffix:
## separated_nonempty_list(SLASH,IDENT)
## LR(1) items:
qname -> separated_nonempty_list(SLASH,IDENT) . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR OPEN ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AS AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qname -> separated_nonempty_list(SLASH,IDENT)

State 9:
## Known stack suffix:
## MODULE qname
## LR(1) items:
module_decl -> MODULE qname . loption(brackets(comma_sep1(param))) [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACKET shift to state 10
-- On loption(brackets(comma_sep1(param))) shift to state 19
## Reductions:
-- On VAR reduce production loption(brackets(comma_sep1(param))) ->
-- On SOME reduce production loption(brackets(comma_sep1(param))) ->
-- On SIG reduce production loption(brackets(comma_sep1(param))) ->
-- On RUN reduce production loption(brackets(comma_sep1(param))) ->
-- On PRIVATE reduce production loption(brackets(comma_sep1(param))) ->
-- On PRED reduce production loption(brackets(comma_sep1(param))) ->
-- On OPEN reduce production loption(brackets(comma_sep1(param))) ->
-- On ONE reduce production loption(brackets(comma_sep1(param))) ->
-- On NICKNAME reduce production loption(brackets(comma_sep1(param))) ->
-- On LONE reduce production loption(brackets(comma_sep1(param))) ->
-- On FUN reduce production loption(brackets(comma_sep1(param))) ->
-- On FACT reduce production loption(brackets(comma_sep1(param))) ->
-- On EOF reduce production loption(brackets(comma_sep1(param))) ->
-- On ENUM reduce production loption(brackets(comma_sep1(param))) ->
-- On CHECK reduce production loption(brackets(comma_sep1(param))) ->
-- On ASSERT reduce production loption(brackets(comma_sep1(param))) ->
-- On ABSTRACT reduce production loption(brackets(comma_sep1(param))) ->

State 10:
## Known stack suffix:
## LBRACKET
## LR(1) items:
loption(brackets(comma_sep1(param))) -> LBRACKET . separated_nonempty_list(COMMA,param) RBRACKET [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On EXACTLY shift to state 11
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,param) shift to state 13
-- On qname shift to state 15
-- On param shift to state 16
## Reductions:

State 11:
## Known stack suffix:
## EXACTLY
## LR(1) items:
param -> EXACTLY . qname [ RBRACKET COMMA ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## EXACTLY qname
## LR(1) items:
param -> EXACTLY qname . [ RBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param -> EXACTLY qname

State 13:
## Known stack suffix:
## LBRACKET separated_nonempty_list(COMMA,param)
## LR(1) items:
loption(brackets(comma_sep1(param))) -> LBRACKET separated_nonempty_list(COMMA,param) . RBRACKET [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On RBRACKET shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## LBRACKET separated_nonempty_list(COMMA,param) RBRACKET
## LR(1) items:
loption(brackets(comma_sep1(param))) -> LBRACKET separated_nonempty_list(COMMA,param) RBRACKET . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(brackets(comma_sep1(param))) -> LBRACKET separated_nonempty_list(COMMA,param) RBRACKET

State 15:
## Known stack suffix:
## qname
## LR(1) items:
param -> qname . [ RBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param -> qname

State 16:
## Known stack suffix:
## param
## LR(1) items:
separated_nonempty_list(COMMA,param) -> param . [ RBRACKET ]
separated_nonempty_list(COMMA,param) -> param . COMMA separated_nonempty_list(COMMA,param) [ RBRACKET ]
## Transitions:
-- On COMMA shift to state 17
## Reductions:
-- On RBRACKET reduce production separated_nonempty_list(COMMA,param) -> param

State 17:
## Known stack suffix:
## param COMMA
## LR(1) items:
separated_nonempty_list(COMMA,param) -> param COMMA . separated_nonempty_list(COMMA,param) [ RBRACKET ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On EXACTLY shift to state 11
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,param) shift to state 18
-- On qname shift to state 15
-- On param shift to state 16
## Reductions:

State 18:
## Known stack suffix:
## param COMMA separated_nonempty_list(COMMA,param)
## LR(1) items:
separated_nonempty_list(COMMA,param) -> param COMMA separated_nonempty_list(COMMA,param) . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,param) -> param COMMA separated_nonempty_list(COMMA,param)

State 19:
## Known stack suffix:
## MODULE qname loption(brackets(comma_sep1(param)))
## LR(1) items:
module_decl -> MODULE qname loption(brackets(comma_sep1(param))) . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_decl -> MODULE qname loption(brackets(comma_sep1(param)))

State 20:
## Known stack suffix:
## specification
## LR(1) items:
file -> specification . EOF [ # ]
## Transitions:
-- On EOF shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## specification EOF
## LR(1) items:
file -> specification EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production file -> specification EOF

State 22:
## Known stack suffix:
## option(module_decl)
## LR(1) items:
specification -> option(module_decl) . list(import) list(paragraph_or_cmd) [ EOF ]
## Transitions:
-- On OPEN shift to state 23
-- On list(import) shift to state 36
-- On import shift to state 369
## Reductions:
-- On VAR reduce production list(import) ->
-- On SOME reduce production list(import) ->
-- On SIG reduce production list(import) ->
-- On RUN reduce production list(import) ->
-- On PRIVATE reduce production list(import) ->
-- On PRED reduce production list(import) ->
-- On ONE reduce production list(import) ->
-- On NICKNAME reduce production list(import) ->
-- On LONE reduce production list(import) ->
-- On FUN reduce production list(import) ->
-- On FACT reduce production list(import) ->
-- On EOF reduce production list(import) ->
-- On ENUM reduce production list(import) ->
-- On CHECK reduce production list(import) ->
-- On ASSERT reduce production list(import) ->
-- On ABSTRACT reduce production list(import) ->

State 23:
## Known stack suffix:
## OPEN
## LR(1) items:
import -> OPEN . qname loption(brackets(comma_sep1(qname))) option(punning) [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## OPEN qname
## LR(1) items:
import -> OPEN qname . loption(brackets(comma_sep1(qname))) option(punning) [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACKET shift to state 25
-- On loption(brackets(comma_sep1(qname))) shift to state 31
## Reductions:
-- On VAR reduce production loption(brackets(comma_sep1(qname))) ->
-- On SOME reduce production loption(brackets(comma_sep1(qname))) ->
-- On SIG reduce production loption(brackets(comma_sep1(qname))) ->
-- On RUN reduce production loption(brackets(comma_sep1(qname))) ->
-- On PRIVATE reduce production loption(brackets(comma_sep1(qname))) ->
-- On PRED reduce production loption(brackets(comma_sep1(qname))) ->
-- On OPEN reduce production loption(brackets(comma_sep1(qname))) ->
-- On ONE reduce production loption(brackets(comma_sep1(qname))) ->
-- On NICKNAME reduce production loption(brackets(comma_sep1(qname))) ->
-- On LONE reduce production loption(brackets(comma_sep1(qname))) ->
-- On FUN reduce production loption(brackets(comma_sep1(qname))) ->
-- On FACT reduce production loption(brackets(comma_sep1(qname))) ->
-- On EOF reduce production loption(brackets(comma_sep1(qname))) ->
-- On ENUM reduce production loption(brackets(comma_sep1(qname))) ->
-- On CHECK reduce production loption(brackets(comma_sep1(qname))) ->
-- On ASSERT reduce production loption(brackets(comma_sep1(qname))) ->
-- On AS reduce production loption(brackets(comma_sep1(qname))) ->
-- On ABSTRACT reduce production loption(brackets(comma_sep1(qname))) ->

State 25:
## Known stack suffix:
## LBRACKET
## LR(1) items:
loption(brackets(comma_sep1(qname))) -> LBRACKET . separated_nonempty_list(COMMA,qname) RBRACKET [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT AS ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,qname) shift to state 26
-- On qname shift to state 28
## Reductions:

State 26:
## Known stack suffix:
## LBRACKET separated_nonempty_list(COMMA,qname)
## LR(1) items:
loption(brackets(comma_sep1(qname))) -> LBRACKET separated_nonempty_list(COMMA,qname) . RBRACKET [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT AS ABSTRACT ]
## Transitions:
-- On RBRACKET shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## LBRACKET separated_nonempty_list(COMMA,qname) RBRACKET
## LR(1) items:
loption(brackets(comma_sep1(qname))) -> LBRACKET separated_nonempty_list(COMMA,qname) RBRACKET . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT AS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(brackets(comma_sep1(qname))) -> LBRACKET separated_nonempty_list(COMMA,qname) RBRACKET

State 28:
## Known stack suffix:
## qname
## LR(1) items:
separated_nonempty_list(COMMA,qname) -> qname . [ RBRACKET ]
separated_nonempty_list(COMMA,qname) -> qname . COMMA separated_nonempty_list(COMMA,qname) [ RBRACKET ]
## Transitions:
-- On COMMA shift to state 29
## Reductions:
-- On RBRACKET reduce production separated_nonempty_list(COMMA,qname) -> qname

State 29:
## Known stack suffix:
## qname COMMA
## LR(1) items:
separated_nonempty_list(COMMA,qname) -> qname COMMA . separated_nonempty_list(COMMA,qname) [ RBRACKET ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,qname) shift to state 30
-- On qname shift to state 28
## Reductions:

State 30:
## Known stack suffix:
## qname COMMA separated_nonempty_list(COMMA,qname)
## LR(1) items:
separated_nonempty_list(COMMA,qname) -> qname COMMA separated_nonempty_list(COMMA,qname) . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,qname) -> qname COMMA separated_nonempty_list(COMMA,qname)

State 31:
## Known stack suffix:
## OPEN qname loption(brackets(comma_sep1(qname)))
## LR(1) items:
import -> OPEN qname loption(brackets(comma_sep1(qname))) . option(punning) [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On AS shift to state 32
-- On punning shift to state 34
-- On option(punning) shift to state 35
## Reductions:
-- On VAR reduce production option(punning) ->
-- On SOME reduce production option(punning) ->
-- On SIG reduce production option(punning) ->
-- On RUN reduce production option(punning) ->
-- On PRIVATE reduce production option(punning) ->
-- On PRED reduce production option(punning) ->
-- On OPEN reduce production option(punning) ->
-- On ONE reduce production option(punning) ->
-- On NICKNAME reduce production option(punning) ->
-- On LONE reduce production option(punning) ->
-- On FUN reduce production option(punning) ->
-- On FACT reduce production option(punning) ->
-- On EOF reduce production option(punning) ->
-- On ENUM reduce production option(punning) ->
-- On CHECK reduce production option(punning) ->
-- On ASSERT reduce production option(punning) ->
-- On ABSTRACT reduce production option(punning) ->

State 32:
## Known stack suffix:
## AS
## LR(1) items:
punning -> AS . IDENT [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## AS IDENT
## LR(1) items:
punning -> AS IDENT . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production punning -> AS IDENT

State 34:
## Known stack suffix:
## punning
## LR(1) items:
option(punning) -> punning . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(punning) -> punning

State 35:
## Known stack suffix:
## OPEN qname loption(brackets(comma_sep1(qname))) option(punning)
## LR(1) items:
import -> OPEN qname loption(brackets(comma_sep1(qname))) option(punning) . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import -> OPEN qname loption(brackets(comma_sep1(qname))) option(punning)

State 36:
## Known stack suffix:
## option(module_decl) list(import)
## LR(1) items:
specification -> option(module_decl) list(import) . list(paragraph_or_cmd) [ EOF ]
## Transitions:
-- On VAR shift to state 37
-- On SOME shift to state 38
-- On PRIVATE shift to state 287
-- On ONE shift to state 40
-- On NICKNAME shift to state 288
-- On LONE shift to state 42
-- On FACT shift to state 290
-- On ENUM shift to state 294
-- On ASSERT shift to state 299
-- On ABSTRACT shift to state 44
-- On sigQual shift to state 302
-- On sigDecl shift to state 310
-- On predDecl shift to state 311
-- On paragraph_or_cmd shift to state 312
-- On paragraph shift to state 313
-- On option(first(NICKNAME,COLON)) shift to state 314
-- On option(PRIVATE) shift to state 341
-- On named_cmd shift to state 356
-- On list(paragraph_or_cmd) shift to state 368
-- On funDecl shift to state 360
-- On factDecl shift to state 361
-- On enumDecl shift to state 362
-- On cmd shift to state 363
-- On block_cmd shift to state 364
-- On assertDecl shift to state 367
## Reductions:
-- On SIG reduce production sigQual ->
-- On RUN reduce production option(first(NICKNAME,COLON)) ->
-- On PRED reduce production option(PRIVATE) ->
-- On FUN reduce production option(PRIVATE) ->
-- On EOF reduce production list(paragraph_or_cmd) ->
-- On CHECK reduce production option(first(NICKNAME,COLON)) ->

State 37:
## Known stack suffix:
## VAR
## LR(1) items:
sigDecl -> VAR . sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On SOME shift to state 38
-- On ONE shift to state 40
-- On LONE shift to state 42
-- On ABSTRACT shift to state 44
-- On sigQual shift to state 48
## Reductions:
-- On SIG reduce production sigQual ->

State 38:
## Known stack suffix:
## SOME
## LR(1) items:
sigQual -> SOME . [ SIG ]
sigQual -> SOME . ABSTRACT [ SIG ]
## Transitions:
-- On ABSTRACT shift to state 39
## Reductions:
-- On SIG reduce production sigQual -> SOME

State 39:
## Known stack suffix:
## SOME ABSTRACT
## LR(1) items:
sigQual -> SOME ABSTRACT . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> SOME ABSTRACT

State 40:
## Known stack suffix:
## ONE
## LR(1) items:
sigQual -> ONE . [ SIG ]
sigQual -> ONE . ABSTRACT [ SIG ]
## Transitions:
-- On ABSTRACT shift to state 41
## Reductions:
-- On SIG reduce production sigQual -> ONE

State 41:
## Known stack suffix:
## ONE ABSTRACT
## LR(1) items:
sigQual -> ONE ABSTRACT . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> ONE ABSTRACT

State 42:
## Known stack suffix:
## LONE
## LR(1) items:
sigQual -> LONE . [ SIG ]
sigQual -> LONE . ABSTRACT [ SIG ]
## Transitions:
-- On ABSTRACT shift to state 43
## Reductions:
-- On SIG reduce production sigQual -> LONE

State 43:
## Known stack suffix:
## LONE ABSTRACT
## LR(1) items:
sigQual -> LONE ABSTRACT . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> LONE ABSTRACT

State 44:
## Known stack suffix:
## ABSTRACT
## LR(1) items:
sigQual -> ABSTRACT . [ SIG ]
sigQual -> ABSTRACT . LONE [ SIG ]
sigQual -> ABSTRACT . ONE [ SIG ]
sigQual -> ABSTRACT . SOME [ SIG ]
## Transitions:
-- On SOME shift to state 45
-- On ONE shift to state 46
-- On LONE shift to state 47
## Reductions:
-- On SIG reduce production sigQual -> ABSTRACT

State 45:
## Known stack suffix:
## ABSTRACT SOME
## LR(1) items:
sigQual -> ABSTRACT SOME . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> ABSTRACT SOME

State 46:
## Known stack suffix:
## ABSTRACT ONE
## LR(1) items:
sigQual -> ABSTRACT ONE . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> ABSTRACT ONE

State 47:
## Known stack suffix:
## ABSTRACT LONE
## LR(1) items:
sigQual -> ABSTRACT LONE . [ SIG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigQual -> ABSTRACT LONE

State 48:
## Known stack suffix:
## VAR sigQual
## LR(1) items:
sigDecl -> VAR sigQual . SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On SIG shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## VAR sigQual SIG
## LR(1) items:
sigDecl -> VAR sigQual SIG . separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 53
## Reductions:

State 50:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ RBRACE LBRACE IN EXTENDS COLON ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ RBRACE LBRACE IN EXTENDS COLON ]
## Transitions:
-- On COMMA shift to state 51
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT
-- On LBRACE reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT
-- On IN reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT
-- On EXTENDS reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT
-- On COLON reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT

State 51:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA . separated_nonempty_list(COMMA,IDENT) [ RBRACE LBRACE IN EXTENDS COLON ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## IDENT COMMA separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT) . [ RBRACE LBRACE IN EXTENDS COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT)

State 53:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) . option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IN shift to state 54
-- On EXTENDS shift to state 59
-- On sigExt shift to state 61
-- On option(sigExt) shift to state 62
## Reductions:
-- On LBRACE reduce production option(sigExt) ->

State 54:
## Known stack suffix:
## IN
## LR(1) items:
sigExt -> IN . separated_nonempty_list(PLUS,qname) [ LBRACE ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(PLUS,qname) shift to state 55
-- On qname shift to state 56
## Reductions:

State 55:
## Known stack suffix:
## IN separated_nonempty_list(PLUS,qname)
## LR(1) items:
sigExt -> IN separated_nonempty_list(PLUS,qname) . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigExt -> IN separated_nonempty_list(PLUS,qname)

State 56:
## Known stack suffix:
## qname
## LR(1) items:
separated_nonempty_list(PLUS,qname) -> qname . [ LBRACE ]
separated_nonempty_list(PLUS,qname) -> qname . PLUS separated_nonempty_list(PLUS,qname) [ LBRACE ]
## Transitions:
-- On PLUS shift to state 57
## Reductions:
-- On LBRACE reduce production separated_nonempty_list(PLUS,qname) -> qname

State 57:
## Known stack suffix:
## qname PLUS
## LR(1) items:
separated_nonempty_list(PLUS,qname) -> qname PLUS . separated_nonempty_list(PLUS,qname) [ LBRACE ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(PLUS,qname) shift to state 58
-- On qname shift to state 56
## Reductions:

State 58:
## Known stack suffix:
## qname PLUS separated_nonempty_list(PLUS,qname)
## LR(1) items:
separated_nonempty_list(PLUS,qname) -> qname PLUS separated_nonempty_list(PLUS,qname) . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(PLUS,qname) -> qname PLUS separated_nonempty_list(PLUS,qname)

State 59:
## Known stack suffix:
## EXTENDS
## LR(1) items:
sigExt -> EXTENDS . qname [ LBRACE ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## EXTENDS qname
## LR(1) items:
sigExt -> EXTENDS qname . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigExt -> EXTENDS qname

State 61:
## Known stack suffix:
## sigExt
## LR(1) items:
option(sigExt) -> sigExt . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(sigExt) -> sigExt

State 62:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt)
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) . LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE . right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On right_flexible_list(COMMA,decl) shift to state 280
-- On decl shift to state 284
## Reductions:
-- On RBRACE reduce production right_flexible_list(COMMA,decl) ->

State 64:
## Known stack suffix:
## VAR
## LR(1) items:
decl -> VAR . separated_nonempty_list(COMMA,IDENT) COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR . separated_nonempty_list(COMMA,IDENT) COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR . DISJ separated_nonempty_list(COMMA,IDENT) COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR . DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On IDENT shift to state 50
-- On DISJ shift to state 65
-- On separated_nonempty_list(COMMA,IDENT) shift to state 275
## Reductions:

State 65:
## Known stack suffix:
## VAR DISJ
## LR(1) items:
decl -> VAR DISJ . separated_nonempty_list(COMMA,IDENT) COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR DISJ . separated_nonempty_list(COMMA,IDENT) COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## VAR DISJ separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) . COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) . COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On COLON shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON
## LR(1) items:
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON . DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On DISJ shift to state 272
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 274
-- On block shift to state 169
## Reductions:

State 68:
## Known stack suffix:
## UNIV
## LR(1) items:
prim_expr -> UNIV . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> UNIV

State 69:
## Known stack suffix:
## TILDE
## LR(1) items:
prim_expr -> TILDE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 271
-- On block shift to state 169
## Reductions:

State 70:
## Known stack suffix:
## THIS
## LR(1) items:
prim_expr -> THIS . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
qname -> THIS . SLASH separated_nonempty_list(SLASH,IDENT) [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SLASH shift to state 3
## Reductions:
-- On VAR reduce production prim_expr -> THIS
-- On UNTIL reduce production prim_expr -> THIS
-- On UNIV reduce production prim_expr -> THIS
-- On TILDE reduce production prim_expr -> THIS
-- On THIS reduce production prim_expr -> THIS
-- On STAR reduce production prim_expr -> THIS
-- On SOME_ARROW_SOME reduce production prim_expr -> THIS
-- On SOME_ARROW_SET reduce production prim_expr -> THIS
-- On SOME_ARROW_ONE reduce production prim_expr -> THIS
-- On SOME_ARROW_LONE reduce production prim_expr -> THIS
-- On SOME reduce production prim_expr -> THIS
-- On SINCE reduce production prim_expr -> THIS
-- On SIG reduce production prim_expr -> THIS
-- On SET_ARROW_SOME reduce production prim_expr -> THIS
-- On SET_ARROW_SET reduce production prim_expr -> THIS
-- On SET_ARROW_ONE reduce production prim_expr -> THIS
-- On SET_ARROW_LONE reduce production prim_expr -> THIS
-- On RUN reduce production prim_expr -> THIS
-- On RPROJ reduce production prim_expr -> THIS
-- On RPAREN reduce production prim_expr -> THIS
-- On RBRACKET reduce production prim_expr -> THIS
-- On RBRACE reduce production prim_expr -> THIS
-- On QSOME reduce production prim_expr -> THIS
-- On QONE reduce production prim_expr -> THIS
-- On QNO reduce production prim_expr -> THIS
-- On QLONE reduce production prim_expr -> THIS
-- On QALL reduce production prim_expr -> THIS
-- On PRIVATE reduce production prim_expr -> THIS
-- On PRIME reduce production prim_expr -> THIS
-- On PREVIOUS reduce production prim_expr -> THIS
-- On PRED reduce production prim_expr -> THIS
-- On PLUS reduce production prim_expr -> THIS
-- On OVERRIDE reduce production prim_expr -> THIS
-- On OR reduce production prim_expr -> THIS
-- On ONE_ARROW_SOME reduce production prim_expr -> THIS
-- On ONE_ARROW_SET reduce production prim_expr -> THIS
-- On ONE_ARROW_ONE reduce production prim_expr -> THIS
-- On ONE_ARROW_LONE reduce production prim_expr -> THIS
-- On ONE reduce production prim_expr -> THIS
-- On ONCE reduce production prim_expr -> THIS
-- On NUMBER reduce production prim_expr -> THIS
-- On NOT reduce production prim_expr -> THIS
-- On NONE reduce production prim_expr -> THIS
-- On NO reduce production prim_expr -> THIS
-- On NICKNAME reduce production prim_expr -> THIS
-- On NEXT reduce production prim_expr -> THIS
-- On NEQ reduce production prim_expr -> THIS
-- On MSOME reduce production prim_expr -> THIS
-- On MSET reduce production prim_expr -> THIS
-- On MONE reduce production prim_expr -> THIS
-- On MLONE reduce production prim_expr -> THIS
-- On MINUS reduce production prim_expr -> THIS
-- On LTE reduce production prim_expr -> THIS
-- On LT reduce production prim_expr -> THIS
-- On LPROJ reduce production prim_expr -> THIS
-- On LPAREN reduce production prim_expr -> THIS
-- On LONE_ARROW_SOME reduce production prim_expr -> THIS
-- On LONE_ARROW_SET reduce production prim_expr -> THIS
-- On LONE_ARROW_ONE reduce production prim_expr -> THIS
-- On LONE_ARROW_LONE reduce production prim_expr -> THIS
-- On LONE reduce production prim_expr -> THIS
-- On LET reduce production prim_expr -> THIS
-- On LBRACKET reduce production prim_expr -> THIS
-- On LBRACE reduce production prim_expr -> THIS
-- On INTER reduce production prim_expr -> THIS
-- On INT reduce production prim_expr -> THIS
-- On IN reduce production prim_expr -> THIS
-- On IMPLIES reduce production prim_expr -> THIS
-- On IFF reduce production prim_expr -> THIS
-- On IDENT reduce production prim_expr -> THIS
-- On IDEN reduce production prim_expr -> THIS
-- On HISTORICALLY reduce production prim_expr -> THIS
-- On GTE reduce production prim_expr -> THIS
-- On GT reduce production prim_expr -> THIS
-- On FUN reduce production prim_expr -> THIS
-- On FACT reduce production prim_expr -> THIS
-- On EVENTUALLY reduce production prim_expr -> THIS
-- On EQ reduce production prim_expr -> THIS
-- On EOF reduce production prim_expr -> THIS
-- On ENUM reduce production prim_expr -> THIS
-- On ELSE reduce production prim_expr -> THIS
-- On DOT reduce production prim_expr -> THIS
-- On COMMA reduce production prim_expr -> THIS
-- On CHECK reduce production prim_expr -> THIS
-- On CARET reduce production prim_expr -> THIS
-- On CARD reduce production prim_expr -> THIS
-- On BAR reduce production prim_expr -> THIS
-- On AT reduce production prim_expr -> THIS
-- On ASSERT reduce production prim_expr -> THIS
-- On AND reduce production prim_expr -> THIS
-- On ALWAYS reduce production prim_expr -> THIS
-- On ABSTRACT reduce production prim_expr -> THIS

State 71:
## Known stack suffix:
## STAR
## LR(1) items:
prim_expr -> STAR . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 270
-- On block shift to state 169
## Reductions:

State 72:
## Known stack suffix:
## SOME
## LR(1) items:
prim_expr -> SOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 269
-- On block shift to state 169
## Reductions:

State 73:
## Known stack suffix:
## QSOME
## LR(1) items:
prim_expr -> QSOME . separated_nonempty_list(COMMA,decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 267
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 74:
## Known stack suffix:
## DISJ
## LR(1) items:
decl -> DISJ . separated_nonempty_list(COMMA,IDENT) COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> DISJ . separated_nonempty_list(COMMA,IDENT) COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## DISJ separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
decl -> DISJ separated_nonempty_list(COMMA,IDENT) . COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> DISJ separated_nonempty_list(COMMA,IDENT) . COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On COLON shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## DISJ separated_nonempty_list(COMMA,IDENT) COLON
## LR(1) items:
decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON . DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On DISJ shift to state 264
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 266
-- On block shift to state 169
## Reductions:

State 77:
## Known stack suffix:
## QONE
## LR(1) items:
prim_expr -> QONE . separated_nonempty_list(COMMA,decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 78
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 78:
## Known stack suffix:
## QONE separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> QONE separated_nonempty_list(COMMA,decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 263
-- On block shift to state 86
## Reductions:

State 79:
## Known stack suffix:
## LBRACE
## LR(1) items:
block -> LBRACE . list(expr) RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On list(expr) shift to state 232
-- On expr shift to state 234
-- On block shift to state 169
## Reductions:
-- On RBRACE reduce production list(expr) ->

State 80:
## Known stack suffix:
## QNO
## LR(1) items:
prim_expr -> QNO . separated_nonempty_list(COMMA,decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 81
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 81:
## Known stack suffix:
## QNO separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> QNO separated_nonempty_list(COMMA,decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 262
-- On block shift to state 86
## Reductions:

State 82:
## Known stack suffix:
## BAR
## LR(1) items:
block_or_bar -> BAR . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 261
-- On block shift to state 169
## Reductions:

State 83:
## Known stack suffix:
## QLONE
## LR(1) items:
prim_expr -> QLONE . separated_nonempty_list(COMMA,decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 84
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 84:
## Known stack suffix:
## QLONE separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> QLONE separated_nonempty_list(COMMA,decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 85
-- On block shift to state 86
## Reductions:

State 85:
## Known stack suffix:
## QLONE separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> QLONE separated_nonempty_list(COMMA,decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> QLONE separated_nonempty_list(COMMA,decl) block_or_bar

State 86:
## Known stack suffix:
## block
## LR(1) items:
block_or_bar -> block . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_or_bar -> block

State 87:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
decl -> separated_nonempty_list(COMMA,IDENT) . COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> separated_nonempty_list(COMMA,IDENT) . COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On COLON shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON
## LR(1) items:
decl -> separated_nonempty_list(COMMA,IDENT) COLON . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> separated_nonempty_list(COMMA,IDENT) COLON . DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On DISJ shift to state 258
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 260
-- On block shift to state 169
## Reductions:

State 89:
## Known stack suffix:
## QALL
## LR(1) items:
prim_expr -> QALL . separated_nonempty_list(COMMA,decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 90
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 90:
## Known stack suffix:
## QALL separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> QALL separated_nonempty_list(COMMA,decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 91
-- On block shift to state 86
## Reductions:

State 91:
## Known stack suffix:
## QALL separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> QALL separated_nonempty_list(COMMA,decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> QALL separated_nonempty_list(COMMA,decl) block_or_bar

State 92:
## Known stack suffix:
## decl
## LR(1) items:
separated_nonempty_list(COMMA,decl) -> decl . [ RBRACKET LBRACE BAR ]
separated_nonempty_list(COMMA,decl) -> decl . COMMA separated_nonempty_list(COMMA,decl) [ RBRACKET LBRACE BAR ]
## Transitions:
-- On COMMA shift to state 93
## Reductions:
-- On RBRACKET reduce production separated_nonempty_list(COMMA,decl) -> decl
-- On LBRACE reduce production separated_nonempty_list(COMMA,decl) -> decl
-- On BAR reduce production separated_nonempty_list(COMMA,decl) -> decl

State 93:
## Known stack suffix:
## decl COMMA
## LR(1) items:
separated_nonempty_list(COMMA,decl) -> decl COMMA . separated_nonempty_list(COMMA,decl) [ RBRACKET LBRACE BAR ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 94
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On decl shift to state 92
## Reductions:

State 94:
## Known stack suffix:
## decl COMMA separated_nonempty_list(COMMA,decl)
## LR(1) items:
separated_nonempty_list(COMMA,decl) -> decl COMMA separated_nonempty_list(COMMA,decl) . [ RBRACKET LBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,decl) -> decl COMMA separated_nonempty_list(COMMA,decl)

State 95:
## Known stack suffix:
## PREVIOUS
## LR(1) items:
prim_expr -> PREVIOUS . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 257
-- On block shift to state 169
## Reductions:

State 96:
## Known stack suffix:
## ONE
## LR(1) items:
prim_expr -> ONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 256
-- On block shift to state 169
## Reductions:

State 97:
## Known stack suffix:
## ONCE
## LR(1) items:
prim_expr -> ONCE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 255
-- On block shift to state 169
## Reductions:

State 98:
## Known stack suffix:
## NUMBER
## LR(1) items:
prim_expr -> NUMBER . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> NUMBER

State 99:
## Known stack suffix:
## NOT
## LR(1) items:
prim_expr -> NOT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 236
-- On block shift to state 169
## Reductions:

State 100:
## Known stack suffix:
## NONE
## LR(1) items:
prim_expr -> NONE . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> NONE

State 101:
## Known stack suffix:
## NO
## LR(1) items:
prim_expr -> NO . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 254
-- On block shift to state 169
## Reductions:

State 102:
## Known stack suffix:
## NEXT
## LR(1) items:
prim_expr -> NEXT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 253
-- On block shift to state 169
## Reductions:

State 103:
## Known stack suffix:
## MSOME
## LR(1) items:
prim_expr -> MSOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 252
-- On block shift to state 169
## Reductions:

State 104:
## Known stack suffix:
## MSET
## LR(1) items:
prim_expr -> MSET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 251
-- On block shift to state 169
## Reductions:

State 105:
## Known stack suffix:
## MONE
## LR(1) items:
prim_expr -> MONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 250
-- On block shift to state 169
## Reductions:

State 106:
## Known stack suffix:
## MLONE
## LR(1) items:
prim_expr -> MLONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 249
-- On block shift to state 169
## Reductions:

State 107:
## Known stack suffix:
## MINUS
## LR(1) items:
prim_expr -> MINUS . NUMBER [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## MINUS NUMBER
## LR(1) items:
prim_expr -> MINUS NUMBER . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> MINUS NUMBER

State 109:
## Known stack suffix:
## LPAREN
## LR(1) items:
expr -> LPAREN . expr RPAREN [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 247
-- On block shift to state 169
## Reductions:

State 110:
## Known stack suffix:
## LONE
## LR(1) items:
prim_expr -> LONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 246
-- On block shift to state 169
## Reductions:

State 111:
## Known stack suffix:
## LET
## LR(1) items:
prim_expr -> LET . separated_nonempty_list(COMMA,let_decl) block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On IDENT shift to state 112
-- On separated_nonempty_list(COMMA,let_decl) shift to state 241
-- On let_decl shift to state 243
## Reductions:

State 112:
## Known stack suffix:
## IDENT
## LR(1) items:
let_decl -> IDENT . EQ expr [ LBRACE COMMA BAR ]
## Transitions:
-- On EQ shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## IDENT EQ
## LR(1) items:
let_decl -> IDENT EQ . expr [ LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 240
-- On block shift to state 169
## Reductions:

State 114:
## Known stack suffix:
## LBRACE
## LR(1) items:
block -> LBRACE . list(expr) RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> LBRACE . separated_nonempty_list(COMMA,decl) block_or_bar RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 116
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On DISJ shift to state 74
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,decl) shift to state 229
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On list(expr) shift to state 232
-- On expr shift to state 234
-- On decl shift to state 92
-- On block shift to state 169
## Reductions:
-- On RBRACE reduce production list(expr) ->

State 115:
## Known stack suffix:
## INT
## LR(1) items:
prim_expr -> INT . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> INT

State 116:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ COLON ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ COLON ]
separated_nonempty_list(SLASH,IDENT) -> IDENT . [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
separated_nonempty_list(SLASH,IDENT) -> IDENT . SLASH separated_nonempty_list(SLASH,IDENT) [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
## Transitions:
-- On SLASH shift to state 5
-- On COMMA shift to state 51
## Reductions:
-- On UNTIL reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On UNIV reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On TILDE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On THIS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On STAR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SINCE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On SET_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RPROJ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On RBRACE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QSOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QNO reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QLONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On QALL reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PRIME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PREVIOUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On PLUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On OVERRIDE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On OR reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ONCE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NUMBER reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NOT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NO reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NEXT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On NEQ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MSOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MSET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MLONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On MINUS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LTE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LPROJ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LPAREN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_SOME reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_SET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_ONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE_ARROW_LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LONE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LBRACKET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On LBRACE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On INTER reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On INT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IMPLIES reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IFF reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IDENT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On IDEN reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On HISTORICALLY reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On GTE reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On GT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EVENTUALLY reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On EQ reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On DOT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On COLON reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT
-- On CARET reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On CARD reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On AT reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On AND reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT
-- On ALWAYS reduce production separated_nonempty_list(SLASH,IDENT) -> IDENT

State 117:
## Known stack suffix:
## IDEN
## LR(1) items:
prim_expr -> IDEN . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> IDEN

State 118:
## Known stack suffix:
## HISTORICALLY
## LR(1) items:
prim_expr -> HISTORICALLY . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 228
-- On block shift to state 169
## Reductions:

State 119:
## Known stack suffix:
## EVENTUALLY
## LR(1) items:
prim_expr -> EVENTUALLY . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 227
-- On block shift to state 169
## Reductions:

State 120:
## Known stack suffix:
## CARET
## LR(1) items:
prim_expr -> CARET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 226
-- On block shift to state 169
## Reductions:

State 121:
## Known stack suffix:
## CARD
## LR(1) items:
prim_expr -> CARD . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 225
-- On block shift to state 169
## Reductions:

State 122:
## Known stack suffix:
## AT
## LR(1) items:
prim_expr -> AT . IDENT [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On IDENT shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## AT IDENT
## LR(1) items:
prim_expr -> AT IDENT . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> AT IDENT

State 124:
## Known stack suffix:
## ALWAYS
## LR(1) items:
prim_expr -> ALWAYS . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 127
-- On block shift to state 169
## Reductions:

State 125:
## Known stack suffix:
## qname
## LR(1) items:
prim_expr -> qname . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> qname

State 126:
## Known stack suffix:
## prim_expr
## LR(1) items:
expr -> prim_expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> prim_expr

State 127:
## Known stack suffix:
## ALWAYS expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> ALWAYS expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> ALWAYS expr
-- On UNTIL reduce production prim_expr -> ALWAYS expr
-- On UNIV reduce production prim_expr -> ALWAYS expr
-- On TILDE reduce production prim_expr -> ALWAYS expr
-- On THIS reduce production prim_expr -> ALWAYS expr
-- On STAR reduce production prim_expr -> ALWAYS expr
-- On SOME reduce production prim_expr -> ALWAYS expr
-- On SINCE reduce production prim_expr -> ALWAYS expr
-- On SIG reduce production prim_expr -> ALWAYS expr
-- On RUN reduce production prim_expr -> ALWAYS expr
-- On RPAREN reduce production prim_expr -> ALWAYS expr
-- On RBRACKET reduce production prim_expr -> ALWAYS expr
-- On RBRACE reduce production prim_expr -> ALWAYS expr
-- On QSOME reduce production prim_expr -> ALWAYS expr
-- On QONE reduce production prim_expr -> ALWAYS expr
-- On QNO reduce production prim_expr -> ALWAYS expr
-- On QLONE reduce production prim_expr -> ALWAYS expr
-- On QALL reduce production prim_expr -> ALWAYS expr
-- On PRIVATE reduce production prim_expr -> ALWAYS expr
-- On PREVIOUS reduce production prim_expr -> ALWAYS expr
-- On PRED reduce production prim_expr -> ALWAYS expr
-- On OR reduce production prim_expr -> ALWAYS expr
-- On ONE reduce production prim_expr -> ALWAYS expr
-- On ONCE reduce production prim_expr -> ALWAYS expr
-- On NUMBER reduce production prim_expr -> ALWAYS expr
-- On NONE reduce production prim_expr -> ALWAYS expr
-- On NO reduce production prim_expr -> ALWAYS expr
-- On NICKNAME reduce production prim_expr -> ALWAYS expr
-- On NEXT reduce production prim_expr -> ALWAYS expr
-- On MSOME reduce production prim_expr -> ALWAYS expr
-- On MSET reduce production prim_expr -> ALWAYS expr
-- On MONE reduce production prim_expr -> ALWAYS expr
-- On MLONE reduce production prim_expr -> ALWAYS expr
-- On LPAREN reduce production prim_expr -> ALWAYS expr
-- On LONE reduce production prim_expr -> ALWAYS expr
-- On LET reduce production prim_expr -> ALWAYS expr
-- On LBRACE reduce production prim_expr -> ALWAYS expr
-- On INT reduce production prim_expr -> ALWAYS expr
-- On IMPLIES reduce production prim_expr -> ALWAYS expr
-- On IFF reduce production prim_expr -> ALWAYS expr
-- On IDENT reduce production prim_expr -> ALWAYS expr
-- On IDEN reduce production prim_expr -> ALWAYS expr
-- On HISTORICALLY reduce production prim_expr -> ALWAYS expr
-- On FUN reduce production prim_expr -> ALWAYS expr
-- On FACT reduce production prim_expr -> ALWAYS expr
-- On EVENTUALLY reduce production prim_expr -> ALWAYS expr
-- On EOF reduce production prim_expr -> ALWAYS expr
-- On ENUM reduce production prim_expr -> ALWAYS expr
-- On ELSE reduce production prim_expr -> ALWAYS expr
-- On COMMA reduce production prim_expr -> ALWAYS expr
-- On CHECK reduce production prim_expr -> ALWAYS expr
-- On CARET reduce production prim_expr -> ALWAYS expr
-- On CARD reduce production prim_expr -> ALWAYS expr
-- On BAR reduce production prim_expr -> ALWAYS expr
-- On AT reduce production prim_expr -> ALWAYS expr
-- On ASSERT reduce production prim_expr -> ALWAYS expr
-- On AND reduce production prim_expr -> ALWAYS expr
-- On ALWAYS reduce production prim_expr -> ALWAYS expr
-- On ABSTRACT reduce production prim_expr -> ALWAYS expr

State 128:
## Known stack suffix:
## expr SOME_ARROW_SOME
## LR(1) items:
prim_expr -> expr SOME_ARROW_SOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 129
-- On block shift to state 169
## Reductions:

State 129:
## Known stack suffix:
## expr SOME_ARROW_SOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SOME_ARROW_SOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On UNTIL reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On UNIV reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On TILDE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On THIS reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On STAR reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On SOME reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On SINCE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On SIG reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On RUN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On RPAREN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On RBRACKET reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On RBRACE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On QSOME reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On QONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On QNO reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On QLONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On QALL reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On PRIVATE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On PREVIOUS reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On PRED reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On PLUS reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On OVERRIDE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On OR reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ONCE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NUMBER reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NOT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NO reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NICKNAME reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NEXT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On NEQ reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On MSOME reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On MSET reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On MONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On MLONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On MINUS reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LTE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LPAREN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LONE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LET reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On LBRACE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On INTER reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On INT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On IN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On IMPLIES reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On IFF reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On IDENT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On IDEN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On HISTORICALLY reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On GTE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On GT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On FUN reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On FACT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On EVENTUALLY reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On EQ reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On EOF reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ENUM reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ELSE reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On COMMA reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On CHECK reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On CARET reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On CARD reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On BAR reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On AT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ASSERT reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On AND reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ALWAYS reduce production prim_expr -> expr SOME_ARROW_SOME expr
-- On ABSTRACT reduce production prim_expr -> expr SOME_ARROW_SOME expr

State 130:
## Known stack suffix:
## expr SOME_ARROW_SET
## LR(1) items:
prim_expr -> expr SOME_ARROW_SET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 131
-- On block shift to state 169
## Reductions:

State 131:
## Known stack suffix:
## expr SOME_ARROW_SET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SOME_ARROW_SET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On UNTIL reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On UNIV reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On TILDE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On THIS reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On STAR reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On SOME reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On SINCE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On SIG reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On RUN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On RPAREN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On RBRACKET reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On RBRACE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On QSOME reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On QONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On QNO reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On QLONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On QALL reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On PRIVATE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On PREVIOUS reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On PRED reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On PLUS reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On OVERRIDE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On OR reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ONCE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NUMBER reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NOT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NO reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NICKNAME reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NEXT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On NEQ reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On MSOME reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On MSET reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On MONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On MLONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On MINUS reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LTE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LPAREN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LONE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LET reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On LBRACE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On INTER reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On INT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On IN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On IMPLIES reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On IFF reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On IDENT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On IDEN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On HISTORICALLY reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On GTE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On GT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On FUN reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On FACT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On EVENTUALLY reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On EQ reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On EOF reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ENUM reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ELSE reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On COMMA reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On CHECK reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On CARET reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On CARD reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On BAR reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On AT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ASSERT reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On AND reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ALWAYS reduce production prim_expr -> expr SOME_ARROW_SET expr
-- On ABSTRACT reduce production prim_expr -> expr SOME_ARROW_SET expr

State 132:
## Known stack suffix:
## expr SOME_ARROW_ONE
## LR(1) items:
prim_expr -> expr SOME_ARROW_ONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 133
-- On block shift to state 169
## Reductions:

State 133:
## Known stack suffix:
## expr SOME_ARROW_ONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SOME_ARROW_ONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On UNTIL reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On UNIV reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On TILDE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On THIS reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On STAR reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On SOME reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On SINCE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On SIG reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On RUN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On RPAREN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On RBRACKET reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On RBRACE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On QSOME reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On QONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On QNO reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On QLONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On QALL reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On PRIVATE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On PREVIOUS reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On PRED reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On PLUS reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On OVERRIDE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On OR reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ONCE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NUMBER reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NOT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NO reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NICKNAME reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NEXT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On NEQ reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On MSOME reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On MSET reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On MONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On MLONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On MINUS reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LTE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LPAREN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LONE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LET reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On LBRACE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On INTER reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On INT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On IN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On IMPLIES reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On IFF reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On IDENT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On IDEN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On HISTORICALLY reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On GTE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On GT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On FUN reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On FACT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On EVENTUALLY reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On EQ reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On EOF reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ENUM reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ELSE reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On COMMA reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On CHECK reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On CARET reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On CARD reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On BAR reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On AT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ASSERT reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On AND reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ALWAYS reduce production prim_expr -> expr SOME_ARROW_ONE expr
-- On ABSTRACT reduce production prim_expr -> expr SOME_ARROW_ONE expr

State 134:
## Known stack suffix:
## expr SOME_ARROW_LONE
## LR(1) items:
prim_expr -> expr SOME_ARROW_LONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 135
-- On block shift to state 169
## Reductions:

State 135:
## Known stack suffix:
## expr SOME_ARROW_LONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SOME_ARROW_LONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On UNTIL reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On UNIV reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On TILDE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On THIS reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On STAR reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On SOME reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On SINCE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On SIG reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On RUN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On RPAREN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On RBRACKET reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On RBRACE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On QSOME reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On QONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On QNO reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On QLONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On QALL reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On PRIVATE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On PREVIOUS reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On PRED reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On PLUS reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On OVERRIDE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On OR reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ONCE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NUMBER reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NOT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NO reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NICKNAME reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NEXT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On NEQ reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On MSOME reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On MSET reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On MONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On MLONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On MINUS reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LTE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LPAREN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LONE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LET reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On LBRACE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On INTER reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On INT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On IN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On IMPLIES reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On IFF reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On IDENT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On IDEN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On HISTORICALLY reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On GTE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On GT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On FUN reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On FACT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On EVENTUALLY reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On EQ reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On EOF reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ENUM reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ELSE reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On COMMA reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On CHECK reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On CARET reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On CARD reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On BAR reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On AT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ASSERT reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On AND reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ALWAYS reduce production prim_expr -> expr SOME_ARROW_LONE expr
-- On ABSTRACT reduce production prim_expr -> expr SOME_ARROW_LONE expr

State 136:
## Known stack suffix:
## expr SET_ARROW_SOME
## LR(1) items:
prim_expr -> expr SET_ARROW_SOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 137
-- On block shift to state 169
## Reductions:

State 137:
## Known stack suffix:
## expr SET_ARROW_SOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SET_ARROW_SOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On UNTIL reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On UNIV reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On TILDE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On THIS reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On STAR reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On SOME reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On SINCE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On SIG reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On RUN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On RPAREN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On RBRACKET reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On RBRACE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On QSOME reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On QONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On QNO reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On QLONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On QALL reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On PRIVATE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On PREVIOUS reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On PRED reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On PLUS reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On OVERRIDE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On OR reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ONCE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NUMBER reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NOT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NO reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NICKNAME reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NEXT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On NEQ reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On MSOME reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On MSET reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On MONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On MLONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On MINUS reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LTE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LPAREN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LONE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LET reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On LBRACE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On INTER reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On INT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On IN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On IMPLIES reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On IFF reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On IDENT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On IDEN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On HISTORICALLY reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On GTE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On GT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On FUN reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On FACT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On EVENTUALLY reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On EQ reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On EOF reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ENUM reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ELSE reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On COMMA reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On CHECK reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On CARET reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On CARD reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On BAR reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On AT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ASSERT reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On AND reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ALWAYS reduce production prim_expr -> expr SET_ARROW_SOME expr
-- On ABSTRACT reduce production prim_expr -> expr SET_ARROW_SOME expr

State 138:
## Known stack suffix:
## expr SET_ARROW_SET
## LR(1) items:
prim_expr -> expr SET_ARROW_SET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 139
-- On block shift to state 169
## Reductions:

State 139:
## Known stack suffix:
## expr SET_ARROW_SET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SET_ARROW_SET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SET_ARROW_SET expr
-- On UNTIL reduce production prim_expr -> expr SET_ARROW_SET expr
-- On UNIV reduce production prim_expr -> expr SET_ARROW_SET expr
-- On TILDE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On THIS reduce production prim_expr -> expr SET_ARROW_SET expr
-- On STAR reduce production prim_expr -> expr SET_ARROW_SET expr
-- On SOME reduce production prim_expr -> expr SET_ARROW_SET expr
-- On SINCE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On SIG reduce production prim_expr -> expr SET_ARROW_SET expr
-- On RUN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On RPAREN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On RBRACKET reduce production prim_expr -> expr SET_ARROW_SET expr
-- On RBRACE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On QSOME reduce production prim_expr -> expr SET_ARROW_SET expr
-- On QONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On QNO reduce production prim_expr -> expr SET_ARROW_SET expr
-- On QLONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On QALL reduce production prim_expr -> expr SET_ARROW_SET expr
-- On PRIVATE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On PREVIOUS reduce production prim_expr -> expr SET_ARROW_SET expr
-- On PRED reduce production prim_expr -> expr SET_ARROW_SET expr
-- On PLUS reduce production prim_expr -> expr SET_ARROW_SET expr
-- On OVERRIDE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On OR reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ONCE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NUMBER reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NOT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NO reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NICKNAME reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NEXT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On NEQ reduce production prim_expr -> expr SET_ARROW_SET expr
-- On MSOME reduce production prim_expr -> expr SET_ARROW_SET expr
-- On MSET reduce production prim_expr -> expr SET_ARROW_SET expr
-- On MONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On MLONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On MINUS reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LTE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LPAREN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LONE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LET reduce production prim_expr -> expr SET_ARROW_SET expr
-- On LBRACE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On INTER reduce production prim_expr -> expr SET_ARROW_SET expr
-- On INT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On IN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On IMPLIES reduce production prim_expr -> expr SET_ARROW_SET expr
-- On IFF reduce production prim_expr -> expr SET_ARROW_SET expr
-- On IDENT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On IDEN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On HISTORICALLY reduce production prim_expr -> expr SET_ARROW_SET expr
-- On GTE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On GT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On FUN reduce production prim_expr -> expr SET_ARROW_SET expr
-- On FACT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On EVENTUALLY reduce production prim_expr -> expr SET_ARROW_SET expr
-- On EQ reduce production prim_expr -> expr SET_ARROW_SET expr
-- On EOF reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ENUM reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ELSE reduce production prim_expr -> expr SET_ARROW_SET expr
-- On COMMA reduce production prim_expr -> expr SET_ARROW_SET expr
-- On CHECK reduce production prim_expr -> expr SET_ARROW_SET expr
-- On CARET reduce production prim_expr -> expr SET_ARROW_SET expr
-- On CARD reduce production prim_expr -> expr SET_ARROW_SET expr
-- On BAR reduce production prim_expr -> expr SET_ARROW_SET expr
-- On AT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ASSERT reduce production prim_expr -> expr SET_ARROW_SET expr
-- On AND reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ALWAYS reduce production prim_expr -> expr SET_ARROW_SET expr
-- On ABSTRACT reduce production prim_expr -> expr SET_ARROW_SET expr

State 140:
## Known stack suffix:
## expr SET_ARROW_ONE
## LR(1) items:
prim_expr -> expr SET_ARROW_ONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 141
-- On block shift to state 169
## Reductions:

State 141:
## Known stack suffix:
## expr SET_ARROW_ONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SET_ARROW_ONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On UNTIL reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On UNIV reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On TILDE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On THIS reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On STAR reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On SOME reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On SINCE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On SIG reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On RUN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On RPAREN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On RBRACKET reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On RBRACE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On QSOME reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On QONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On QNO reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On QLONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On QALL reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On PRIVATE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On PREVIOUS reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On PRED reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On PLUS reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On OVERRIDE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On OR reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ONCE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NUMBER reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NOT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NO reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NICKNAME reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NEXT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On NEQ reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On MSOME reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On MSET reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On MONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On MLONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On MINUS reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LTE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LPAREN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LONE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LET reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On LBRACE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On INTER reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On INT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On IN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On IMPLIES reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On IFF reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On IDENT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On IDEN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On HISTORICALLY reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On GTE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On GT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On FUN reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On FACT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On EVENTUALLY reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On EQ reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On EOF reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ENUM reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ELSE reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On COMMA reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On CHECK reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On CARET reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On CARD reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On BAR reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On AT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ASSERT reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On AND reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ALWAYS reduce production prim_expr -> expr SET_ARROW_ONE expr
-- On ABSTRACT reduce production prim_expr -> expr SET_ARROW_ONE expr

State 142:
## Known stack suffix:
## expr SET_ARROW_LONE
## LR(1) items:
prim_expr -> expr SET_ARROW_LONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 143
-- On block shift to state 169
## Reductions:

State 143:
## Known stack suffix:
## expr SET_ARROW_LONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SET_ARROW_LONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On UNTIL reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On UNIV reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On TILDE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On THIS reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On STAR reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On SOME reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On SINCE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On SIG reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On RUN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On RPAREN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On RBRACKET reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On RBRACE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On QSOME reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On QONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On QNO reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On QLONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On QALL reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On PRIVATE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On PREVIOUS reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On PRED reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On PLUS reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On OVERRIDE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On OR reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ONCE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NUMBER reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NOT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NO reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NICKNAME reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NEXT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On NEQ reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On MSOME reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On MSET reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On MONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On MLONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On MINUS reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LTE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LPAREN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LONE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LET reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On LBRACE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On INTER reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On INT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On IN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On IMPLIES reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On IFF reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On IDENT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On IDEN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On HISTORICALLY reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On GTE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On GT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On FUN reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On FACT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On EVENTUALLY reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On EQ reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On EOF reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ENUM reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ELSE reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On COMMA reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On CHECK reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On CARET reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On CARD reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On BAR reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On AT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ASSERT reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On AND reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ALWAYS reduce production prim_expr -> expr SET_ARROW_LONE expr
-- On ABSTRACT reduce production prim_expr -> expr SET_ARROW_LONE expr

State 144:
## Known stack suffix:
## expr RPROJ
## LR(1) items:
prim_expr -> expr RPROJ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 145
-- On block shift to state 169
## Reductions:

State 145:
## Known stack suffix:
## expr RPROJ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr RPROJ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On PRIME shift to state 146
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr RPROJ expr
-- On UNTIL reduce production prim_expr -> expr RPROJ expr
-- On UNIV reduce production prim_expr -> expr RPROJ expr
-- On TILDE reduce production prim_expr -> expr RPROJ expr
-- On THIS reduce production prim_expr -> expr RPROJ expr
-- On STAR reduce production prim_expr -> expr RPROJ expr
-- On SOME_ARROW_SOME reduce production prim_expr -> expr RPROJ expr
-- On SOME_ARROW_SET reduce production prim_expr -> expr RPROJ expr
-- On SOME_ARROW_ONE reduce production prim_expr -> expr RPROJ expr
-- On SOME_ARROW_LONE reduce production prim_expr -> expr RPROJ expr
-- On SOME reduce production prim_expr -> expr RPROJ expr
-- On SINCE reduce production prim_expr -> expr RPROJ expr
-- On SIG reduce production prim_expr -> expr RPROJ expr
-- On SET_ARROW_SOME reduce production prim_expr -> expr RPROJ expr
-- On SET_ARROW_SET reduce production prim_expr -> expr RPROJ expr
-- On SET_ARROW_ONE reduce production prim_expr -> expr RPROJ expr
-- On SET_ARROW_LONE reduce production prim_expr -> expr RPROJ expr
-- On RUN reduce production prim_expr -> expr RPROJ expr
-- On RPROJ reduce production prim_expr -> expr RPROJ expr
-- On RPAREN reduce production prim_expr -> expr RPROJ expr
-- On RBRACKET reduce production prim_expr -> expr RPROJ expr
-- On RBRACE reduce production prim_expr -> expr RPROJ expr
-- On QSOME reduce production prim_expr -> expr RPROJ expr
-- On QONE reduce production prim_expr -> expr RPROJ expr
-- On QNO reduce production prim_expr -> expr RPROJ expr
-- On QLONE reduce production prim_expr -> expr RPROJ expr
-- On QALL reduce production prim_expr -> expr RPROJ expr
-- On PRIVATE reduce production prim_expr -> expr RPROJ expr
-- On PREVIOUS reduce production prim_expr -> expr RPROJ expr
-- On PRED reduce production prim_expr -> expr RPROJ expr
-- On PLUS reduce production prim_expr -> expr RPROJ expr
-- On OVERRIDE reduce production prim_expr -> expr RPROJ expr
-- On OR reduce production prim_expr -> expr RPROJ expr
-- On ONE_ARROW_SOME reduce production prim_expr -> expr RPROJ expr
-- On ONE_ARROW_SET reduce production prim_expr -> expr RPROJ expr
-- On ONE_ARROW_ONE reduce production prim_expr -> expr RPROJ expr
-- On ONE_ARROW_LONE reduce production prim_expr -> expr RPROJ expr
-- On ONE reduce production prim_expr -> expr RPROJ expr
-- On ONCE reduce production prim_expr -> expr RPROJ expr
-- On NUMBER reduce production prim_expr -> expr RPROJ expr
-- On NOT reduce production prim_expr -> expr RPROJ expr
-- On NONE reduce production prim_expr -> expr RPROJ expr
-- On NO reduce production prim_expr -> expr RPROJ expr
-- On NICKNAME reduce production prim_expr -> expr RPROJ expr
-- On NEXT reduce production prim_expr -> expr RPROJ expr
-- On NEQ reduce production prim_expr -> expr RPROJ expr
-- On MSOME reduce production prim_expr -> expr RPROJ expr
-- On MSET reduce production prim_expr -> expr RPROJ expr
-- On MONE reduce production prim_expr -> expr RPROJ expr
-- On MLONE reduce production prim_expr -> expr RPROJ expr
-- On MINUS reduce production prim_expr -> expr RPROJ expr
-- On LTE reduce production prim_expr -> expr RPROJ expr
-- On LT reduce production prim_expr -> expr RPROJ expr
-- On LPROJ reduce production prim_expr -> expr RPROJ expr
-- On LPAREN reduce production prim_expr -> expr RPROJ expr
-- On LONE_ARROW_SOME reduce production prim_expr -> expr RPROJ expr
-- On LONE_ARROW_SET reduce production prim_expr -> expr RPROJ expr
-- On LONE_ARROW_ONE reduce production prim_expr -> expr RPROJ expr
-- On LONE_ARROW_LONE reduce production prim_expr -> expr RPROJ expr
-- On LONE reduce production prim_expr -> expr RPROJ expr
-- On LET reduce production prim_expr -> expr RPROJ expr
-- On LBRACE reduce production prim_expr -> expr RPROJ expr
-- On INTER reduce production prim_expr -> expr RPROJ expr
-- On INT reduce production prim_expr -> expr RPROJ expr
-- On IN reduce production prim_expr -> expr RPROJ expr
-- On IMPLIES reduce production prim_expr -> expr RPROJ expr
-- On IFF reduce production prim_expr -> expr RPROJ expr
-- On IDENT reduce production prim_expr -> expr RPROJ expr
-- On IDEN reduce production prim_expr -> expr RPROJ expr
-- On HISTORICALLY reduce production prim_expr -> expr RPROJ expr
-- On GTE reduce production prim_expr -> expr RPROJ expr
-- On GT reduce production prim_expr -> expr RPROJ expr
-- On FUN reduce production prim_expr -> expr RPROJ expr
-- On FACT reduce production prim_expr -> expr RPROJ expr
-- On EVENTUALLY reduce production prim_expr -> expr RPROJ expr
-- On EQ reduce production prim_expr -> expr RPROJ expr
-- On EOF reduce production prim_expr -> expr RPROJ expr
-- On ENUM reduce production prim_expr -> expr RPROJ expr
-- On ELSE reduce production prim_expr -> expr RPROJ expr
-- On COMMA reduce production prim_expr -> expr RPROJ expr
-- On CHECK reduce production prim_expr -> expr RPROJ expr
-- On CARET reduce production prim_expr -> expr RPROJ expr
-- On CARD reduce production prim_expr -> expr RPROJ expr
-- On BAR reduce production prim_expr -> expr RPROJ expr
-- On AT reduce production prim_expr -> expr RPROJ expr
-- On ASSERT reduce production prim_expr -> expr RPROJ expr
-- On AND reduce production prim_expr -> expr RPROJ expr
-- On ALWAYS reduce production prim_expr -> expr RPROJ expr
-- On ABSTRACT reduce production prim_expr -> expr RPROJ expr

State 146:
## Known stack suffix:
## expr PRIME
## LR(1) items:
prim_expr -> expr PRIME . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> expr PRIME

State 147:
## Known stack suffix:
## expr LBRACKET
## LR(1) items:
prim_expr -> expr LBRACKET . separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,expr) shift to state 148
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 150
-- On block shift to state 169
## Reductions:

State 148:
## Known stack suffix:
## expr LBRACKET separated_nonempty_list(COMMA,expr)
## LR(1) items:
prim_expr -> expr LBRACKET separated_nonempty_list(COMMA,expr) . RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On RBRACKET shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## expr LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET
## LR(1) items:
prim_expr -> expr LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> expr LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET

State 150:
## Known stack suffix:
## expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT COMMA AND ]
separated_nonempty_list(COMMA,expr) -> expr . [ RBRACKET ]
separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RBRACKET ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On COMMA shift to state 223
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production separated_nonempty_list(COMMA,expr) -> expr

State 151:
## Known stack suffix:
## expr UNTIL
## LR(1) items:
prim_expr -> expr UNTIL . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 152
-- On block shift to state 169
## Reductions:

State 152:
## Known stack suffix:
## expr UNTIL expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr UNTIL expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr UNTIL expr
-- On UNTIL reduce production prim_expr -> expr UNTIL expr
-- On UNIV reduce production prim_expr -> expr UNTIL expr
-- On TILDE reduce production prim_expr -> expr UNTIL expr
-- On THIS reduce production prim_expr -> expr UNTIL expr
-- On STAR reduce production prim_expr -> expr UNTIL expr
-- On SOME reduce production prim_expr -> expr UNTIL expr
-- On SINCE reduce production prim_expr -> expr UNTIL expr
-- On SIG reduce production prim_expr -> expr UNTIL expr
-- On RUN reduce production prim_expr -> expr UNTIL expr
-- On RPAREN reduce production prim_expr -> expr UNTIL expr
-- On RBRACKET reduce production prim_expr -> expr UNTIL expr
-- On RBRACE reduce production prim_expr -> expr UNTIL expr
-- On QSOME reduce production prim_expr -> expr UNTIL expr
-- On QONE reduce production prim_expr -> expr UNTIL expr
-- On QNO reduce production prim_expr -> expr UNTIL expr
-- On QLONE reduce production prim_expr -> expr UNTIL expr
-- On QALL reduce production prim_expr -> expr UNTIL expr
-- On PRIVATE reduce production prim_expr -> expr UNTIL expr
-- On PREVIOUS reduce production prim_expr -> expr UNTIL expr
-- On PRED reduce production prim_expr -> expr UNTIL expr
-- On OR reduce production prim_expr -> expr UNTIL expr
-- On ONE reduce production prim_expr -> expr UNTIL expr
-- On ONCE reduce production prim_expr -> expr UNTIL expr
-- On NUMBER reduce production prim_expr -> expr UNTIL expr
-- On NONE reduce production prim_expr -> expr UNTIL expr
-- On NO reduce production prim_expr -> expr UNTIL expr
-- On NICKNAME reduce production prim_expr -> expr UNTIL expr
-- On NEXT reduce production prim_expr -> expr UNTIL expr
-- On MSOME reduce production prim_expr -> expr UNTIL expr
-- On MSET reduce production prim_expr -> expr UNTIL expr
-- On MONE reduce production prim_expr -> expr UNTIL expr
-- On MLONE reduce production prim_expr -> expr UNTIL expr
-- On LPAREN reduce production prim_expr -> expr UNTIL expr
-- On LONE reduce production prim_expr -> expr UNTIL expr
-- On LET reduce production prim_expr -> expr UNTIL expr
-- On LBRACE reduce production prim_expr -> expr UNTIL expr
-- On INT reduce production prim_expr -> expr UNTIL expr
-- On IMPLIES reduce production prim_expr -> expr UNTIL expr
-- On IFF reduce production prim_expr -> expr UNTIL expr
-- On IDENT reduce production prim_expr -> expr UNTIL expr
-- On IDEN reduce production prim_expr -> expr UNTIL expr
-- On HISTORICALLY reduce production prim_expr -> expr UNTIL expr
-- On FUN reduce production prim_expr -> expr UNTIL expr
-- On FACT reduce production prim_expr -> expr UNTIL expr
-- On EVENTUALLY reduce production prim_expr -> expr UNTIL expr
-- On EOF reduce production prim_expr -> expr UNTIL expr
-- On ENUM reduce production prim_expr -> expr UNTIL expr
-- On ELSE reduce production prim_expr -> expr UNTIL expr
-- On COMMA reduce production prim_expr -> expr UNTIL expr
-- On CHECK reduce production prim_expr -> expr UNTIL expr
-- On CARET reduce production prim_expr -> expr UNTIL expr
-- On CARD reduce production prim_expr -> expr UNTIL expr
-- On BAR reduce production prim_expr -> expr UNTIL expr
-- On AT reduce production prim_expr -> expr UNTIL expr
-- On ASSERT reduce production prim_expr -> expr UNTIL expr
-- On AND reduce production prim_expr -> expr UNTIL expr
-- On ALWAYS reduce production prim_expr -> expr UNTIL expr
-- On ABSTRACT reduce production prim_expr -> expr UNTIL expr

State 153:
## Known stack suffix:
## expr PLUS
## LR(1) items:
prim_expr -> expr PLUS . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 154
-- On block shift to state 169
## Reductions:

State 154:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr PLUS expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr PLUS expr
-- On UNTIL reduce production prim_expr -> expr PLUS expr
-- On UNIV reduce production prim_expr -> expr PLUS expr
-- On TILDE reduce production prim_expr -> expr PLUS expr
-- On THIS reduce production prim_expr -> expr PLUS expr
-- On STAR reduce production prim_expr -> expr PLUS expr
-- On SOME reduce production prim_expr -> expr PLUS expr
-- On SINCE reduce production prim_expr -> expr PLUS expr
-- On SIG reduce production prim_expr -> expr PLUS expr
-- On RUN reduce production prim_expr -> expr PLUS expr
-- On RPAREN reduce production prim_expr -> expr PLUS expr
-- On RBRACKET reduce production prim_expr -> expr PLUS expr
-- On RBRACE reduce production prim_expr -> expr PLUS expr
-- On QSOME reduce production prim_expr -> expr PLUS expr
-- On QONE reduce production prim_expr -> expr PLUS expr
-- On QNO reduce production prim_expr -> expr PLUS expr
-- On QLONE reduce production prim_expr -> expr PLUS expr
-- On QALL reduce production prim_expr -> expr PLUS expr
-- On PRIVATE reduce production prim_expr -> expr PLUS expr
-- On PREVIOUS reduce production prim_expr -> expr PLUS expr
-- On PRED reduce production prim_expr -> expr PLUS expr
-- On PLUS reduce production prim_expr -> expr PLUS expr
-- On OR reduce production prim_expr -> expr PLUS expr
-- On ONE reduce production prim_expr -> expr PLUS expr
-- On ONCE reduce production prim_expr -> expr PLUS expr
-- On NUMBER reduce production prim_expr -> expr PLUS expr
-- On NOT reduce production prim_expr -> expr PLUS expr
-- On NONE reduce production prim_expr -> expr PLUS expr
-- On NO reduce production prim_expr -> expr PLUS expr
-- On NICKNAME reduce production prim_expr -> expr PLUS expr
-- On NEXT reduce production prim_expr -> expr PLUS expr
-- On NEQ reduce production prim_expr -> expr PLUS expr
-- On MSOME reduce production prim_expr -> expr PLUS expr
-- On MSET reduce production prim_expr -> expr PLUS expr
-- On MONE reduce production prim_expr -> expr PLUS expr
-- On MLONE reduce production prim_expr -> expr PLUS expr
-- On MINUS reduce production prim_expr -> expr PLUS expr
-- On LTE reduce production prim_expr -> expr PLUS expr
-- On LT reduce production prim_expr -> expr PLUS expr
-- On LPAREN reduce production prim_expr -> expr PLUS expr
-- On LONE reduce production prim_expr -> expr PLUS expr
-- On LET reduce production prim_expr -> expr PLUS expr
-- On LBRACE reduce production prim_expr -> expr PLUS expr
-- On INT reduce production prim_expr -> expr PLUS expr
-- On IN reduce production prim_expr -> expr PLUS expr
-- On IMPLIES reduce production prim_expr -> expr PLUS expr
-- On IFF reduce production prim_expr -> expr PLUS expr
-- On IDENT reduce production prim_expr -> expr PLUS expr
-- On IDEN reduce production prim_expr -> expr PLUS expr
-- On HISTORICALLY reduce production prim_expr -> expr PLUS expr
-- On GTE reduce production prim_expr -> expr PLUS expr
-- On GT reduce production prim_expr -> expr PLUS expr
-- On FUN reduce production prim_expr -> expr PLUS expr
-- On FACT reduce production prim_expr -> expr PLUS expr
-- On EVENTUALLY reduce production prim_expr -> expr PLUS expr
-- On EQ reduce production prim_expr -> expr PLUS expr
-- On EOF reduce production prim_expr -> expr PLUS expr
-- On ENUM reduce production prim_expr -> expr PLUS expr
-- On ELSE reduce production prim_expr -> expr PLUS expr
-- On COMMA reduce production prim_expr -> expr PLUS expr
-- On CHECK reduce production prim_expr -> expr PLUS expr
-- On CARET reduce production prim_expr -> expr PLUS expr
-- On CARD reduce production prim_expr -> expr PLUS expr
-- On BAR reduce production prim_expr -> expr PLUS expr
-- On AT reduce production prim_expr -> expr PLUS expr
-- On ASSERT reduce production prim_expr -> expr PLUS expr
-- On AND reduce production prim_expr -> expr PLUS expr
-- On ALWAYS reduce production prim_expr -> expr PLUS expr
-- On ABSTRACT reduce production prim_expr -> expr PLUS expr

State 155:
## Known stack suffix:
## expr OVERRIDE
## LR(1) items:
prim_expr -> expr OVERRIDE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 156
-- On block shift to state 169
## Reductions:

State 156:
## Known stack suffix:
## expr OVERRIDE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr OVERRIDE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr OVERRIDE expr
-- On UNTIL reduce production prim_expr -> expr OVERRIDE expr
-- On UNIV reduce production prim_expr -> expr OVERRIDE expr
-- On TILDE reduce production prim_expr -> expr OVERRIDE expr
-- On THIS reduce production prim_expr -> expr OVERRIDE expr
-- On STAR reduce production prim_expr -> expr OVERRIDE expr
-- On SOME reduce production prim_expr -> expr OVERRIDE expr
-- On SINCE reduce production prim_expr -> expr OVERRIDE expr
-- On SIG reduce production prim_expr -> expr OVERRIDE expr
-- On RUN reduce production prim_expr -> expr OVERRIDE expr
-- On RPAREN reduce production prim_expr -> expr OVERRIDE expr
-- On RBRACKET reduce production prim_expr -> expr OVERRIDE expr
-- On RBRACE reduce production prim_expr -> expr OVERRIDE expr
-- On QSOME reduce production prim_expr -> expr OVERRIDE expr
-- On QONE reduce production prim_expr -> expr OVERRIDE expr
-- On QNO reduce production prim_expr -> expr OVERRIDE expr
-- On QLONE reduce production prim_expr -> expr OVERRIDE expr
-- On QALL reduce production prim_expr -> expr OVERRIDE expr
-- On PRIVATE reduce production prim_expr -> expr OVERRIDE expr
-- On PREVIOUS reduce production prim_expr -> expr OVERRIDE expr
-- On PRED reduce production prim_expr -> expr OVERRIDE expr
-- On PLUS reduce production prim_expr -> expr OVERRIDE expr
-- On OVERRIDE reduce production prim_expr -> expr OVERRIDE expr
-- On OR reduce production prim_expr -> expr OVERRIDE expr
-- On ONE reduce production prim_expr -> expr OVERRIDE expr
-- On ONCE reduce production prim_expr -> expr OVERRIDE expr
-- On NUMBER reduce production prim_expr -> expr OVERRIDE expr
-- On NOT reduce production prim_expr -> expr OVERRIDE expr
-- On NONE reduce production prim_expr -> expr OVERRIDE expr
-- On NO reduce production prim_expr -> expr OVERRIDE expr
-- On NICKNAME reduce production prim_expr -> expr OVERRIDE expr
-- On NEXT reduce production prim_expr -> expr OVERRIDE expr
-- On NEQ reduce production prim_expr -> expr OVERRIDE expr
-- On MSOME reduce production prim_expr -> expr OVERRIDE expr
-- On MSET reduce production prim_expr -> expr OVERRIDE expr
-- On MONE reduce production prim_expr -> expr OVERRIDE expr
-- On MLONE reduce production prim_expr -> expr OVERRIDE expr
-- On MINUS reduce production prim_expr -> expr OVERRIDE expr
-- On LTE reduce production prim_expr -> expr OVERRIDE expr
-- On LT reduce production prim_expr -> expr OVERRIDE expr
-- On LPAREN reduce production prim_expr -> expr OVERRIDE expr
-- On LONE reduce production prim_expr -> expr OVERRIDE expr
-- On LET reduce production prim_expr -> expr OVERRIDE expr
-- On LBRACE reduce production prim_expr -> expr OVERRIDE expr
-- On INT reduce production prim_expr -> expr OVERRIDE expr
-- On IN reduce production prim_expr -> expr OVERRIDE expr
-- On IMPLIES reduce production prim_expr -> expr OVERRIDE expr
-- On IFF reduce production prim_expr -> expr OVERRIDE expr
-- On IDENT reduce production prim_expr -> expr OVERRIDE expr
-- On IDEN reduce production prim_expr -> expr OVERRIDE expr
-- On HISTORICALLY reduce production prim_expr -> expr OVERRIDE expr
-- On GTE reduce production prim_expr -> expr OVERRIDE expr
-- On GT reduce production prim_expr -> expr OVERRIDE expr
-- On FUN reduce production prim_expr -> expr OVERRIDE expr
-- On FACT reduce production prim_expr -> expr OVERRIDE expr
-- On EVENTUALLY reduce production prim_expr -> expr OVERRIDE expr
-- On EQ reduce production prim_expr -> expr OVERRIDE expr
-- On EOF reduce production prim_expr -> expr OVERRIDE expr
-- On ENUM reduce production prim_expr -> expr OVERRIDE expr
-- On ELSE reduce production prim_expr -> expr OVERRIDE expr
-- On COMMA reduce production prim_expr -> expr OVERRIDE expr
-- On CHECK reduce production prim_expr -> expr OVERRIDE expr
-- On CARET reduce production prim_expr -> expr OVERRIDE expr
-- On CARD reduce production prim_expr -> expr OVERRIDE expr
-- On BAR reduce production prim_expr -> expr OVERRIDE expr
-- On AT reduce production prim_expr -> expr OVERRIDE expr
-- On ASSERT reduce production prim_expr -> expr OVERRIDE expr
-- On AND reduce production prim_expr -> expr OVERRIDE expr
-- On ALWAYS reduce production prim_expr -> expr OVERRIDE expr
-- On ABSTRACT reduce production prim_expr -> expr OVERRIDE expr

State 157:
## Known stack suffix:
## expr ONE_ARROW_SOME
## LR(1) items:
prim_expr -> expr ONE_ARROW_SOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 158
-- On block shift to state 169
## Reductions:

State 158:
## Known stack suffix:
## expr ONE_ARROW_SOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr ONE_ARROW_SOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On UNTIL reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On UNIV reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On TILDE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On THIS reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On STAR reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On SOME reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On SINCE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On SIG reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On RUN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On RPAREN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On RBRACKET reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On RBRACE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On QSOME reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On QONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On QNO reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On QLONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On QALL reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On PRIVATE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On PREVIOUS reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On PRED reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On PLUS reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On OVERRIDE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On OR reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ONCE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NUMBER reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NOT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NO reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NICKNAME reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NEXT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On NEQ reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On MSOME reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On MSET reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On MONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On MLONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On MINUS reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LTE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LPAREN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LONE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LET reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On LBRACE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On INTER reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On INT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On IN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On IMPLIES reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On IFF reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On IDENT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On IDEN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On HISTORICALLY reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On GTE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On GT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On FUN reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On FACT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On EVENTUALLY reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On EQ reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On EOF reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ENUM reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ELSE reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On COMMA reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On CHECK reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On CARET reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On CARD reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On BAR reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On AT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ASSERT reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On AND reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ALWAYS reduce production prim_expr -> expr ONE_ARROW_SOME expr
-- On ABSTRACT reduce production prim_expr -> expr ONE_ARROW_SOME expr

State 159:
## Known stack suffix:
## expr ONE_ARROW_SET
## LR(1) items:
prim_expr -> expr ONE_ARROW_SET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 160
-- On block shift to state 169
## Reductions:

State 160:
## Known stack suffix:
## expr ONE_ARROW_SET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr ONE_ARROW_SET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On UNTIL reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On UNIV reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On TILDE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On THIS reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On STAR reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On SOME reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On SINCE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On SIG reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On RUN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On RPAREN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On RBRACKET reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On RBRACE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On QSOME reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On QONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On QNO reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On QLONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On QALL reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On PRIVATE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On PREVIOUS reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On PRED reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On PLUS reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On OVERRIDE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On OR reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ONCE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NUMBER reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NOT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NO reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NICKNAME reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NEXT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On NEQ reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On MSOME reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On MSET reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On MONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On MLONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On MINUS reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LTE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LPAREN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LONE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LET reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On LBRACE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On INTER reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On INT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On IN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On IMPLIES reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On IFF reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On IDENT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On IDEN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On HISTORICALLY reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On GTE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On GT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On FUN reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On FACT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On EVENTUALLY reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On EQ reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On EOF reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ENUM reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ELSE reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On COMMA reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On CHECK reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On CARET reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On CARD reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On BAR reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On AT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ASSERT reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On AND reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ALWAYS reduce production prim_expr -> expr ONE_ARROW_SET expr
-- On ABSTRACT reduce production prim_expr -> expr ONE_ARROW_SET expr

State 161:
## Known stack suffix:
## expr ONE_ARROW_ONE
## LR(1) items:
prim_expr -> expr ONE_ARROW_ONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 162
-- On block shift to state 169
## Reductions:

State 162:
## Known stack suffix:
## expr ONE_ARROW_ONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr ONE_ARROW_ONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On UNTIL reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On UNIV reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On TILDE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On THIS reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On STAR reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On SOME reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On SINCE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On SIG reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On RUN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On RPAREN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On RBRACKET reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On RBRACE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On QSOME reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On QONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On QNO reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On QLONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On QALL reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On PRIVATE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On PREVIOUS reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On PRED reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On PLUS reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On OVERRIDE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On OR reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ONCE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NUMBER reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NOT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NO reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NICKNAME reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NEXT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On NEQ reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On MSOME reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On MSET reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On MONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On MLONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On MINUS reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LTE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LPAREN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LONE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LET reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On LBRACE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On INTER reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On INT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On IN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On IMPLIES reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On IFF reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On IDENT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On IDEN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On HISTORICALLY reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On GTE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On GT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On FUN reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On FACT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On EVENTUALLY reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On EQ reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On EOF reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ENUM reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ELSE reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On COMMA reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On CHECK reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On CARET reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On CARD reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On BAR reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On AT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ASSERT reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On AND reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ALWAYS reduce production prim_expr -> expr ONE_ARROW_ONE expr
-- On ABSTRACT reduce production prim_expr -> expr ONE_ARROW_ONE expr

State 163:
## Known stack suffix:
## expr ONE_ARROW_LONE
## LR(1) items:
prim_expr -> expr ONE_ARROW_LONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 164
-- On block shift to state 169
## Reductions:

State 164:
## Known stack suffix:
## expr ONE_ARROW_LONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr ONE_ARROW_LONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On UNTIL reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On UNIV reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On TILDE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On THIS reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On STAR reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On SOME reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On SINCE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On SIG reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On RUN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On RPAREN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On RBRACKET reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On RBRACE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On QSOME reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On QONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On QNO reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On QLONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On QALL reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On PRIVATE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On PREVIOUS reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On PRED reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On PLUS reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On OVERRIDE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On OR reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ONCE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NUMBER reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NOT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NO reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NICKNAME reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NEXT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On NEQ reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On MSOME reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On MSET reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On MONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On MLONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On MINUS reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LTE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LPAREN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LONE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LET reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On LBRACE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On INTER reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On INT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On IN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On IMPLIES reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On IFF reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On IDENT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On IDEN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On HISTORICALLY reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On GTE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On GT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On FUN reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On FACT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On EVENTUALLY reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On EQ reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On EOF reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ENUM reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ELSE reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On COMMA reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On CHECK reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On CARET reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On CARD reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On BAR reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On AT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ASSERT reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On AND reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ALWAYS reduce production prim_expr -> expr ONE_ARROW_LONE expr
-- On ABSTRACT reduce production prim_expr -> expr ONE_ARROW_LONE expr

State 165:
## Known stack suffix:
## expr LPROJ
## LR(1) items:
prim_expr -> expr LPROJ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 166
-- On block shift to state 169
## Reductions:

State 166:
## Known stack suffix:
## expr LPROJ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LPROJ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LPROJ expr
-- On UNTIL reduce production prim_expr -> expr LPROJ expr
-- On UNIV reduce production prim_expr -> expr LPROJ expr
-- On TILDE reduce production prim_expr -> expr LPROJ expr
-- On THIS reduce production prim_expr -> expr LPROJ expr
-- On STAR reduce production prim_expr -> expr LPROJ expr
-- On SOME_ARROW_SOME reduce production prim_expr -> expr LPROJ expr
-- On SOME_ARROW_SET reduce production prim_expr -> expr LPROJ expr
-- On SOME_ARROW_ONE reduce production prim_expr -> expr LPROJ expr
-- On SOME_ARROW_LONE reduce production prim_expr -> expr LPROJ expr
-- On SOME reduce production prim_expr -> expr LPROJ expr
-- On SINCE reduce production prim_expr -> expr LPROJ expr
-- On SIG reduce production prim_expr -> expr LPROJ expr
-- On SET_ARROW_SOME reduce production prim_expr -> expr LPROJ expr
-- On SET_ARROW_SET reduce production prim_expr -> expr LPROJ expr
-- On SET_ARROW_ONE reduce production prim_expr -> expr LPROJ expr
-- On SET_ARROW_LONE reduce production prim_expr -> expr LPROJ expr
-- On RUN reduce production prim_expr -> expr LPROJ expr
-- On RPAREN reduce production prim_expr -> expr LPROJ expr
-- On RBRACKET reduce production prim_expr -> expr LPROJ expr
-- On RBRACE reduce production prim_expr -> expr LPROJ expr
-- On QSOME reduce production prim_expr -> expr LPROJ expr
-- On QONE reduce production prim_expr -> expr LPROJ expr
-- On QNO reduce production prim_expr -> expr LPROJ expr
-- On QLONE reduce production prim_expr -> expr LPROJ expr
-- On QALL reduce production prim_expr -> expr LPROJ expr
-- On PRIVATE reduce production prim_expr -> expr LPROJ expr
-- On PREVIOUS reduce production prim_expr -> expr LPROJ expr
-- On PRED reduce production prim_expr -> expr LPROJ expr
-- On PLUS reduce production prim_expr -> expr LPROJ expr
-- On OVERRIDE reduce production prim_expr -> expr LPROJ expr
-- On OR reduce production prim_expr -> expr LPROJ expr
-- On ONE_ARROW_SOME reduce production prim_expr -> expr LPROJ expr
-- On ONE_ARROW_SET reduce production prim_expr -> expr LPROJ expr
-- On ONE_ARROW_ONE reduce production prim_expr -> expr LPROJ expr
-- On ONE_ARROW_LONE reduce production prim_expr -> expr LPROJ expr
-- On ONE reduce production prim_expr -> expr LPROJ expr
-- On ONCE reduce production prim_expr -> expr LPROJ expr
-- On NUMBER reduce production prim_expr -> expr LPROJ expr
-- On NOT reduce production prim_expr -> expr LPROJ expr
-- On NONE reduce production prim_expr -> expr LPROJ expr
-- On NO reduce production prim_expr -> expr LPROJ expr
-- On NICKNAME reduce production prim_expr -> expr LPROJ expr
-- On NEXT reduce production prim_expr -> expr LPROJ expr
-- On NEQ reduce production prim_expr -> expr LPROJ expr
-- On MSOME reduce production prim_expr -> expr LPROJ expr
-- On MSET reduce production prim_expr -> expr LPROJ expr
-- On MONE reduce production prim_expr -> expr LPROJ expr
-- On MLONE reduce production prim_expr -> expr LPROJ expr
-- On MINUS reduce production prim_expr -> expr LPROJ expr
-- On LTE reduce production prim_expr -> expr LPROJ expr
-- On LT reduce production prim_expr -> expr LPROJ expr
-- On LPROJ reduce production prim_expr -> expr LPROJ expr
-- On LPAREN reduce production prim_expr -> expr LPROJ expr
-- On LONE_ARROW_SOME reduce production prim_expr -> expr LPROJ expr
-- On LONE_ARROW_SET reduce production prim_expr -> expr LPROJ expr
-- On LONE_ARROW_ONE reduce production prim_expr -> expr LPROJ expr
-- On LONE_ARROW_LONE reduce production prim_expr -> expr LPROJ expr
-- On LONE reduce production prim_expr -> expr LPROJ expr
-- On LET reduce production prim_expr -> expr LPROJ expr
-- On LBRACE reduce production prim_expr -> expr LPROJ expr
-- On INTER reduce production prim_expr -> expr LPROJ expr
-- On INT reduce production prim_expr -> expr LPROJ expr
-- On IN reduce production prim_expr -> expr LPROJ expr
-- On IMPLIES reduce production prim_expr -> expr LPROJ expr
-- On IFF reduce production prim_expr -> expr LPROJ expr
-- On IDENT reduce production prim_expr -> expr LPROJ expr
-- On IDEN reduce production prim_expr -> expr LPROJ expr
-- On HISTORICALLY reduce production prim_expr -> expr LPROJ expr
-- On GTE reduce production prim_expr -> expr LPROJ expr
-- On GT reduce production prim_expr -> expr LPROJ expr
-- On FUN reduce production prim_expr -> expr LPROJ expr
-- On FACT reduce production prim_expr -> expr LPROJ expr
-- On EVENTUALLY reduce production prim_expr -> expr LPROJ expr
-- On EQ reduce production prim_expr -> expr LPROJ expr
-- On EOF reduce production prim_expr -> expr LPROJ expr
-- On ENUM reduce production prim_expr -> expr LPROJ expr
-- On ELSE reduce production prim_expr -> expr LPROJ expr
-- On COMMA reduce production prim_expr -> expr LPROJ expr
-- On CHECK reduce production prim_expr -> expr LPROJ expr
-- On CARET reduce production prim_expr -> expr LPROJ expr
-- On CARD reduce production prim_expr -> expr LPROJ expr
-- On BAR reduce production prim_expr -> expr LPROJ expr
-- On AT reduce production prim_expr -> expr LPROJ expr
-- On ASSERT reduce production prim_expr -> expr LPROJ expr
-- On AND reduce production prim_expr -> expr LPROJ expr
-- On ALWAYS reduce production prim_expr -> expr LPROJ expr
-- On ABSTRACT reduce production prim_expr -> expr LPROJ expr

State 167:
## Known stack suffix:
## expr DOT
## LR(1) items:
prim_expr -> expr DOT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 168
-- On block shift to state 169
## Reductions:

State 168:
## Known stack suffix:
## expr DOT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr DOT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On PRIME shift to state 146
## Reductions:
-- On VAR reduce production prim_expr -> expr DOT expr
-- On UNTIL reduce production prim_expr -> expr DOT expr
-- On UNIV reduce production prim_expr -> expr DOT expr
-- On TILDE reduce production prim_expr -> expr DOT expr
-- On THIS reduce production prim_expr -> expr DOT expr
-- On STAR reduce production prim_expr -> expr DOT expr
-- On SOME_ARROW_SOME reduce production prim_expr -> expr DOT expr
-- On SOME_ARROW_SET reduce production prim_expr -> expr DOT expr
-- On SOME_ARROW_ONE reduce production prim_expr -> expr DOT expr
-- On SOME_ARROW_LONE reduce production prim_expr -> expr DOT expr
-- On SOME reduce production prim_expr -> expr DOT expr
-- On SINCE reduce production prim_expr -> expr DOT expr
-- On SIG reduce production prim_expr -> expr DOT expr
-- On SET_ARROW_SOME reduce production prim_expr -> expr DOT expr
-- On SET_ARROW_SET reduce production prim_expr -> expr DOT expr
-- On SET_ARROW_ONE reduce production prim_expr -> expr DOT expr
-- On SET_ARROW_LONE reduce production prim_expr -> expr DOT expr
-- On RUN reduce production prim_expr -> expr DOT expr
-- On RPROJ reduce production prim_expr -> expr DOT expr
-- On RPAREN reduce production prim_expr -> expr DOT expr
-- On RBRACKET reduce production prim_expr -> expr DOT expr
-- On RBRACE reduce production prim_expr -> expr DOT expr
-- On QSOME reduce production prim_expr -> expr DOT expr
-- On QONE reduce production prim_expr -> expr DOT expr
-- On QNO reduce production prim_expr -> expr DOT expr
-- On QLONE reduce production prim_expr -> expr DOT expr
-- On QALL reduce production prim_expr -> expr DOT expr
-- On PRIVATE reduce production prim_expr -> expr DOT expr
-- On PREVIOUS reduce production prim_expr -> expr DOT expr
-- On PRED reduce production prim_expr -> expr DOT expr
-- On PLUS reduce production prim_expr -> expr DOT expr
-- On OVERRIDE reduce production prim_expr -> expr DOT expr
-- On OR reduce production prim_expr -> expr DOT expr
-- On ONE_ARROW_SOME reduce production prim_expr -> expr DOT expr
-- On ONE_ARROW_SET reduce production prim_expr -> expr DOT expr
-- On ONE_ARROW_ONE reduce production prim_expr -> expr DOT expr
-- On ONE_ARROW_LONE reduce production prim_expr -> expr DOT expr
-- On ONE reduce production prim_expr -> expr DOT expr
-- On ONCE reduce production prim_expr -> expr DOT expr
-- On NUMBER reduce production prim_expr -> expr DOT expr
-- On NOT reduce production prim_expr -> expr DOT expr
-- On NONE reduce production prim_expr -> expr DOT expr
-- On NO reduce production prim_expr -> expr DOT expr
-- On NICKNAME reduce production prim_expr -> expr DOT expr
-- On NEXT reduce production prim_expr -> expr DOT expr
-- On NEQ reduce production prim_expr -> expr DOT expr
-- On MSOME reduce production prim_expr -> expr DOT expr
-- On MSET reduce production prim_expr -> expr DOT expr
-- On MONE reduce production prim_expr -> expr DOT expr
-- On MLONE reduce production prim_expr -> expr DOT expr
-- On MINUS reduce production prim_expr -> expr DOT expr
-- On LTE reduce production prim_expr -> expr DOT expr
-- On LT reduce production prim_expr -> expr DOT expr
-- On LPROJ reduce production prim_expr -> expr DOT expr
-- On LPAREN reduce production prim_expr -> expr DOT expr
-- On LONE_ARROW_SOME reduce production prim_expr -> expr DOT expr
-- On LONE_ARROW_SET reduce production prim_expr -> expr DOT expr
-- On LONE_ARROW_ONE reduce production prim_expr -> expr DOT expr
-- On LONE_ARROW_LONE reduce production prim_expr -> expr DOT expr
-- On LONE reduce production prim_expr -> expr DOT expr
-- On LET reduce production prim_expr -> expr DOT expr
-- On LBRACKET reduce production prim_expr -> expr DOT expr
-- On LBRACE reduce production prim_expr -> expr DOT expr
-- On INTER reduce production prim_expr -> expr DOT expr
-- On INT reduce production prim_expr -> expr DOT expr
-- On IN reduce production prim_expr -> expr DOT expr
-- On IMPLIES reduce production prim_expr -> expr DOT expr
-- On IFF reduce production prim_expr -> expr DOT expr
-- On IDENT reduce production prim_expr -> expr DOT expr
-- On IDEN reduce production prim_expr -> expr DOT expr
-- On HISTORICALLY reduce production prim_expr -> expr DOT expr
-- On GTE reduce production prim_expr -> expr DOT expr
-- On GT reduce production prim_expr -> expr DOT expr
-- On FUN reduce production prim_expr -> expr DOT expr
-- On FACT reduce production prim_expr -> expr DOT expr
-- On EVENTUALLY reduce production prim_expr -> expr DOT expr
-- On EQ reduce production prim_expr -> expr DOT expr
-- On EOF reduce production prim_expr -> expr DOT expr
-- On ENUM reduce production prim_expr -> expr DOT expr
-- On ELSE reduce production prim_expr -> expr DOT expr
-- On DOT reduce production prim_expr -> expr DOT expr
-- On COMMA reduce production prim_expr -> expr DOT expr
-- On CHECK reduce production prim_expr -> expr DOT expr
-- On CARET reduce production prim_expr -> expr DOT expr
-- On CARD reduce production prim_expr -> expr DOT expr
-- On BAR reduce production prim_expr -> expr DOT expr
-- On AT reduce production prim_expr -> expr DOT expr
-- On ASSERT reduce production prim_expr -> expr DOT expr
-- On AND reduce production prim_expr -> expr DOT expr
-- On ALWAYS reduce production prim_expr -> expr DOT expr
-- On ABSTRACT reduce production prim_expr -> expr DOT expr

State 169:
## Known stack suffix:
## block
## LR(1) items:
prim_expr -> block . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> block

State 170:
## Known stack suffix:
## expr LONE_ARROW_SOME
## LR(1) items:
prim_expr -> expr LONE_ARROW_SOME . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 171
-- On block shift to state 169
## Reductions:

State 171:
## Known stack suffix:
## expr LONE_ARROW_SOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LONE_ARROW_SOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On UNTIL reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On UNIV reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On TILDE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On THIS reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On STAR reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On SOME reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On SINCE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On SIG reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On RUN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On RPAREN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On RBRACKET reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On RBRACE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On QSOME reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On QONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On QNO reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On QLONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On QALL reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On PRIVATE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On PREVIOUS reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On PRED reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On PLUS reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On OVERRIDE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On OR reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ONCE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NUMBER reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NOT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NO reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NICKNAME reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NEXT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On NEQ reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On MSOME reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On MSET reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On MONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On MLONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On MINUS reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LTE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LPAREN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LONE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LET reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On LBRACE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On INTER reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On INT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On IN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On IMPLIES reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On IFF reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On IDENT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On IDEN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On HISTORICALLY reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On GTE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On GT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On FUN reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On FACT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On EVENTUALLY reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On EQ reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On EOF reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ENUM reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ELSE reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On COMMA reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On CHECK reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On CARET reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On CARD reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On BAR reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On AT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ASSERT reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On AND reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ALWAYS reduce production prim_expr -> expr LONE_ARROW_SOME expr
-- On ABSTRACT reduce production prim_expr -> expr LONE_ARROW_SOME expr

State 172:
## Known stack suffix:
## expr LONE_ARROW_SET
## LR(1) items:
prim_expr -> expr LONE_ARROW_SET . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 173
-- On block shift to state 169
## Reductions:

State 173:
## Known stack suffix:
## expr LONE_ARROW_SET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LONE_ARROW_SET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On UNTIL reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On UNIV reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On TILDE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On THIS reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On STAR reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On SOME reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On SINCE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On SIG reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On RUN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On RPAREN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On RBRACKET reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On RBRACE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On QSOME reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On QONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On QNO reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On QLONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On QALL reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On PRIVATE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On PREVIOUS reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On PRED reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On PLUS reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On OVERRIDE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On OR reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ONCE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NUMBER reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NOT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NO reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NICKNAME reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NEXT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On NEQ reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On MSOME reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On MSET reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On MONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On MLONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On MINUS reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LTE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LPAREN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LONE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LET reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On LBRACE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On INTER reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On INT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On IN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On IMPLIES reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On IFF reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On IDENT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On IDEN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On HISTORICALLY reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On GTE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On GT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On FUN reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On FACT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On EVENTUALLY reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On EQ reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On EOF reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ENUM reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ELSE reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On COMMA reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On CHECK reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On CARET reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On CARD reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On BAR reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On AT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ASSERT reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On AND reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ALWAYS reduce production prim_expr -> expr LONE_ARROW_SET expr
-- On ABSTRACT reduce production prim_expr -> expr LONE_ARROW_SET expr

State 174:
## Known stack suffix:
## expr LONE_ARROW_ONE
## LR(1) items:
prim_expr -> expr LONE_ARROW_ONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 175
-- On block shift to state 169
## Reductions:

State 175:
## Known stack suffix:
## expr LONE_ARROW_ONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LONE_ARROW_ONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On UNTIL reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On UNIV reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On TILDE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On THIS reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On STAR reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On SOME reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On SINCE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On SIG reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On RUN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On RPAREN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On RBRACKET reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On RBRACE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On QSOME reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On QONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On QNO reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On QLONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On QALL reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On PRIVATE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On PREVIOUS reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On PRED reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On PLUS reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On OVERRIDE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On OR reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ONCE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NUMBER reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NOT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NO reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NICKNAME reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NEXT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On NEQ reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On MSOME reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On MSET reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On MONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On MLONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On MINUS reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LTE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LPAREN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LONE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LET reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On LBRACE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On INTER reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On INT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On IN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On IMPLIES reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On IFF reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On IDENT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On IDEN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On HISTORICALLY reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On GTE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On GT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On FUN reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On FACT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On EVENTUALLY reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On EQ reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On EOF reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ENUM reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ELSE reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On COMMA reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On CHECK reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On CARET reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On CARD reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On BAR reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On AT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ASSERT reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On AND reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ALWAYS reduce production prim_expr -> expr LONE_ARROW_ONE expr
-- On ABSTRACT reduce production prim_expr -> expr LONE_ARROW_ONE expr

State 176:
## Known stack suffix:
## expr LONE_ARROW_LONE
## LR(1) items:
prim_expr -> expr LONE_ARROW_LONE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 177
-- On block shift to state 169
## Reductions:

State 177:
## Known stack suffix:
## expr LONE_ARROW_LONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LONE_ARROW_LONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On UNTIL reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On UNIV reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On TILDE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On THIS reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On STAR reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On SOME reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On SINCE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On SIG reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On RUN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On RPAREN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On RBRACKET reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On RBRACE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On QSOME reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On QONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On QNO reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On QLONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On QALL reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On PRIVATE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On PREVIOUS reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On PRED reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On PLUS reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On OVERRIDE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On OR reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ONCE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NUMBER reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NOT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NO reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NICKNAME reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NEXT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On NEQ reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On MSOME reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On MSET reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On MONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On MLONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On MINUS reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LTE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LPAREN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LONE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LET reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On LBRACE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On INTER reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On INT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On IN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On IMPLIES reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On IFF reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On IDENT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On IDEN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On HISTORICALLY reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On GTE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On GT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On FUN reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On FACT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On EVENTUALLY reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On EQ reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On EOF reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ENUM reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ELSE reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On COMMA reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On CHECK reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On CARET reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On CARD reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On BAR reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On AT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ASSERT reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On AND reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ALWAYS reduce production prim_expr -> expr LONE_ARROW_LONE expr
-- On ABSTRACT reduce production prim_expr -> expr LONE_ARROW_LONE expr

State 178:
## Known stack suffix:
## expr INTER
## LR(1) items:
prim_expr -> expr INTER . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 179
-- On block shift to state 169
## Reductions:

State 179:
## Known stack suffix:
## expr INTER expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr INTER expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr INTER expr
-- On UNTIL reduce production prim_expr -> expr INTER expr
-- On UNIV reduce production prim_expr -> expr INTER expr
-- On TILDE reduce production prim_expr -> expr INTER expr
-- On THIS reduce production prim_expr -> expr INTER expr
-- On STAR reduce production prim_expr -> expr INTER expr
-- On SOME reduce production prim_expr -> expr INTER expr
-- On SINCE reduce production prim_expr -> expr INTER expr
-- On SIG reduce production prim_expr -> expr INTER expr
-- On RUN reduce production prim_expr -> expr INTER expr
-- On RPAREN reduce production prim_expr -> expr INTER expr
-- On RBRACKET reduce production prim_expr -> expr INTER expr
-- On RBRACE reduce production prim_expr -> expr INTER expr
-- On QSOME reduce production prim_expr -> expr INTER expr
-- On QONE reduce production prim_expr -> expr INTER expr
-- On QNO reduce production prim_expr -> expr INTER expr
-- On QLONE reduce production prim_expr -> expr INTER expr
-- On QALL reduce production prim_expr -> expr INTER expr
-- On PRIVATE reduce production prim_expr -> expr INTER expr
-- On PREVIOUS reduce production prim_expr -> expr INTER expr
-- On PRED reduce production prim_expr -> expr INTER expr
-- On PLUS reduce production prim_expr -> expr INTER expr
-- On OVERRIDE reduce production prim_expr -> expr INTER expr
-- On OR reduce production prim_expr -> expr INTER expr
-- On ONE reduce production prim_expr -> expr INTER expr
-- On ONCE reduce production prim_expr -> expr INTER expr
-- On NUMBER reduce production prim_expr -> expr INTER expr
-- On NOT reduce production prim_expr -> expr INTER expr
-- On NONE reduce production prim_expr -> expr INTER expr
-- On NO reduce production prim_expr -> expr INTER expr
-- On NICKNAME reduce production prim_expr -> expr INTER expr
-- On NEXT reduce production prim_expr -> expr INTER expr
-- On NEQ reduce production prim_expr -> expr INTER expr
-- On MSOME reduce production prim_expr -> expr INTER expr
-- On MSET reduce production prim_expr -> expr INTER expr
-- On MONE reduce production prim_expr -> expr INTER expr
-- On MLONE reduce production prim_expr -> expr INTER expr
-- On MINUS reduce production prim_expr -> expr INTER expr
-- On LTE reduce production prim_expr -> expr INTER expr
-- On LT reduce production prim_expr -> expr INTER expr
-- On LPAREN reduce production prim_expr -> expr INTER expr
-- On LONE reduce production prim_expr -> expr INTER expr
-- On LET reduce production prim_expr -> expr INTER expr
-- On LBRACE reduce production prim_expr -> expr INTER expr
-- On INTER reduce production prim_expr -> expr INTER expr
-- On INT reduce production prim_expr -> expr INTER expr
-- On IN reduce production prim_expr -> expr INTER expr
-- On IMPLIES reduce production prim_expr -> expr INTER expr
-- On IFF reduce production prim_expr -> expr INTER expr
-- On IDENT reduce production prim_expr -> expr INTER expr
-- On IDEN reduce production prim_expr -> expr INTER expr
-- On HISTORICALLY reduce production prim_expr -> expr INTER expr
-- On GTE reduce production prim_expr -> expr INTER expr
-- On GT reduce production prim_expr -> expr INTER expr
-- On FUN reduce production prim_expr -> expr INTER expr
-- On FACT reduce production prim_expr -> expr INTER expr
-- On EVENTUALLY reduce production prim_expr -> expr INTER expr
-- On EQ reduce production prim_expr -> expr INTER expr
-- On EOF reduce production prim_expr -> expr INTER expr
-- On ENUM reduce production prim_expr -> expr INTER expr
-- On ELSE reduce production prim_expr -> expr INTER expr
-- On COMMA reduce production prim_expr -> expr INTER expr
-- On CHECK reduce production prim_expr -> expr INTER expr
-- On CARET reduce production prim_expr -> expr INTER expr
-- On CARD reduce production prim_expr -> expr INTER expr
-- On BAR reduce production prim_expr -> expr INTER expr
-- On AT reduce production prim_expr -> expr INTER expr
-- On ASSERT reduce production prim_expr -> expr INTER expr
-- On AND reduce production prim_expr -> expr INTER expr
-- On ALWAYS reduce production prim_expr -> expr INTER expr
-- On ABSTRACT reduce production prim_expr -> expr INTER expr

State 180:
## Known stack suffix:
## expr NOT
## LR(1) items:
prim_expr -> expr NOT . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On NEQ shift to state 181
-- On LTE shift to state 185
-- On LT shift to state 187
-- On IN shift to state 189
-- On GTE shift to state 191
-- On GT shift to state 193
-- On EQ shift to state 195
## Reductions:

State 181:
## Known stack suffix:
## expr NOT NEQ
## LR(1) items:
prim_expr -> expr NOT NEQ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 182
-- On block shift to state 169
## Reductions:

State 182:
## Known stack suffix:
## expr NOT NEQ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT NEQ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT NEQ expr
-- On UNTIL reduce production prim_expr -> expr NOT NEQ expr
-- On UNIV reduce production prim_expr -> expr NOT NEQ expr
-- On TILDE reduce production prim_expr -> expr NOT NEQ expr
-- On THIS reduce production prim_expr -> expr NOT NEQ expr
-- On STAR reduce production prim_expr -> expr NOT NEQ expr
-- On SOME reduce production prim_expr -> expr NOT NEQ expr
-- On SINCE reduce production prim_expr -> expr NOT NEQ expr
-- On SIG reduce production prim_expr -> expr NOT NEQ expr
-- On RUN reduce production prim_expr -> expr NOT NEQ expr
-- On RPAREN reduce production prim_expr -> expr NOT NEQ expr
-- On RBRACKET reduce production prim_expr -> expr NOT NEQ expr
-- On RBRACE reduce production prim_expr -> expr NOT NEQ expr
-- On QSOME reduce production prim_expr -> expr NOT NEQ expr
-- On QONE reduce production prim_expr -> expr NOT NEQ expr
-- On QNO reduce production prim_expr -> expr NOT NEQ expr
-- On QLONE reduce production prim_expr -> expr NOT NEQ expr
-- On QALL reduce production prim_expr -> expr NOT NEQ expr
-- On PRIVATE reduce production prim_expr -> expr NOT NEQ expr
-- On PREVIOUS reduce production prim_expr -> expr NOT NEQ expr
-- On PRED reduce production prim_expr -> expr NOT NEQ expr
-- On OR reduce production prim_expr -> expr NOT NEQ expr
-- On ONE reduce production prim_expr -> expr NOT NEQ expr
-- On ONCE reduce production prim_expr -> expr NOT NEQ expr
-- On NUMBER reduce production prim_expr -> expr NOT NEQ expr
-- On NOT reduce production prim_expr -> expr NOT NEQ expr
-- On NONE reduce production prim_expr -> expr NOT NEQ expr
-- On NO reduce production prim_expr -> expr NOT NEQ expr
-- On NICKNAME reduce production prim_expr -> expr NOT NEQ expr
-- On NEXT reduce production prim_expr -> expr NOT NEQ expr
-- On MSOME reduce production prim_expr -> expr NOT NEQ expr
-- On MSET reduce production prim_expr -> expr NOT NEQ expr
-- On MONE reduce production prim_expr -> expr NOT NEQ expr
-- On MLONE reduce production prim_expr -> expr NOT NEQ expr
-- On LPAREN reduce production prim_expr -> expr NOT NEQ expr
-- On LONE reduce production prim_expr -> expr NOT NEQ expr
-- On LET reduce production prim_expr -> expr NOT NEQ expr
-- On LBRACE reduce production prim_expr -> expr NOT NEQ expr
-- On INT reduce production prim_expr -> expr NOT NEQ expr
-- On IMPLIES reduce production prim_expr -> expr NOT NEQ expr
-- On IFF reduce production prim_expr -> expr NOT NEQ expr
-- On IDENT reduce production prim_expr -> expr NOT NEQ expr
-- On IDEN reduce production prim_expr -> expr NOT NEQ expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT NEQ expr
-- On FUN reduce production prim_expr -> expr NOT NEQ expr
-- On FACT reduce production prim_expr -> expr NOT NEQ expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT NEQ expr
-- On EOF reduce production prim_expr -> expr NOT NEQ expr
-- On ENUM reduce production prim_expr -> expr NOT NEQ expr
-- On ELSE reduce production prim_expr -> expr NOT NEQ expr
-- On COMMA reduce production prim_expr -> expr NOT NEQ expr
-- On CHECK reduce production prim_expr -> expr NOT NEQ expr
-- On CARET reduce production prim_expr -> expr NOT NEQ expr
-- On CARD reduce production prim_expr -> expr NOT NEQ expr
-- On BAR reduce production prim_expr -> expr NOT NEQ expr
-- On AT reduce production prim_expr -> expr NOT NEQ expr
-- On ASSERT reduce production prim_expr -> expr NOT NEQ expr
-- On AND reduce production prim_expr -> expr NOT NEQ expr
-- On ALWAYS reduce production prim_expr -> expr NOT NEQ expr
-- On ABSTRACT reduce production prim_expr -> expr NOT NEQ expr

State 183:
## Known stack suffix:
## expr MINUS
## LR(1) items:
prim_expr -> expr MINUS . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 184
-- On block shift to state 169
## Reductions:

State 184:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr MINUS expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr MINUS expr
-- On UNTIL reduce production prim_expr -> expr MINUS expr
-- On UNIV reduce production prim_expr -> expr MINUS expr
-- On TILDE reduce production prim_expr -> expr MINUS expr
-- On THIS reduce production prim_expr -> expr MINUS expr
-- On STAR reduce production prim_expr -> expr MINUS expr
-- On SOME reduce production prim_expr -> expr MINUS expr
-- On SINCE reduce production prim_expr -> expr MINUS expr
-- On SIG reduce production prim_expr -> expr MINUS expr
-- On RUN reduce production prim_expr -> expr MINUS expr
-- On RPAREN reduce production prim_expr -> expr MINUS expr
-- On RBRACKET reduce production prim_expr -> expr MINUS expr
-- On RBRACE reduce production prim_expr -> expr MINUS expr
-- On QSOME reduce production prim_expr -> expr MINUS expr
-- On QONE reduce production prim_expr -> expr MINUS expr
-- On QNO reduce production prim_expr -> expr MINUS expr
-- On QLONE reduce production prim_expr -> expr MINUS expr
-- On QALL reduce production prim_expr -> expr MINUS expr
-- On PRIVATE reduce production prim_expr -> expr MINUS expr
-- On PREVIOUS reduce production prim_expr -> expr MINUS expr
-- On PRED reduce production prim_expr -> expr MINUS expr
-- On PLUS reduce production prim_expr -> expr MINUS expr
-- On OR reduce production prim_expr -> expr MINUS expr
-- On ONE reduce production prim_expr -> expr MINUS expr
-- On ONCE reduce production prim_expr -> expr MINUS expr
-- On NUMBER reduce production prim_expr -> expr MINUS expr
-- On NOT reduce production prim_expr -> expr MINUS expr
-- On NONE reduce production prim_expr -> expr MINUS expr
-- On NO reduce production prim_expr -> expr MINUS expr
-- On NICKNAME reduce production prim_expr -> expr MINUS expr
-- On NEXT reduce production prim_expr -> expr MINUS expr
-- On NEQ reduce production prim_expr -> expr MINUS expr
-- On MSOME reduce production prim_expr -> expr MINUS expr
-- On MSET reduce production prim_expr -> expr MINUS expr
-- On MONE reduce production prim_expr -> expr MINUS expr
-- On MLONE reduce production prim_expr -> expr MINUS expr
-- On MINUS reduce production prim_expr -> expr MINUS expr
-- On LTE reduce production prim_expr -> expr MINUS expr
-- On LT reduce production prim_expr -> expr MINUS expr
-- On LPAREN reduce production prim_expr -> expr MINUS expr
-- On LONE reduce production prim_expr -> expr MINUS expr
-- On LET reduce production prim_expr -> expr MINUS expr
-- On LBRACE reduce production prim_expr -> expr MINUS expr
-- On INT reduce production prim_expr -> expr MINUS expr
-- On IN reduce production prim_expr -> expr MINUS expr
-- On IMPLIES reduce production prim_expr -> expr MINUS expr
-- On IFF reduce production prim_expr -> expr MINUS expr
-- On IDENT reduce production prim_expr -> expr MINUS expr
-- On IDEN reduce production prim_expr -> expr MINUS expr
-- On HISTORICALLY reduce production prim_expr -> expr MINUS expr
-- On GTE reduce production prim_expr -> expr MINUS expr
-- On GT reduce production prim_expr -> expr MINUS expr
-- On FUN reduce production prim_expr -> expr MINUS expr
-- On FACT reduce production prim_expr -> expr MINUS expr
-- On EVENTUALLY reduce production prim_expr -> expr MINUS expr
-- On EQ reduce production prim_expr -> expr MINUS expr
-- On EOF reduce production prim_expr -> expr MINUS expr
-- On ENUM reduce production prim_expr -> expr MINUS expr
-- On ELSE reduce production prim_expr -> expr MINUS expr
-- On COMMA reduce production prim_expr -> expr MINUS expr
-- On CHECK reduce production prim_expr -> expr MINUS expr
-- On CARET reduce production prim_expr -> expr MINUS expr
-- On CARD reduce production prim_expr -> expr MINUS expr
-- On BAR reduce production prim_expr -> expr MINUS expr
-- On AT reduce production prim_expr -> expr MINUS expr
-- On ASSERT reduce production prim_expr -> expr MINUS expr
-- On AND reduce production prim_expr -> expr MINUS expr
-- On ALWAYS reduce production prim_expr -> expr MINUS expr
-- On ABSTRACT reduce production prim_expr -> expr MINUS expr

State 185:
## Known stack suffix:
## expr NOT LTE
## LR(1) items:
prim_expr -> expr NOT LTE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 186
-- On block shift to state 169
## Reductions:

State 186:
## Known stack suffix:
## expr NOT LTE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT LTE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT LTE expr
-- On UNTIL reduce production prim_expr -> expr NOT LTE expr
-- On UNIV reduce production prim_expr -> expr NOT LTE expr
-- On TILDE reduce production prim_expr -> expr NOT LTE expr
-- On THIS reduce production prim_expr -> expr NOT LTE expr
-- On STAR reduce production prim_expr -> expr NOT LTE expr
-- On SOME reduce production prim_expr -> expr NOT LTE expr
-- On SINCE reduce production prim_expr -> expr NOT LTE expr
-- On SIG reduce production prim_expr -> expr NOT LTE expr
-- On RUN reduce production prim_expr -> expr NOT LTE expr
-- On RPAREN reduce production prim_expr -> expr NOT LTE expr
-- On RBRACKET reduce production prim_expr -> expr NOT LTE expr
-- On RBRACE reduce production prim_expr -> expr NOT LTE expr
-- On QSOME reduce production prim_expr -> expr NOT LTE expr
-- On QONE reduce production prim_expr -> expr NOT LTE expr
-- On QNO reduce production prim_expr -> expr NOT LTE expr
-- On QLONE reduce production prim_expr -> expr NOT LTE expr
-- On QALL reduce production prim_expr -> expr NOT LTE expr
-- On PRIVATE reduce production prim_expr -> expr NOT LTE expr
-- On PREVIOUS reduce production prim_expr -> expr NOT LTE expr
-- On PRED reduce production prim_expr -> expr NOT LTE expr
-- On OR reduce production prim_expr -> expr NOT LTE expr
-- On ONE reduce production prim_expr -> expr NOT LTE expr
-- On ONCE reduce production prim_expr -> expr NOT LTE expr
-- On NUMBER reduce production prim_expr -> expr NOT LTE expr
-- On NOT reduce production prim_expr -> expr NOT LTE expr
-- On NONE reduce production prim_expr -> expr NOT LTE expr
-- On NO reduce production prim_expr -> expr NOT LTE expr
-- On NICKNAME reduce production prim_expr -> expr NOT LTE expr
-- On NEXT reduce production prim_expr -> expr NOT LTE expr
-- On MSOME reduce production prim_expr -> expr NOT LTE expr
-- On MSET reduce production prim_expr -> expr NOT LTE expr
-- On MONE reduce production prim_expr -> expr NOT LTE expr
-- On MLONE reduce production prim_expr -> expr NOT LTE expr
-- On LPAREN reduce production prim_expr -> expr NOT LTE expr
-- On LONE reduce production prim_expr -> expr NOT LTE expr
-- On LET reduce production prim_expr -> expr NOT LTE expr
-- On LBRACE reduce production prim_expr -> expr NOT LTE expr
-- On INT reduce production prim_expr -> expr NOT LTE expr
-- On IMPLIES reduce production prim_expr -> expr NOT LTE expr
-- On IFF reduce production prim_expr -> expr NOT LTE expr
-- On IDENT reduce production prim_expr -> expr NOT LTE expr
-- On IDEN reduce production prim_expr -> expr NOT LTE expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT LTE expr
-- On FUN reduce production prim_expr -> expr NOT LTE expr
-- On FACT reduce production prim_expr -> expr NOT LTE expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT LTE expr
-- On EOF reduce production prim_expr -> expr NOT LTE expr
-- On ENUM reduce production prim_expr -> expr NOT LTE expr
-- On ELSE reduce production prim_expr -> expr NOT LTE expr
-- On COMMA reduce production prim_expr -> expr NOT LTE expr
-- On CHECK reduce production prim_expr -> expr NOT LTE expr
-- On CARET reduce production prim_expr -> expr NOT LTE expr
-- On CARD reduce production prim_expr -> expr NOT LTE expr
-- On BAR reduce production prim_expr -> expr NOT LTE expr
-- On AT reduce production prim_expr -> expr NOT LTE expr
-- On ASSERT reduce production prim_expr -> expr NOT LTE expr
-- On AND reduce production prim_expr -> expr NOT LTE expr
-- On ALWAYS reduce production prim_expr -> expr NOT LTE expr
-- On ABSTRACT reduce production prim_expr -> expr NOT LTE expr

State 187:
## Known stack suffix:
## expr NOT LT
## LR(1) items:
prim_expr -> expr NOT LT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 188
-- On block shift to state 169
## Reductions:

State 188:
## Known stack suffix:
## expr NOT LT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT LT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT LT expr
-- On UNTIL reduce production prim_expr -> expr NOT LT expr
-- On UNIV reduce production prim_expr -> expr NOT LT expr
-- On TILDE reduce production prim_expr -> expr NOT LT expr
-- On THIS reduce production prim_expr -> expr NOT LT expr
-- On STAR reduce production prim_expr -> expr NOT LT expr
-- On SOME reduce production prim_expr -> expr NOT LT expr
-- On SINCE reduce production prim_expr -> expr NOT LT expr
-- On SIG reduce production prim_expr -> expr NOT LT expr
-- On RUN reduce production prim_expr -> expr NOT LT expr
-- On RPAREN reduce production prim_expr -> expr NOT LT expr
-- On RBRACKET reduce production prim_expr -> expr NOT LT expr
-- On RBRACE reduce production prim_expr -> expr NOT LT expr
-- On QSOME reduce production prim_expr -> expr NOT LT expr
-- On QONE reduce production prim_expr -> expr NOT LT expr
-- On QNO reduce production prim_expr -> expr NOT LT expr
-- On QLONE reduce production prim_expr -> expr NOT LT expr
-- On QALL reduce production prim_expr -> expr NOT LT expr
-- On PRIVATE reduce production prim_expr -> expr NOT LT expr
-- On PREVIOUS reduce production prim_expr -> expr NOT LT expr
-- On PRED reduce production prim_expr -> expr NOT LT expr
-- On OR reduce production prim_expr -> expr NOT LT expr
-- On ONE reduce production prim_expr -> expr NOT LT expr
-- On ONCE reduce production prim_expr -> expr NOT LT expr
-- On NUMBER reduce production prim_expr -> expr NOT LT expr
-- On NOT reduce production prim_expr -> expr NOT LT expr
-- On NONE reduce production prim_expr -> expr NOT LT expr
-- On NO reduce production prim_expr -> expr NOT LT expr
-- On NICKNAME reduce production prim_expr -> expr NOT LT expr
-- On NEXT reduce production prim_expr -> expr NOT LT expr
-- On MSOME reduce production prim_expr -> expr NOT LT expr
-- On MSET reduce production prim_expr -> expr NOT LT expr
-- On MONE reduce production prim_expr -> expr NOT LT expr
-- On MLONE reduce production prim_expr -> expr NOT LT expr
-- On LPAREN reduce production prim_expr -> expr NOT LT expr
-- On LONE reduce production prim_expr -> expr NOT LT expr
-- On LET reduce production prim_expr -> expr NOT LT expr
-- On LBRACE reduce production prim_expr -> expr NOT LT expr
-- On INT reduce production prim_expr -> expr NOT LT expr
-- On IMPLIES reduce production prim_expr -> expr NOT LT expr
-- On IFF reduce production prim_expr -> expr NOT LT expr
-- On IDENT reduce production prim_expr -> expr NOT LT expr
-- On IDEN reduce production prim_expr -> expr NOT LT expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT LT expr
-- On FUN reduce production prim_expr -> expr NOT LT expr
-- On FACT reduce production prim_expr -> expr NOT LT expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT LT expr
-- On EOF reduce production prim_expr -> expr NOT LT expr
-- On ENUM reduce production prim_expr -> expr NOT LT expr
-- On ELSE reduce production prim_expr -> expr NOT LT expr
-- On COMMA reduce production prim_expr -> expr NOT LT expr
-- On CHECK reduce production prim_expr -> expr NOT LT expr
-- On CARET reduce production prim_expr -> expr NOT LT expr
-- On CARD reduce production prim_expr -> expr NOT LT expr
-- On BAR reduce production prim_expr -> expr NOT LT expr
-- On AT reduce production prim_expr -> expr NOT LT expr
-- On ASSERT reduce production prim_expr -> expr NOT LT expr
-- On AND reduce production prim_expr -> expr NOT LT expr
-- On ALWAYS reduce production prim_expr -> expr NOT LT expr
-- On ABSTRACT reduce production prim_expr -> expr NOT LT expr

State 189:
## Known stack suffix:
## expr NOT IN
## LR(1) items:
prim_expr -> expr NOT IN . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 190
-- On block shift to state 169
## Reductions:

State 190:
## Known stack suffix:
## expr NOT IN expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT IN expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT IN expr
-- On UNTIL reduce production prim_expr -> expr NOT IN expr
-- On UNIV reduce production prim_expr -> expr NOT IN expr
-- On TILDE reduce production prim_expr -> expr NOT IN expr
-- On THIS reduce production prim_expr -> expr NOT IN expr
-- On STAR reduce production prim_expr -> expr NOT IN expr
-- On SOME reduce production prim_expr -> expr NOT IN expr
-- On SINCE reduce production prim_expr -> expr NOT IN expr
-- On SIG reduce production prim_expr -> expr NOT IN expr
-- On RUN reduce production prim_expr -> expr NOT IN expr
-- On RPAREN reduce production prim_expr -> expr NOT IN expr
-- On RBRACKET reduce production prim_expr -> expr NOT IN expr
-- On RBRACE reduce production prim_expr -> expr NOT IN expr
-- On QSOME reduce production prim_expr -> expr NOT IN expr
-- On QONE reduce production prim_expr -> expr NOT IN expr
-- On QNO reduce production prim_expr -> expr NOT IN expr
-- On QLONE reduce production prim_expr -> expr NOT IN expr
-- On QALL reduce production prim_expr -> expr NOT IN expr
-- On PRIVATE reduce production prim_expr -> expr NOT IN expr
-- On PREVIOUS reduce production prim_expr -> expr NOT IN expr
-- On PRED reduce production prim_expr -> expr NOT IN expr
-- On OR reduce production prim_expr -> expr NOT IN expr
-- On ONE reduce production prim_expr -> expr NOT IN expr
-- On ONCE reduce production prim_expr -> expr NOT IN expr
-- On NUMBER reduce production prim_expr -> expr NOT IN expr
-- On NOT reduce production prim_expr -> expr NOT IN expr
-- On NONE reduce production prim_expr -> expr NOT IN expr
-- On NO reduce production prim_expr -> expr NOT IN expr
-- On NICKNAME reduce production prim_expr -> expr NOT IN expr
-- On NEXT reduce production prim_expr -> expr NOT IN expr
-- On MSOME reduce production prim_expr -> expr NOT IN expr
-- On MSET reduce production prim_expr -> expr NOT IN expr
-- On MONE reduce production prim_expr -> expr NOT IN expr
-- On MLONE reduce production prim_expr -> expr NOT IN expr
-- On LPAREN reduce production prim_expr -> expr NOT IN expr
-- On LONE reduce production prim_expr -> expr NOT IN expr
-- On LET reduce production prim_expr -> expr NOT IN expr
-- On LBRACE reduce production prim_expr -> expr NOT IN expr
-- On INT reduce production prim_expr -> expr NOT IN expr
-- On IMPLIES reduce production prim_expr -> expr NOT IN expr
-- On IFF reduce production prim_expr -> expr NOT IN expr
-- On IDENT reduce production prim_expr -> expr NOT IN expr
-- On IDEN reduce production prim_expr -> expr NOT IN expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT IN expr
-- On FUN reduce production prim_expr -> expr NOT IN expr
-- On FACT reduce production prim_expr -> expr NOT IN expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT IN expr
-- On EOF reduce production prim_expr -> expr NOT IN expr
-- On ENUM reduce production prim_expr -> expr NOT IN expr
-- On ELSE reduce production prim_expr -> expr NOT IN expr
-- On COMMA reduce production prim_expr -> expr NOT IN expr
-- On CHECK reduce production prim_expr -> expr NOT IN expr
-- On CARET reduce production prim_expr -> expr NOT IN expr
-- On CARD reduce production prim_expr -> expr NOT IN expr
-- On BAR reduce production prim_expr -> expr NOT IN expr
-- On AT reduce production prim_expr -> expr NOT IN expr
-- On ASSERT reduce production prim_expr -> expr NOT IN expr
-- On AND reduce production prim_expr -> expr NOT IN expr
-- On ALWAYS reduce production prim_expr -> expr NOT IN expr
-- On ABSTRACT reduce production prim_expr -> expr NOT IN expr

State 191:
## Known stack suffix:
## expr NOT GTE
## LR(1) items:
prim_expr -> expr NOT GTE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 192
-- On block shift to state 169
## Reductions:

State 192:
## Known stack suffix:
## expr NOT GTE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT GTE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT GTE expr
-- On UNTIL reduce production prim_expr -> expr NOT GTE expr
-- On UNIV reduce production prim_expr -> expr NOT GTE expr
-- On TILDE reduce production prim_expr -> expr NOT GTE expr
-- On THIS reduce production prim_expr -> expr NOT GTE expr
-- On STAR reduce production prim_expr -> expr NOT GTE expr
-- On SOME reduce production prim_expr -> expr NOT GTE expr
-- On SINCE reduce production prim_expr -> expr NOT GTE expr
-- On SIG reduce production prim_expr -> expr NOT GTE expr
-- On RUN reduce production prim_expr -> expr NOT GTE expr
-- On RPAREN reduce production prim_expr -> expr NOT GTE expr
-- On RBRACKET reduce production prim_expr -> expr NOT GTE expr
-- On RBRACE reduce production prim_expr -> expr NOT GTE expr
-- On QSOME reduce production prim_expr -> expr NOT GTE expr
-- On QONE reduce production prim_expr -> expr NOT GTE expr
-- On QNO reduce production prim_expr -> expr NOT GTE expr
-- On QLONE reduce production prim_expr -> expr NOT GTE expr
-- On QALL reduce production prim_expr -> expr NOT GTE expr
-- On PRIVATE reduce production prim_expr -> expr NOT GTE expr
-- On PREVIOUS reduce production prim_expr -> expr NOT GTE expr
-- On PRED reduce production prim_expr -> expr NOT GTE expr
-- On OR reduce production prim_expr -> expr NOT GTE expr
-- On ONE reduce production prim_expr -> expr NOT GTE expr
-- On ONCE reduce production prim_expr -> expr NOT GTE expr
-- On NUMBER reduce production prim_expr -> expr NOT GTE expr
-- On NOT reduce production prim_expr -> expr NOT GTE expr
-- On NONE reduce production prim_expr -> expr NOT GTE expr
-- On NO reduce production prim_expr -> expr NOT GTE expr
-- On NICKNAME reduce production prim_expr -> expr NOT GTE expr
-- On NEXT reduce production prim_expr -> expr NOT GTE expr
-- On MSOME reduce production prim_expr -> expr NOT GTE expr
-- On MSET reduce production prim_expr -> expr NOT GTE expr
-- On MONE reduce production prim_expr -> expr NOT GTE expr
-- On MLONE reduce production prim_expr -> expr NOT GTE expr
-- On LPAREN reduce production prim_expr -> expr NOT GTE expr
-- On LONE reduce production prim_expr -> expr NOT GTE expr
-- On LET reduce production prim_expr -> expr NOT GTE expr
-- On LBRACE reduce production prim_expr -> expr NOT GTE expr
-- On INT reduce production prim_expr -> expr NOT GTE expr
-- On IMPLIES reduce production prim_expr -> expr NOT GTE expr
-- On IFF reduce production prim_expr -> expr NOT GTE expr
-- On IDENT reduce production prim_expr -> expr NOT GTE expr
-- On IDEN reduce production prim_expr -> expr NOT GTE expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT GTE expr
-- On FUN reduce production prim_expr -> expr NOT GTE expr
-- On FACT reduce production prim_expr -> expr NOT GTE expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT GTE expr
-- On EOF reduce production prim_expr -> expr NOT GTE expr
-- On ENUM reduce production prim_expr -> expr NOT GTE expr
-- On ELSE reduce production prim_expr -> expr NOT GTE expr
-- On COMMA reduce production prim_expr -> expr NOT GTE expr
-- On CHECK reduce production prim_expr -> expr NOT GTE expr
-- On CARET reduce production prim_expr -> expr NOT GTE expr
-- On CARD reduce production prim_expr -> expr NOT GTE expr
-- On BAR reduce production prim_expr -> expr NOT GTE expr
-- On AT reduce production prim_expr -> expr NOT GTE expr
-- On ASSERT reduce production prim_expr -> expr NOT GTE expr
-- On AND reduce production prim_expr -> expr NOT GTE expr
-- On ALWAYS reduce production prim_expr -> expr NOT GTE expr
-- On ABSTRACT reduce production prim_expr -> expr NOT GTE expr

State 193:
## Known stack suffix:
## expr NOT GT
## LR(1) items:
prim_expr -> expr NOT GT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 194
-- On block shift to state 169
## Reductions:

State 194:
## Known stack suffix:
## expr NOT GT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT GT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT GT expr
-- On UNTIL reduce production prim_expr -> expr NOT GT expr
-- On UNIV reduce production prim_expr -> expr NOT GT expr
-- On TILDE reduce production prim_expr -> expr NOT GT expr
-- On THIS reduce production prim_expr -> expr NOT GT expr
-- On STAR reduce production prim_expr -> expr NOT GT expr
-- On SOME reduce production prim_expr -> expr NOT GT expr
-- On SINCE reduce production prim_expr -> expr NOT GT expr
-- On SIG reduce production prim_expr -> expr NOT GT expr
-- On RUN reduce production prim_expr -> expr NOT GT expr
-- On RPAREN reduce production prim_expr -> expr NOT GT expr
-- On RBRACKET reduce production prim_expr -> expr NOT GT expr
-- On RBRACE reduce production prim_expr -> expr NOT GT expr
-- On QSOME reduce production prim_expr -> expr NOT GT expr
-- On QONE reduce production prim_expr -> expr NOT GT expr
-- On QNO reduce production prim_expr -> expr NOT GT expr
-- On QLONE reduce production prim_expr -> expr NOT GT expr
-- On QALL reduce production prim_expr -> expr NOT GT expr
-- On PRIVATE reduce production prim_expr -> expr NOT GT expr
-- On PREVIOUS reduce production prim_expr -> expr NOT GT expr
-- On PRED reduce production prim_expr -> expr NOT GT expr
-- On OR reduce production prim_expr -> expr NOT GT expr
-- On ONE reduce production prim_expr -> expr NOT GT expr
-- On ONCE reduce production prim_expr -> expr NOT GT expr
-- On NUMBER reduce production prim_expr -> expr NOT GT expr
-- On NOT reduce production prim_expr -> expr NOT GT expr
-- On NONE reduce production prim_expr -> expr NOT GT expr
-- On NO reduce production prim_expr -> expr NOT GT expr
-- On NICKNAME reduce production prim_expr -> expr NOT GT expr
-- On NEXT reduce production prim_expr -> expr NOT GT expr
-- On MSOME reduce production prim_expr -> expr NOT GT expr
-- On MSET reduce production prim_expr -> expr NOT GT expr
-- On MONE reduce production prim_expr -> expr NOT GT expr
-- On MLONE reduce production prim_expr -> expr NOT GT expr
-- On LPAREN reduce production prim_expr -> expr NOT GT expr
-- On LONE reduce production prim_expr -> expr NOT GT expr
-- On LET reduce production prim_expr -> expr NOT GT expr
-- On LBRACE reduce production prim_expr -> expr NOT GT expr
-- On INT reduce production prim_expr -> expr NOT GT expr
-- On IMPLIES reduce production prim_expr -> expr NOT GT expr
-- On IFF reduce production prim_expr -> expr NOT GT expr
-- On IDENT reduce production prim_expr -> expr NOT GT expr
-- On IDEN reduce production prim_expr -> expr NOT GT expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT GT expr
-- On FUN reduce production prim_expr -> expr NOT GT expr
-- On FACT reduce production prim_expr -> expr NOT GT expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT GT expr
-- On EOF reduce production prim_expr -> expr NOT GT expr
-- On ENUM reduce production prim_expr -> expr NOT GT expr
-- On ELSE reduce production prim_expr -> expr NOT GT expr
-- On COMMA reduce production prim_expr -> expr NOT GT expr
-- On CHECK reduce production prim_expr -> expr NOT GT expr
-- On CARET reduce production prim_expr -> expr NOT GT expr
-- On CARD reduce production prim_expr -> expr NOT GT expr
-- On BAR reduce production prim_expr -> expr NOT GT expr
-- On AT reduce production prim_expr -> expr NOT GT expr
-- On ASSERT reduce production prim_expr -> expr NOT GT expr
-- On AND reduce production prim_expr -> expr NOT GT expr
-- On ALWAYS reduce production prim_expr -> expr NOT GT expr
-- On ABSTRACT reduce production prim_expr -> expr NOT GT expr

State 195:
## Known stack suffix:
## expr NOT EQ
## LR(1) items:
prim_expr -> expr NOT EQ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 196
-- On block shift to state 169
## Reductions:

State 196:
## Known stack suffix:
## expr NOT EQ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NOT EQ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NOT EQ expr
-- On UNTIL reduce production prim_expr -> expr NOT EQ expr
-- On UNIV reduce production prim_expr -> expr NOT EQ expr
-- On TILDE reduce production prim_expr -> expr NOT EQ expr
-- On THIS reduce production prim_expr -> expr NOT EQ expr
-- On STAR reduce production prim_expr -> expr NOT EQ expr
-- On SOME reduce production prim_expr -> expr NOT EQ expr
-- On SINCE reduce production prim_expr -> expr NOT EQ expr
-- On SIG reduce production prim_expr -> expr NOT EQ expr
-- On RUN reduce production prim_expr -> expr NOT EQ expr
-- On RPAREN reduce production prim_expr -> expr NOT EQ expr
-- On RBRACKET reduce production prim_expr -> expr NOT EQ expr
-- On RBRACE reduce production prim_expr -> expr NOT EQ expr
-- On QSOME reduce production prim_expr -> expr NOT EQ expr
-- On QONE reduce production prim_expr -> expr NOT EQ expr
-- On QNO reduce production prim_expr -> expr NOT EQ expr
-- On QLONE reduce production prim_expr -> expr NOT EQ expr
-- On QALL reduce production prim_expr -> expr NOT EQ expr
-- On PRIVATE reduce production prim_expr -> expr NOT EQ expr
-- On PREVIOUS reduce production prim_expr -> expr NOT EQ expr
-- On PRED reduce production prim_expr -> expr NOT EQ expr
-- On OR reduce production prim_expr -> expr NOT EQ expr
-- On ONE reduce production prim_expr -> expr NOT EQ expr
-- On ONCE reduce production prim_expr -> expr NOT EQ expr
-- On NUMBER reduce production prim_expr -> expr NOT EQ expr
-- On NOT reduce production prim_expr -> expr NOT EQ expr
-- On NONE reduce production prim_expr -> expr NOT EQ expr
-- On NO reduce production prim_expr -> expr NOT EQ expr
-- On NICKNAME reduce production prim_expr -> expr NOT EQ expr
-- On NEXT reduce production prim_expr -> expr NOT EQ expr
-- On MSOME reduce production prim_expr -> expr NOT EQ expr
-- On MSET reduce production prim_expr -> expr NOT EQ expr
-- On MONE reduce production prim_expr -> expr NOT EQ expr
-- On MLONE reduce production prim_expr -> expr NOT EQ expr
-- On LPAREN reduce production prim_expr -> expr NOT EQ expr
-- On LONE reduce production prim_expr -> expr NOT EQ expr
-- On LET reduce production prim_expr -> expr NOT EQ expr
-- On LBRACE reduce production prim_expr -> expr NOT EQ expr
-- On INT reduce production prim_expr -> expr NOT EQ expr
-- On IMPLIES reduce production prim_expr -> expr NOT EQ expr
-- On IFF reduce production prim_expr -> expr NOT EQ expr
-- On IDENT reduce production prim_expr -> expr NOT EQ expr
-- On IDEN reduce production prim_expr -> expr NOT EQ expr
-- On HISTORICALLY reduce production prim_expr -> expr NOT EQ expr
-- On FUN reduce production prim_expr -> expr NOT EQ expr
-- On FACT reduce production prim_expr -> expr NOT EQ expr
-- On EVENTUALLY reduce production prim_expr -> expr NOT EQ expr
-- On EOF reduce production prim_expr -> expr NOT EQ expr
-- On ENUM reduce production prim_expr -> expr NOT EQ expr
-- On ELSE reduce production prim_expr -> expr NOT EQ expr
-- On COMMA reduce production prim_expr -> expr NOT EQ expr
-- On CHECK reduce production prim_expr -> expr NOT EQ expr
-- On CARET reduce production prim_expr -> expr NOT EQ expr
-- On CARD reduce production prim_expr -> expr NOT EQ expr
-- On BAR reduce production prim_expr -> expr NOT EQ expr
-- On AT reduce production prim_expr -> expr NOT EQ expr
-- On ASSERT reduce production prim_expr -> expr NOT EQ expr
-- On AND reduce production prim_expr -> expr NOT EQ expr
-- On ALWAYS reduce production prim_expr -> expr NOT EQ expr
-- On ABSTRACT reduce production prim_expr -> expr NOT EQ expr

State 197:
## Known stack suffix:
## expr NEQ
## LR(1) items:
prim_expr -> expr NEQ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 198
-- On block shift to state 169
## Reductions:

State 198:
## Known stack suffix:
## expr NEQ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr NEQ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr NEQ expr
-- On UNTIL reduce production prim_expr -> expr NEQ expr
-- On UNIV reduce production prim_expr -> expr NEQ expr
-- On TILDE reduce production prim_expr -> expr NEQ expr
-- On THIS reduce production prim_expr -> expr NEQ expr
-- On STAR reduce production prim_expr -> expr NEQ expr
-- On SOME reduce production prim_expr -> expr NEQ expr
-- On SINCE reduce production prim_expr -> expr NEQ expr
-- On SIG reduce production prim_expr -> expr NEQ expr
-- On RUN reduce production prim_expr -> expr NEQ expr
-- On RPAREN reduce production prim_expr -> expr NEQ expr
-- On RBRACKET reduce production prim_expr -> expr NEQ expr
-- On RBRACE reduce production prim_expr -> expr NEQ expr
-- On QSOME reduce production prim_expr -> expr NEQ expr
-- On QONE reduce production prim_expr -> expr NEQ expr
-- On QNO reduce production prim_expr -> expr NEQ expr
-- On QLONE reduce production prim_expr -> expr NEQ expr
-- On QALL reduce production prim_expr -> expr NEQ expr
-- On PRIVATE reduce production prim_expr -> expr NEQ expr
-- On PREVIOUS reduce production prim_expr -> expr NEQ expr
-- On PRED reduce production prim_expr -> expr NEQ expr
-- On OR reduce production prim_expr -> expr NEQ expr
-- On ONE reduce production prim_expr -> expr NEQ expr
-- On ONCE reduce production prim_expr -> expr NEQ expr
-- On NUMBER reduce production prim_expr -> expr NEQ expr
-- On NOT reduce production prim_expr -> expr NEQ expr
-- On NONE reduce production prim_expr -> expr NEQ expr
-- On NO reduce production prim_expr -> expr NEQ expr
-- On NICKNAME reduce production prim_expr -> expr NEQ expr
-- On NEXT reduce production prim_expr -> expr NEQ expr
-- On MSOME reduce production prim_expr -> expr NEQ expr
-- On MSET reduce production prim_expr -> expr NEQ expr
-- On MONE reduce production prim_expr -> expr NEQ expr
-- On MLONE reduce production prim_expr -> expr NEQ expr
-- On LPAREN reduce production prim_expr -> expr NEQ expr
-- On LONE reduce production prim_expr -> expr NEQ expr
-- On LET reduce production prim_expr -> expr NEQ expr
-- On LBRACE reduce production prim_expr -> expr NEQ expr
-- On INT reduce production prim_expr -> expr NEQ expr
-- On IMPLIES reduce production prim_expr -> expr NEQ expr
-- On IFF reduce production prim_expr -> expr NEQ expr
-- On IDENT reduce production prim_expr -> expr NEQ expr
-- On IDEN reduce production prim_expr -> expr NEQ expr
-- On HISTORICALLY reduce production prim_expr -> expr NEQ expr
-- On FUN reduce production prim_expr -> expr NEQ expr
-- On FACT reduce production prim_expr -> expr NEQ expr
-- On EVENTUALLY reduce production prim_expr -> expr NEQ expr
-- On EOF reduce production prim_expr -> expr NEQ expr
-- On ENUM reduce production prim_expr -> expr NEQ expr
-- On ELSE reduce production prim_expr -> expr NEQ expr
-- On COMMA reduce production prim_expr -> expr NEQ expr
-- On CHECK reduce production prim_expr -> expr NEQ expr
-- On CARET reduce production prim_expr -> expr NEQ expr
-- On CARD reduce production prim_expr -> expr NEQ expr
-- On BAR reduce production prim_expr -> expr NEQ expr
-- On AT reduce production prim_expr -> expr NEQ expr
-- On ASSERT reduce production prim_expr -> expr NEQ expr
-- On AND reduce production prim_expr -> expr NEQ expr
-- On ALWAYS reduce production prim_expr -> expr NEQ expr
-- On ABSTRACT reduce production prim_expr -> expr NEQ expr

State 199:
## Known stack suffix:
## expr LTE
## LR(1) items:
prim_expr -> expr LTE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 200
-- On block shift to state 169
## Reductions:

State 200:
## Known stack suffix:
## expr LTE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LTE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LTE expr
-- On UNTIL reduce production prim_expr -> expr LTE expr
-- On UNIV reduce production prim_expr -> expr LTE expr
-- On TILDE reduce production prim_expr -> expr LTE expr
-- On THIS reduce production prim_expr -> expr LTE expr
-- On STAR reduce production prim_expr -> expr LTE expr
-- On SOME reduce production prim_expr -> expr LTE expr
-- On SINCE reduce production prim_expr -> expr LTE expr
-- On SIG reduce production prim_expr -> expr LTE expr
-- On RUN reduce production prim_expr -> expr LTE expr
-- On RPAREN reduce production prim_expr -> expr LTE expr
-- On RBRACKET reduce production prim_expr -> expr LTE expr
-- On RBRACE reduce production prim_expr -> expr LTE expr
-- On QSOME reduce production prim_expr -> expr LTE expr
-- On QONE reduce production prim_expr -> expr LTE expr
-- On QNO reduce production prim_expr -> expr LTE expr
-- On QLONE reduce production prim_expr -> expr LTE expr
-- On QALL reduce production prim_expr -> expr LTE expr
-- On PRIVATE reduce production prim_expr -> expr LTE expr
-- On PREVIOUS reduce production prim_expr -> expr LTE expr
-- On PRED reduce production prim_expr -> expr LTE expr
-- On OR reduce production prim_expr -> expr LTE expr
-- On ONE reduce production prim_expr -> expr LTE expr
-- On ONCE reduce production prim_expr -> expr LTE expr
-- On NUMBER reduce production prim_expr -> expr LTE expr
-- On NOT reduce production prim_expr -> expr LTE expr
-- On NONE reduce production prim_expr -> expr LTE expr
-- On NO reduce production prim_expr -> expr LTE expr
-- On NICKNAME reduce production prim_expr -> expr LTE expr
-- On NEXT reduce production prim_expr -> expr LTE expr
-- On MSOME reduce production prim_expr -> expr LTE expr
-- On MSET reduce production prim_expr -> expr LTE expr
-- On MONE reduce production prim_expr -> expr LTE expr
-- On MLONE reduce production prim_expr -> expr LTE expr
-- On LPAREN reduce production prim_expr -> expr LTE expr
-- On LONE reduce production prim_expr -> expr LTE expr
-- On LET reduce production prim_expr -> expr LTE expr
-- On LBRACE reduce production prim_expr -> expr LTE expr
-- On INT reduce production prim_expr -> expr LTE expr
-- On IMPLIES reduce production prim_expr -> expr LTE expr
-- On IFF reduce production prim_expr -> expr LTE expr
-- On IDENT reduce production prim_expr -> expr LTE expr
-- On IDEN reduce production prim_expr -> expr LTE expr
-- On HISTORICALLY reduce production prim_expr -> expr LTE expr
-- On FUN reduce production prim_expr -> expr LTE expr
-- On FACT reduce production prim_expr -> expr LTE expr
-- On EVENTUALLY reduce production prim_expr -> expr LTE expr
-- On EOF reduce production prim_expr -> expr LTE expr
-- On ENUM reduce production prim_expr -> expr LTE expr
-- On ELSE reduce production prim_expr -> expr LTE expr
-- On COMMA reduce production prim_expr -> expr LTE expr
-- On CHECK reduce production prim_expr -> expr LTE expr
-- On CARET reduce production prim_expr -> expr LTE expr
-- On CARD reduce production prim_expr -> expr LTE expr
-- On BAR reduce production prim_expr -> expr LTE expr
-- On AT reduce production prim_expr -> expr LTE expr
-- On ASSERT reduce production prim_expr -> expr LTE expr
-- On AND reduce production prim_expr -> expr LTE expr
-- On ALWAYS reduce production prim_expr -> expr LTE expr
-- On ABSTRACT reduce production prim_expr -> expr LTE expr

State 201:
## Known stack suffix:
## expr LT
## LR(1) items:
prim_expr -> expr LT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 202
-- On block shift to state 169
## Reductions:

State 202:
## Known stack suffix:
## expr LT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr LT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr LT expr
-- On UNTIL reduce production prim_expr -> expr LT expr
-- On UNIV reduce production prim_expr -> expr LT expr
-- On TILDE reduce production prim_expr -> expr LT expr
-- On THIS reduce production prim_expr -> expr LT expr
-- On STAR reduce production prim_expr -> expr LT expr
-- On SOME reduce production prim_expr -> expr LT expr
-- On SINCE reduce production prim_expr -> expr LT expr
-- On SIG reduce production prim_expr -> expr LT expr
-- On RUN reduce production prim_expr -> expr LT expr
-- On RPAREN reduce production prim_expr -> expr LT expr
-- On RBRACKET reduce production prim_expr -> expr LT expr
-- On RBRACE reduce production prim_expr -> expr LT expr
-- On QSOME reduce production prim_expr -> expr LT expr
-- On QONE reduce production prim_expr -> expr LT expr
-- On QNO reduce production prim_expr -> expr LT expr
-- On QLONE reduce production prim_expr -> expr LT expr
-- On QALL reduce production prim_expr -> expr LT expr
-- On PRIVATE reduce production prim_expr -> expr LT expr
-- On PREVIOUS reduce production prim_expr -> expr LT expr
-- On PRED reduce production prim_expr -> expr LT expr
-- On OR reduce production prim_expr -> expr LT expr
-- On ONE reduce production prim_expr -> expr LT expr
-- On ONCE reduce production prim_expr -> expr LT expr
-- On NUMBER reduce production prim_expr -> expr LT expr
-- On NOT reduce production prim_expr -> expr LT expr
-- On NONE reduce production prim_expr -> expr LT expr
-- On NO reduce production prim_expr -> expr LT expr
-- On NICKNAME reduce production prim_expr -> expr LT expr
-- On NEXT reduce production prim_expr -> expr LT expr
-- On MSOME reduce production prim_expr -> expr LT expr
-- On MSET reduce production prim_expr -> expr LT expr
-- On MONE reduce production prim_expr -> expr LT expr
-- On MLONE reduce production prim_expr -> expr LT expr
-- On LPAREN reduce production prim_expr -> expr LT expr
-- On LONE reduce production prim_expr -> expr LT expr
-- On LET reduce production prim_expr -> expr LT expr
-- On LBRACE reduce production prim_expr -> expr LT expr
-- On INT reduce production prim_expr -> expr LT expr
-- On IMPLIES reduce production prim_expr -> expr LT expr
-- On IFF reduce production prim_expr -> expr LT expr
-- On IDENT reduce production prim_expr -> expr LT expr
-- On IDEN reduce production prim_expr -> expr LT expr
-- On HISTORICALLY reduce production prim_expr -> expr LT expr
-- On FUN reduce production prim_expr -> expr LT expr
-- On FACT reduce production prim_expr -> expr LT expr
-- On EVENTUALLY reduce production prim_expr -> expr LT expr
-- On EOF reduce production prim_expr -> expr LT expr
-- On ENUM reduce production prim_expr -> expr LT expr
-- On ELSE reduce production prim_expr -> expr LT expr
-- On COMMA reduce production prim_expr -> expr LT expr
-- On CHECK reduce production prim_expr -> expr LT expr
-- On CARET reduce production prim_expr -> expr LT expr
-- On CARD reduce production prim_expr -> expr LT expr
-- On BAR reduce production prim_expr -> expr LT expr
-- On AT reduce production prim_expr -> expr LT expr
-- On ASSERT reduce production prim_expr -> expr LT expr
-- On AND reduce production prim_expr -> expr LT expr
-- On ALWAYS reduce production prim_expr -> expr LT expr
-- On ABSTRACT reduce production prim_expr -> expr LT expr

State 203:
## Known stack suffix:
## expr IN
## LR(1) items:
prim_expr -> expr IN . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 204
-- On block shift to state 169
## Reductions:

State 204:
## Known stack suffix:
## expr IN expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IN expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr IN expr
-- On UNTIL reduce production prim_expr -> expr IN expr
-- On UNIV reduce production prim_expr -> expr IN expr
-- On TILDE reduce production prim_expr -> expr IN expr
-- On THIS reduce production prim_expr -> expr IN expr
-- On STAR reduce production prim_expr -> expr IN expr
-- On SOME reduce production prim_expr -> expr IN expr
-- On SINCE reduce production prim_expr -> expr IN expr
-- On SIG reduce production prim_expr -> expr IN expr
-- On RUN reduce production prim_expr -> expr IN expr
-- On RPAREN reduce production prim_expr -> expr IN expr
-- On RBRACKET reduce production prim_expr -> expr IN expr
-- On RBRACE reduce production prim_expr -> expr IN expr
-- On QSOME reduce production prim_expr -> expr IN expr
-- On QONE reduce production prim_expr -> expr IN expr
-- On QNO reduce production prim_expr -> expr IN expr
-- On QLONE reduce production prim_expr -> expr IN expr
-- On QALL reduce production prim_expr -> expr IN expr
-- On PRIVATE reduce production prim_expr -> expr IN expr
-- On PREVIOUS reduce production prim_expr -> expr IN expr
-- On PRED reduce production prim_expr -> expr IN expr
-- On OR reduce production prim_expr -> expr IN expr
-- On ONE reduce production prim_expr -> expr IN expr
-- On ONCE reduce production prim_expr -> expr IN expr
-- On NUMBER reduce production prim_expr -> expr IN expr
-- On NOT reduce production prim_expr -> expr IN expr
-- On NONE reduce production prim_expr -> expr IN expr
-- On NO reduce production prim_expr -> expr IN expr
-- On NICKNAME reduce production prim_expr -> expr IN expr
-- On NEXT reduce production prim_expr -> expr IN expr
-- On MSOME reduce production prim_expr -> expr IN expr
-- On MSET reduce production prim_expr -> expr IN expr
-- On MONE reduce production prim_expr -> expr IN expr
-- On MLONE reduce production prim_expr -> expr IN expr
-- On LPAREN reduce production prim_expr -> expr IN expr
-- On LONE reduce production prim_expr -> expr IN expr
-- On LET reduce production prim_expr -> expr IN expr
-- On LBRACE reduce production prim_expr -> expr IN expr
-- On INT reduce production prim_expr -> expr IN expr
-- On IMPLIES reduce production prim_expr -> expr IN expr
-- On IFF reduce production prim_expr -> expr IN expr
-- On IDENT reduce production prim_expr -> expr IN expr
-- On IDEN reduce production prim_expr -> expr IN expr
-- On HISTORICALLY reduce production prim_expr -> expr IN expr
-- On FUN reduce production prim_expr -> expr IN expr
-- On FACT reduce production prim_expr -> expr IN expr
-- On EVENTUALLY reduce production prim_expr -> expr IN expr
-- On EOF reduce production prim_expr -> expr IN expr
-- On ENUM reduce production prim_expr -> expr IN expr
-- On ELSE reduce production prim_expr -> expr IN expr
-- On COMMA reduce production prim_expr -> expr IN expr
-- On CHECK reduce production prim_expr -> expr IN expr
-- On CARET reduce production prim_expr -> expr IN expr
-- On CARD reduce production prim_expr -> expr IN expr
-- On BAR reduce production prim_expr -> expr IN expr
-- On AT reduce production prim_expr -> expr IN expr
-- On ASSERT reduce production prim_expr -> expr IN expr
-- On AND reduce production prim_expr -> expr IN expr
-- On ALWAYS reduce production prim_expr -> expr IN expr
-- On ABSTRACT reduce production prim_expr -> expr IN expr

State 205:
## Known stack suffix:
## expr GTE
## LR(1) items:
prim_expr -> expr GTE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 206
-- On block shift to state 169
## Reductions:

State 206:
## Known stack suffix:
## expr GTE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr GTE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr GTE expr
-- On UNTIL reduce production prim_expr -> expr GTE expr
-- On UNIV reduce production prim_expr -> expr GTE expr
-- On TILDE reduce production prim_expr -> expr GTE expr
-- On THIS reduce production prim_expr -> expr GTE expr
-- On STAR reduce production prim_expr -> expr GTE expr
-- On SOME reduce production prim_expr -> expr GTE expr
-- On SINCE reduce production prim_expr -> expr GTE expr
-- On SIG reduce production prim_expr -> expr GTE expr
-- On RUN reduce production prim_expr -> expr GTE expr
-- On RPAREN reduce production prim_expr -> expr GTE expr
-- On RBRACKET reduce production prim_expr -> expr GTE expr
-- On RBRACE reduce production prim_expr -> expr GTE expr
-- On QSOME reduce production prim_expr -> expr GTE expr
-- On QONE reduce production prim_expr -> expr GTE expr
-- On QNO reduce production prim_expr -> expr GTE expr
-- On QLONE reduce production prim_expr -> expr GTE expr
-- On QALL reduce production prim_expr -> expr GTE expr
-- On PRIVATE reduce production prim_expr -> expr GTE expr
-- On PREVIOUS reduce production prim_expr -> expr GTE expr
-- On PRED reduce production prim_expr -> expr GTE expr
-- On OR reduce production prim_expr -> expr GTE expr
-- On ONE reduce production prim_expr -> expr GTE expr
-- On ONCE reduce production prim_expr -> expr GTE expr
-- On NUMBER reduce production prim_expr -> expr GTE expr
-- On NOT reduce production prim_expr -> expr GTE expr
-- On NONE reduce production prim_expr -> expr GTE expr
-- On NO reduce production prim_expr -> expr GTE expr
-- On NICKNAME reduce production prim_expr -> expr GTE expr
-- On NEXT reduce production prim_expr -> expr GTE expr
-- On MSOME reduce production prim_expr -> expr GTE expr
-- On MSET reduce production prim_expr -> expr GTE expr
-- On MONE reduce production prim_expr -> expr GTE expr
-- On MLONE reduce production prim_expr -> expr GTE expr
-- On LPAREN reduce production prim_expr -> expr GTE expr
-- On LONE reduce production prim_expr -> expr GTE expr
-- On LET reduce production prim_expr -> expr GTE expr
-- On LBRACE reduce production prim_expr -> expr GTE expr
-- On INT reduce production prim_expr -> expr GTE expr
-- On IMPLIES reduce production prim_expr -> expr GTE expr
-- On IFF reduce production prim_expr -> expr GTE expr
-- On IDENT reduce production prim_expr -> expr GTE expr
-- On IDEN reduce production prim_expr -> expr GTE expr
-- On HISTORICALLY reduce production prim_expr -> expr GTE expr
-- On FUN reduce production prim_expr -> expr GTE expr
-- On FACT reduce production prim_expr -> expr GTE expr
-- On EVENTUALLY reduce production prim_expr -> expr GTE expr
-- On EOF reduce production prim_expr -> expr GTE expr
-- On ENUM reduce production prim_expr -> expr GTE expr
-- On ELSE reduce production prim_expr -> expr GTE expr
-- On COMMA reduce production prim_expr -> expr GTE expr
-- On CHECK reduce production prim_expr -> expr GTE expr
-- On CARET reduce production prim_expr -> expr GTE expr
-- On CARD reduce production prim_expr -> expr GTE expr
-- On BAR reduce production prim_expr -> expr GTE expr
-- On AT reduce production prim_expr -> expr GTE expr
-- On ASSERT reduce production prim_expr -> expr GTE expr
-- On AND reduce production prim_expr -> expr GTE expr
-- On ALWAYS reduce production prim_expr -> expr GTE expr
-- On ABSTRACT reduce production prim_expr -> expr GTE expr

State 207:
## Known stack suffix:
## expr GT
## LR(1) items:
prim_expr -> expr GT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 208
-- On block shift to state 169
## Reductions:

State 208:
## Known stack suffix:
## expr GT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr GT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr GT expr
-- On UNTIL reduce production prim_expr -> expr GT expr
-- On UNIV reduce production prim_expr -> expr GT expr
-- On TILDE reduce production prim_expr -> expr GT expr
-- On THIS reduce production prim_expr -> expr GT expr
-- On STAR reduce production prim_expr -> expr GT expr
-- On SOME reduce production prim_expr -> expr GT expr
-- On SINCE reduce production prim_expr -> expr GT expr
-- On SIG reduce production prim_expr -> expr GT expr
-- On RUN reduce production prim_expr -> expr GT expr
-- On RPAREN reduce production prim_expr -> expr GT expr
-- On RBRACKET reduce production prim_expr -> expr GT expr
-- On RBRACE reduce production prim_expr -> expr GT expr
-- On QSOME reduce production prim_expr -> expr GT expr
-- On QONE reduce production prim_expr -> expr GT expr
-- On QNO reduce production prim_expr -> expr GT expr
-- On QLONE reduce production prim_expr -> expr GT expr
-- On QALL reduce production prim_expr -> expr GT expr
-- On PRIVATE reduce production prim_expr -> expr GT expr
-- On PREVIOUS reduce production prim_expr -> expr GT expr
-- On PRED reduce production prim_expr -> expr GT expr
-- On OR reduce production prim_expr -> expr GT expr
-- On ONE reduce production prim_expr -> expr GT expr
-- On ONCE reduce production prim_expr -> expr GT expr
-- On NUMBER reduce production prim_expr -> expr GT expr
-- On NOT reduce production prim_expr -> expr GT expr
-- On NONE reduce production prim_expr -> expr GT expr
-- On NO reduce production prim_expr -> expr GT expr
-- On NICKNAME reduce production prim_expr -> expr GT expr
-- On NEXT reduce production prim_expr -> expr GT expr
-- On MSOME reduce production prim_expr -> expr GT expr
-- On MSET reduce production prim_expr -> expr GT expr
-- On MONE reduce production prim_expr -> expr GT expr
-- On MLONE reduce production prim_expr -> expr GT expr
-- On LPAREN reduce production prim_expr -> expr GT expr
-- On LONE reduce production prim_expr -> expr GT expr
-- On LET reduce production prim_expr -> expr GT expr
-- On LBRACE reduce production prim_expr -> expr GT expr
-- On INT reduce production prim_expr -> expr GT expr
-- On IMPLIES reduce production prim_expr -> expr GT expr
-- On IFF reduce production prim_expr -> expr GT expr
-- On IDENT reduce production prim_expr -> expr GT expr
-- On IDEN reduce production prim_expr -> expr GT expr
-- On HISTORICALLY reduce production prim_expr -> expr GT expr
-- On FUN reduce production prim_expr -> expr GT expr
-- On FACT reduce production prim_expr -> expr GT expr
-- On EVENTUALLY reduce production prim_expr -> expr GT expr
-- On EOF reduce production prim_expr -> expr GT expr
-- On ENUM reduce production prim_expr -> expr GT expr
-- On ELSE reduce production prim_expr -> expr GT expr
-- On COMMA reduce production prim_expr -> expr GT expr
-- On CHECK reduce production prim_expr -> expr GT expr
-- On CARET reduce production prim_expr -> expr GT expr
-- On CARD reduce production prim_expr -> expr GT expr
-- On BAR reduce production prim_expr -> expr GT expr
-- On AT reduce production prim_expr -> expr GT expr
-- On ASSERT reduce production prim_expr -> expr GT expr
-- On AND reduce production prim_expr -> expr GT expr
-- On ALWAYS reduce production prim_expr -> expr GT expr
-- On ABSTRACT reduce production prim_expr -> expr GT expr

State 209:
## Known stack suffix:
## expr EQ
## LR(1) items:
prim_expr -> expr EQ . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 210
-- On block shift to state 169
## Reductions:

State 210:
## Known stack suffix:
## expr EQ expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr EQ expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr EQ expr
-- On UNTIL reduce production prim_expr -> expr EQ expr
-- On UNIV reduce production prim_expr -> expr EQ expr
-- On TILDE reduce production prim_expr -> expr EQ expr
-- On THIS reduce production prim_expr -> expr EQ expr
-- On STAR reduce production prim_expr -> expr EQ expr
-- On SOME reduce production prim_expr -> expr EQ expr
-- On SINCE reduce production prim_expr -> expr EQ expr
-- On SIG reduce production prim_expr -> expr EQ expr
-- On RUN reduce production prim_expr -> expr EQ expr
-- On RPAREN reduce production prim_expr -> expr EQ expr
-- On RBRACKET reduce production prim_expr -> expr EQ expr
-- On RBRACE reduce production prim_expr -> expr EQ expr
-- On QSOME reduce production prim_expr -> expr EQ expr
-- On QONE reduce production prim_expr -> expr EQ expr
-- On QNO reduce production prim_expr -> expr EQ expr
-- On QLONE reduce production prim_expr -> expr EQ expr
-- On QALL reduce production prim_expr -> expr EQ expr
-- On PRIVATE reduce production prim_expr -> expr EQ expr
-- On PREVIOUS reduce production prim_expr -> expr EQ expr
-- On PRED reduce production prim_expr -> expr EQ expr
-- On OR reduce production prim_expr -> expr EQ expr
-- On ONE reduce production prim_expr -> expr EQ expr
-- On ONCE reduce production prim_expr -> expr EQ expr
-- On NUMBER reduce production prim_expr -> expr EQ expr
-- On NOT reduce production prim_expr -> expr EQ expr
-- On NONE reduce production prim_expr -> expr EQ expr
-- On NO reduce production prim_expr -> expr EQ expr
-- On NICKNAME reduce production prim_expr -> expr EQ expr
-- On NEXT reduce production prim_expr -> expr EQ expr
-- On MSOME reduce production prim_expr -> expr EQ expr
-- On MSET reduce production prim_expr -> expr EQ expr
-- On MONE reduce production prim_expr -> expr EQ expr
-- On MLONE reduce production prim_expr -> expr EQ expr
-- On LPAREN reduce production prim_expr -> expr EQ expr
-- On LONE reduce production prim_expr -> expr EQ expr
-- On LET reduce production prim_expr -> expr EQ expr
-- On LBRACE reduce production prim_expr -> expr EQ expr
-- On INT reduce production prim_expr -> expr EQ expr
-- On IMPLIES reduce production prim_expr -> expr EQ expr
-- On IFF reduce production prim_expr -> expr EQ expr
-- On IDENT reduce production prim_expr -> expr EQ expr
-- On IDEN reduce production prim_expr -> expr EQ expr
-- On HISTORICALLY reduce production prim_expr -> expr EQ expr
-- On FUN reduce production prim_expr -> expr EQ expr
-- On FACT reduce production prim_expr -> expr EQ expr
-- On EVENTUALLY reduce production prim_expr -> expr EQ expr
-- On EOF reduce production prim_expr -> expr EQ expr
-- On ENUM reduce production prim_expr -> expr EQ expr
-- On ELSE reduce production prim_expr -> expr EQ expr
-- On COMMA reduce production prim_expr -> expr EQ expr
-- On CHECK reduce production prim_expr -> expr EQ expr
-- On CARET reduce production prim_expr -> expr EQ expr
-- On CARD reduce production prim_expr -> expr EQ expr
-- On BAR reduce production prim_expr -> expr EQ expr
-- On AT reduce production prim_expr -> expr EQ expr
-- On ASSERT reduce production prim_expr -> expr EQ expr
-- On AND reduce production prim_expr -> expr EQ expr
-- On ALWAYS reduce production prim_expr -> expr EQ expr
-- On ABSTRACT reduce production prim_expr -> expr EQ expr

State 211:
## Known stack suffix:
## expr SINCE
## LR(1) items:
prim_expr -> expr SINCE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 212
-- On block shift to state 169
## Reductions:

State 212:
## Known stack suffix:
## expr SINCE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr SINCE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr SINCE expr
-- On UNTIL reduce production prim_expr -> expr SINCE expr
-- On UNIV reduce production prim_expr -> expr SINCE expr
-- On TILDE reduce production prim_expr -> expr SINCE expr
-- On THIS reduce production prim_expr -> expr SINCE expr
-- On STAR reduce production prim_expr -> expr SINCE expr
-- On SOME reduce production prim_expr -> expr SINCE expr
-- On SINCE reduce production prim_expr -> expr SINCE expr
-- On SIG reduce production prim_expr -> expr SINCE expr
-- On RUN reduce production prim_expr -> expr SINCE expr
-- On RPAREN reduce production prim_expr -> expr SINCE expr
-- On RBRACKET reduce production prim_expr -> expr SINCE expr
-- On RBRACE reduce production prim_expr -> expr SINCE expr
-- On QSOME reduce production prim_expr -> expr SINCE expr
-- On QONE reduce production prim_expr -> expr SINCE expr
-- On QNO reduce production prim_expr -> expr SINCE expr
-- On QLONE reduce production prim_expr -> expr SINCE expr
-- On QALL reduce production prim_expr -> expr SINCE expr
-- On PRIVATE reduce production prim_expr -> expr SINCE expr
-- On PREVIOUS reduce production prim_expr -> expr SINCE expr
-- On PRED reduce production prim_expr -> expr SINCE expr
-- On OR reduce production prim_expr -> expr SINCE expr
-- On ONE reduce production prim_expr -> expr SINCE expr
-- On ONCE reduce production prim_expr -> expr SINCE expr
-- On NUMBER reduce production prim_expr -> expr SINCE expr
-- On NONE reduce production prim_expr -> expr SINCE expr
-- On NO reduce production prim_expr -> expr SINCE expr
-- On NICKNAME reduce production prim_expr -> expr SINCE expr
-- On NEXT reduce production prim_expr -> expr SINCE expr
-- On MSOME reduce production prim_expr -> expr SINCE expr
-- On MSET reduce production prim_expr -> expr SINCE expr
-- On MONE reduce production prim_expr -> expr SINCE expr
-- On MLONE reduce production prim_expr -> expr SINCE expr
-- On LPAREN reduce production prim_expr -> expr SINCE expr
-- On LONE reduce production prim_expr -> expr SINCE expr
-- On LET reduce production prim_expr -> expr SINCE expr
-- On LBRACE reduce production prim_expr -> expr SINCE expr
-- On INT reduce production prim_expr -> expr SINCE expr
-- On IMPLIES reduce production prim_expr -> expr SINCE expr
-- On IFF reduce production prim_expr -> expr SINCE expr
-- On IDENT reduce production prim_expr -> expr SINCE expr
-- On IDEN reduce production prim_expr -> expr SINCE expr
-- On HISTORICALLY reduce production prim_expr -> expr SINCE expr
-- On FUN reduce production prim_expr -> expr SINCE expr
-- On FACT reduce production prim_expr -> expr SINCE expr
-- On EVENTUALLY reduce production prim_expr -> expr SINCE expr
-- On EOF reduce production prim_expr -> expr SINCE expr
-- On ENUM reduce production prim_expr -> expr SINCE expr
-- On ELSE reduce production prim_expr -> expr SINCE expr
-- On COMMA reduce production prim_expr -> expr SINCE expr
-- On CHECK reduce production prim_expr -> expr SINCE expr
-- On CARET reduce production prim_expr -> expr SINCE expr
-- On CARD reduce production prim_expr -> expr SINCE expr
-- On BAR reduce production prim_expr -> expr SINCE expr
-- On AT reduce production prim_expr -> expr SINCE expr
-- On ASSERT reduce production prim_expr -> expr SINCE expr
-- On AND reduce production prim_expr -> expr SINCE expr
-- On ALWAYS reduce production prim_expr -> expr SINCE expr
-- On ABSTRACT reduce production prim_expr -> expr SINCE expr

State 213:
## Known stack suffix:
## expr OR
## LR(1) items:
prim_expr -> expr OR . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 214
-- On block shift to state 169
## Reductions:

State 214:
## Known stack suffix:
## expr OR expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr OR expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production prim_expr -> expr OR expr
-- On UNIV reduce production prim_expr -> expr OR expr
-- On TILDE reduce production prim_expr -> expr OR expr
-- On THIS reduce production prim_expr -> expr OR expr
-- On STAR reduce production prim_expr -> expr OR expr
-- On SOME reduce production prim_expr -> expr OR expr
-- On SIG reduce production prim_expr -> expr OR expr
-- On RUN reduce production prim_expr -> expr OR expr
-- On RPAREN reduce production prim_expr -> expr OR expr
-- On RBRACKET reduce production prim_expr -> expr OR expr
-- On RBRACE reduce production prim_expr -> expr OR expr
-- On QSOME reduce production prim_expr -> expr OR expr
-- On QONE reduce production prim_expr -> expr OR expr
-- On QNO reduce production prim_expr -> expr OR expr
-- On QLONE reduce production prim_expr -> expr OR expr
-- On QALL reduce production prim_expr -> expr OR expr
-- On PRIVATE reduce production prim_expr -> expr OR expr
-- On PREVIOUS reduce production prim_expr -> expr OR expr
-- On PRED reduce production prim_expr -> expr OR expr
-- On OR reduce production prim_expr -> expr OR expr
-- On ONE reduce production prim_expr -> expr OR expr
-- On ONCE reduce production prim_expr -> expr OR expr
-- On NUMBER reduce production prim_expr -> expr OR expr
-- On NONE reduce production prim_expr -> expr OR expr
-- On NO reduce production prim_expr -> expr OR expr
-- On NICKNAME reduce production prim_expr -> expr OR expr
-- On NEXT reduce production prim_expr -> expr OR expr
-- On MSOME reduce production prim_expr -> expr OR expr
-- On MSET reduce production prim_expr -> expr OR expr
-- On MONE reduce production prim_expr -> expr OR expr
-- On MLONE reduce production prim_expr -> expr OR expr
-- On LPAREN reduce production prim_expr -> expr OR expr
-- On LONE reduce production prim_expr -> expr OR expr
-- On LET reduce production prim_expr -> expr OR expr
-- On LBRACE reduce production prim_expr -> expr OR expr
-- On INT reduce production prim_expr -> expr OR expr
-- On IDENT reduce production prim_expr -> expr OR expr
-- On IDEN reduce production prim_expr -> expr OR expr
-- On HISTORICALLY reduce production prim_expr -> expr OR expr
-- On FUN reduce production prim_expr -> expr OR expr
-- On FACT reduce production prim_expr -> expr OR expr
-- On EVENTUALLY reduce production prim_expr -> expr OR expr
-- On EOF reduce production prim_expr -> expr OR expr
-- On ENUM reduce production prim_expr -> expr OR expr
-- On ELSE reduce production prim_expr -> expr OR expr
-- On COMMA reduce production prim_expr -> expr OR expr
-- On CHECK reduce production prim_expr -> expr OR expr
-- On CARET reduce production prim_expr -> expr OR expr
-- On CARD reduce production prim_expr -> expr OR expr
-- On BAR reduce production prim_expr -> expr OR expr
-- On AT reduce production prim_expr -> expr OR expr
-- On ASSERT reduce production prim_expr -> expr OR expr
-- On ALWAYS reduce production prim_expr -> expr OR expr
-- On ABSTRACT reduce production prim_expr -> expr OR expr

State 215:
## Known stack suffix:
## expr IMPLIES
## LR(1) items:
prim_expr -> expr IMPLIES . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IMPLIES . expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 216
-- On block shift to state 169
## Reductions:

State 216:
## Known stack suffix:
## expr IMPLIES expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IMPLIES expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IMPLIES expr . ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On ELSE shift to state 217
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production prim_expr -> expr IMPLIES expr
-- On UNIV reduce production prim_expr -> expr IMPLIES expr
-- On TILDE reduce production prim_expr -> expr IMPLIES expr
-- On THIS reduce production prim_expr -> expr IMPLIES expr
-- On STAR reduce production prim_expr -> expr IMPLIES expr
-- On SOME reduce production prim_expr -> expr IMPLIES expr
-- On SIG reduce production prim_expr -> expr IMPLIES expr
-- On RUN reduce production prim_expr -> expr IMPLIES expr
-- On RPAREN reduce production prim_expr -> expr IMPLIES expr
-- On RBRACKET reduce production prim_expr -> expr IMPLIES expr
-- On RBRACE reduce production prim_expr -> expr IMPLIES expr
-- On QSOME reduce production prim_expr -> expr IMPLIES expr
-- On QONE reduce production prim_expr -> expr IMPLIES expr
-- On QNO reduce production prim_expr -> expr IMPLIES expr
-- On QLONE reduce production prim_expr -> expr IMPLIES expr
-- On QALL reduce production prim_expr -> expr IMPLIES expr
-- On PRIVATE reduce production prim_expr -> expr IMPLIES expr
-- On PREVIOUS reduce production prim_expr -> expr IMPLIES expr
-- On PRED reduce production prim_expr -> expr IMPLIES expr
-- On OR reduce production prim_expr -> expr IMPLIES expr
-- On ONE reduce production prim_expr -> expr IMPLIES expr
-- On ONCE reduce production prim_expr -> expr IMPLIES expr
-- On NUMBER reduce production prim_expr -> expr IMPLIES expr
-- On NONE reduce production prim_expr -> expr IMPLIES expr
-- On NO reduce production prim_expr -> expr IMPLIES expr
-- On NICKNAME reduce production prim_expr -> expr IMPLIES expr
-- On NEXT reduce production prim_expr -> expr IMPLIES expr
-- On MSOME reduce production prim_expr -> expr IMPLIES expr
-- On MSET reduce production prim_expr -> expr IMPLIES expr
-- On MONE reduce production prim_expr -> expr IMPLIES expr
-- On MLONE reduce production prim_expr -> expr IMPLIES expr
-- On LPAREN reduce production prim_expr -> expr IMPLIES expr
-- On LONE reduce production prim_expr -> expr IMPLIES expr
-- On LET reduce production prim_expr -> expr IMPLIES expr
-- On LBRACE reduce production prim_expr -> expr IMPLIES expr
-- On INT reduce production prim_expr -> expr IMPLIES expr
-- On IFF reduce production prim_expr -> expr IMPLIES expr
-- On IDENT reduce production prim_expr -> expr IMPLIES expr
-- On IDEN reduce production prim_expr -> expr IMPLIES expr
-- On HISTORICALLY reduce production prim_expr -> expr IMPLIES expr
-- On FUN reduce production prim_expr -> expr IMPLIES expr
-- On FACT reduce production prim_expr -> expr IMPLIES expr
-- On EVENTUALLY reduce production prim_expr -> expr IMPLIES expr
-- On EOF reduce production prim_expr -> expr IMPLIES expr
-- On ENUM reduce production prim_expr -> expr IMPLIES expr
-- On COMMA reduce production prim_expr -> expr IMPLIES expr
-- On CHECK reduce production prim_expr -> expr IMPLIES expr
-- On CARET reduce production prim_expr -> expr IMPLIES expr
-- On CARD reduce production prim_expr -> expr IMPLIES expr
-- On BAR reduce production prim_expr -> expr IMPLIES expr
-- On AT reduce production prim_expr -> expr IMPLIES expr
-- On ASSERT reduce production prim_expr -> expr IMPLIES expr
-- On ALWAYS reduce production prim_expr -> expr IMPLIES expr
-- On ABSTRACT reduce production prim_expr -> expr IMPLIES expr

State 217:
## Known stack suffix:
## expr IMPLIES expr ELSE
## LR(1) items:
prim_expr -> expr IMPLIES expr ELSE . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 218
-- On block shift to state 169
## Reductions:

State 218:
## Known stack suffix:
## expr IMPLIES expr ELSE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IMPLIES expr ELSE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On UNIV reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On TILDE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On THIS reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On STAR reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On SOME reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On SIG reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On RUN reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On RPAREN reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On RBRACKET reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On RBRACE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On QSOME reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On QONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On QNO reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On QLONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On QALL reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On PRIVATE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On PREVIOUS reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On PRED reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On OR reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ONCE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On NUMBER reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On NONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On NO reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On NICKNAME reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On NEXT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On MSOME reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On MSET reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On MONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On MLONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On LPAREN reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On LONE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On LET reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On LBRACE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On INT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On IMPLIES reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On IFF reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On IDENT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On IDEN reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On HISTORICALLY reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On FUN reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On FACT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On EVENTUALLY reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On EOF reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ENUM reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ELSE reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On COMMA reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On CHECK reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On CARET reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On CARD reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On BAR reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On AT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ASSERT reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ALWAYS reduce production prim_expr -> expr IMPLIES expr ELSE expr
-- On ABSTRACT reduce production prim_expr -> expr IMPLIES expr ELSE expr

State 219:
## Known stack suffix:
## expr AND
## LR(1) items:
prim_expr -> expr AND . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 220
-- On block shift to state 169
## Reductions:

State 220:
## Known stack suffix:
## expr AND expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr AND expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> expr AND expr
-- On UNIV reduce production prim_expr -> expr AND expr
-- On TILDE reduce production prim_expr -> expr AND expr
-- On THIS reduce production prim_expr -> expr AND expr
-- On STAR reduce production prim_expr -> expr AND expr
-- On SOME reduce production prim_expr -> expr AND expr
-- On SIG reduce production prim_expr -> expr AND expr
-- On RUN reduce production prim_expr -> expr AND expr
-- On RPAREN reduce production prim_expr -> expr AND expr
-- On RBRACKET reduce production prim_expr -> expr AND expr
-- On RBRACE reduce production prim_expr -> expr AND expr
-- On QSOME reduce production prim_expr -> expr AND expr
-- On QONE reduce production prim_expr -> expr AND expr
-- On QNO reduce production prim_expr -> expr AND expr
-- On QLONE reduce production prim_expr -> expr AND expr
-- On QALL reduce production prim_expr -> expr AND expr
-- On PRIVATE reduce production prim_expr -> expr AND expr
-- On PREVIOUS reduce production prim_expr -> expr AND expr
-- On PRED reduce production prim_expr -> expr AND expr
-- On OR reduce production prim_expr -> expr AND expr
-- On ONE reduce production prim_expr -> expr AND expr
-- On ONCE reduce production prim_expr -> expr AND expr
-- On NUMBER reduce production prim_expr -> expr AND expr
-- On NONE reduce production prim_expr -> expr AND expr
-- On NO reduce production prim_expr -> expr AND expr
-- On NICKNAME reduce production prim_expr -> expr AND expr
-- On NEXT reduce production prim_expr -> expr AND expr
-- On MSOME reduce production prim_expr -> expr AND expr
-- On MSET reduce production prim_expr -> expr AND expr
-- On MONE reduce production prim_expr -> expr AND expr
-- On MLONE reduce production prim_expr -> expr AND expr
-- On LPAREN reduce production prim_expr -> expr AND expr
-- On LONE reduce production prim_expr -> expr AND expr
-- On LET reduce production prim_expr -> expr AND expr
-- On LBRACE reduce production prim_expr -> expr AND expr
-- On INT reduce production prim_expr -> expr AND expr
-- On IMPLIES reduce production prim_expr -> expr AND expr
-- On IFF reduce production prim_expr -> expr AND expr
-- On IDENT reduce production prim_expr -> expr AND expr
-- On IDEN reduce production prim_expr -> expr AND expr
-- On HISTORICALLY reduce production prim_expr -> expr AND expr
-- On FUN reduce production prim_expr -> expr AND expr
-- On FACT reduce production prim_expr -> expr AND expr
-- On EVENTUALLY reduce production prim_expr -> expr AND expr
-- On EOF reduce production prim_expr -> expr AND expr
-- On ENUM reduce production prim_expr -> expr AND expr
-- On ELSE reduce production prim_expr -> expr AND expr
-- On COMMA reduce production prim_expr -> expr AND expr
-- On CHECK reduce production prim_expr -> expr AND expr
-- On CARET reduce production prim_expr -> expr AND expr
-- On CARD reduce production prim_expr -> expr AND expr
-- On BAR reduce production prim_expr -> expr AND expr
-- On AT reduce production prim_expr -> expr AND expr
-- On ASSERT reduce production prim_expr -> expr AND expr
-- On AND reduce production prim_expr -> expr AND expr
-- On ALWAYS reduce production prim_expr -> expr AND expr
-- On ABSTRACT reduce production prim_expr -> expr AND expr

State 221:
## Known stack suffix:
## expr IFF
## LR(1) items:
prim_expr -> expr IFF . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 222
-- On block shift to state 169
## Reductions:

State 222:
## Known stack suffix:
## expr IFF expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr IFF expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production prim_expr -> expr IFF expr
-- On UNIV reduce production prim_expr -> expr IFF expr
-- On TILDE reduce production prim_expr -> expr IFF expr
-- On THIS reduce production prim_expr -> expr IFF expr
-- On STAR reduce production prim_expr -> expr IFF expr
-- On SOME reduce production prim_expr -> expr IFF expr
-- On SIG reduce production prim_expr -> expr IFF expr
-- On RUN reduce production prim_expr -> expr IFF expr
-- On RPAREN reduce production prim_expr -> expr IFF expr
-- On RBRACKET reduce production prim_expr -> expr IFF expr
-- On RBRACE reduce production prim_expr -> expr IFF expr
-- On QSOME reduce production prim_expr -> expr IFF expr
-- On QONE reduce production prim_expr -> expr IFF expr
-- On QNO reduce production prim_expr -> expr IFF expr
-- On QLONE reduce production prim_expr -> expr IFF expr
-- On QALL reduce production prim_expr -> expr IFF expr
-- On PRIVATE reduce production prim_expr -> expr IFF expr
-- On PREVIOUS reduce production prim_expr -> expr IFF expr
-- On PRED reduce production prim_expr -> expr IFF expr
-- On OR reduce production prim_expr -> expr IFF expr
-- On ONE reduce production prim_expr -> expr IFF expr
-- On ONCE reduce production prim_expr -> expr IFF expr
-- On NUMBER reduce production prim_expr -> expr IFF expr
-- On NONE reduce production prim_expr -> expr IFF expr
-- On NO reduce production prim_expr -> expr IFF expr
-- On NICKNAME reduce production prim_expr -> expr IFF expr
-- On NEXT reduce production prim_expr -> expr IFF expr
-- On MSOME reduce production prim_expr -> expr IFF expr
-- On MSET reduce production prim_expr -> expr IFF expr
-- On MONE reduce production prim_expr -> expr IFF expr
-- On MLONE reduce production prim_expr -> expr IFF expr
-- On LPAREN reduce production prim_expr -> expr IFF expr
-- On LONE reduce production prim_expr -> expr IFF expr
-- On LET reduce production prim_expr -> expr IFF expr
-- On LBRACE reduce production prim_expr -> expr IFF expr
-- On INT reduce production prim_expr -> expr IFF expr
-- On IFF reduce production prim_expr -> expr IFF expr
-- On IDENT reduce production prim_expr -> expr IFF expr
-- On IDEN reduce production prim_expr -> expr IFF expr
-- On HISTORICALLY reduce production prim_expr -> expr IFF expr
-- On FUN reduce production prim_expr -> expr IFF expr
-- On FACT reduce production prim_expr -> expr IFF expr
-- On EVENTUALLY reduce production prim_expr -> expr IFF expr
-- On EOF reduce production prim_expr -> expr IFF expr
-- On ENUM reduce production prim_expr -> expr IFF expr
-- On ELSE reduce production prim_expr -> expr IFF expr
-- On COMMA reduce production prim_expr -> expr IFF expr
-- On CHECK reduce production prim_expr -> expr IFF expr
-- On CARET reduce production prim_expr -> expr IFF expr
-- On CARD reduce production prim_expr -> expr IFF expr
-- On BAR reduce production prim_expr -> expr IFF expr
-- On AT reduce production prim_expr -> expr IFF expr
-- On ASSERT reduce production prim_expr -> expr IFF expr
-- On ALWAYS reduce production prim_expr -> expr IFF expr
-- On ABSTRACT reduce production prim_expr -> expr IFF expr

State 223:
## Known stack suffix:
## expr COMMA
## LR(1) items:
separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RBRACKET ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On separated_nonempty_list(COMMA,expr) shift to state 224
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 150
-- On block shift to state 169
## Reductions:

State 224:
## Known stack suffix:
## expr COMMA separated_nonempty_list(COMMA,expr)
## LR(1) items:
separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr) . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr)

State 225:
## Known stack suffix:
## CARD expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> CARD expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> CARD expr
-- On UNTIL reduce production prim_expr -> CARD expr
-- On UNIV reduce production prim_expr -> CARD expr
-- On TILDE reduce production prim_expr -> CARD expr
-- On THIS reduce production prim_expr -> CARD expr
-- On STAR reduce production prim_expr -> CARD expr
-- On SOME reduce production prim_expr -> CARD expr
-- On SINCE reduce production prim_expr -> CARD expr
-- On SIG reduce production prim_expr -> CARD expr
-- On RUN reduce production prim_expr -> CARD expr
-- On RPAREN reduce production prim_expr -> CARD expr
-- On RBRACKET reduce production prim_expr -> CARD expr
-- On RBRACE reduce production prim_expr -> CARD expr
-- On QSOME reduce production prim_expr -> CARD expr
-- On QONE reduce production prim_expr -> CARD expr
-- On QNO reduce production prim_expr -> CARD expr
-- On QLONE reduce production prim_expr -> CARD expr
-- On QALL reduce production prim_expr -> CARD expr
-- On PRIVATE reduce production prim_expr -> CARD expr
-- On PREVIOUS reduce production prim_expr -> CARD expr
-- On PRED reduce production prim_expr -> CARD expr
-- On PLUS reduce production prim_expr -> CARD expr
-- On OR reduce production prim_expr -> CARD expr
-- On ONE reduce production prim_expr -> CARD expr
-- On ONCE reduce production prim_expr -> CARD expr
-- On NUMBER reduce production prim_expr -> CARD expr
-- On NOT reduce production prim_expr -> CARD expr
-- On NONE reduce production prim_expr -> CARD expr
-- On NO reduce production prim_expr -> CARD expr
-- On NICKNAME reduce production prim_expr -> CARD expr
-- On NEXT reduce production prim_expr -> CARD expr
-- On NEQ reduce production prim_expr -> CARD expr
-- On MSOME reduce production prim_expr -> CARD expr
-- On MSET reduce production prim_expr -> CARD expr
-- On MONE reduce production prim_expr -> CARD expr
-- On MLONE reduce production prim_expr -> CARD expr
-- On MINUS reduce production prim_expr -> CARD expr
-- On LTE reduce production prim_expr -> CARD expr
-- On LT reduce production prim_expr -> CARD expr
-- On LPAREN reduce production prim_expr -> CARD expr
-- On LONE reduce production prim_expr -> CARD expr
-- On LET reduce production prim_expr -> CARD expr
-- On LBRACE reduce production prim_expr -> CARD expr
-- On INT reduce production prim_expr -> CARD expr
-- On IN reduce production prim_expr -> CARD expr
-- On IMPLIES reduce production prim_expr -> CARD expr
-- On IFF reduce production prim_expr -> CARD expr
-- On IDENT reduce production prim_expr -> CARD expr
-- On IDEN reduce production prim_expr -> CARD expr
-- On HISTORICALLY reduce production prim_expr -> CARD expr
-- On GTE reduce production prim_expr -> CARD expr
-- On GT reduce production prim_expr -> CARD expr
-- On FUN reduce production prim_expr -> CARD expr
-- On FACT reduce production prim_expr -> CARD expr
-- On EVENTUALLY reduce production prim_expr -> CARD expr
-- On EQ reduce production prim_expr -> CARD expr
-- On EOF reduce production prim_expr -> CARD expr
-- On ENUM reduce production prim_expr -> CARD expr
-- On ELSE reduce production prim_expr -> CARD expr
-- On COMMA reduce production prim_expr -> CARD expr
-- On CHECK reduce production prim_expr -> CARD expr
-- On CARET reduce production prim_expr -> CARD expr
-- On CARD reduce production prim_expr -> CARD expr
-- On BAR reduce production prim_expr -> CARD expr
-- On AT reduce production prim_expr -> CARD expr
-- On ASSERT reduce production prim_expr -> CARD expr
-- On AND reduce production prim_expr -> CARD expr
-- On ALWAYS reduce production prim_expr -> CARD expr
-- On ABSTRACT reduce production prim_expr -> CARD expr

State 226:
## Known stack suffix:
## CARET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> CARET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On PRIME shift to state 146
## Reductions:
-- On VAR reduce production prim_expr -> CARET expr
-- On UNTIL reduce production prim_expr -> CARET expr
-- On UNIV reduce production prim_expr -> CARET expr
-- On TILDE reduce production prim_expr -> CARET expr
-- On THIS reduce production prim_expr -> CARET expr
-- On STAR reduce production prim_expr -> CARET expr
-- On SOME_ARROW_SOME reduce production prim_expr -> CARET expr
-- On SOME_ARROW_SET reduce production prim_expr -> CARET expr
-- On SOME_ARROW_ONE reduce production prim_expr -> CARET expr
-- On SOME_ARROW_LONE reduce production prim_expr -> CARET expr
-- On SOME reduce production prim_expr -> CARET expr
-- On SINCE reduce production prim_expr -> CARET expr
-- On SIG reduce production prim_expr -> CARET expr
-- On SET_ARROW_SOME reduce production prim_expr -> CARET expr
-- On SET_ARROW_SET reduce production prim_expr -> CARET expr
-- On SET_ARROW_ONE reduce production prim_expr -> CARET expr
-- On SET_ARROW_LONE reduce production prim_expr -> CARET expr
-- On RUN reduce production prim_expr -> CARET expr
-- On RPROJ reduce production prim_expr -> CARET expr
-- On RPAREN reduce production prim_expr -> CARET expr
-- On RBRACKET reduce production prim_expr -> CARET expr
-- On RBRACE reduce production prim_expr -> CARET expr
-- On QSOME reduce production prim_expr -> CARET expr
-- On QONE reduce production prim_expr -> CARET expr
-- On QNO reduce production prim_expr -> CARET expr
-- On QLONE reduce production prim_expr -> CARET expr
-- On QALL reduce production prim_expr -> CARET expr
-- On PRIVATE reduce production prim_expr -> CARET expr
-- On PREVIOUS reduce production prim_expr -> CARET expr
-- On PRED reduce production prim_expr -> CARET expr
-- On PLUS reduce production prim_expr -> CARET expr
-- On OVERRIDE reduce production prim_expr -> CARET expr
-- On OR reduce production prim_expr -> CARET expr
-- On ONE_ARROW_SOME reduce production prim_expr -> CARET expr
-- On ONE_ARROW_SET reduce production prim_expr -> CARET expr
-- On ONE_ARROW_ONE reduce production prim_expr -> CARET expr
-- On ONE_ARROW_LONE reduce production prim_expr -> CARET expr
-- On ONE reduce production prim_expr -> CARET expr
-- On ONCE reduce production prim_expr -> CARET expr
-- On NUMBER reduce production prim_expr -> CARET expr
-- On NOT reduce production prim_expr -> CARET expr
-- On NONE reduce production prim_expr -> CARET expr
-- On NO reduce production prim_expr -> CARET expr
-- On NICKNAME reduce production prim_expr -> CARET expr
-- On NEXT reduce production prim_expr -> CARET expr
-- On NEQ reduce production prim_expr -> CARET expr
-- On MSOME reduce production prim_expr -> CARET expr
-- On MSET reduce production prim_expr -> CARET expr
-- On MONE reduce production prim_expr -> CARET expr
-- On MLONE reduce production prim_expr -> CARET expr
-- On MINUS reduce production prim_expr -> CARET expr
-- On LTE reduce production prim_expr -> CARET expr
-- On LT reduce production prim_expr -> CARET expr
-- On LPROJ reduce production prim_expr -> CARET expr
-- On LPAREN reduce production prim_expr -> CARET expr
-- On LONE_ARROW_SOME reduce production prim_expr -> CARET expr
-- On LONE_ARROW_SET reduce production prim_expr -> CARET expr
-- On LONE_ARROW_ONE reduce production prim_expr -> CARET expr
-- On LONE_ARROW_LONE reduce production prim_expr -> CARET expr
-- On LONE reduce production prim_expr -> CARET expr
-- On LET reduce production prim_expr -> CARET expr
-- On LBRACKET reduce production prim_expr -> CARET expr
-- On LBRACE reduce production prim_expr -> CARET expr
-- On INTER reduce production prim_expr -> CARET expr
-- On INT reduce production prim_expr -> CARET expr
-- On IN reduce production prim_expr -> CARET expr
-- On IMPLIES reduce production prim_expr -> CARET expr
-- On IFF reduce production prim_expr -> CARET expr
-- On IDENT reduce production prim_expr -> CARET expr
-- On IDEN reduce production prim_expr -> CARET expr
-- On HISTORICALLY reduce production prim_expr -> CARET expr
-- On GTE reduce production prim_expr -> CARET expr
-- On GT reduce production prim_expr -> CARET expr
-- On FUN reduce production prim_expr -> CARET expr
-- On FACT reduce production prim_expr -> CARET expr
-- On EVENTUALLY reduce production prim_expr -> CARET expr
-- On EQ reduce production prim_expr -> CARET expr
-- On EOF reduce production prim_expr -> CARET expr
-- On ENUM reduce production prim_expr -> CARET expr
-- On ELSE reduce production prim_expr -> CARET expr
-- On DOT reduce production prim_expr -> CARET expr
-- On COMMA reduce production prim_expr -> CARET expr
-- On CHECK reduce production prim_expr -> CARET expr
-- On CARET reduce production prim_expr -> CARET expr
-- On CARD reduce production prim_expr -> CARET expr
-- On BAR reduce production prim_expr -> CARET expr
-- On AT reduce production prim_expr -> CARET expr
-- On ASSERT reduce production prim_expr -> CARET expr
-- On AND reduce production prim_expr -> CARET expr
-- On ALWAYS reduce production prim_expr -> CARET expr
-- On ABSTRACT reduce production prim_expr -> CARET expr

State 227:
## Known stack suffix:
## EVENTUALLY expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> EVENTUALLY expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> EVENTUALLY expr
-- On UNTIL reduce production prim_expr -> EVENTUALLY expr
-- On UNIV reduce production prim_expr -> EVENTUALLY expr
-- On TILDE reduce production prim_expr -> EVENTUALLY expr
-- On THIS reduce production prim_expr -> EVENTUALLY expr
-- On STAR reduce production prim_expr -> EVENTUALLY expr
-- On SOME reduce production prim_expr -> EVENTUALLY expr
-- On SINCE reduce production prim_expr -> EVENTUALLY expr
-- On SIG reduce production prim_expr -> EVENTUALLY expr
-- On RUN reduce production prim_expr -> EVENTUALLY expr
-- On RPAREN reduce production prim_expr -> EVENTUALLY expr
-- On RBRACKET reduce production prim_expr -> EVENTUALLY expr
-- On RBRACE reduce production prim_expr -> EVENTUALLY expr
-- On QSOME reduce production prim_expr -> EVENTUALLY expr
-- On QONE reduce production prim_expr -> EVENTUALLY expr
-- On QNO reduce production prim_expr -> EVENTUALLY expr
-- On QLONE reduce production prim_expr -> EVENTUALLY expr
-- On QALL reduce production prim_expr -> EVENTUALLY expr
-- On PRIVATE reduce production prim_expr -> EVENTUALLY expr
-- On PREVIOUS reduce production prim_expr -> EVENTUALLY expr
-- On PRED reduce production prim_expr -> EVENTUALLY expr
-- On OR reduce production prim_expr -> EVENTUALLY expr
-- On ONE reduce production prim_expr -> EVENTUALLY expr
-- On ONCE reduce production prim_expr -> EVENTUALLY expr
-- On NUMBER reduce production prim_expr -> EVENTUALLY expr
-- On NONE reduce production prim_expr -> EVENTUALLY expr
-- On NO reduce production prim_expr -> EVENTUALLY expr
-- On NICKNAME reduce production prim_expr -> EVENTUALLY expr
-- On NEXT reduce production prim_expr -> EVENTUALLY expr
-- On MSOME reduce production prim_expr -> EVENTUALLY expr
-- On MSET reduce production prim_expr -> EVENTUALLY expr
-- On MONE reduce production prim_expr -> EVENTUALLY expr
-- On MLONE reduce production prim_expr -> EVENTUALLY expr
-- On LPAREN reduce production prim_expr -> EVENTUALLY expr
-- On LONE reduce production prim_expr -> EVENTUALLY expr
-- On LET reduce production prim_expr -> EVENTUALLY expr
-- On LBRACE reduce production prim_expr -> EVENTUALLY expr
-- On INT reduce production prim_expr -> EVENTUALLY expr
-- On IMPLIES reduce production prim_expr -> EVENTUALLY expr
-- On IFF reduce production prim_expr -> EVENTUALLY expr
-- On IDENT reduce production prim_expr -> EVENTUALLY expr
-- On IDEN reduce production prim_expr -> EVENTUALLY expr
-- On HISTORICALLY reduce production prim_expr -> EVENTUALLY expr
-- On FUN reduce production prim_expr -> EVENTUALLY expr
-- On FACT reduce production prim_expr -> EVENTUALLY expr
-- On EVENTUALLY reduce production prim_expr -> EVENTUALLY expr
-- On EOF reduce production prim_expr -> EVENTUALLY expr
-- On ENUM reduce production prim_expr -> EVENTUALLY expr
-- On ELSE reduce production prim_expr -> EVENTUALLY expr
-- On COMMA reduce production prim_expr -> EVENTUALLY expr
-- On CHECK reduce production prim_expr -> EVENTUALLY expr
-- On CARET reduce production prim_expr -> EVENTUALLY expr
-- On CARD reduce production prim_expr -> EVENTUALLY expr
-- On BAR reduce production prim_expr -> EVENTUALLY expr
-- On AT reduce production prim_expr -> EVENTUALLY expr
-- On ASSERT reduce production prim_expr -> EVENTUALLY expr
-- On AND reduce production prim_expr -> EVENTUALLY expr
-- On ALWAYS reduce production prim_expr -> EVENTUALLY expr
-- On ABSTRACT reduce production prim_expr -> EVENTUALLY expr

State 228:
## Known stack suffix:
## HISTORICALLY expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> HISTORICALLY expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> HISTORICALLY expr
-- On UNTIL reduce production prim_expr -> HISTORICALLY expr
-- On UNIV reduce production prim_expr -> HISTORICALLY expr
-- On TILDE reduce production prim_expr -> HISTORICALLY expr
-- On THIS reduce production prim_expr -> HISTORICALLY expr
-- On STAR reduce production prim_expr -> HISTORICALLY expr
-- On SOME reduce production prim_expr -> HISTORICALLY expr
-- On SINCE reduce production prim_expr -> HISTORICALLY expr
-- On SIG reduce production prim_expr -> HISTORICALLY expr
-- On RUN reduce production prim_expr -> HISTORICALLY expr
-- On RPAREN reduce production prim_expr -> HISTORICALLY expr
-- On RBRACKET reduce production prim_expr -> HISTORICALLY expr
-- On RBRACE reduce production prim_expr -> HISTORICALLY expr
-- On QSOME reduce production prim_expr -> HISTORICALLY expr
-- On QONE reduce production prim_expr -> HISTORICALLY expr
-- On QNO reduce production prim_expr -> HISTORICALLY expr
-- On QLONE reduce production prim_expr -> HISTORICALLY expr
-- On QALL reduce production prim_expr -> HISTORICALLY expr
-- On PRIVATE reduce production prim_expr -> HISTORICALLY expr
-- On PREVIOUS reduce production prim_expr -> HISTORICALLY expr
-- On PRED reduce production prim_expr -> HISTORICALLY expr
-- On OR reduce production prim_expr -> HISTORICALLY expr
-- On ONE reduce production prim_expr -> HISTORICALLY expr
-- On ONCE reduce production prim_expr -> HISTORICALLY expr
-- On NUMBER reduce production prim_expr -> HISTORICALLY expr
-- On NONE reduce production prim_expr -> HISTORICALLY expr
-- On NO reduce production prim_expr -> HISTORICALLY expr
-- On NICKNAME reduce production prim_expr -> HISTORICALLY expr
-- On NEXT reduce production prim_expr -> HISTORICALLY expr
-- On MSOME reduce production prim_expr -> HISTORICALLY expr
-- On MSET reduce production prim_expr -> HISTORICALLY expr
-- On MONE reduce production prim_expr -> HISTORICALLY expr
-- On MLONE reduce production prim_expr -> HISTORICALLY expr
-- On LPAREN reduce production prim_expr -> HISTORICALLY expr
-- On LONE reduce production prim_expr -> HISTORICALLY expr
-- On LET reduce production prim_expr -> HISTORICALLY expr
-- On LBRACE reduce production prim_expr -> HISTORICALLY expr
-- On INT reduce production prim_expr -> HISTORICALLY expr
-- On IMPLIES reduce production prim_expr -> HISTORICALLY expr
-- On IFF reduce production prim_expr -> HISTORICALLY expr
-- On IDENT reduce production prim_expr -> HISTORICALLY expr
-- On IDEN reduce production prim_expr -> HISTORICALLY expr
-- On HISTORICALLY reduce production prim_expr -> HISTORICALLY expr
-- On FUN reduce production prim_expr -> HISTORICALLY expr
-- On FACT reduce production prim_expr -> HISTORICALLY expr
-- On EVENTUALLY reduce production prim_expr -> HISTORICALLY expr
-- On EOF reduce production prim_expr -> HISTORICALLY expr
-- On ENUM reduce production prim_expr -> HISTORICALLY expr
-- On ELSE reduce production prim_expr -> HISTORICALLY expr
-- On COMMA reduce production prim_expr -> HISTORICALLY expr
-- On CHECK reduce production prim_expr -> HISTORICALLY expr
-- On CARET reduce production prim_expr -> HISTORICALLY expr
-- On CARD reduce production prim_expr -> HISTORICALLY expr
-- On BAR reduce production prim_expr -> HISTORICALLY expr
-- On AT reduce production prim_expr -> HISTORICALLY expr
-- On ASSERT reduce production prim_expr -> HISTORICALLY expr
-- On AND reduce production prim_expr -> HISTORICALLY expr
-- On ALWAYS reduce production prim_expr -> HISTORICALLY expr
-- On ABSTRACT reduce production prim_expr -> HISTORICALLY expr

State 229:
## Known stack suffix:
## LBRACE separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> LBRACE separated_nonempty_list(COMMA,decl) . block_or_bar RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 230
-- On block shift to state 86
## Reductions:

State 230:
## Known stack suffix:
## LBRACE separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> LBRACE separated_nonempty_list(COMMA,decl) block_or_bar . RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On RBRACE shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## LBRACE separated_nonempty_list(COMMA,decl) block_or_bar RBRACE
## LR(1) items:
prim_expr -> LBRACE separated_nonempty_list(COMMA,decl) block_or_bar RBRACE . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> LBRACE separated_nonempty_list(COMMA,decl) block_or_bar RBRACE

State 232:
## Known stack suffix:
## LBRACE list(expr)
## LR(1) items:
block -> LBRACE list(expr) . RBRACE [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On RBRACE shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## LBRACE list(expr) RBRACE
## LR(1) items:
block -> LBRACE list(expr) RBRACE . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FOR FACT EXPECT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> LBRACE list(expr) RBRACE

State 234:
## Known stack suffix:
## expr
## LR(1) items:
list(expr) -> expr . list(expr) [ RBRACE ]
prim_expr -> expr . IMPLIES expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . OR expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IFF expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . AND expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . MINUS expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . PLUS expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . OVERRIDE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . INTER expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LPROJ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . RPROJ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . DOT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . UNTIL expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SINCE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IN expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . GT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . GTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NEQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . EQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT IN expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT GT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT GTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT LT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT LTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT NEQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT EQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . PRIME [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
## Transitions:
-- On UNTIL shift to state 151
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SOME shift to state 72
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PRIME shift to state 146
-- On PREVIOUS shift to state 95
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 235
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On NEQ shift to state 197
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 237
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LPAREN shift to state 109
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACKET shift to state 147
-- On LBRACE shift to state 114
-- On INTER shift to state 178
-- On INT shift to state 115
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EVENTUALLY shift to state 119
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On AND shift to state 219
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On list(expr) shift to state 239
-- On expr shift to state 234
-- On block shift to state 169
## Reductions:
-- On RBRACE reduce production list(expr) ->

State 235:
## Known stack suffix:
## expr NOT
## LR(1) items:
prim_expr -> expr NOT . IN expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . GT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . GTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . LT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . LTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . NEQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr NOT . EQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> NOT . expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM DOT CHECK CARET CARD AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On NEQ shift to state 181
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LTE shift to state 185
-- On LT shift to state 187
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IN shift to state 189
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On GTE shift to state 191
-- On GT shift to state 193
-- On EVENTUALLY shift to state 119
-- On EQ shift to state 195
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 236
-- On block shift to state 169
## Reductions:

State 236:
## Known stack suffix:
## NOT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> NOT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> NOT expr
-- On UNTIL reduce production prim_expr -> NOT expr
-- On UNIV reduce production prim_expr -> NOT expr
-- On TILDE reduce production prim_expr -> NOT expr
-- On THIS reduce production prim_expr -> NOT expr
-- On STAR reduce production prim_expr -> NOT expr
-- On SOME reduce production prim_expr -> NOT expr
-- On SINCE reduce production prim_expr -> NOT expr
-- On SIG reduce production prim_expr -> NOT expr
-- On RUN reduce production prim_expr -> NOT expr
-- On RPAREN reduce production prim_expr -> NOT expr
-- On RBRACKET reduce production prim_expr -> NOT expr
-- On RBRACE reduce production prim_expr -> NOT expr
-- On QSOME reduce production prim_expr -> NOT expr
-- On QONE reduce production prim_expr -> NOT expr
-- On QNO reduce production prim_expr -> NOT expr
-- On QLONE reduce production prim_expr -> NOT expr
-- On QALL reduce production prim_expr -> NOT expr
-- On PRIVATE reduce production prim_expr -> NOT expr
-- On PREVIOUS reduce production prim_expr -> NOT expr
-- On PRED reduce production prim_expr -> NOT expr
-- On OR reduce production prim_expr -> NOT expr
-- On ONE reduce production prim_expr -> NOT expr
-- On ONCE reduce production prim_expr -> NOT expr
-- On NUMBER reduce production prim_expr -> NOT expr
-- On NONE reduce production prim_expr -> NOT expr
-- On NO reduce production prim_expr -> NOT expr
-- On NICKNAME reduce production prim_expr -> NOT expr
-- On NEXT reduce production prim_expr -> NOT expr
-- On MSOME reduce production prim_expr -> NOT expr
-- On MSET reduce production prim_expr -> NOT expr
-- On MONE reduce production prim_expr -> NOT expr
-- On MLONE reduce production prim_expr -> NOT expr
-- On LPAREN reduce production prim_expr -> NOT expr
-- On LONE reduce production prim_expr -> NOT expr
-- On LET reduce production prim_expr -> NOT expr
-- On LBRACE reduce production prim_expr -> NOT expr
-- On INT reduce production prim_expr -> NOT expr
-- On IMPLIES reduce production prim_expr -> NOT expr
-- On IFF reduce production prim_expr -> NOT expr
-- On IDENT reduce production prim_expr -> NOT expr
-- On IDEN reduce production prim_expr -> NOT expr
-- On HISTORICALLY reduce production prim_expr -> NOT expr
-- On FUN reduce production prim_expr -> NOT expr
-- On FACT reduce production prim_expr -> NOT expr
-- On EVENTUALLY reduce production prim_expr -> NOT expr
-- On EOF reduce production prim_expr -> NOT expr
-- On ENUM reduce production prim_expr -> NOT expr
-- On ELSE reduce production prim_expr -> NOT expr
-- On COMMA reduce production prim_expr -> NOT expr
-- On CHECK reduce production prim_expr -> NOT expr
-- On CARET reduce production prim_expr -> NOT expr
-- On CARD reduce production prim_expr -> NOT expr
-- On BAR reduce production prim_expr -> NOT expr
-- On AT reduce production prim_expr -> NOT expr
-- On ASSERT reduce production prim_expr -> NOT expr
-- On AND reduce production prim_expr -> NOT expr
-- On ALWAYS reduce production prim_expr -> NOT expr
-- On ABSTRACT reduce production prim_expr -> NOT expr

State 237:
## Known stack suffix:
## expr MINUS
## LR(1) items:
prim_expr -> MINUS . NUMBER [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM DOT CHECK CARET CARD AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr MINUS . expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 238
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 184
-- On block shift to state 169
## Reductions:

State 238:
## Known stack suffix:
## MINUS NUMBER
## LR(1) items:
prim_expr -> NUMBER . [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> MINUS NUMBER . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM DOT CHECK CARET CARD AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Reductions:
-- On VAR reduce production prim_expr -> MINUS NUMBER
-- On UNTIL reduce production prim_expr -> NUMBER
-- On UNIV reduce production prim_expr -> NUMBER
-- On TILDE reduce production prim_expr -> NUMBER
-- On THIS reduce production prim_expr -> NUMBER
-- On STAR reduce production prim_expr -> NUMBER
-- On SOME_ARROW_SOME reduce production prim_expr -> NUMBER
-- On SOME_ARROW_SET reduce production prim_expr -> NUMBER
-- On SOME_ARROW_ONE reduce production prim_expr -> NUMBER
-- On SOME_ARROW_LONE reduce production prim_expr -> NUMBER
-- On SOME reduce production prim_expr -> NUMBER
-- On SINCE reduce production prim_expr -> NUMBER
-- On SIG reduce production prim_expr -> MINUS NUMBER
-- On SET_ARROW_SOME reduce production prim_expr -> NUMBER
-- On SET_ARROW_SET reduce production prim_expr -> NUMBER
-- On SET_ARROW_ONE reduce production prim_expr -> NUMBER
-- On SET_ARROW_LONE reduce production prim_expr -> NUMBER
-- On RUN reduce production prim_expr -> MINUS NUMBER
-- On RPROJ reduce production prim_expr -> NUMBER
-- On RBRACE reduce production prim_expr -> NUMBER
-- On QSOME reduce production prim_expr -> NUMBER
-- On QONE reduce production prim_expr -> NUMBER
-- On QNO reduce production prim_expr -> NUMBER
-- On QLONE reduce production prim_expr -> NUMBER
-- On QALL reduce production prim_expr -> NUMBER
-- On PRIVATE reduce production prim_expr -> MINUS NUMBER
-- On PRIME reduce production prim_expr -> NUMBER
-- On PREVIOUS reduce production prim_expr -> NUMBER
-- On PRED reduce production prim_expr -> MINUS NUMBER
-- On PLUS reduce production prim_expr -> NUMBER
-- On OVERRIDE reduce production prim_expr -> NUMBER
-- On OR reduce production prim_expr -> NUMBER
-- On ONE_ARROW_SOME reduce production prim_expr -> NUMBER
-- On ONE_ARROW_SET reduce production prim_expr -> NUMBER
-- On ONE_ARROW_ONE reduce production prim_expr -> NUMBER
-- On ONE_ARROW_LONE reduce production prim_expr -> NUMBER
-- On ONE reduce production prim_expr -> NUMBER
-- On ONCE reduce production prim_expr -> NUMBER
-- On NUMBER reduce production prim_expr -> NUMBER
-- On NOT reduce production prim_expr -> NUMBER
-- On NONE reduce production prim_expr -> NUMBER
-- On NO reduce production prim_expr -> NUMBER
-- On NICKNAME reduce production prim_expr -> MINUS NUMBER
-- On NEXT reduce production prim_expr -> NUMBER
-- On NEQ reduce production prim_expr -> NUMBER
-- On MSOME reduce production prim_expr -> NUMBER
-- On MSET reduce production prim_expr -> NUMBER
-- On MONE reduce production prim_expr -> NUMBER
-- On MLONE reduce production prim_expr -> NUMBER
-- On MINUS reduce production prim_expr -> NUMBER
-- On LTE reduce production prim_expr -> NUMBER
-- On LT reduce production prim_expr -> NUMBER
-- On LPROJ reduce production prim_expr -> NUMBER
-- On LPAREN reduce production prim_expr -> NUMBER
-- On LONE_ARROW_SOME reduce production prim_expr -> NUMBER
-- On LONE_ARROW_SET reduce production prim_expr -> NUMBER
-- On LONE_ARROW_ONE reduce production prim_expr -> NUMBER
-- On LONE_ARROW_LONE reduce production prim_expr -> NUMBER
-- On LONE reduce production prim_expr -> NUMBER
-- On LET reduce production prim_expr -> NUMBER
-- On LBRACKET reduce production prim_expr -> NUMBER
-- On LBRACE reduce production prim_expr -> NUMBER
-- On INTER reduce production prim_expr -> NUMBER
-- On INT reduce production prim_expr -> NUMBER
-- On IN reduce production prim_expr -> NUMBER
-- On IMPLIES reduce production prim_expr -> NUMBER
-- On IFF reduce production prim_expr -> NUMBER
-- On IDENT reduce production prim_expr -> NUMBER
-- On IDEN reduce production prim_expr -> NUMBER
-- On HISTORICALLY reduce production prim_expr -> NUMBER
-- On GTE reduce production prim_expr -> NUMBER
-- On GT reduce production prim_expr -> NUMBER
-- On FUN reduce production prim_expr -> MINUS NUMBER
-- On FACT reduce production prim_expr -> MINUS NUMBER
-- On EVENTUALLY reduce production prim_expr -> NUMBER
-- On EQ reduce production prim_expr -> NUMBER
-- On EOF reduce production prim_expr -> MINUS NUMBER
-- On ENUM reduce production prim_expr -> MINUS NUMBER
-- On DOT reduce production prim_expr -> NUMBER
-- On CHECK reduce production prim_expr -> MINUS NUMBER
-- On CARET reduce production prim_expr -> NUMBER
-- On CARD reduce production prim_expr -> NUMBER
-- On AT reduce production prim_expr -> NUMBER
-- On ASSERT reduce production prim_expr -> MINUS NUMBER
-- On AND reduce production prim_expr -> NUMBER
-- On ALWAYS reduce production prim_expr -> NUMBER
-- On ABSTRACT reduce production prim_expr -> MINUS NUMBER

State 239:
## Known stack suffix:
## expr list(expr)
## LR(1) items:
list(expr) -> expr list(expr) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(expr) -> expr list(expr)

State 240:
## Known stack suffix:
## IDENT EQ expr
## LR(1) items:
let_decl -> IDENT EQ expr . [ LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On LBRACE reduce production let_decl -> IDENT EQ expr
-- On COMMA reduce production let_decl -> IDENT EQ expr
-- On BAR reduce production let_decl -> IDENT EQ expr

State 241:
## Known stack suffix:
## LET separated_nonempty_list(COMMA,let_decl)
## LR(1) items:
prim_expr -> LET separated_nonempty_list(COMMA,let_decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 242
-- On block shift to state 86
## Reductions:

State 242:
## Known stack suffix:
## LET separated_nonempty_list(COMMA,let_decl) block_or_bar
## LR(1) items:
prim_expr -> LET separated_nonempty_list(COMMA,let_decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> LET separated_nonempty_list(COMMA,let_decl) block_or_bar

State 243:
## Known stack suffix:
## let_decl
## LR(1) items:
separated_nonempty_list(COMMA,let_decl) -> let_decl . [ LBRACE BAR ]
separated_nonempty_list(COMMA,let_decl) -> let_decl . COMMA separated_nonempty_list(COMMA,let_decl) [ LBRACE BAR ]
## Transitions:
-- On COMMA shift to state 244
## Reductions:
-- On LBRACE reduce production separated_nonempty_list(COMMA,let_decl) -> let_decl
-- On BAR reduce production separated_nonempty_list(COMMA,let_decl) -> let_decl

State 244:
## Known stack suffix:
## let_decl COMMA
## LR(1) items:
separated_nonempty_list(COMMA,let_decl) -> let_decl COMMA . separated_nonempty_list(COMMA,let_decl) [ LBRACE BAR ]
## Transitions:
-- On IDENT shift to state 112
-- On separated_nonempty_list(COMMA,let_decl) shift to state 245
-- On let_decl shift to state 243
## Reductions:

State 245:
## Known stack suffix:
## let_decl COMMA separated_nonempty_list(COMMA,let_decl)
## LR(1) items:
separated_nonempty_list(COMMA,let_decl) -> let_decl COMMA separated_nonempty_list(COMMA,let_decl) . [ LBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,let_decl) -> let_decl COMMA separated_nonempty_list(COMMA,let_decl)

State 246:
## Known stack suffix:
## LONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> LONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> LONE expr
-- On UNTIL reduce production prim_expr -> LONE expr
-- On UNIV reduce production prim_expr -> LONE expr
-- On TILDE reduce production prim_expr -> LONE expr
-- On THIS reduce production prim_expr -> LONE expr
-- On STAR reduce production prim_expr -> LONE expr
-- On SOME reduce production prim_expr -> LONE expr
-- On SINCE reduce production prim_expr -> LONE expr
-- On SIG reduce production prim_expr -> LONE expr
-- On RUN reduce production prim_expr -> LONE expr
-- On RPAREN reduce production prim_expr -> LONE expr
-- On RBRACKET reduce production prim_expr -> LONE expr
-- On RBRACE reduce production prim_expr -> LONE expr
-- On QSOME reduce production prim_expr -> LONE expr
-- On QONE reduce production prim_expr -> LONE expr
-- On QNO reduce production prim_expr -> LONE expr
-- On QLONE reduce production prim_expr -> LONE expr
-- On QALL reduce production prim_expr -> LONE expr
-- On PRIVATE reduce production prim_expr -> LONE expr
-- On PREVIOUS reduce production prim_expr -> LONE expr
-- On PRED reduce production prim_expr -> LONE expr
-- On OR reduce production prim_expr -> LONE expr
-- On ONE reduce production prim_expr -> LONE expr
-- On ONCE reduce production prim_expr -> LONE expr
-- On NUMBER reduce production prim_expr -> LONE expr
-- On NOT reduce production prim_expr -> LONE expr
-- On NONE reduce production prim_expr -> LONE expr
-- On NO reduce production prim_expr -> LONE expr
-- On NICKNAME reduce production prim_expr -> LONE expr
-- On NEXT reduce production prim_expr -> LONE expr
-- On NEQ reduce production prim_expr -> LONE expr
-- On MSOME reduce production prim_expr -> LONE expr
-- On MSET reduce production prim_expr -> LONE expr
-- On MONE reduce production prim_expr -> LONE expr
-- On MLONE reduce production prim_expr -> LONE expr
-- On LTE reduce production prim_expr -> LONE expr
-- On LT reduce production prim_expr -> LONE expr
-- On LPAREN reduce production prim_expr -> LONE expr
-- On LONE reduce production prim_expr -> LONE expr
-- On LET reduce production prim_expr -> LONE expr
-- On LBRACE reduce production prim_expr -> LONE expr
-- On INT reduce production prim_expr -> LONE expr
-- On IN reduce production prim_expr -> LONE expr
-- On IMPLIES reduce production prim_expr -> LONE expr
-- On IFF reduce production prim_expr -> LONE expr
-- On IDENT reduce production prim_expr -> LONE expr
-- On IDEN reduce production prim_expr -> LONE expr
-- On HISTORICALLY reduce production prim_expr -> LONE expr
-- On GTE reduce production prim_expr -> LONE expr
-- On GT reduce production prim_expr -> LONE expr
-- On FUN reduce production prim_expr -> LONE expr
-- On FACT reduce production prim_expr -> LONE expr
-- On EVENTUALLY reduce production prim_expr -> LONE expr
-- On EQ reduce production prim_expr -> LONE expr
-- On EOF reduce production prim_expr -> LONE expr
-- On ENUM reduce production prim_expr -> LONE expr
-- On ELSE reduce production prim_expr -> LONE expr
-- On COMMA reduce production prim_expr -> LONE expr
-- On CHECK reduce production prim_expr -> LONE expr
-- On CARET reduce production prim_expr -> LONE expr
-- On CARD reduce production prim_expr -> LONE expr
-- On BAR reduce production prim_expr -> LONE expr
-- On AT reduce production prim_expr -> LONE expr
-- On ASSERT reduce production prim_expr -> LONE expr
-- On AND reduce production prim_expr -> LONE expr
-- On ALWAYS reduce production prim_expr -> LONE expr
-- On ABSTRACT reduce production prim_expr -> LONE expr

State 247:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> LPAREN expr . RPAREN [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RPAREN PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET INTER IN IMPLIES IFF GTE GT EQ DOT AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On RPAREN shift to state 248
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:

State 248:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
expr -> LPAREN expr RPAREN . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LPAREN expr RPAREN

State 249:
## Known stack suffix:
## MLONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> MLONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> MLONE expr
-- On UNTIL reduce production prim_expr -> MLONE expr
-- On UNIV reduce production prim_expr -> MLONE expr
-- On TILDE reduce production prim_expr -> MLONE expr
-- On THIS reduce production prim_expr -> MLONE expr
-- On STAR reduce production prim_expr -> MLONE expr
-- On SOME reduce production prim_expr -> MLONE expr
-- On SINCE reduce production prim_expr -> MLONE expr
-- On SIG reduce production prim_expr -> MLONE expr
-- On RUN reduce production prim_expr -> MLONE expr
-- On RPAREN reduce production prim_expr -> MLONE expr
-- On RBRACKET reduce production prim_expr -> MLONE expr
-- On RBRACE reduce production prim_expr -> MLONE expr
-- On QSOME reduce production prim_expr -> MLONE expr
-- On QONE reduce production prim_expr -> MLONE expr
-- On QNO reduce production prim_expr -> MLONE expr
-- On QLONE reduce production prim_expr -> MLONE expr
-- On QALL reduce production prim_expr -> MLONE expr
-- On PRIVATE reduce production prim_expr -> MLONE expr
-- On PREVIOUS reduce production prim_expr -> MLONE expr
-- On PRED reduce production prim_expr -> MLONE expr
-- On OR reduce production prim_expr -> MLONE expr
-- On ONE reduce production prim_expr -> MLONE expr
-- On ONCE reduce production prim_expr -> MLONE expr
-- On NUMBER reduce production prim_expr -> MLONE expr
-- On NOT reduce production prim_expr -> MLONE expr
-- On NONE reduce production prim_expr -> MLONE expr
-- On NO reduce production prim_expr -> MLONE expr
-- On NICKNAME reduce production prim_expr -> MLONE expr
-- On NEXT reduce production prim_expr -> MLONE expr
-- On NEQ reduce production prim_expr -> MLONE expr
-- On MSOME reduce production prim_expr -> MLONE expr
-- On MSET reduce production prim_expr -> MLONE expr
-- On MONE reduce production prim_expr -> MLONE expr
-- On MLONE reduce production prim_expr -> MLONE expr
-- On LTE reduce production prim_expr -> MLONE expr
-- On LT reduce production prim_expr -> MLONE expr
-- On LPAREN reduce production prim_expr -> MLONE expr
-- On LONE reduce production prim_expr -> MLONE expr
-- On LET reduce production prim_expr -> MLONE expr
-- On LBRACE reduce production prim_expr -> MLONE expr
-- On INT reduce production prim_expr -> MLONE expr
-- On IN reduce production prim_expr -> MLONE expr
-- On IMPLIES reduce production prim_expr -> MLONE expr
-- On IFF reduce production prim_expr -> MLONE expr
-- On IDENT reduce production prim_expr -> MLONE expr
-- On IDEN reduce production prim_expr -> MLONE expr
-- On HISTORICALLY reduce production prim_expr -> MLONE expr
-- On GTE reduce production prim_expr -> MLONE expr
-- On GT reduce production prim_expr -> MLONE expr
-- On FUN reduce production prim_expr -> MLONE expr
-- On FACT reduce production prim_expr -> MLONE expr
-- On EVENTUALLY reduce production prim_expr -> MLONE expr
-- On EQ reduce production prim_expr -> MLONE expr
-- On EOF reduce production prim_expr -> MLONE expr
-- On ENUM reduce production prim_expr -> MLONE expr
-- On ELSE reduce production prim_expr -> MLONE expr
-- On COMMA reduce production prim_expr -> MLONE expr
-- On CHECK reduce production prim_expr -> MLONE expr
-- On CARET reduce production prim_expr -> MLONE expr
-- On CARD reduce production prim_expr -> MLONE expr
-- On BAR reduce production prim_expr -> MLONE expr
-- On AT reduce production prim_expr -> MLONE expr
-- On ASSERT reduce production prim_expr -> MLONE expr
-- On AND reduce production prim_expr -> MLONE expr
-- On ALWAYS reduce production prim_expr -> MLONE expr
-- On ABSTRACT reduce production prim_expr -> MLONE expr

State 250:
## Known stack suffix:
## MONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> MONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> MONE expr
-- On UNTIL reduce production prim_expr -> MONE expr
-- On UNIV reduce production prim_expr -> MONE expr
-- On TILDE reduce production prim_expr -> MONE expr
-- On THIS reduce production prim_expr -> MONE expr
-- On STAR reduce production prim_expr -> MONE expr
-- On SOME reduce production prim_expr -> MONE expr
-- On SINCE reduce production prim_expr -> MONE expr
-- On SIG reduce production prim_expr -> MONE expr
-- On RUN reduce production prim_expr -> MONE expr
-- On RPAREN reduce production prim_expr -> MONE expr
-- On RBRACKET reduce production prim_expr -> MONE expr
-- On RBRACE reduce production prim_expr -> MONE expr
-- On QSOME reduce production prim_expr -> MONE expr
-- On QONE reduce production prim_expr -> MONE expr
-- On QNO reduce production prim_expr -> MONE expr
-- On QLONE reduce production prim_expr -> MONE expr
-- On QALL reduce production prim_expr -> MONE expr
-- On PRIVATE reduce production prim_expr -> MONE expr
-- On PREVIOUS reduce production prim_expr -> MONE expr
-- On PRED reduce production prim_expr -> MONE expr
-- On OR reduce production prim_expr -> MONE expr
-- On ONE reduce production prim_expr -> MONE expr
-- On ONCE reduce production prim_expr -> MONE expr
-- On NUMBER reduce production prim_expr -> MONE expr
-- On NOT reduce production prim_expr -> MONE expr
-- On NONE reduce production prim_expr -> MONE expr
-- On NO reduce production prim_expr -> MONE expr
-- On NICKNAME reduce production prim_expr -> MONE expr
-- On NEXT reduce production prim_expr -> MONE expr
-- On NEQ reduce production prim_expr -> MONE expr
-- On MSOME reduce production prim_expr -> MONE expr
-- On MSET reduce production prim_expr -> MONE expr
-- On MONE reduce production prim_expr -> MONE expr
-- On MLONE reduce production prim_expr -> MONE expr
-- On LTE reduce production prim_expr -> MONE expr
-- On LT reduce production prim_expr -> MONE expr
-- On LPAREN reduce production prim_expr -> MONE expr
-- On LONE reduce production prim_expr -> MONE expr
-- On LET reduce production prim_expr -> MONE expr
-- On LBRACE reduce production prim_expr -> MONE expr
-- On INT reduce production prim_expr -> MONE expr
-- On IN reduce production prim_expr -> MONE expr
-- On IMPLIES reduce production prim_expr -> MONE expr
-- On IFF reduce production prim_expr -> MONE expr
-- On IDENT reduce production prim_expr -> MONE expr
-- On IDEN reduce production prim_expr -> MONE expr
-- On HISTORICALLY reduce production prim_expr -> MONE expr
-- On GTE reduce production prim_expr -> MONE expr
-- On GT reduce production prim_expr -> MONE expr
-- On FUN reduce production prim_expr -> MONE expr
-- On FACT reduce production prim_expr -> MONE expr
-- On EVENTUALLY reduce production prim_expr -> MONE expr
-- On EQ reduce production prim_expr -> MONE expr
-- On EOF reduce production prim_expr -> MONE expr
-- On ENUM reduce production prim_expr -> MONE expr
-- On ELSE reduce production prim_expr -> MONE expr
-- On COMMA reduce production prim_expr -> MONE expr
-- On CHECK reduce production prim_expr -> MONE expr
-- On CARET reduce production prim_expr -> MONE expr
-- On CARD reduce production prim_expr -> MONE expr
-- On BAR reduce production prim_expr -> MONE expr
-- On AT reduce production prim_expr -> MONE expr
-- On ASSERT reduce production prim_expr -> MONE expr
-- On AND reduce production prim_expr -> MONE expr
-- On ALWAYS reduce production prim_expr -> MONE expr
-- On ABSTRACT reduce production prim_expr -> MONE expr

State 251:
## Known stack suffix:
## MSET expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> MSET expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> MSET expr
-- On UNTIL reduce production prim_expr -> MSET expr
-- On UNIV reduce production prim_expr -> MSET expr
-- On TILDE reduce production prim_expr -> MSET expr
-- On THIS reduce production prim_expr -> MSET expr
-- On STAR reduce production prim_expr -> MSET expr
-- On SOME reduce production prim_expr -> MSET expr
-- On SINCE reduce production prim_expr -> MSET expr
-- On SIG reduce production prim_expr -> MSET expr
-- On RUN reduce production prim_expr -> MSET expr
-- On RPAREN reduce production prim_expr -> MSET expr
-- On RBRACKET reduce production prim_expr -> MSET expr
-- On RBRACE reduce production prim_expr -> MSET expr
-- On QSOME reduce production prim_expr -> MSET expr
-- On QONE reduce production prim_expr -> MSET expr
-- On QNO reduce production prim_expr -> MSET expr
-- On QLONE reduce production prim_expr -> MSET expr
-- On QALL reduce production prim_expr -> MSET expr
-- On PRIVATE reduce production prim_expr -> MSET expr
-- On PREVIOUS reduce production prim_expr -> MSET expr
-- On PRED reduce production prim_expr -> MSET expr
-- On OR reduce production prim_expr -> MSET expr
-- On ONE reduce production prim_expr -> MSET expr
-- On ONCE reduce production prim_expr -> MSET expr
-- On NUMBER reduce production prim_expr -> MSET expr
-- On NOT reduce production prim_expr -> MSET expr
-- On NONE reduce production prim_expr -> MSET expr
-- On NO reduce production prim_expr -> MSET expr
-- On NICKNAME reduce production prim_expr -> MSET expr
-- On NEXT reduce production prim_expr -> MSET expr
-- On NEQ reduce production prim_expr -> MSET expr
-- On MSOME reduce production prim_expr -> MSET expr
-- On MSET reduce production prim_expr -> MSET expr
-- On MONE reduce production prim_expr -> MSET expr
-- On MLONE reduce production prim_expr -> MSET expr
-- On LTE reduce production prim_expr -> MSET expr
-- On LT reduce production prim_expr -> MSET expr
-- On LPAREN reduce production prim_expr -> MSET expr
-- On LONE reduce production prim_expr -> MSET expr
-- On LET reduce production prim_expr -> MSET expr
-- On LBRACE reduce production prim_expr -> MSET expr
-- On INT reduce production prim_expr -> MSET expr
-- On IN reduce production prim_expr -> MSET expr
-- On IMPLIES reduce production prim_expr -> MSET expr
-- On IFF reduce production prim_expr -> MSET expr
-- On IDENT reduce production prim_expr -> MSET expr
-- On IDEN reduce production prim_expr -> MSET expr
-- On HISTORICALLY reduce production prim_expr -> MSET expr
-- On GTE reduce production prim_expr -> MSET expr
-- On GT reduce production prim_expr -> MSET expr
-- On FUN reduce production prim_expr -> MSET expr
-- On FACT reduce production prim_expr -> MSET expr
-- On EVENTUALLY reduce production prim_expr -> MSET expr
-- On EQ reduce production prim_expr -> MSET expr
-- On EOF reduce production prim_expr -> MSET expr
-- On ENUM reduce production prim_expr -> MSET expr
-- On ELSE reduce production prim_expr -> MSET expr
-- On COMMA reduce production prim_expr -> MSET expr
-- On CHECK reduce production prim_expr -> MSET expr
-- On CARET reduce production prim_expr -> MSET expr
-- On CARD reduce production prim_expr -> MSET expr
-- On BAR reduce production prim_expr -> MSET expr
-- On AT reduce production prim_expr -> MSET expr
-- On ASSERT reduce production prim_expr -> MSET expr
-- On AND reduce production prim_expr -> MSET expr
-- On ALWAYS reduce production prim_expr -> MSET expr
-- On ABSTRACT reduce production prim_expr -> MSET expr

State 252:
## Known stack suffix:
## MSOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> MSOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> MSOME expr
-- On UNTIL reduce production prim_expr -> MSOME expr
-- On UNIV reduce production prim_expr -> MSOME expr
-- On TILDE reduce production prim_expr -> MSOME expr
-- On THIS reduce production prim_expr -> MSOME expr
-- On STAR reduce production prim_expr -> MSOME expr
-- On SOME reduce production prim_expr -> MSOME expr
-- On SINCE reduce production prim_expr -> MSOME expr
-- On SIG reduce production prim_expr -> MSOME expr
-- On RUN reduce production prim_expr -> MSOME expr
-- On RPAREN reduce production prim_expr -> MSOME expr
-- On RBRACKET reduce production prim_expr -> MSOME expr
-- On RBRACE reduce production prim_expr -> MSOME expr
-- On QSOME reduce production prim_expr -> MSOME expr
-- On QONE reduce production prim_expr -> MSOME expr
-- On QNO reduce production prim_expr -> MSOME expr
-- On QLONE reduce production prim_expr -> MSOME expr
-- On QALL reduce production prim_expr -> MSOME expr
-- On PRIVATE reduce production prim_expr -> MSOME expr
-- On PREVIOUS reduce production prim_expr -> MSOME expr
-- On PRED reduce production prim_expr -> MSOME expr
-- On OR reduce production prim_expr -> MSOME expr
-- On ONE reduce production prim_expr -> MSOME expr
-- On ONCE reduce production prim_expr -> MSOME expr
-- On NUMBER reduce production prim_expr -> MSOME expr
-- On NOT reduce production prim_expr -> MSOME expr
-- On NONE reduce production prim_expr -> MSOME expr
-- On NO reduce production prim_expr -> MSOME expr
-- On NICKNAME reduce production prim_expr -> MSOME expr
-- On NEXT reduce production prim_expr -> MSOME expr
-- On NEQ reduce production prim_expr -> MSOME expr
-- On MSOME reduce production prim_expr -> MSOME expr
-- On MSET reduce production prim_expr -> MSOME expr
-- On MONE reduce production prim_expr -> MSOME expr
-- On MLONE reduce production prim_expr -> MSOME expr
-- On LTE reduce production prim_expr -> MSOME expr
-- On LT reduce production prim_expr -> MSOME expr
-- On LPAREN reduce production prim_expr -> MSOME expr
-- On LONE reduce production prim_expr -> MSOME expr
-- On LET reduce production prim_expr -> MSOME expr
-- On LBRACE reduce production prim_expr -> MSOME expr
-- On INT reduce production prim_expr -> MSOME expr
-- On IN reduce production prim_expr -> MSOME expr
-- On IMPLIES reduce production prim_expr -> MSOME expr
-- On IFF reduce production prim_expr -> MSOME expr
-- On IDENT reduce production prim_expr -> MSOME expr
-- On IDEN reduce production prim_expr -> MSOME expr
-- On HISTORICALLY reduce production prim_expr -> MSOME expr
-- On GTE reduce production prim_expr -> MSOME expr
-- On GT reduce production prim_expr -> MSOME expr
-- On FUN reduce production prim_expr -> MSOME expr
-- On FACT reduce production prim_expr -> MSOME expr
-- On EVENTUALLY reduce production prim_expr -> MSOME expr
-- On EQ reduce production prim_expr -> MSOME expr
-- On EOF reduce production prim_expr -> MSOME expr
-- On ENUM reduce production prim_expr -> MSOME expr
-- On ELSE reduce production prim_expr -> MSOME expr
-- On COMMA reduce production prim_expr -> MSOME expr
-- On CHECK reduce production prim_expr -> MSOME expr
-- On CARET reduce production prim_expr -> MSOME expr
-- On CARD reduce production prim_expr -> MSOME expr
-- On BAR reduce production prim_expr -> MSOME expr
-- On AT reduce production prim_expr -> MSOME expr
-- On ASSERT reduce production prim_expr -> MSOME expr
-- On AND reduce production prim_expr -> MSOME expr
-- On ALWAYS reduce production prim_expr -> MSOME expr
-- On ABSTRACT reduce production prim_expr -> MSOME expr

State 253:
## Known stack suffix:
## NEXT expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> NEXT expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> NEXT expr
-- On UNTIL reduce production prim_expr -> NEXT expr
-- On UNIV reduce production prim_expr -> NEXT expr
-- On TILDE reduce production prim_expr -> NEXT expr
-- On THIS reduce production prim_expr -> NEXT expr
-- On STAR reduce production prim_expr -> NEXT expr
-- On SOME reduce production prim_expr -> NEXT expr
-- On SINCE reduce production prim_expr -> NEXT expr
-- On SIG reduce production prim_expr -> NEXT expr
-- On RUN reduce production prim_expr -> NEXT expr
-- On RPAREN reduce production prim_expr -> NEXT expr
-- On RBRACKET reduce production prim_expr -> NEXT expr
-- On RBRACE reduce production prim_expr -> NEXT expr
-- On QSOME reduce production prim_expr -> NEXT expr
-- On QONE reduce production prim_expr -> NEXT expr
-- On QNO reduce production prim_expr -> NEXT expr
-- On QLONE reduce production prim_expr -> NEXT expr
-- On QALL reduce production prim_expr -> NEXT expr
-- On PRIVATE reduce production prim_expr -> NEXT expr
-- On PREVIOUS reduce production prim_expr -> NEXT expr
-- On PRED reduce production prim_expr -> NEXT expr
-- On OR reduce production prim_expr -> NEXT expr
-- On ONE reduce production prim_expr -> NEXT expr
-- On ONCE reduce production prim_expr -> NEXT expr
-- On NUMBER reduce production prim_expr -> NEXT expr
-- On NONE reduce production prim_expr -> NEXT expr
-- On NO reduce production prim_expr -> NEXT expr
-- On NICKNAME reduce production prim_expr -> NEXT expr
-- On NEXT reduce production prim_expr -> NEXT expr
-- On MSOME reduce production prim_expr -> NEXT expr
-- On MSET reduce production prim_expr -> NEXT expr
-- On MONE reduce production prim_expr -> NEXT expr
-- On MLONE reduce production prim_expr -> NEXT expr
-- On LPAREN reduce production prim_expr -> NEXT expr
-- On LONE reduce production prim_expr -> NEXT expr
-- On LET reduce production prim_expr -> NEXT expr
-- On LBRACE reduce production prim_expr -> NEXT expr
-- On INT reduce production prim_expr -> NEXT expr
-- On IMPLIES reduce production prim_expr -> NEXT expr
-- On IFF reduce production prim_expr -> NEXT expr
-- On IDENT reduce production prim_expr -> NEXT expr
-- On IDEN reduce production prim_expr -> NEXT expr
-- On HISTORICALLY reduce production prim_expr -> NEXT expr
-- On FUN reduce production prim_expr -> NEXT expr
-- On FACT reduce production prim_expr -> NEXT expr
-- On EVENTUALLY reduce production prim_expr -> NEXT expr
-- On EOF reduce production prim_expr -> NEXT expr
-- On ENUM reduce production prim_expr -> NEXT expr
-- On ELSE reduce production prim_expr -> NEXT expr
-- On COMMA reduce production prim_expr -> NEXT expr
-- On CHECK reduce production prim_expr -> NEXT expr
-- On CARET reduce production prim_expr -> NEXT expr
-- On CARD reduce production prim_expr -> NEXT expr
-- On BAR reduce production prim_expr -> NEXT expr
-- On AT reduce production prim_expr -> NEXT expr
-- On ASSERT reduce production prim_expr -> NEXT expr
-- On AND reduce production prim_expr -> NEXT expr
-- On ALWAYS reduce production prim_expr -> NEXT expr
-- On ABSTRACT reduce production prim_expr -> NEXT expr

State 254:
## Known stack suffix:
## NO expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> NO expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> NO expr
-- On UNTIL reduce production prim_expr -> NO expr
-- On UNIV reduce production prim_expr -> NO expr
-- On TILDE reduce production prim_expr -> NO expr
-- On THIS reduce production prim_expr -> NO expr
-- On STAR reduce production prim_expr -> NO expr
-- On SOME reduce production prim_expr -> NO expr
-- On SINCE reduce production prim_expr -> NO expr
-- On SIG reduce production prim_expr -> NO expr
-- On RUN reduce production prim_expr -> NO expr
-- On RPAREN reduce production prim_expr -> NO expr
-- On RBRACKET reduce production prim_expr -> NO expr
-- On RBRACE reduce production prim_expr -> NO expr
-- On QSOME reduce production prim_expr -> NO expr
-- On QONE reduce production prim_expr -> NO expr
-- On QNO reduce production prim_expr -> NO expr
-- On QLONE reduce production prim_expr -> NO expr
-- On QALL reduce production prim_expr -> NO expr
-- On PRIVATE reduce production prim_expr -> NO expr
-- On PREVIOUS reduce production prim_expr -> NO expr
-- On PRED reduce production prim_expr -> NO expr
-- On OR reduce production prim_expr -> NO expr
-- On ONE reduce production prim_expr -> NO expr
-- On ONCE reduce production prim_expr -> NO expr
-- On NUMBER reduce production prim_expr -> NO expr
-- On NOT reduce production prim_expr -> NO expr
-- On NONE reduce production prim_expr -> NO expr
-- On NO reduce production prim_expr -> NO expr
-- On NICKNAME reduce production prim_expr -> NO expr
-- On NEXT reduce production prim_expr -> NO expr
-- On NEQ reduce production prim_expr -> NO expr
-- On MSOME reduce production prim_expr -> NO expr
-- On MSET reduce production prim_expr -> NO expr
-- On MONE reduce production prim_expr -> NO expr
-- On MLONE reduce production prim_expr -> NO expr
-- On LTE reduce production prim_expr -> NO expr
-- On LT reduce production prim_expr -> NO expr
-- On LPAREN reduce production prim_expr -> NO expr
-- On LONE reduce production prim_expr -> NO expr
-- On LET reduce production prim_expr -> NO expr
-- On LBRACE reduce production prim_expr -> NO expr
-- On INT reduce production prim_expr -> NO expr
-- On IN reduce production prim_expr -> NO expr
-- On IMPLIES reduce production prim_expr -> NO expr
-- On IFF reduce production prim_expr -> NO expr
-- On IDENT reduce production prim_expr -> NO expr
-- On IDEN reduce production prim_expr -> NO expr
-- On HISTORICALLY reduce production prim_expr -> NO expr
-- On GTE reduce production prim_expr -> NO expr
-- On GT reduce production prim_expr -> NO expr
-- On FUN reduce production prim_expr -> NO expr
-- On FACT reduce production prim_expr -> NO expr
-- On EVENTUALLY reduce production prim_expr -> NO expr
-- On EQ reduce production prim_expr -> NO expr
-- On EOF reduce production prim_expr -> NO expr
-- On ENUM reduce production prim_expr -> NO expr
-- On ELSE reduce production prim_expr -> NO expr
-- On COMMA reduce production prim_expr -> NO expr
-- On CHECK reduce production prim_expr -> NO expr
-- On CARET reduce production prim_expr -> NO expr
-- On CARD reduce production prim_expr -> NO expr
-- On BAR reduce production prim_expr -> NO expr
-- On AT reduce production prim_expr -> NO expr
-- On ASSERT reduce production prim_expr -> NO expr
-- On AND reduce production prim_expr -> NO expr
-- On ALWAYS reduce production prim_expr -> NO expr
-- On ABSTRACT reduce production prim_expr -> NO expr

State 255:
## Known stack suffix:
## ONCE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> ONCE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> ONCE expr
-- On UNTIL reduce production prim_expr -> ONCE expr
-- On UNIV reduce production prim_expr -> ONCE expr
-- On TILDE reduce production prim_expr -> ONCE expr
-- On THIS reduce production prim_expr -> ONCE expr
-- On STAR reduce production prim_expr -> ONCE expr
-- On SOME reduce production prim_expr -> ONCE expr
-- On SINCE reduce production prim_expr -> ONCE expr
-- On SIG reduce production prim_expr -> ONCE expr
-- On RUN reduce production prim_expr -> ONCE expr
-- On RPAREN reduce production prim_expr -> ONCE expr
-- On RBRACKET reduce production prim_expr -> ONCE expr
-- On RBRACE reduce production prim_expr -> ONCE expr
-- On QSOME reduce production prim_expr -> ONCE expr
-- On QONE reduce production prim_expr -> ONCE expr
-- On QNO reduce production prim_expr -> ONCE expr
-- On QLONE reduce production prim_expr -> ONCE expr
-- On QALL reduce production prim_expr -> ONCE expr
-- On PRIVATE reduce production prim_expr -> ONCE expr
-- On PREVIOUS reduce production prim_expr -> ONCE expr
-- On PRED reduce production prim_expr -> ONCE expr
-- On OR reduce production prim_expr -> ONCE expr
-- On ONE reduce production prim_expr -> ONCE expr
-- On ONCE reduce production prim_expr -> ONCE expr
-- On NUMBER reduce production prim_expr -> ONCE expr
-- On NONE reduce production prim_expr -> ONCE expr
-- On NO reduce production prim_expr -> ONCE expr
-- On NICKNAME reduce production prim_expr -> ONCE expr
-- On NEXT reduce production prim_expr -> ONCE expr
-- On MSOME reduce production prim_expr -> ONCE expr
-- On MSET reduce production prim_expr -> ONCE expr
-- On MONE reduce production prim_expr -> ONCE expr
-- On MLONE reduce production prim_expr -> ONCE expr
-- On LPAREN reduce production prim_expr -> ONCE expr
-- On LONE reduce production prim_expr -> ONCE expr
-- On LET reduce production prim_expr -> ONCE expr
-- On LBRACE reduce production prim_expr -> ONCE expr
-- On INT reduce production prim_expr -> ONCE expr
-- On IMPLIES reduce production prim_expr -> ONCE expr
-- On IFF reduce production prim_expr -> ONCE expr
-- On IDENT reduce production prim_expr -> ONCE expr
-- On IDEN reduce production prim_expr -> ONCE expr
-- On HISTORICALLY reduce production prim_expr -> ONCE expr
-- On FUN reduce production prim_expr -> ONCE expr
-- On FACT reduce production prim_expr -> ONCE expr
-- On EVENTUALLY reduce production prim_expr -> ONCE expr
-- On EOF reduce production prim_expr -> ONCE expr
-- On ENUM reduce production prim_expr -> ONCE expr
-- On ELSE reduce production prim_expr -> ONCE expr
-- On COMMA reduce production prim_expr -> ONCE expr
-- On CHECK reduce production prim_expr -> ONCE expr
-- On CARET reduce production prim_expr -> ONCE expr
-- On CARD reduce production prim_expr -> ONCE expr
-- On BAR reduce production prim_expr -> ONCE expr
-- On AT reduce production prim_expr -> ONCE expr
-- On ASSERT reduce production prim_expr -> ONCE expr
-- On AND reduce production prim_expr -> ONCE expr
-- On ALWAYS reduce production prim_expr -> ONCE expr
-- On ABSTRACT reduce production prim_expr -> ONCE expr

State 256:
## Known stack suffix:
## ONE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> ONE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> ONE expr
-- On UNTIL reduce production prim_expr -> ONE expr
-- On UNIV reduce production prim_expr -> ONE expr
-- On TILDE reduce production prim_expr -> ONE expr
-- On THIS reduce production prim_expr -> ONE expr
-- On STAR reduce production prim_expr -> ONE expr
-- On SOME reduce production prim_expr -> ONE expr
-- On SINCE reduce production prim_expr -> ONE expr
-- On SIG reduce production prim_expr -> ONE expr
-- On RUN reduce production prim_expr -> ONE expr
-- On RPAREN reduce production prim_expr -> ONE expr
-- On RBRACKET reduce production prim_expr -> ONE expr
-- On RBRACE reduce production prim_expr -> ONE expr
-- On QSOME reduce production prim_expr -> ONE expr
-- On QONE reduce production prim_expr -> ONE expr
-- On QNO reduce production prim_expr -> ONE expr
-- On QLONE reduce production prim_expr -> ONE expr
-- On QALL reduce production prim_expr -> ONE expr
-- On PRIVATE reduce production prim_expr -> ONE expr
-- On PREVIOUS reduce production prim_expr -> ONE expr
-- On PRED reduce production prim_expr -> ONE expr
-- On OR reduce production prim_expr -> ONE expr
-- On ONE reduce production prim_expr -> ONE expr
-- On ONCE reduce production prim_expr -> ONE expr
-- On NUMBER reduce production prim_expr -> ONE expr
-- On NOT reduce production prim_expr -> ONE expr
-- On NONE reduce production prim_expr -> ONE expr
-- On NO reduce production prim_expr -> ONE expr
-- On NICKNAME reduce production prim_expr -> ONE expr
-- On NEXT reduce production prim_expr -> ONE expr
-- On NEQ reduce production prim_expr -> ONE expr
-- On MSOME reduce production prim_expr -> ONE expr
-- On MSET reduce production prim_expr -> ONE expr
-- On MONE reduce production prim_expr -> ONE expr
-- On MLONE reduce production prim_expr -> ONE expr
-- On LTE reduce production prim_expr -> ONE expr
-- On LT reduce production prim_expr -> ONE expr
-- On LPAREN reduce production prim_expr -> ONE expr
-- On LONE reduce production prim_expr -> ONE expr
-- On LET reduce production prim_expr -> ONE expr
-- On LBRACE reduce production prim_expr -> ONE expr
-- On INT reduce production prim_expr -> ONE expr
-- On IN reduce production prim_expr -> ONE expr
-- On IMPLIES reduce production prim_expr -> ONE expr
-- On IFF reduce production prim_expr -> ONE expr
-- On IDENT reduce production prim_expr -> ONE expr
-- On IDEN reduce production prim_expr -> ONE expr
-- On HISTORICALLY reduce production prim_expr -> ONE expr
-- On GTE reduce production prim_expr -> ONE expr
-- On GT reduce production prim_expr -> ONE expr
-- On FUN reduce production prim_expr -> ONE expr
-- On FACT reduce production prim_expr -> ONE expr
-- On EVENTUALLY reduce production prim_expr -> ONE expr
-- On EQ reduce production prim_expr -> ONE expr
-- On EOF reduce production prim_expr -> ONE expr
-- On ENUM reduce production prim_expr -> ONE expr
-- On ELSE reduce production prim_expr -> ONE expr
-- On COMMA reduce production prim_expr -> ONE expr
-- On CHECK reduce production prim_expr -> ONE expr
-- On CARET reduce production prim_expr -> ONE expr
-- On CARD reduce production prim_expr -> ONE expr
-- On BAR reduce production prim_expr -> ONE expr
-- On AT reduce production prim_expr -> ONE expr
-- On ASSERT reduce production prim_expr -> ONE expr
-- On AND reduce production prim_expr -> ONE expr
-- On ALWAYS reduce production prim_expr -> ONE expr
-- On ABSTRACT reduce production prim_expr -> ONE expr

State 257:
## Known stack suffix:
## PREVIOUS expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> PREVIOUS expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> PREVIOUS expr
-- On UNTIL reduce production prim_expr -> PREVIOUS expr
-- On UNIV reduce production prim_expr -> PREVIOUS expr
-- On TILDE reduce production prim_expr -> PREVIOUS expr
-- On THIS reduce production prim_expr -> PREVIOUS expr
-- On STAR reduce production prim_expr -> PREVIOUS expr
-- On SOME reduce production prim_expr -> PREVIOUS expr
-- On SINCE reduce production prim_expr -> PREVIOUS expr
-- On SIG reduce production prim_expr -> PREVIOUS expr
-- On RUN reduce production prim_expr -> PREVIOUS expr
-- On RPAREN reduce production prim_expr -> PREVIOUS expr
-- On RBRACKET reduce production prim_expr -> PREVIOUS expr
-- On RBRACE reduce production prim_expr -> PREVIOUS expr
-- On QSOME reduce production prim_expr -> PREVIOUS expr
-- On QONE reduce production prim_expr -> PREVIOUS expr
-- On QNO reduce production prim_expr -> PREVIOUS expr
-- On QLONE reduce production prim_expr -> PREVIOUS expr
-- On QALL reduce production prim_expr -> PREVIOUS expr
-- On PRIVATE reduce production prim_expr -> PREVIOUS expr
-- On PREVIOUS reduce production prim_expr -> PREVIOUS expr
-- On PRED reduce production prim_expr -> PREVIOUS expr
-- On OR reduce production prim_expr -> PREVIOUS expr
-- On ONE reduce production prim_expr -> PREVIOUS expr
-- On ONCE reduce production prim_expr -> PREVIOUS expr
-- On NUMBER reduce production prim_expr -> PREVIOUS expr
-- On NONE reduce production prim_expr -> PREVIOUS expr
-- On NO reduce production prim_expr -> PREVIOUS expr
-- On NICKNAME reduce production prim_expr -> PREVIOUS expr
-- On NEXT reduce production prim_expr -> PREVIOUS expr
-- On MSOME reduce production prim_expr -> PREVIOUS expr
-- On MSET reduce production prim_expr -> PREVIOUS expr
-- On MONE reduce production prim_expr -> PREVIOUS expr
-- On MLONE reduce production prim_expr -> PREVIOUS expr
-- On LPAREN reduce production prim_expr -> PREVIOUS expr
-- On LONE reduce production prim_expr -> PREVIOUS expr
-- On LET reduce production prim_expr -> PREVIOUS expr
-- On LBRACE reduce production prim_expr -> PREVIOUS expr
-- On INT reduce production prim_expr -> PREVIOUS expr
-- On IMPLIES reduce production prim_expr -> PREVIOUS expr
-- On IFF reduce production prim_expr -> PREVIOUS expr
-- On IDENT reduce production prim_expr -> PREVIOUS expr
-- On IDEN reduce production prim_expr -> PREVIOUS expr
-- On HISTORICALLY reduce production prim_expr -> PREVIOUS expr
-- On FUN reduce production prim_expr -> PREVIOUS expr
-- On FACT reduce production prim_expr -> PREVIOUS expr
-- On EVENTUALLY reduce production prim_expr -> PREVIOUS expr
-- On EOF reduce production prim_expr -> PREVIOUS expr
-- On ENUM reduce production prim_expr -> PREVIOUS expr
-- On ELSE reduce production prim_expr -> PREVIOUS expr
-- On COMMA reduce production prim_expr -> PREVIOUS expr
-- On CHECK reduce production prim_expr -> PREVIOUS expr
-- On CARET reduce production prim_expr -> PREVIOUS expr
-- On CARD reduce production prim_expr -> PREVIOUS expr
-- On BAR reduce production prim_expr -> PREVIOUS expr
-- On AT reduce production prim_expr -> PREVIOUS expr
-- On ASSERT reduce production prim_expr -> PREVIOUS expr
-- On AND reduce production prim_expr -> PREVIOUS expr
-- On ALWAYS reduce production prim_expr -> PREVIOUS expr
-- On ABSTRACT reduce production prim_expr -> PREVIOUS expr

State 258:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON DISJ
## LR(1) items:
decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 259
-- On block shift to state 169
## Reductions:

State 259:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
## LR(1) items:
decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On RBRACE reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On LBRACE reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On COMMA reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On BAR reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON DISJ expr

State 260:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT) COLON expr
## LR(1) items:
decl -> separated_nonempty_list(COMMA,IDENT) COLON expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON expr
-- On RBRACE reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON expr
-- On LBRACE reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON expr
-- On COMMA reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON expr
-- On BAR reduce production decl -> separated_nonempty_list(COMMA,IDENT) COLON expr

State 261:
## Known stack suffix:
## BAR expr
## LR(1) items:
block_or_bar -> BAR expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production block_or_bar -> BAR expr
-- On UNIV reduce production block_or_bar -> BAR expr
-- On TILDE reduce production block_or_bar -> BAR expr
-- On THIS reduce production block_or_bar -> BAR expr
-- On STAR reduce production block_or_bar -> BAR expr
-- On SOME reduce production block_or_bar -> BAR expr
-- On SIG reduce production block_or_bar -> BAR expr
-- On RUN reduce production block_or_bar -> BAR expr
-- On RPAREN reduce production block_or_bar -> BAR expr
-- On RBRACKET reduce production block_or_bar -> BAR expr
-- On RBRACE reduce production block_or_bar -> BAR expr
-- On QSOME reduce production block_or_bar -> BAR expr
-- On QONE reduce production block_or_bar -> BAR expr
-- On QNO reduce production block_or_bar -> BAR expr
-- On QLONE reduce production block_or_bar -> BAR expr
-- On QALL reduce production block_or_bar -> BAR expr
-- On PRIVATE reduce production block_or_bar -> BAR expr
-- On PREVIOUS reduce production block_or_bar -> BAR expr
-- On PRED reduce production block_or_bar -> BAR expr
-- On ONE reduce production block_or_bar -> BAR expr
-- On ONCE reduce production block_or_bar -> BAR expr
-- On NUMBER reduce production block_or_bar -> BAR expr
-- On NONE reduce production block_or_bar -> BAR expr
-- On NO reduce production block_or_bar -> BAR expr
-- On NICKNAME reduce production block_or_bar -> BAR expr
-- On NEXT reduce production block_or_bar -> BAR expr
-- On MSOME reduce production block_or_bar -> BAR expr
-- On MSET reduce production block_or_bar -> BAR expr
-- On MONE reduce production block_or_bar -> BAR expr
-- On MLONE reduce production block_or_bar -> BAR expr
-- On LPAREN reduce production block_or_bar -> BAR expr
-- On LONE reduce production block_or_bar -> BAR expr
-- On LET reduce production block_or_bar -> BAR expr
-- On LBRACE reduce production block_or_bar -> BAR expr
-- On INT reduce production block_or_bar -> BAR expr
-- On IDENT reduce production block_or_bar -> BAR expr
-- On IDEN reduce production block_or_bar -> BAR expr
-- On HISTORICALLY reduce production block_or_bar -> BAR expr
-- On FUN reduce production block_or_bar -> BAR expr
-- On FACT reduce production block_or_bar -> BAR expr
-- On EVENTUALLY reduce production block_or_bar -> BAR expr
-- On EOF reduce production block_or_bar -> BAR expr
-- On ENUM reduce production block_or_bar -> BAR expr
-- On ELSE reduce production block_or_bar -> BAR expr
-- On COMMA reduce production block_or_bar -> BAR expr
-- On CHECK reduce production block_or_bar -> BAR expr
-- On CARET reduce production block_or_bar -> BAR expr
-- On CARD reduce production block_or_bar -> BAR expr
-- On BAR reduce production block_or_bar -> BAR expr
-- On AT reduce production block_or_bar -> BAR expr
-- On ASSERT reduce production block_or_bar -> BAR expr
-- On ALWAYS reduce production block_or_bar -> BAR expr
-- On ABSTRACT reduce production block_or_bar -> BAR expr

State 262:
## Known stack suffix:
## QNO separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> QNO separated_nonempty_list(COMMA,decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> QNO separated_nonempty_list(COMMA,decl) block_or_bar

State 263:
## Known stack suffix:
## QONE separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> QONE separated_nonempty_list(COMMA,decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> QONE separated_nonempty_list(COMMA,decl) block_or_bar

State 264:
## Known stack suffix:
## DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ
## LR(1) items:
decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 265
-- On block shift to state 169
## Reductions:

State 265:
## Known stack suffix:
## DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
## LR(1) items:
decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On RBRACE reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On LBRACE reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On COMMA reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On BAR reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr

State 266:
## Known stack suffix:
## DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
## LR(1) items:
decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On RBRACE reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On LBRACE reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On COMMA reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On BAR reduce production decl -> DISJ separated_nonempty_list(COMMA,IDENT) COLON expr

State 267:
## Known stack suffix:
## QSOME separated_nonempty_list(COMMA,decl)
## LR(1) items:
prim_expr -> QSOME separated_nonempty_list(COMMA,decl) . block_or_bar [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On BAR shift to state 82
-- On block_or_bar shift to state 268
-- On block shift to state 86
## Reductions:

State 268:
## Known stack suffix:
## QSOME separated_nonempty_list(COMMA,decl) block_or_bar
## LR(1) items:
prim_expr -> QSOME separated_nonempty_list(COMMA,decl) block_or_bar . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prim_expr -> QSOME separated_nonempty_list(COMMA,decl) block_or_bar

State 269:
## Known stack suffix:
## SOME expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> SOME expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On MINUS shift to state 183
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On DOT shift to state 167
## Reductions:
-- On VAR reduce production prim_expr -> SOME expr
-- On UNTIL reduce production prim_expr -> SOME expr
-- On UNIV reduce production prim_expr -> SOME expr
-- On TILDE reduce production prim_expr -> SOME expr
-- On THIS reduce production prim_expr -> SOME expr
-- On STAR reduce production prim_expr -> SOME expr
-- On SOME reduce production prim_expr -> SOME expr
-- On SINCE reduce production prim_expr -> SOME expr
-- On SIG reduce production prim_expr -> SOME expr
-- On RUN reduce production prim_expr -> SOME expr
-- On RPAREN reduce production prim_expr -> SOME expr
-- On RBRACKET reduce production prim_expr -> SOME expr
-- On RBRACE reduce production prim_expr -> SOME expr
-- On QSOME reduce production prim_expr -> SOME expr
-- On QONE reduce production prim_expr -> SOME expr
-- On QNO reduce production prim_expr -> SOME expr
-- On QLONE reduce production prim_expr -> SOME expr
-- On QALL reduce production prim_expr -> SOME expr
-- On PRIVATE reduce production prim_expr -> SOME expr
-- On PREVIOUS reduce production prim_expr -> SOME expr
-- On PRED reduce production prim_expr -> SOME expr
-- On OR reduce production prim_expr -> SOME expr
-- On ONE reduce production prim_expr -> SOME expr
-- On ONCE reduce production prim_expr -> SOME expr
-- On NUMBER reduce production prim_expr -> SOME expr
-- On NOT reduce production prim_expr -> SOME expr
-- On NONE reduce production prim_expr -> SOME expr
-- On NO reduce production prim_expr -> SOME expr
-- On NICKNAME reduce production prim_expr -> SOME expr
-- On NEXT reduce production prim_expr -> SOME expr
-- On NEQ reduce production prim_expr -> SOME expr
-- On MSOME reduce production prim_expr -> SOME expr
-- On MSET reduce production prim_expr -> SOME expr
-- On MONE reduce production prim_expr -> SOME expr
-- On MLONE reduce production prim_expr -> SOME expr
-- On LTE reduce production prim_expr -> SOME expr
-- On LT reduce production prim_expr -> SOME expr
-- On LPAREN reduce production prim_expr -> SOME expr
-- On LONE reduce production prim_expr -> SOME expr
-- On LET reduce production prim_expr -> SOME expr
-- On LBRACE reduce production prim_expr -> SOME expr
-- On INT reduce production prim_expr -> SOME expr
-- On IN reduce production prim_expr -> SOME expr
-- On IMPLIES reduce production prim_expr -> SOME expr
-- On IFF reduce production prim_expr -> SOME expr
-- On IDENT reduce production prim_expr -> SOME expr
-- On IDEN reduce production prim_expr -> SOME expr
-- On HISTORICALLY reduce production prim_expr -> SOME expr
-- On GTE reduce production prim_expr -> SOME expr
-- On GT reduce production prim_expr -> SOME expr
-- On FUN reduce production prim_expr -> SOME expr
-- On FACT reduce production prim_expr -> SOME expr
-- On EVENTUALLY reduce production prim_expr -> SOME expr
-- On EQ reduce production prim_expr -> SOME expr
-- On EOF reduce production prim_expr -> SOME expr
-- On ENUM reduce production prim_expr -> SOME expr
-- On ELSE reduce production prim_expr -> SOME expr
-- On COMMA reduce production prim_expr -> SOME expr
-- On CHECK reduce production prim_expr -> SOME expr
-- On CARET reduce production prim_expr -> SOME expr
-- On CARD reduce production prim_expr -> SOME expr
-- On BAR reduce production prim_expr -> SOME expr
-- On AT reduce production prim_expr -> SOME expr
-- On ASSERT reduce production prim_expr -> SOME expr
-- On AND reduce production prim_expr -> SOME expr
-- On ALWAYS reduce production prim_expr -> SOME expr
-- On ABSTRACT reduce production prim_expr -> SOME expr

State 270:
## Known stack suffix:
## STAR expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> STAR expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On PRIME shift to state 146
## Reductions:
-- On VAR reduce production prim_expr -> STAR expr
-- On UNTIL reduce production prim_expr -> STAR expr
-- On UNIV reduce production prim_expr -> STAR expr
-- On TILDE reduce production prim_expr -> STAR expr
-- On THIS reduce production prim_expr -> STAR expr
-- On STAR reduce production prim_expr -> STAR expr
-- On SOME_ARROW_SOME reduce production prim_expr -> STAR expr
-- On SOME_ARROW_SET reduce production prim_expr -> STAR expr
-- On SOME_ARROW_ONE reduce production prim_expr -> STAR expr
-- On SOME_ARROW_LONE reduce production prim_expr -> STAR expr
-- On SOME reduce production prim_expr -> STAR expr
-- On SINCE reduce production prim_expr -> STAR expr
-- On SIG reduce production prim_expr -> STAR expr
-- On SET_ARROW_SOME reduce production prim_expr -> STAR expr
-- On SET_ARROW_SET reduce production prim_expr -> STAR expr
-- On SET_ARROW_ONE reduce production prim_expr -> STAR expr
-- On SET_ARROW_LONE reduce production prim_expr -> STAR expr
-- On RUN reduce production prim_expr -> STAR expr
-- On RPROJ reduce production prim_expr -> STAR expr
-- On RPAREN reduce production prim_expr -> STAR expr
-- On RBRACKET reduce production prim_expr -> STAR expr
-- On RBRACE reduce production prim_expr -> STAR expr
-- On QSOME reduce production prim_expr -> STAR expr
-- On QONE reduce production prim_expr -> STAR expr
-- On QNO reduce production prim_expr -> STAR expr
-- On QLONE reduce production prim_expr -> STAR expr
-- On QALL reduce production prim_expr -> STAR expr
-- On PRIVATE reduce production prim_expr -> STAR expr
-- On PREVIOUS reduce production prim_expr -> STAR expr
-- On PRED reduce production prim_expr -> STAR expr
-- On PLUS reduce production prim_expr -> STAR expr
-- On OVERRIDE reduce production prim_expr -> STAR expr
-- On OR reduce production prim_expr -> STAR expr
-- On ONE_ARROW_SOME reduce production prim_expr -> STAR expr
-- On ONE_ARROW_SET reduce production prim_expr -> STAR expr
-- On ONE_ARROW_ONE reduce production prim_expr -> STAR expr
-- On ONE_ARROW_LONE reduce production prim_expr -> STAR expr
-- On ONE reduce production prim_expr -> STAR expr
-- On ONCE reduce production prim_expr -> STAR expr
-- On NUMBER reduce production prim_expr -> STAR expr
-- On NOT reduce production prim_expr -> STAR expr
-- On NONE reduce production prim_expr -> STAR expr
-- On NO reduce production prim_expr -> STAR expr
-- On NICKNAME reduce production prim_expr -> STAR expr
-- On NEXT reduce production prim_expr -> STAR expr
-- On NEQ reduce production prim_expr -> STAR expr
-- On MSOME reduce production prim_expr -> STAR expr
-- On MSET reduce production prim_expr -> STAR expr
-- On MONE reduce production prim_expr -> STAR expr
-- On MLONE reduce production prim_expr -> STAR expr
-- On MINUS reduce production prim_expr -> STAR expr
-- On LTE reduce production prim_expr -> STAR expr
-- On LT reduce production prim_expr -> STAR expr
-- On LPROJ reduce production prim_expr -> STAR expr
-- On LPAREN reduce production prim_expr -> STAR expr
-- On LONE_ARROW_SOME reduce production prim_expr -> STAR expr
-- On LONE_ARROW_SET reduce production prim_expr -> STAR expr
-- On LONE_ARROW_ONE reduce production prim_expr -> STAR expr
-- On LONE_ARROW_LONE reduce production prim_expr -> STAR expr
-- On LONE reduce production prim_expr -> STAR expr
-- On LET reduce production prim_expr -> STAR expr
-- On LBRACKET reduce production prim_expr -> STAR expr
-- On LBRACE reduce production prim_expr -> STAR expr
-- On INTER reduce production prim_expr -> STAR expr
-- On INT reduce production prim_expr -> STAR expr
-- On IN reduce production prim_expr -> STAR expr
-- On IMPLIES reduce production prim_expr -> STAR expr
-- On IFF reduce production prim_expr -> STAR expr
-- On IDENT reduce production prim_expr -> STAR expr
-- On IDEN reduce production prim_expr -> STAR expr
-- On HISTORICALLY reduce production prim_expr -> STAR expr
-- On GTE reduce production prim_expr -> STAR expr
-- On GT reduce production prim_expr -> STAR expr
-- On FUN reduce production prim_expr -> STAR expr
-- On FACT reduce production prim_expr -> STAR expr
-- On EVENTUALLY reduce production prim_expr -> STAR expr
-- On EQ reduce production prim_expr -> STAR expr
-- On EOF reduce production prim_expr -> STAR expr
-- On ENUM reduce production prim_expr -> STAR expr
-- On ELSE reduce production prim_expr -> STAR expr
-- On DOT reduce production prim_expr -> STAR expr
-- On COMMA reduce production prim_expr -> STAR expr
-- On CHECK reduce production prim_expr -> STAR expr
-- On CARET reduce production prim_expr -> STAR expr
-- On CARD reduce production prim_expr -> STAR expr
-- On BAR reduce production prim_expr -> STAR expr
-- On AT reduce production prim_expr -> STAR expr
-- On ASSERT reduce production prim_expr -> STAR expr
-- On AND reduce production prim_expr -> STAR expr
-- On ALWAYS reduce production prim_expr -> STAR expr
-- On ABSTRACT reduce production prim_expr -> STAR expr

State 271:
## Known stack suffix:
## TILDE expr
## LR(1) items:
prim_expr -> expr . IMPLIES expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> TILDE expr . [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ RPAREN RBRACKET RBRACE QSOME QONE QNO QLONE QALL PRIVATE PRIME PREVIOUS PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NICKNAME NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT FUN FACT EVENTUALLY EQ EOF ENUM ELSE DOT COMMA CHECK CARET CARD BAR AT ASSERT AND ALWAYS ABSTRACT ]
## Transitions:
-- On PRIME shift to state 146
## Reductions:
-- On VAR reduce production prim_expr -> TILDE expr
-- On UNTIL reduce production prim_expr -> TILDE expr
-- On UNIV reduce production prim_expr -> TILDE expr
-- On TILDE reduce production prim_expr -> TILDE expr
-- On THIS reduce production prim_expr -> TILDE expr
-- On STAR reduce production prim_expr -> TILDE expr
-- On SOME_ARROW_SOME reduce production prim_expr -> TILDE expr
-- On SOME_ARROW_SET reduce production prim_expr -> TILDE expr
-- On SOME_ARROW_ONE reduce production prim_expr -> TILDE expr
-- On SOME_ARROW_LONE reduce production prim_expr -> TILDE expr
-- On SOME reduce production prim_expr -> TILDE expr
-- On SINCE reduce production prim_expr -> TILDE expr
-- On SIG reduce production prim_expr -> TILDE expr
-- On SET_ARROW_SOME reduce production prim_expr -> TILDE expr
-- On SET_ARROW_SET reduce production prim_expr -> TILDE expr
-- On SET_ARROW_ONE reduce production prim_expr -> TILDE expr
-- On SET_ARROW_LONE reduce production prim_expr -> TILDE expr
-- On RUN reduce production prim_expr -> TILDE expr
-- On RPROJ reduce production prim_expr -> TILDE expr
-- On RPAREN reduce production prim_expr -> TILDE expr
-- On RBRACKET reduce production prim_expr -> TILDE expr
-- On RBRACE reduce production prim_expr -> TILDE expr
-- On QSOME reduce production prim_expr -> TILDE expr
-- On QONE reduce production prim_expr -> TILDE expr
-- On QNO reduce production prim_expr -> TILDE expr
-- On QLONE reduce production prim_expr -> TILDE expr
-- On QALL reduce production prim_expr -> TILDE expr
-- On PRIVATE reduce production prim_expr -> TILDE expr
-- On PREVIOUS reduce production prim_expr -> TILDE expr
-- On PRED reduce production prim_expr -> TILDE expr
-- On PLUS reduce production prim_expr -> TILDE expr
-- On OVERRIDE reduce production prim_expr -> TILDE expr
-- On OR reduce production prim_expr -> TILDE expr
-- On ONE_ARROW_SOME reduce production prim_expr -> TILDE expr
-- On ONE_ARROW_SET reduce production prim_expr -> TILDE expr
-- On ONE_ARROW_ONE reduce production prim_expr -> TILDE expr
-- On ONE_ARROW_LONE reduce production prim_expr -> TILDE expr
-- On ONE reduce production prim_expr -> TILDE expr
-- On ONCE reduce production prim_expr -> TILDE expr
-- On NUMBER reduce production prim_expr -> TILDE expr
-- On NOT reduce production prim_expr -> TILDE expr
-- On NONE reduce production prim_expr -> TILDE expr
-- On NO reduce production prim_expr -> TILDE expr
-- On NICKNAME reduce production prim_expr -> TILDE expr
-- On NEXT reduce production prim_expr -> TILDE expr
-- On NEQ reduce production prim_expr -> TILDE expr
-- On MSOME reduce production prim_expr -> TILDE expr
-- On MSET reduce production prim_expr -> TILDE expr
-- On MONE reduce production prim_expr -> TILDE expr
-- On MLONE reduce production prim_expr -> TILDE expr
-- On MINUS reduce production prim_expr -> TILDE expr
-- On LTE reduce production prim_expr -> TILDE expr
-- On LT reduce production prim_expr -> TILDE expr
-- On LPROJ reduce production prim_expr -> TILDE expr
-- On LPAREN reduce production prim_expr -> TILDE expr
-- On LONE_ARROW_SOME reduce production prim_expr -> TILDE expr
-- On LONE_ARROW_SET reduce production prim_expr -> TILDE expr
-- On LONE_ARROW_ONE reduce production prim_expr -> TILDE expr
-- On LONE_ARROW_LONE reduce production prim_expr -> TILDE expr
-- On LONE reduce production prim_expr -> TILDE expr
-- On LET reduce production prim_expr -> TILDE expr
-- On LBRACKET reduce production prim_expr -> TILDE expr
-- On LBRACE reduce production prim_expr -> TILDE expr
-- On INTER reduce production prim_expr -> TILDE expr
-- On INT reduce production prim_expr -> TILDE expr
-- On IN reduce production prim_expr -> TILDE expr
-- On IMPLIES reduce production prim_expr -> TILDE expr
-- On IFF reduce production prim_expr -> TILDE expr
-- On IDENT reduce production prim_expr -> TILDE expr
-- On IDEN reduce production prim_expr -> TILDE expr
-- On HISTORICALLY reduce production prim_expr -> TILDE expr
-- On GTE reduce production prim_expr -> TILDE expr
-- On GT reduce production prim_expr -> TILDE expr
-- On FUN reduce production prim_expr -> TILDE expr
-- On FACT reduce production prim_expr -> TILDE expr
-- On EVENTUALLY reduce production prim_expr -> TILDE expr
-- On EQ reduce production prim_expr -> TILDE expr
-- On EOF reduce production prim_expr -> TILDE expr
-- On ENUM reduce production prim_expr -> TILDE expr
-- On ELSE reduce production prim_expr -> TILDE expr
-- On DOT reduce production prim_expr -> TILDE expr
-- On COMMA reduce production prim_expr -> TILDE expr
-- On CHECK reduce production prim_expr -> TILDE expr
-- On CARET reduce production prim_expr -> TILDE expr
-- On CARD reduce production prim_expr -> TILDE expr
-- On BAR reduce production prim_expr -> TILDE expr
-- On AT reduce production prim_expr -> TILDE expr
-- On ASSERT reduce production prim_expr -> TILDE expr
-- On AND reduce production prim_expr -> TILDE expr
-- On ALWAYS reduce production prim_expr -> TILDE expr
-- On ABSTRACT reduce production prim_expr -> TILDE expr

State 272:
## Known stack suffix:
## VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ
## LR(1) items:
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 273
-- On block shift to state 169
## Reductions:

State 273:
## Known stack suffix:
## VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
## LR(1) items:
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On RBRACE reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On LBRACE reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On COMMA reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On BAR reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON DISJ expr

State 274:
## Known stack suffix:
## VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
## LR(1) items:
decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On RBRACE reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On LBRACE reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On COMMA reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr
-- On BAR reduce production decl -> VAR DISJ separated_nonempty_list(COMMA,IDENT) COLON expr

State 275:
## Known stack suffix:
## VAR separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
decl -> VAR separated_nonempty_list(COMMA,IDENT) . COLON expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR separated_nonempty_list(COMMA,IDENT) . COLON DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On COLON shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## VAR separated_nonempty_list(COMMA,IDENT) COLON
## LR(1) items:
decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON . DISJ expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On DISJ shift to state 277
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 279
-- On block shift to state 169
## Reductions:

State 277:
## Known stack suffix:
## VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ
## LR(1) items:
decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ . expr [ RBRACKET RBRACE LBRACE COMMA BAR ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 278
-- On block shift to state 169
## Reductions:

State 278:
## Known stack suffix:
## VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
## LR(1) items:
decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On RBRACE reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On LBRACE reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On COMMA reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr
-- On BAR reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON DISJ expr

State 279:
## Known stack suffix:
## VAR separated_nonempty_list(COMMA,IDENT) COLON expr
## LR(1) items:
decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr . [ RBRACKET RBRACE LBRACE COMMA BAR ]
prim_expr -> expr . IMPLIES expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OR expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IFF expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . AND expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . MINUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PLUS expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . OVERRIDE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . INTER expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . RPROJ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . DOT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . UNTIL expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SINCE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT IN expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT GTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LT expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT LTE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT NEQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . NOT EQ expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . PRIME [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ RBRACKET RBRACE PRIME PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE NOT NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LBRACKET LBRACE INTER IN IMPLIES IFF GTE GT EQ DOT COMMA BAR AND ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On RBRACKET reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr
-- On RBRACE reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr
-- On LBRACE reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr
-- On COMMA reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr
-- On BAR reduce production decl -> VAR separated_nonempty_list(COMMA,IDENT) COLON expr

State 280:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl)
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) . RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On RBRACE shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE . option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On option(block) shift to state 282
-- On block shift to state 283
## Reductions:
-- On VAR reduce production option(block) ->
-- On SOME reduce production option(block) ->
-- On SIG reduce production option(block) ->
-- On RUN reduce production option(block) ->
-- On PRIVATE reduce production option(block) ->
-- On PRED reduce production option(block) ->
-- On ONE reduce production option(block) ->
-- On NICKNAME reduce production option(block) ->
-- On LONE reduce production option(block) ->
-- On FUN reduce production option(block) ->
-- On FACT reduce production option(block) ->
-- On EOF reduce production option(block) ->
-- On ENUM reduce production option(block) ->
-- On CHECK reduce production option(block) ->
-- On ASSERT reduce production option(block) ->
-- On ABSTRACT reduce production option(block) ->

State 282:
## Known stack suffix:
## VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block)
## LR(1) items:
sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigDecl -> VAR sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block)

State 283:
## Known stack suffix:
## block
## LR(1) items:
option(block) -> block . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(block) -> block

State 284:
## Known stack suffix:
## decl
## LR(1) items:
right_flexible_list(COMMA,decl) -> decl . [ RBRACE ]
right_flexible_list(COMMA,decl) -> decl . COMMA right_flexible_list(COMMA,decl) [ RBRACE ]
## Transitions:
-- On COMMA shift to state 285
## Reductions:
-- On RBRACE reduce production right_flexible_list(COMMA,decl) -> decl

State 285:
## Known stack suffix:
## decl COMMA
## LR(1) items:
right_flexible_list(COMMA,decl) -> decl COMMA . right_flexible_list(COMMA,decl) [ RBRACE ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On right_flexible_list(COMMA,decl) shift to state 286
-- On decl shift to state 284
## Reductions:
-- On RBRACE reduce production right_flexible_list(COMMA,decl) ->

State 286:
## Known stack suffix:
## decl COMMA right_flexible_list(COMMA,decl)
## LR(1) items:
right_flexible_list(COMMA,decl) -> decl COMMA right_flexible_list(COMMA,decl) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_flexible_list(COMMA,decl) -> decl COMMA right_flexible_list(COMMA,decl)

State 287:
## Known stack suffix:
## PRIVATE
## LR(1) items:
option(PRIVATE) -> PRIVATE . [ PRED FUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(PRIVATE) -> PRIVATE

State 288:
## Known stack suffix:
## NICKNAME
## LR(1) items:
option(first(NICKNAME,COLON)) -> NICKNAME . COLON [ RUN CHECK ]
## Transitions:
-- On COLON shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## NICKNAME COLON
## LR(1) items:
option(first(NICKNAME,COLON)) -> NICKNAME COLON . [ RUN CHECK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(first(NICKNAME,COLON)) -> NICKNAME COLON

State 290:
## Known stack suffix:
## FACT
## LR(1) items:
factDecl -> FACT . option(IDENT) block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 291
-- On option(IDENT) shift to state 292
## Reductions:
-- On LBRACE reduce production option(IDENT) ->

State 291:
## Known stack suffix:
## IDENT
## LR(1) items:
option(IDENT) -> IDENT . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(IDENT) -> IDENT

State 292:
## Known stack suffix:
## FACT option(IDENT)
## LR(1) items:
factDecl -> FACT option(IDENT) . block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On block shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## FACT option(IDENT) block
## LR(1) items:
factDecl -> FACT option(IDENT) block . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production factDecl -> FACT option(IDENT) block

State 294:
## Known stack suffix:
## ENUM
## LR(1) items:
enumDecl -> ENUM . IDENT LBRACE separated_nonempty_list(COMMA,IDENT) RBRACE [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## ENUM IDENT
## LR(1) items:
enumDecl -> ENUM IDENT . LBRACE separated_nonempty_list(COMMA,IDENT) RBRACE [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 296
## Reductions:

State 296:
## Known stack suffix:
## ENUM IDENT LBRACE
## LR(1) items:
enumDecl -> ENUM IDENT LBRACE . separated_nonempty_list(COMMA,IDENT) RBRACE [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## ENUM IDENT LBRACE separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
enumDecl -> ENUM IDENT LBRACE separated_nonempty_list(COMMA,IDENT) . RBRACE [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On RBRACE shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## ENUM IDENT LBRACE separated_nonempty_list(COMMA,IDENT) RBRACE
## LR(1) items:
enumDecl -> ENUM IDENT LBRACE separated_nonempty_list(COMMA,IDENT) RBRACE . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumDecl -> ENUM IDENT LBRACE separated_nonempty_list(COMMA,IDENT) RBRACE

State 299:
## Known stack suffix:
## ASSERT
## LR(1) items:
assertDecl -> ASSERT . option(IDENT) block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 291
-- On option(IDENT) shift to state 300
## Reductions:
-- On LBRACE reduce production option(IDENT) ->

State 300:
## Known stack suffix:
## ASSERT option(IDENT)
## LR(1) items:
assertDecl -> ASSERT option(IDENT) . block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On block shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## ASSERT option(IDENT) block
## LR(1) items:
assertDecl -> ASSERT option(IDENT) block . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assertDecl -> ASSERT option(IDENT) block

State 302:
## Known stack suffix:
## sigQual
## LR(1) items:
sigDecl -> sigQual . SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On SIG shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## sigQual SIG
## LR(1) items:
sigDecl -> sigQual SIG . separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 50
-- On separated_nonempty_list(COMMA,IDENT) shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) . option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IN shift to state 54
-- On EXTENDS shift to state 59
-- On sigExt shift to state 61
-- On option(sigExt) shift to state 305
## Reductions:
-- On LBRACE reduce production option(sigExt) ->

State 305:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt)
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) . LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE . right_flexible_list(COMMA,decl) RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On right_flexible_list(COMMA,decl) shift to state 307
-- On decl shift to state 284
## Reductions:
-- On RBRACE reduce production right_flexible_list(COMMA,decl) ->

State 307:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl)
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) . RBRACE option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On RBRACE shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE . option(block) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On option(block) shift to state 309
-- On block shift to state 283
## Reductions:
-- On VAR reduce production option(block) ->
-- On SOME reduce production option(block) ->
-- On SIG reduce production option(block) ->
-- On RUN reduce production option(block) ->
-- On PRIVATE reduce production option(block) ->
-- On PRED reduce production option(block) ->
-- On ONE reduce production option(block) ->
-- On NICKNAME reduce production option(block) ->
-- On LONE reduce production option(block) ->
-- On FUN reduce production option(block) ->
-- On FACT reduce production option(block) ->
-- On EOF reduce production option(block) ->
-- On ENUM reduce production option(block) ->
-- On CHECK reduce production option(block) ->
-- On ASSERT reduce production option(block) ->
-- On ABSTRACT reduce production option(block) ->

State 309:
## Known stack suffix:
## sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block)
## LR(1) items:
sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sigDecl -> sigQual SIG separated_nonempty_list(COMMA,IDENT) option(sigExt) LBRACE right_flexible_list(COMMA,decl) RBRACE option(block)

State 310:
## Known stack suffix:
## sigDecl
## LR(1) items:
paragraph -> sigDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> sigDecl

State 311:
## Known stack suffix:
## predDecl
## LR(1) items:
paragraph -> predDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> predDecl

State 312:
## Known stack suffix:
## paragraph_or_cmd
## LR(1) items:
list(paragraph_or_cmd) -> paragraph_or_cmd . list(paragraph_or_cmd) [ EOF ]
## Transitions:
-- On VAR shift to state 37
-- On SOME shift to state 38
-- On PRIVATE shift to state 287
-- On ONE shift to state 40
-- On NICKNAME shift to state 288
-- On LONE shift to state 42
-- On FACT shift to state 290
-- On ENUM shift to state 294
-- On ASSERT shift to state 299
-- On ABSTRACT shift to state 44
-- On sigQual shift to state 302
-- On sigDecl shift to state 310
-- On predDecl shift to state 311
-- On paragraph_or_cmd shift to state 312
-- On paragraph shift to state 313
-- On option(first(NICKNAME,COLON)) shift to state 314
-- On option(PRIVATE) shift to state 341
-- On named_cmd shift to state 356
-- On list(paragraph_or_cmd) shift to state 359
-- On funDecl shift to state 360
-- On factDecl shift to state 361
-- On enumDecl shift to state 362
-- On cmd shift to state 363
-- On block_cmd shift to state 364
-- On assertDecl shift to state 367
## Reductions:
-- On SIG reduce production sigQual ->
-- On RUN reduce production option(first(NICKNAME,COLON)) ->
-- On PRED reduce production option(PRIVATE) ->
-- On FUN reduce production option(PRIVATE) ->
-- On EOF reduce production list(paragraph_or_cmd) ->
-- On CHECK reduce production option(first(NICKNAME,COLON)) ->

State 313:
## Known stack suffix:
## paragraph
## LR(1) items:
paragraph_or_cmd -> paragraph . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph_or_cmd -> paragraph

State 314:
## Known stack suffix:
## option(first(NICKNAME,COLON))
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) . RUN block option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
block_cmd -> option(first(NICKNAME,COLON)) . CHECK block option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
named_cmd -> option(first(NICKNAME,COLON)) . RUN qname option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
named_cmd -> option(first(NICKNAME,COLON)) . CHECK qname option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On RUN shift to state 315
-- On CHECK shift to state 336
## Reductions:

State 315:
## Known stack suffix:
## option(first(NICKNAME,COLON)) RUN
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) RUN . block option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
named_cmd -> option(first(NICKNAME,COLON)) RUN . qname option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On LBRACE shift to state 79
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 316
-- On block shift to state 334
## Reductions:

State 316:
## Known stack suffix:
## option(first(NICKNAME,COLON)) RUN qname
## LR(1) items:
named_cmd -> option(first(NICKNAME,COLON)) RUN qname . option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On FOR shift to state 317
-- On scope shift to state 332
-- On option(scope) shift to state 333
## Reductions:
-- On VAR reduce production option(scope) ->
-- On SOME reduce production option(scope) ->
-- On SIG reduce production option(scope) ->
-- On RUN reduce production option(scope) ->
-- On PRIVATE reduce production option(scope) ->
-- On PRED reduce production option(scope) ->
-- On ONE reduce production option(scope) ->
-- On NICKNAME reduce production option(scope) ->
-- On LONE reduce production option(scope) ->
-- On FUN reduce production option(scope) ->
-- On FACT reduce production option(scope) ->
-- On EXPECT reduce production option(scope) ->
-- On EOF reduce production option(scope) ->
-- On ENUM reduce production option(scope) ->
-- On CHECK reduce production option(scope) ->
-- On ASSERT reduce production option(scope) ->
-- On ABSTRACT reduce production option(scope) ->

State 317:
## Known stack suffix:
## FOR
## LR(1) items:
scope -> FOR . NUMBER loption(second(BUT,comma_sep1(typescope))) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
scope -> FOR . loption(comma_sep1(typescope)) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 318
-- On EXACTLY shift to state 322
-- On typescope shift to state 325
-- On separated_nonempty_list(COMMA,typescope) shift to state 330
-- On loption(comma_sep1(typescope)) shift to state 331
## Reductions:
-- On VAR reduce production loption(comma_sep1(typescope)) ->
-- On SOME reduce production loption(comma_sep1(typescope)) ->
-- On SIG reduce production loption(comma_sep1(typescope)) ->
-- On RUN reduce production loption(comma_sep1(typescope)) ->
-- On PRIVATE reduce production loption(comma_sep1(typescope)) ->
-- On PRED reduce production loption(comma_sep1(typescope)) ->
-- On ONE reduce production loption(comma_sep1(typescope)) ->
-- On NICKNAME reduce production loption(comma_sep1(typescope)) ->
-- On LONE reduce production loption(comma_sep1(typescope)) ->
-- On FUN reduce production loption(comma_sep1(typescope)) ->
-- On FACT reduce production loption(comma_sep1(typescope)) ->
-- On EXPECT reduce production loption(comma_sep1(typescope)) ->
-- On EOF reduce production loption(comma_sep1(typescope)) ->
-- On ENUM reduce production loption(comma_sep1(typescope)) ->
-- On CHECK reduce production loption(comma_sep1(typescope)) ->
-- On ASSERT reduce production loption(comma_sep1(typescope)) ->
-- On ABSTRACT reduce production loption(comma_sep1(typescope)) ->

State 318:
## Known stack suffix:
## FOR NUMBER
## LR(1) items:
scope -> FOR NUMBER . loption(second(BUT,comma_sep1(typescope))) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
typescope -> NUMBER . qname [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On BUT shift to state 319
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 321
-- On loption(second(BUT,comma_sep1(typescope))) shift to state 329
## Reductions:
-- On VAR reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On SOME reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On SIG reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On RUN reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On PRIVATE reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On PRED reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On ONE reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On NICKNAME reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On LONE reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On FUN reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On FACT reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On EXPECT reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On EOF reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On ENUM reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On CHECK reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On ASSERT reduce production loption(second(BUT,comma_sep1(typescope))) ->
-- On ABSTRACT reduce production loption(second(BUT,comma_sep1(typescope))) ->

State 319:
## Known stack suffix:
## BUT
## LR(1) items:
loption(second(BUT,comma_sep1(typescope))) -> BUT . separated_nonempty_list(COMMA,typescope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 320
-- On EXACTLY shift to state 322
-- On typescope shift to state 325
-- On separated_nonempty_list(COMMA,typescope) shift to state 328
## Reductions:

State 320:
## Known stack suffix:
## NUMBER
## LR(1) items:
typescope -> NUMBER . qname [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## NUMBER qname
## LR(1) items:
typescope -> NUMBER qname . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typescope -> NUMBER qname

State 322:
## Known stack suffix:
## EXACTLY
## LR(1) items:
typescope -> EXACTLY . NUMBER qname [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## EXACTLY NUMBER
## LR(1) items:
typescope -> EXACTLY NUMBER . qname [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## EXACTLY NUMBER qname
## LR(1) items:
typescope -> EXACTLY NUMBER qname . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM COMMA CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typescope -> EXACTLY NUMBER qname

State 325:
## Known stack suffix:
## typescope
## LR(1) items:
separated_nonempty_list(COMMA,typescope) -> typescope . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
separated_nonempty_list(COMMA,typescope) -> typescope . COMMA separated_nonempty_list(COMMA,typescope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On COMMA shift to state 326
## Reductions:
-- On VAR reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On SOME reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On SIG reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On RUN reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On PRIVATE reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On PRED reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On ONE reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On NICKNAME reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On LONE reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On FUN reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On FACT reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On EXPECT reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On EOF reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On ENUM reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On CHECK reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On ASSERT reduce production separated_nonempty_list(COMMA,typescope) -> typescope
-- On ABSTRACT reduce production separated_nonempty_list(COMMA,typescope) -> typescope

State 326:
## Known stack suffix:
## typescope COMMA
## LR(1) items:
separated_nonempty_list(COMMA,typescope) -> typescope COMMA . separated_nonempty_list(COMMA,typescope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 320
-- On EXACTLY shift to state 322
-- On typescope shift to state 325
-- On separated_nonempty_list(COMMA,typescope) shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## typescope COMMA separated_nonempty_list(COMMA,typescope)
## LR(1) items:
separated_nonempty_list(COMMA,typescope) -> typescope COMMA separated_nonempty_list(COMMA,typescope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,typescope) -> typescope COMMA separated_nonempty_list(COMMA,typescope)

State 328:
## Known stack suffix:
## BUT separated_nonempty_list(COMMA,typescope)
## LR(1) items:
loption(second(BUT,comma_sep1(typescope))) -> BUT separated_nonempty_list(COMMA,typescope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(second(BUT,comma_sep1(typescope))) -> BUT separated_nonempty_list(COMMA,typescope)

State 329:
## Known stack suffix:
## FOR NUMBER loption(second(BUT,comma_sep1(typescope)))
## LR(1) items:
scope -> FOR NUMBER loption(second(BUT,comma_sep1(typescope))) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scope -> FOR NUMBER loption(second(BUT,comma_sep1(typescope)))

State 330:
## Known stack suffix:
## separated_nonempty_list(COMMA,typescope)
## LR(1) items:
loption(comma_sep1(typescope)) -> separated_nonempty_list(COMMA,typescope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(comma_sep1(typescope)) -> separated_nonempty_list(COMMA,typescope)

State 331:
## Known stack suffix:
## FOR loption(comma_sep1(typescope))
## LR(1) items:
scope -> FOR loption(comma_sep1(typescope)) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scope -> FOR loption(comma_sep1(typescope))

State 332:
## Known stack suffix:
## scope
## LR(1) items:
option(scope) -> scope . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(scope) -> scope

State 333:
## Known stack suffix:
## option(first(NICKNAME,COLON)) RUN qname option(scope)
## LR(1) items:
named_cmd -> option(first(NICKNAME,COLON)) RUN qname option(scope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production named_cmd -> option(first(NICKNAME,COLON)) RUN qname option(scope)

State 334:
## Known stack suffix:
## option(first(NICKNAME,COLON)) RUN block
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) RUN block . option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On FOR shift to state 317
-- On scope shift to state 332
-- On option(scope) shift to state 335
## Reductions:
-- On VAR reduce production option(scope) ->
-- On SOME reduce production option(scope) ->
-- On SIG reduce production option(scope) ->
-- On RUN reduce production option(scope) ->
-- On PRIVATE reduce production option(scope) ->
-- On PRED reduce production option(scope) ->
-- On ONE reduce production option(scope) ->
-- On NICKNAME reduce production option(scope) ->
-- On LONE reduce production option(scope) ->
-- On FUN reduce production option(scope) ->
-- On FACT reduce production option(scope) ->
-- On EXPECT reduce production option(scope) ->
-- On EOF reduce production option(scope) ->
-- On ENUM reduce production option(scope) ->
-- On CHECK reduce production option(scope) ->
-- On ASSERT reduce production option(scope) ->
-- On ABSTRACT reduce production option(scope) ->

State 335:
## Known stack suffix:
## option(first(NICKNAME,COLON)) RUN block option(scope)
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) RUN block option(scope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_cmd -> option(first(NICKNAME,COLON)) RUN block option(scope)

State 336:
## Known stack suffix:
## option(first(NICKNAME,COLON)) CHECK
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) CHECK . block option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
named_cmd -> option(first(NICKNAME,COLON)) CHECK . qname option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On THIS shift to state 2
-- On LBRACE shift to state 79
-- On IDENT shift to state 4
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 337
-- On block shift to state 339
## Reductions:

State 337:
## Known stack suffix:
## option(first(NICKNAME,COLON)) CHECK qname
## LR(1) items:
named_cmd -> option(first(NICKNAME,COLON)) CHECK qname . option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On FOR shift to state 317
-- On scope shift to state 332
-- On option(scope) shift to state 338
## Reductions:
-- On VAR reduce production option(scope) ->
-- On SOME reduce production option(scope) ->
-- On SIG reduce production option(scope) ->
-- On RUN reduce production option(scope) ->
-- On PRIVATE reduce production option(scope) ->
-- On PRED reduce production option(scope) ->
-- On ONE reduce production option(scope) ->
-- On NICKNAME reduce production option(scope) ->
-- On LONE reduce production option(scope) ->
-- On FUN reduce production option(scope) ->
-- On FACT reduce production option(scope) ->
-- On EXPECT reduce production option(scope) ->
-- On EOF reduce production option(scope) ->
-- On ENUM reduce production option(scope) ->
-- On CHECK reduce production option(scope) ->
-- On ASSERT reduce production option(scope) ->
-- On ABSTRACT reduce production option(scope) ->

State 338:
## Known stack suffix:
## option(first(NICKNAME,COLON)) CHECK qname option(scope)
## LR(1) items:
named_cmd -> option(first(NICKNAME,COLON)) CHECK qname option(scope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production named_cmd -> option(first(NICKNAME,COLON)) CHECK qname option(scope)

State 339:
## Known stack suffix:
## option(first(NICKNAME,COLON)) CHECK block
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) CHECK block . option(scope) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On FOR shift to state 317
-- On scope shift to state 332
-- On option(scope) shift to state 340
## Reductions:
-- On VAR reduce production option(scope) ->
-- On SOME reduce production option(scope) ->
-- On SIG reduce production option(scope) ->
-- On RUN reduce production option(scope) ->
-- On PRIVATE reduce production option(scope) ->
-- On PRED reduce production option(scope) ->
-- On ONE reduce production option(scope) ->
-- On NICKNAME reduce production option(scope) ->
-- On LONE reduce production option(scope) ->
-- On FUN reduce production option(scope) ->
-- On FACT reduce production option(scope) ->
-- On EXPECT reduce production option(scope) ->
-- On EOF reduce production option(scope) ->
-- On ENUM reduce production option(scope) ->
-- On CHECK reduce production option(scope) ->
-- On ASSERT reduce production option(scope) ->
-- On ABSTRACT reduce production option(scope) ->

State 340:
## Known stack suffix:
## option(first(NICKNAME,COLON)) CHECK block option(scope)
## LR(1) items:
block_cmd -> option(first(NICKNAME,COLON)) CHECK block option(scope) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EXPECT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_cmd -> option(first(NICKNAME,COLON)) CHECK block option(scope)

State 341:
## Known stack suffix:
## option(PRIVATE)
## LR(1) items:
funDecl -> option(PRIVATE) . FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
predDecl -> option(PRIVATE) . PRED IDENT loption(brackets(comma_sep(decl))) block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On PRED shift to state 342
-- On FUN shift to state 350
## Reductions:

State 342:
## Known stack suffix:
## option(PRIVATE) PRED
## LR(1) items:
predDecl -> option(PRIVATE) PRED . IDENT loption(brackets(comma_sep(decl))) block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## option(PRIVATE) PRED IDENT
## LR(1) items:
predDecl -> option(PRIVATE) PRED IDENT . loption(brackets(comma_sep(decl))) block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACKET shift to state 344
-- On loption(brackets(comma_sep(decl))) shift to state 348
## Reductions:
-- On LBRACE reduce production loption(brackets(comma_sep(decl))) ->

State 344:
## Known stack suffix:
## LBRACKET
## LR(1) items:
loption(brackets(comma_sep(decl))) -> LBRACKET . loption(separated_nonempty_list(COMMA,decl)) RBRACKET [ LBRACE COLON ]
## Transitions:
-- On VAR shift to state 64
-- On IDENT shift to state 50
-- On DISJ shift to state 74
-- On separated_nonempty_list(COMMA,decl) shift to state 345
-- On separated_nonempty_list(COMMA,IDENT) shift to state 87
-- On loption(separated_nonempty_list(COMMA,decl)) shift to state 346
-- On decl shift to state 92
## Reductions:
-- On RBRACKET reduce production loption(separated_nonempty_list(COMMA,decl)) ->

State 345:
## Known stack suffix:
## separated_nonempty_list(COMMA,decl)
## LR(1) items:
loption(separated_nonempty_list(COMMA,decl)) -> separated_nonempty_list(COMMA,decl) . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(COMMA,decl)) -> separated_nonempty_list(COMMA,decl)

State 346:
## Known stack suffix:
## LBRACKET loption(separated_nonempty_list(COMMA,decl))
## LR(1) items:
loption(brackets(comma_sep(decl))) -> LBRACKET loption(separated_nonempty_list(COMMA,decl)) . RBRACKET [ LBRACE COLON ]
## Transitions:
-- On RBRACKET shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## LBRACKET loption(separated_nonempty_list(COMMA,decl)) RBRACKET
## LR(1) items:
loption(brackets(comma_sep(decl))) -> LBRACKET loption(separated_nonempty_list(COMMA,decl)) RBRACKET . [ LBRACE COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(brackets(comma_sep(decl))) -> LBRACKET loption(separated_nonempty_list(COMMA,decl)) RBRACKET

State 348:
## Known stack suffix:
## option(PRIVATE) PRED IDENT loption(brackets(comma_sep(decl)))
## LR(1) items:
predDecl -> option(PRIVATE) PRED IDENT loption(brackets(comma_sep(decl))) . block [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACE shift to state 79
-- On block shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## option(PRIVATE) PRED IDENT loption(brackets(comma_sep(decl))) block
## LR(1) items:
predDecl -> option(PRIVATE) PRED IDENT loption(brackets(comma_sep(decl))) block . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production predDecl -> option(PRIVATE) PRED IDENT loption(brackets(comma_sep(decl))) block

State 350:
## Known stack suffix:
## option(PRIVATE) FUN
## LR(1) items:
funDecl -> option(PRIVATE) FUN . IDENT loption(brackets(comma_sep(decl))) COLON expr expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On IDENT shift to state 351
## Reductions:

State 351:
## Known stack suffix:
## option(PRIVATE) FUN IDENT
## LR(1) items:
funDecl -> option(PRIVATE) FUN IDENT . loption(brackets(comma_sep(decl))) COLON expr expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On LBRACKET shift to state 344
-- On loption(brackets(comma_sep(decl))) shift to state 352
## Reductions:
-- On COLON reduce production loption(brackets(comma_sep(decl))) ->

State 352:
## Known stack suffix:
## option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl)))
## LR(1) items:
funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) . COLON expr expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On COLON shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON
## LR(1) items:
funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON . expr expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME shift to state 72
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PREVIOUS shift to state 95
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 99
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 107
-- On LPAREN shift to state 109
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACE shift to state 114
-- On INT shift to state 115
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On EVENTUALLY shift to state 119
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 354
-- On block shift to state 169
## Reductions:

State 354:
## Known stack suffix:
## option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr
## LR(1) items:
funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr . expr [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
prim_expr -> expr . IMPLIES expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IMPLIES expr ELSE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . OR expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IFF expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . AND expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . MINUS expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . PLUS expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . OVERRIDE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . INTER expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LPROJ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . RPROJ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . DOT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . UNTIL expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SINCE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . IN expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . GT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . GTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NEQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . EQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT IN expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT GT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT GTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT LT expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT LTE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT NEQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . NOT EQ expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . PRIME [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . ONE_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LONE_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SOME_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_ONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_LONE expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_SET expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . SET_ARROW_SOME expr [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ UNTIL UNIV TILDE THIS STAR SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RPROJ QSOME QONE QNO QLONE QALL PRIME PREVIOUS PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE ONCE NUMBER NOT NONE NO NEXT NEQ MSOME MSET MONE MLONE MINUS LTE LT LPROJ LPAREN LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LET LBRACKET LBRACE INTER INT IN IMPLIES IFF IDENT IDEN HISTORICALLY GTE GT EVENTUALLY EQ DOT CARET CARD AT AND ALWAYS ]
## Transitions:
-- On UNTIL shift to state 151
-- On UNIV shift to state 68
-- On TILDE shift to state 69
-- On THIS shift to state 70
-- On STAR shift to state 71
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SOME shift to state 72
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On QSOME shift to state 73
-- On QONE shift to state 77
-- On QNO shift to state 80
-- On QLONE shift to state 83
-- On QALL shift to state 89
-- On PRIME shift to state 146
-- On PREVIOUS shift to state 95
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On ONE shift to state 96
-- On ONCE shift to state 97
-- On NUMBER shift to state 98
-- On NOT shift to state 235
-- On NONE shift to state 100
-- On NO shift to state 101
-- On NEXT shift to state 102
-- On NEQ shift to state 197
-- On MSOME shift to state 103
-- On MSET shift to state 104
-- On MONE shift to state 105
-- On MLONE shift to state 106
-- On MINUS shift to state 237
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LPAREN shift to state 109
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LONE shift to state 110
-- On LET shift to state 111
-- On LBRACKET shift to state 147
-- On LBRACE shift to state 114
-- On INTER shift to state 178
-- On INT shift to state 115
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On IDENT shift to state 4
-- On IDEN shift to state 117
-- On HISTORICALLY shift to state 118
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EVENTUALLY shift to state 119
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On CARET shift to state 120
-- On CARD shift to state 121
-- On AT shift to state 122
-- On AND shift to state 219
-- On ALWAYS shift to state 124
-- On separated_nonempty_list(SLASH,IDENT) shift to state 8
-- On qname shift to state 125
-- On prim_expr shift to state 126
-- On expr shift to state 355
-- On block shift to state 169
## Reductions:

State 355:
## Known stack suffix:
## option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
## LR(1) items:
funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
prim_expr -> expr . IMPLIES expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . IMPLIES expr ELSE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . OR expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . IFF expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . AND expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . MINUS expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . PLUS expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . OVERRIDE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . INTER expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LPROJ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . RPROJ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . DOT expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . UNTIL expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SINCE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . IN expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . GT expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . GTE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LT expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LTE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NEQ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . EQ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT IN expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT GT expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT GTE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT LT expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT LTE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT NEQ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . NOT EQ expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . PRIME [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . ONE_ARROW_ONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . ONE_ARROW_LONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SET expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . ONE_ARROW_SOME expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LONE_ARROW_ONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LONE_ARROW_LONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SET expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LONE_ARROW_SOME expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SOME_ARROW_ONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SOME_ARROW_LONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SET expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SOME_ARROW_SOME expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SET_ARROW_ONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SET_ARROW_LONE expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SET_ARROW_SET expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . SET_ARROW_SOME expr [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
prim_expr -> expr . LBRACKET separated_nonempty_list(COMMA,expr) RBRACKET [ VAR UNTIL SOME_ARROW_SOME SOME_ARROW_SET SOME_ARROW_ONE SOME_ARROW_LONE SOME SINCE SIG SET_ARROW_SOME SET_ARROW_SET SET_ARROW_ONE SET_ARROW_LONE RUN RPROJ PRIVATE PRIME PRED PLUS OVERRIDE OR ONE_ARROW_SOME ONE_ARROW_SET ONE_ARROW_ONE ONE_ARROW_LONE ONE NOT NICKNAME NEQ MINUS LTE LT LPROJ LONE_ARROW_SOME LONE_ARROW_SET LONE_ARROW_ONE LONE_ARROW_LONE LONE LBRACKET INTER IN IMPLIES IFF GTE GT FUN FACT EQ EOF ENUM DOT CHECK ASSERT AND ABSTRACT ]
## Transitions:
-- On UNTIL shift to state 151
-- On SOME_ARROW_SOME shift to state 128
-- On SOME_ARROW_SET shift to state 130
-- On SOME_ARROW_ONE shift to state 132
-- On SOME_ARROW_LONE shift to state 134
-- On SINCE shift to state 211
-- On SET_ARROW_SOME shift to state 136
-- On SET_ARROW_SET shift to state 138
-- On SET_ARROW_ONE shift to state 140
-- On SET_ARROW_LONE shift to state 142
-- On RPROJ shift to state 144
-- On PRIME shift to state 146
-- On PLUS shift to state 153
-- On OVERRIDE shift to state 155
-- On OR shift to state 213
-- On ONE_ARROW_SOME shift to state 157
-- On ONE_ARROW_SET shift to state 159
-- On ONE_ARROW_ONE shift to state 161
-- On ONE_ARROW_LONE shift to state 163
-- On NOT shift to state 180
-- On NEQ shift to state 197
-- On MINUS shift to state 183
-- On LTE shift to state 199
-- On LT shift to state 201
-- On LPROJ shift to state 165
-- On LONE_ARROW_SOME shift to state 170
-- On LONE_ARROW_SET shift to state 172
-- On LONE_ARROW_ONE shift to state 174
-- On LONE_ARROW_LONE shift to state 176
-- On LBRACKET shift to state 147
-- On INTER shift to state 178
-- On IN shift to state 203
-- On IMPLIES shift to state 215
-- On IFF shift to state 221
-- On GTE shift to state 205
-- On GT shift to state 207
-- On EQ shift to state 209
-- On DOT shift to state 167
-- On AND shift to state 219
## Reductions:
-- On VAR reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On SOME reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On SIG reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On RUN reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On PRIVATE reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On PRED reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On ONE reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On NICKNAME reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On LONE reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On FUN reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On FACT reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On EOF reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On ENUM reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On CHECK reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On ASSERT reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr
-- On ABSTRACT reduce production funDecl -> option(PRIVATE) FUN IDENT loption(brackets(comma_sep(decl))) COLON expr expr

State 356:
## Known stack suffix:
## named_cmd
## LR(1) items:
cmd -> named_cmd . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
cmd -> named_cmd . EXPECT NUMBER [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On EXPECT shift to state 357
## Reductions:
-- On VAR reduce production cmd -> named_cmd
-- On SOME reduce production cmd -> named_cmd
-- On SIG reduce production cmd -> named_cmd
-- On RUN reduce production cmd -> named_cmd
-- On PRIVATE reduce production cmd -> named_cmd
-- On PRED reduce production cmd -> named_cmd
-- On ONE reduce production cmd -> named_cmd
-- On NICKNAME reduce production cmd -> named_cmd
-- On LONE reduce production cmd -> named_cmd
-- On FUN reduce production cmd -> named_cmd
-- On FACT reduce production cmd -> named_cmd
-- On EOF reduce production cmd -> named_cmd
-- On ENUM reduce production cmd -> named_cmd
-- On CHECK reduce production cmd -> named_cmd
-- On ASSERT reduce production cmd -> named_cmd
-- On ABSTRACT reduce production cmd -> named_cmd

State 357:
## Known stack suffix:
## named_cmd EXPECT
## LR(1) items:
cmd -> named_cmd EXPECT . NUMBER [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 358
## Reductions:

State 358:
## Known stack suffix:
## named_cmd EXPECT NUMBER
## LR(1) items:
cmd -> named_cmd EXPECT NUMBER . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cmd -> named_cmd EXPECT NUMBER

State 359:
## Known stack suffix:
## paragraph_or_cmd list(paragraph_or_cmd)
## LR(1) items:
list(paragraph_or_cmd) -> paragraph_or_cmd list(paragraph_or_cmd) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(paragraph_or_cmd) -> paragraph_or_cmd list(paragraph_or_cmd)

State 360:
## Known stack suffix:
## funDecl
## LR(1) items:
paragraph -> funDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> funDecl

State 361:
## Known stack suffix:
## factDecl
## LR(1) items:
paragraph -> factDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> factDecl

State 362:
## Known stack suffix:
## enumDecl
## LR(1) items:
paragraph -> enumDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> enumDecl

State 363:
## Known stack suffix:
## cmd
## LR(1) items:
paragraph_or_cmd -> cmd . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph_or_cmd -> cmd

State 364:
## Known stack suffix:
## block_cmd
## LR(1) items:
cmd -> block_cmd . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
cmd -> block_cmd . EXPECT NUMBER [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On EXPECT shift to state 365
## Reductions:
-- On VAR reduce production cmd -> block_cmd
-- On SOME reduce production cmd -> block_cmd
-- On SIG reduce production cmd -> block_cmd
-- On RUN reduce production cmd -> block_cmd
-- On PRIVATE reduce production cmd -> block_cmd
-- On PRED reduce production cmd -> block_cmd
-- On ONE reduce production cmd -> block_cmd
-- On NICKNAME reduce production cmd -> block_cmd
-- On LONE reduce production cmd -> block_cmd
-- On FUN reduce production cmd -> block_cmd
-- On FACT reduce production cmd -> block_cmd
-- On EOF reduce production cmd -> block_cmd
-- On ENUM reduce production cmd -> block_cmd
-- On CHECK reduce production cmd -> block_cmd
-- On ASSERT reduce production cmd -> block_cmd
-- On ABSTRACT reduce production cmd -> block_cmd

State 365:
## Known stack suffix:
## block_cmd EXPECT
## LR(1) items:
cmd -> block_cmd EXPECT . NUMBER [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On NUMBER shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## block_cmd EXPECT NUMBER
## LR(1) items:
cmd -> block_cmd EXPECT NUMBER . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cmd -> block_cmd EXPECT NUMBER

State 367:
## Known stack suffix:
## assertDecl
## LR(1) items:
paragraph -> assertDecl . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production paragraph -> assertDecl

State 368:
## Known stack suffix:
## option(module_decl) list(import) list(paragraph_or_cmd)
## LR(1) items:
specification -> option(module_decl) list(import) list(paragraph_or_cmd) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specification -> option(module_decl) list(import) list(paragraph_or_cmd)

State 369:
## Known stack suffix:
## import
## LR(1) items:
list(import) -> import . list(import) [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
-- On OPEN shift to state 23
-- On list(import) shift to state 370
-- On import shift to state 369
## Reductions:
-- On VAR reduce production list(import) ->
-- On SOME reduce production list(import) ->
-- On SIG reduce production list(import) ->
-- On RUN reduce production list(import) ->
-- On PRIVATE reduce production list(import) ->
-- On PRED reduce production list(import) ->
-- On ONE reduce production list(import) ->
-- On NICKNAME reduce production list(import) ->
-- On LONE reduce production list(import) ->
-- On FUN reduce production list(import) ->
-- On FACT reduce production list(import) ->
-- On EOF reduce production list(import) ->
-- On ENUM reduce production list(import) ->
-- On CHECK reduce production list(import) ->
-- On ASSERT reduce production list(import) ->
-- On ABSTRACT reduce production list(import) ->

State 370:
## Known stack suffix:
## import list(import)
## LR(1) items:
list(import) -> import list(import) . [ VAR SOME SIG RUN PRIVATE PRED ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(import) -> import list(import)

State 371:
## Known stack suffix:
## module_decl
## LR(1) items:
option(module_decl) -> module_decl . [ VAR SOME SIG RUN PRIVATE PRED OPEN ONE NICKNAME LONE FUN FACT EOF ENUM CHECK ASSERT ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(module_decl) -> module_decl

State 372:
## Known stack suffix:
## file
## LR(1) items:
file' -> file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept file

