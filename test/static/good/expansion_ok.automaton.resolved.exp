State 0:
## Known stack suffix:
##
## LR(1) items:
start' -> . start [ # ]
## Transitions:
-- On A shift to state 1
-- On wrap(seq(wrap(A))) shift to state 2
-- On start shift to state 3
-- On seq(A) shift to state 4
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
wrap(seq(wrap(A))) -> A . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production wrap(seq(wrap(A))) -> A

State 2:
## Known stack suffix:
## wrap(seq(wrap(A)))
## LR(1) items:
seq(A) -> wrap(seq(wrap(A))) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production seq(A) -> wrap(seq(wrap(A)))

State 3:
## Known stack suffix:
## start
## LR(1) items:
start' -> start . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept start

State 4:
## Known stack suffix:
## seq(A)
## LR(1) items:
start -> seq(A) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production start -> seq(A)

