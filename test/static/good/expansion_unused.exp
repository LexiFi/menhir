Grammar has 3 nonterminal symbols, among which 1 start symbols.
Grammar has 3 terminal symbols.
Grammar has 3 productions.
nullable(start) = false
nullable(ignore(foo(bar(A)))) = false
nullable(foo(A)) = false
first(start) = C
first(ignore(foo(bar(A)))) = C
first(foo(A)) = C
minimal(start) = (* 1 *) C
minimal(ignore(foo(bar(A)))) = (* 1 *) C
minimal(foo(A)) = (* 1 *) C
maximal(start) = 1
maximal(ignore(foo(bar(A)))) = 1
maximal(foo(A)) = 1
follow(start) = #
follow(ignore(foo(bar(A)))) = #
follow(foo(A)) = #
Built an LR(0) automaton with 5 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 5 states.
4 out of 5 states have a default reduction.
0 out of 5 states are represented.
0 out of 9 symbols keep track of their start position.
0 out of 9 symbols keep track of their end position.
4 out of 4 productions exploit shiftreduce optimization.
0 out of 5 states can peek at an error.
22 functions before inlining, 1 functions after inlining.
