State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On VAR shift to state 1
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On main shift to state 83
-- On Formula shift to state 84
-- On Body shift to state 86
-- On BinPredPref shift to state 62
## Reductions:

State 1:
## Known stack suffix:
## VAR
## LR(1) items:
Body -> VAR . VariablesDec Formula POINTVIRGULE [ EOF ]
Body -> VAR . VariablesDec [ EOF ]
## Transitions:
-- On STR shift to state 2
-- On VariablesDec shift to state 6
## Reductions:

State 2:
## Known stack suffix:
## STR
## LR(1) items:
VariablesDec -> STR . POINTVIRGULE [ TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 EOF CHILD ALL2 ALL1 ]
VariablesDec -> STR . COMMA VariablesDec [ TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 EOF CHILD ALL2 ALL1 ]
## Transitions:
-- On POINTVIRGULE shift to state 3
-- On COMMA shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## STR POINTVIRGULE
## LR(1) items:
VariablesDec -> STR POINTVIRGULE . [ TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 EOF CHILD ALL2 ALL1 ]
## Transitions:
## Reductions:
-- On TRUE reduce production VariablesDec -> STR POINTVIRGULE
-- On STR reduce production VariablesDec -> STR POINTVIRGULE
-- On SING reduce production VariablesDec -> STR POINTVIRGULE
-- On ROOT reduce production VariablesDec -> STR POINTVIRGULE
-- On NS reduce production VariablesDec -> STR POINTVIRGULE
-- On LPAR reduce production VariablesDec -> STR POINTVIRGULE
-- On LEAF reduce production VariablesDec -> STR POINTVIRGULE
-- On LAB reduce production VariablesDec -> STR POINTVIRGULE
-- On FC reduce production VariablesDec -> STR POINTVIRGULE
-- On FALSE reduce production VariablesDec -> STR POINTVIRGULE
-- On EX2 reduce production VariablesDec -> STR POINTVIRGULE
-- On EX1 reduce production VariablesDec -> STR POINTVIRGULE
-- On EOF reduce production VariablesDec -> STR POINTVIRGULE
-- On CHILD reduce production VariablesDec -> STR POINTVIRGULE
-- On ALL2 reduce production VariablesDec -> STR POINTVIRGULE
-- On ALL1 reduce production VariablesDec -> STR POINTVIRGULE

State 4:
## Known stack suffix:
## STR COMMA
## LR(1) items:
VariablesDec -> STR COMMA . VariablesDec [ TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 EOF CHILD ALL2 ALL1 ]
## Transitions:
-- On STR shift to state 2
-- On VariablesDec shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## STR COMMA VariablesDec
## LR(1) items:
VariablesDec -> STR COMMA VariablesDec . [ TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 EOF CHILD ALL2 ALL1 ]
## Transitions:
## Reductions:
-- On TRUE reduce production VariablesDec -> STR COMMA VariablesDec
-- On STR reduce production VariablesDec -> STR COMMA VariablesDec
-- On SING reduce production VariablesDec -> STR COMMA VariablesDec
-- On ROOT reduce production VariablesDec -> STR COMMA VariablesDec
-- On NS reduce production VariablesDec -> STR COMMA VariablesDec
-- On LPAR reduce production VariablesDec -> STR COMMA VariablesDec
-- On LEAF reduce production VariablesDec -> STR COMMA VariablesDec
-- On LAB reduce production VariablesDec -> STR COMMA VariablesDec
-- On FC reduce production VariablesDec -> STR COMMA VariablesDec
-- On FALSE reduce production VariablesDec -> STR COMMA VariablesDec
-- On EX2 reduce production VariablesDec -> STR COMMA VariablesDec
-- On EX1 reduce production VariablesDec -> STR COMMA VariablesDec
-- On EOF reduce production VariablesDec -> STR COMMA VariablesDec
-- On CHILD reduce production VariablesDec -> STR COMMA VariablesDec
-- On ALL2 reduce production VariablesDec -> STR COMMA VariablesDec
-- On ALL1 reduce production VariablesDec -> STR COMMA VariablesDec

State 6:
## Known stack suffix:
## VAR VariablesDec
## LR(1) items:
Body -> VAR VariablesDec . Formula POINTVIRGULE [ EOF ]
Body -> VAR VariablesDec . [ EOF ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 81
-- On BinPredPref shift to state 62
## Reductions:
-- On EOF reduce production Body -> VAR VariablesDec

State 7:
## Known stack suffix:
## TRUE
## LR(1) items:
Formula -> TRUE . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> TRUE
-- On POINTVIRGULE reduce production Formula -> TRUE
-- On OR reduce production Formula -> TRUE
-- On IMPLIES reduce production Formula -> TRUE
-- On EQUIV reduce production Formula -> TRUE
-- On AND reduce production Formula -> TRUE

State 8:
## Known stack suffix:
## STR
## LR(1) items:
BinPredPref -> STR . [ LPAR ]
Formula -> STR . BinPredInf STR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On SUB shift to state 9
-- On STR shift to state 10
-- On SIBSTRICT shift to state 11
-- On SIB shift to state 12
-- On PREFSTRICT shift to state 13
-- On PREF shift to state 14
-- On NOTIN shift to state 15
-- On ISIBSTRICT shift to state 16
-- On ISIB shift to state 17
-- On IPREFSTRICT shift to state 18
-- On IPREF shift to state 19
-- On IN shift to state 20
-- On EQ2 shift to state 21
-- On EQ1 shift to state 22
-- On DIFF2 shift to state 23
-- On DIFF1 shift to state 24
-- On BinPredInf shift to state 25
## Reductions:
-- On LPAR reduce production BinPredPref -> STR

State 9:
## Known stack suffix:
## SUB
## LR(1) items:
BinPredInf -> SUB . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> SUB

State 10:
## Known stack suffix:
## STR
## LR(1) items:
BinPredInf -> STR . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> STR

State 11:
## Known stack suffix:
## SIBSTRICT
## LR(1) items:
BinPredInf -> SIBSTRICT . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> SIBSTRICT

State 12:
## Known stack suffix:
## SIB
## LR(1) items:
BinPredInf -> SIB . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> SIB

State 13:
## Known stack suffix:
## PREFSTRICT
## LR(1) items:
BinPredInf -> PREFSTRICT . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> PREFSTRICT

State 14:
## Known stack suffix:
## PREF
## LR(1) items:
BinPredInf -> PREF . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> PREF

State 15:
## Known stack suffix:
## NOTIN
## LR(1) items:
BinPredInf -> NOTIN . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> NOTIN

State 16:
## Known stack suffix:
## ISIBSTRICT
## LR(1) items:
BinPredInf -> ISIBSTRICT . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> ISIBSTRICT

State 17:
## Known stack suffix:
## ISIB
## LR(1) items:
BinPredInf -> ISIB . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> ISIB

State 18:
## Known stack suffix:
## IPREFSTRICT
## LR(1) items:
BinPredInf -> IPREFSTRICT . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> IPREFSTRICT

State 19:
## Known stack suffix:
## IPREF
## LR(1) items:
BinPredInf -> IPREF . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> IPREF

State 20:
## Known stack suffix:
## IN
## LR(1) items:
BinPredInf -> IN . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> IN

State 21:
## Known stack suffix:
## EQ2
## LR(1) items:
BinPredInf -> EQ2 . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> EQ2

State 22:
## Known stack suffix:
## EQ1
## LR(1) items:
BinPredInf -> EQ1 . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> EQ1

State 23:
## Known stack suffix:
## DIFF2
## LR(1) items:
BinPredInf -> DIFF2 . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> DIFF2

State 24:
## Known stack suffix:
## DIFF1
## LR(1) items:
BinPredInf -> DIFF1 . [ STR ]
## Transitions:
## Reductions:
-- On STR reduce production BinPredInf -> DIFF1

State 25:
## Known stack suffix:
## STR BinPredInf
## LR(1) items:
Formula -> STR BinPredInf . STR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## STR BinPredInf STR
## LR(1) items:
Formula -> STR BinPredInf STR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> STR BinPredInf STR
-- On POINTVIRGULE reduce production Formula -> STR BinPredInf STR
-- On OR reduce production Formula -> STR BinPredInf STR
-- On IMPLIES reduce production Formula -> STR BinPredInf STR
-- On EQUIV reduce production Formula -> STR BinPredInf STR
-- On AND reduce production Formula -> STR BinPredInf STR

State 27:
## Known stack suffix:
## SING
## LR(1) items:
Formula -> SING . LPAR STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On LPAR shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## SING LPAR
## LR(1) items:
Formula -> SING LPAR . STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## SING LPAR STR
## LR(1) items:
Formula -> SING LPAR STR . RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On RPAR shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## SING LPAR STR RPAR
## LR(1) items:
Formula -> SING LPAR STR RPAR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> SING LPAR STR RPAR
-- On POINTVIRGULE reduce production Formula -> SING LPAR STR RPAR
-- On OR reduce production Formula -> SING LPAR STR RPAR
-- On IMPLIES reduce production Formula -> SING LPAR STR RPAR
-- On EQUIV reduce production Formula -> SING LPAR STR RPAR
-- On AND reduce production Formula -> SING LPAR STR RPAR

State 31:
## Known stack suffix:
## ROOT
## LR(1) items:
Formula -> ROOT . LPAR STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On LPAR shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## ROOT LPAR
## LR(1) items:
Formula -> ROOT LPAR . STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## ROOT LPAR STR
## LR(1) items:
Formula -> ROOT LPAR STR . RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On RPAR shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## ROOT LPAR STR RPAR
## LR(1) items:
Formula -> ROOT LPAR STR RPAR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> ROOT LPAR STR RPAR
-- On POINTVIRGULE reduce production Formula -> ROOT LPAR STR RPAR
-- On OR reduce production Formula -> ROOT LPAR STR RPAR
-- On IMPLIES reduce production Formula -> ROOT LPAR STR RPAR
-- On EQUIV reduce production Formula -> ROOT LPAR STR RPAR
-- On AND reduce production Formula -> ROOT LPAR STR RPAR

State 35:
## Known stack suffix:
## NS
## LR(1) items:
BinPredPref -> NS . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production BinPredPref -> NS

State 36:
## Known stack suffix:
## LPAR
## LR(1) items:
Formula -> LPAR . Formula RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 71
-- On BinPredPref shift to state 62
## Reductions:

State 37:
## Known stack suffix:
## LEAF
## LR(1) items:
Formula -> LEAF . LPAR STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On LPAR shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## LEAF LPAR
## LR(1) items:
Formula -> LEAF LPAR . STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LEAF LPAR STR
## LR(1) items:
Formula -> LEAF LPAR STR . RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On RPAR shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## LEAF LPAR STR RPAR
## LR(1) items:
Formula -> LEAF LPAR STR RPAR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> LEAF LPAR STR RPAR
-- On POINTVIRGULE reduce production Formula -> LEAF LPAR STR RPAR
-- On OR reduce production Formula -> LEAF LPAR STR RPAR
-- On IMPLIES reduce production Formula -> LEAF LPAR STR RPAR
-- On EQUIV reduce production Formula -> LEAF LPAR STR RPAR
-- On AND reduce production Formula -> LEAF LPAR STR RPAR

State 41:
## Known stack suffix:
## LAB
## LR(1) items:
BinPredPref -> LAB . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production BinPredPref -> LAB

State 42:
## Known stack suffix:
## FC
## LR(1) items:
BinPredPref -> FC . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production BinPredPref -> FC

State 43:
## Known stack suffix:
## FALSE
## LR(1) items:
Formula -> FALSE . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> FALSE
-- On POINTVIRGULE reduce production Formula -> FALSE
-- On OR reduce production Formula -> FALSE
-- On IMPLIES reduce production Formula -> FALSE
-- On EQUIV reduce production Formula -> FALSE
-- On AND reduce production Formula -> FALSE

State 44:
## Known stack suffix:
## EX2
## LR(1) items:
Formula -> EX2 . QuantVariablesDec Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> EX2 . QuantVariablesDec error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 45
-- On QuantVariablesDec shift to state 49
## Reductions:

State 45:
## Known stack suffix:
## STR
## LR(1) items:
QuantVariablesDec -> STR . SEMICOLON [ error TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 CHILD ALL2 ALL1 ]
QuantVariablesDec -> STR . COMMA QuantVariablesDec [ error TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 CHILD ALL2 ALL1 ]
## Transitions:
-- On SEMICOLON shift to state 46
-- On COMMA shift to state 47
## Reductions:

State 46:
## Known stack suffix:
## STR SEMICOLON
## LR(1) items:
QuantVariablesDec -> STR SEMICOLON . [ error TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 CHILD ALL2 ALL1 ]
## Transitions:
## Reductions:
-- On error reduce production QuantVariablesDec -> STR SEMICOLON
-- On TRUE reduce production QuantVariablesDec -> STR SEMICOLON
-- On STR reduce production QuantVariablesDec -> STR SEMICOLON
-- On SING reduce production QuantVariablesDec -> STR SEMICOLON
-- On ROOT reduce production QuantVariablesDec -> STR SEMICOLON
-- On NS reduce production QuantVariablesDec -> STR SEMICOLON
-- On LPAR reduce production QuantVariablesDec -> STR SEMICOLON
-- On LEAF reduce production QuantVariablesDec -> STR SEMICOLON
-- On LAB reduce production QuantVariablesDec -> STR SEMICOLON
-- On FC reduce production QuantVariablesDec -> STR SEMICOLON
-- On FALSE reduce production QuantVariablesDec -> STR SEMICOLON
-- On EX2 reduce production QuantVariablesDec -> STR SEMICOLON
-- On EX1 reduce production QuantVariablesDec -> STR SEMICOLON
-- On CHILD reduce production QuantVariablesDec -> STR SEMICOLON
-- On ALL2 reduce production QuantVariablesDec -> STR SEMICOLON
-- On ALL1 reduce production QuantVariablesDec -> STR SEMICOLON

State 47:
## Known stack suffix:
## STR COMMA
## LR(1) items:
QuantVariablesDec -> STR COMMA . QuantVariablesDec [ error TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 CHILD ALL2 ALL1 ]
## Transitions:
-- On STR shift to state 45
-- On QuantVariablesDec shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## STR COMMA QuantVariablesDec
## LR(1) items:
QuantVariablesDec -> STR COMMA QuantVariablesDec . [ error TRUE STR SING ROOT NS LPAR LEAF LAB FC FALSE EX2 EX1 CHILD ALL2 ALL1 ]
## Transitions:
## Reductions:
-- On error reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On TRUE reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On STR reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On SING reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On ROOT reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On NS reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On LPAR reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On LEAF reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On LAB reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On FC reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On FALSE reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On EX2 reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On EX1 reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On CHILD reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On ALL2 reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec
-- On ALL1 reduce production QuantVariablesDec -> STR COMMA QuantVariablesDec

State 49:
## Known stack suffix:
## EX2 QuantVariablesDec
## LR(1) items:
Formula -> EX2 QuantVariablesDec . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> EX2 QuantVariablesDec . error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On error shift to state 50
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 70
-- On BinPredPref shift to state 62
## Reductions:

State 50:
## Known stack suffix:
## EX2 QuantVariablesDec error
## LR(1) items:
Formula -> EX2 QuantVariablesDec error . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> EX2 QuantVariablesDec error
-- On POINTVIRGULE reduce production Formula -> EX2 QuantVariablesDec error
-- On OR reduce production Formula -> EX2 QuantVariablesDec error
-- On IMPLIES reduce production Formula -> EX2 QuantVariablesDec error
-- On EQUIV reduce production Formula -> EX2 QuantVariablesDec error
-- On AND reduce production Formula -> EX2 QuantVariablesDec error

State 51:
## Known stack suffix:
## EX1
## LR(1) items:
Formula -> EX1 . QuantVariablesDec Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> EX1 . QuantVariablesDec error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 45
-- On QuantVariablesDec shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## EX1 QuantVariablesDec
## LR(1) items:
Formula -> EX1 QuantVariablesDec . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> EX1 QuantVariablesDec . error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 69
-- On BinPredPref shift to state 62
## Reductions:

State 53:
## Known stack suffix:
## EX1 QuantVariablesDec error
## LR(1) items:
Formula -> EX1 QuantVariablesDec error . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> EX1 QuantVariablesDec error
-- On POINTVIRGULE reduce production Formula -> EX1 QuantVariablesDec error
-- On OR reduce production Formula -> EX1 QuantVariablesDec error
-- On IMPLIES reduce production Formula -> EX1 QuantVariablesDec error
-- On EQUIV reduce production Formula -> EX1 QuantVariablesDec error
-- On AND reduce production Formula -> EX1 QuantVariablesDec error

State 54:
## Known stack suffix:
## CHILD
## LR(1) items:
BinPredPref -> CHILD . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production BinPredPref -> CHILD

State 55:
## Known stack suffix:
## ALL2
## LR(1) items:
Formula -> ALL2 . QuantVariablesDec Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> ALL2 . QuantVariablesDec error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 45
-- On QuantVariablesDec shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## ALL2 QuantVariablesDec
## LR(1) items:
Formula -> ALL2 QuantVariablesDec . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> ALL2 QuantVariablesDec . error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On error shift to state 57
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 68
-- On BinPredPref shift to state 62
## Reductions:

State 57:
## Known stack suffix:
## ALL2 QuantVariablesDec error
## LR(1) items:
Formula -> ALL2 QuantVariablesDec error . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> ALL2 QuantVariablesDec error
-- On POINTVIRGULE reduce production Formula -> ALL2 QuantVariablesDec error
-- On OR reduce production Formula -> ALL2 QuantVariablesDec error
-- On IMPLIES reduce production Formula -> ALL2 QuantVariablesDec error
-- On EQUIV reduce production Formula -> ALL2 QuantVariablesDec error
-- On AND reduce production Formula -> ALL2 QuantVariablesDec error

State 58:
## Known stack suffix:
## ALL1
## LR(1) items:
Formula -> ALL1 . QuantVariablesDec Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> ALL1 . QuantVariablesDec error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 45
-- On QuantVariablesDec shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## ALL1 QuantVariablesDec
## LR(1) items:
Formula -> ALL1 QuantVariablesDec . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> ALL1 QuantVariablesDec . error [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On error shift to state 60
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 61
-- On BinPredPref shift to state 62
## Reductions:

State 60:
## Known stack suffix:
## ALL1 QuantVariablesDec error
## LR(1) items:
Formula -> ALL1 QuantVariablesDec error . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> ALL1 QuantVariablesDec error
-- On POINTVIRGULE reduce production Formula -> ALL1 QuantVariablesDec error
-- On OR reduce production Formula -> ALL1 QuantVariablesDec error
-- On IMPLIES reduce production Formula -> ALL1 QuantVariablesDec error
-- On EQUIV reduce production Formula -> ALL1 QuantVariablesDec error
-- On AND reduce production Formula -> ALL1 QuantVariablesDec error

State 61:
## Known stack suffix:
## ALL1 QuantVariablesDec Formula
## LR(1) items:
Formula -> ALL1 QuantVariablesDec Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> ALL1 QuantVariablesDec Formula
-- On POINTVIRGULE reduce production Formula -> ALL1 QuantVariablesDec Formula
-- On OR reduce production Formula -> ALL1 QuantVariablesDec Formula
-- On IMPLIES reduce production Formula -> ALL1 QuantVariablesDec Formula
-- On EQUIV reduce production Formula -> ALL1 QuantVariablesDec Formula
-- On AND reduce production Formula -> ALL1 QuantVariablesDec Formula

State 62:
## Known stack suffix:
## BinPredPref
## LR(1) items:
Formula -> BinPredPref . LPAR STR COMMA STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On LPAR shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## BinPredPref LPAR
## LR(1) items:
Formula -> BinPredPref LPAR . STR COMMA STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## BinPredPref LPAR STR
## LR(1) items:
Formula -> BinPredPref LPAR STR . COMMA STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On COMMA shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## BinPredPref LPAR STR COMMA
## LR(1) items:
Formula -> BinPredPref LPAR STR COMMA . STR RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On STR shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## BinPredPref LPAR STR COMMA STR
## LR(1) items:
Formula -> BinPredPref LPAR STR COMMA STR . RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On RPAR shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## BinPredPref LPAR STR COMMA STR RPAR
## LR(1) items:
Formula -> BinPredPref LPAR STR COMMA STR RPAR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR
-- On POINTVIRGULE reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR
-- On OR reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR
-- On IMPLIES reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR
-- On EQUIV reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR
-- On AND reduce production Formula -> BinPredPref LPAR STR COMMA STR RPAR

State 68:
## Known stack suffix:
## ALL2 QuantVariablesDec Formula
## LR(1) items:
Formula -> ALL2 QuantVariablesDec Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> ALL2 QuantVariablesDec Formula
-- On POINTVIRGULE reduce production Formula -> ALL2 QuantVariablesDec Formula
-- On OR reduce production Formula -> ALL2 QuantVariablesDec Formula
-- On IMPLIES reduce production Formula -> ALL2 QuantVariablesDec Formula
-- On EQUIV reduce production Formula -> ALL2 QuantVariablesDec Formula
-- On AND reduce production Formula -> ALL2 QuantVariablesDec Formula

State 69:
## Known stack suffix:
## EX1 QuantVariablesDec Formula
## LR(1) items:
Formula -> EX1 QuantVariablesDec Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> EX1 QuantVariablesDec Formula
-- On POINTVIRGULE reduce production Formula -> EX1 QuantVariablesDec Formula
-- On OR reduce production Formula -> EX1 QuantVariablesDec Formula
-- On IMPLIES reduce production Formula -> EX1 QuantVariablesDec Formula
-- On EQUIV reduce production Formula -> EX1 QuantVariablesDec Formula
-- On AND reduce production Formula -> EX1 QuantVariablesDec Formula

State 70:
## Known stack suffix:
## EX2 QuantVariablesDec Formula
## LR(1) items:
Formula -> EX2 QuantVariablesDec Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> EX2 QuantVariablesDec Formula
-- On POINTVIRGULE reduce production Formula -> EX2 QuantVariablesDec Formula
-- On OR reduce production Formula -> EX2 QuantVariablesDec Formula
-- On IMPLIES reduce production Formula -> EX2 QuantVariablesDec Formula
-- On EQUIV reduce production Formula -> EX2 QuantVariablesDec Formula
-- On AND reduce production Formula -> EX2 QuantVariablesDec Formula

State 71:
## Known stack suffix:
## LPAR Formula
## LR(1) items:
Formula -> LPAR Formula . RPAR [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . OR Formula [ RPAR OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR OR IMPLIES EQUIV AND ]
## Transitions:
-- On RPAR shift to state 72
-- On OR shift to state 73
-- On IMPLIES shift to state 75
-- On EQUIV shift to state 77
-- On AND shift to state 79
## Reductions:

State 72:
## Known stack suffix:
## LPAR Formula RPAR
## LR(1) items:
Formula -> LPAR Formula RPAR . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> LPAR Formula RPAR
-- On POINTVIRGULE reduce production Formula -> LPAR Formula RPAR
-- On OR reduce production Formula -> LPAR Formula RPAR
-- On IMPLIES reduce production Formula -> LPAR Formula RPAR
-- On EQUIV reduce production Formula -> LPAR Formula RPAR
-- On AND reduce production Formula -> LPAR Formula RPAR

State 73:
## Known stack suffix:
## Formula OR
## LR(1) items:
Formula -> Formula OR . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 74
-- On BinPredPref shift to state 62
## Reductions:

State 74:
## Known stack suffix:
## Formula OR Formula
## LR(1) items:
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula OR Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On IMPLIES shift to state 75
-- On EQUIV shift to state 77
## Reductions:
-- On RPAR reduce production Formula -> Formula OR Formula
-- On POINTVIRGULE reduce production Formula -> Formula OR Formula
-- On OR reduce production Formula -> Formula OR Formula
-- On AND reduce production Formula -> Formula OR Formula

State 75:
## Known stack suffix:
## Formula IMPLIES
## LR(1) items:
Formula -> Formula IMPLIES . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 76
-- On BinPredPref shift to state 62
## Reductions:

State 76:
## Known stack suffix:
## Formula IMPLIES Formula
## LR(1) items:
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula IMPLIES Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> Formula IMPLIES Formula
-- On POINTVIRGULE reduce production Formula -> Formula IMPLIES Formula
-- On OR reduce production Formula -> Formula IMPLIES Formula
-- On IMPLIES reduce production Formula -> Formula IMPLIES Formula
-- On EQUIV reduce production Formula -> Formula IMPLIES Formula
-- On AND reduce production Formula -> Formula IMPLIES Formula

State 77:
## Known stack suffix:
## Formula EQUIV
## LR(1) items:
Formula -> Formula EQUIV . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 78
-- On BinPredPref shift to state 62
## Reductions:

State 78:
## Known stack suffix:
## Formula EQUIV Formula
## LR(1) items:
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula EQUIV Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
## Reductions:
-- On RPAR reduce production Formula -> Formula EQUIV Formula
-- On POINTVIRGULE reduce production Formula -> Formula EQUIV Formula
-- On OR reduce production Formula -> Formula EQUIV Formula
-- On IMPLIES reduce production Formula -> Formula EQUIV Formula
-- On EQUIV reduce production Formula -> Formula EQUIV Formula
-- On AND reduce production Formula -> Formula EQUIV Formula

State 79:
## Known stack suffix:
## Formula AND
## LR(1) items:
Formula -> Formula AND . Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On TRUE shift to state 7
-- On STR shift to state 8
-- On SING shift to state 27
-- On ROOT shift to state 31
-- On NS shift to state 35
-- On LPAR shift to state 36
-- On LEAF shift to state 37
-- On LAB shift to state 41
-- On FC shift to state 42
-- On FALSE shift to state 43
-- On EX2 shift to state 44
-- On EX1 shift to state 51
-- On CHILD shift to state 54
-- On ALL2 shift to state 55
-- On ALL1 shift to state 58
-- On Formula shift to state 80
-- On BinPredPref shift to state 62
## Reductions:

State 80:
## Known stack suffix:
## Formula AND Formula
## LR(1) items:
Formula -> Formula . OR Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula AND Formula . [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ RPAR POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On OR shift to state 73
-- On IMPLIES shift to state 75
-- On EQUIV shift to state 77
## Reductions:
-- On RPAR reduce production Formula -> Formula AND Formula
-- On POINTVIRGULE reduce production Formula -> Formula AND Formula
-- On AND reduce production Formula -> Formula AND Formula

State 81:
## Known stack suffix:
## VAR VariablesDec Formula
## LR(1) items:
Body -> VAR VariablesDec Formula . POINTVIRGULE [ EOF ]
Formula -> Formula . OR Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On POINTVIRGULE shift to state 82
-- On OR shift to state 73
-- On IMPLIES shift to state 75
-- On EQUIV shift to state 77
-- On AND shift to state 79
## Reductions:

State 82:
## Known stack suffix:
## VAR VariablesDec Formula POINTVIRGULE
## LR(1) items:
Body -> VAR VariablesDec Formula POINTVIRGULE . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production Body -> VAR VariablesDec Formula POINTVIRGULE

State 83:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On # accept main

State 84:
## Known stack suffix:
## Formula
## LR(1) items:
Body -> Formula . POINTVIRGULE [ EOF ]
Formula -> Formula . OR Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . AND Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . EQUIV Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
Formula -> Formula . IMPLIES Formula [ POINTVIRGULE OR IMPLIES EQUIV AND ]
## Transitions:
-- On POINTVIRGULE shift to state 85
-- On OR shift to state 73
-- On IMPLIES shift to state 75
-- On EQUIV shift to state 77
-- On AND shift to state 79
## Reductions:

State 85:
## Known stack suffix:
## Formula POINTVIRGULE
## LR(1) items:
Body -> Formula POINTVIRGULE . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production Body -> Formula POINTVIRGULE

State 86:
## Known stack suffix:
## Body
## LR(1) items:
main -> Body . EOF [ # ]
## Transitions:
-- On EOF shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## Body EOF
## LR(1) items:
main -> Body EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production main -> Body EOF

