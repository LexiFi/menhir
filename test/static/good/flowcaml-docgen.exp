Grammar has 2 nonterminal symbols, among which 1 start symbols.
Grammar has 9 terminal symbols.
Grammar has 8 productions.
nullable(ftext) = true
nullable(file) = false
first(ftext) = VERB TEXT LBRACE DIRECTIVE
first(file) = TERMINATE OPEN EOF
minimal(ftext) = (* 0 *)
minimal(file) = (* 1 *) EOF
maximal(ftext) = infinity
maximal(file) = infinity
follow(ftext) = VERB TEXT RBRACE LBRACE DIRECTIVE CLOSE
follow(file) = #
Built an LR(0) automaton with 15 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 15 states.
10 out of 15 states have a default reduction.
5 out of 15 states are represented.
0 out of 14 symbols keep track of their start position.
0 out of 14 symbols keep track of their end position.
8 out of 9 productions exploit shiftreduce optimization.
0 out of 15 states can peek at an error.
46 functions before inlining, 14 functions after inlining.
