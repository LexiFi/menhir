State 0:
## Known stack suffix:
##
## LR(1) items:
exception_longident' -> . exception_longident [ # ]
## Transitions:
-- On UIDENT shift to state 1
-- On LIDENT shift to state 2
-- On mod_ext_longident shift to state 3
-- On exception_longident shift to state 12
## Reductions:

State 1:
## Known stack suffix:
## UIDENT
## LR(1) items:
exception_longident -> UIDENT . [ # ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> UIDENT

State 2:
## Known stack suffix:
## LIDENT
## LR(1) items:
exception_longident -> LIDENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production exception_longident -> LIDENT

State 3:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
exception_longident -> mod_ext_longident . DOT UIDENT [ # ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 10
## Reductions:

State 4:
## Known stack suffix:
## mod_ext_longident LPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On mod_ext_longident shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_ext_longident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> UIDENT

State 6:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
-- On RPAREN shift to state 7
-- On LPAREN shift to state 4
-- On DOT shift to state 8
## Reductions:

State 7:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident RPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN

State 8:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
-- On UIDENT shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 10:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
exception_longident -> mod_ext_longident DOT . UIDENT [ # ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## Transitions:
-- On UIDENT shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
exception_longident -> mod_ext_longident DOT UIDENT . [ # ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 12:
## Known stack suffix:
## exception_longident
## LR(1) items:
exception_longident' -> exception_longident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept exception_longident

State 13:
## Known stack suffix:
##
## LR(1) items:
implementation' -> . implementation [ # ]
## Transitions:
-- On FLOW shift to state 14
-- On implementation shift to state 27
-- On flows_declaration shift to state 28
## Reductions:
-- On WHILE UIDENT TYPE TRY TRUE STRING SEMISEMI RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT
--   reduce production flows_declaration ->

State 14:
## Known stack suffix:
## FLOW
## LR(1) items:
flows_declaration -> FLOW . flows [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AFFECTS ]
## Transitions:
-- On PREFIXOP shift to state 15
-- On principal shift to state 17
-- On flows shift to state 18
-- On flow_hand_side shift to state 20
-- On flow shift to state 26
## Reductions:

State 15:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
principal -> PREFIXOP . LIDENT [ WITH WHILE VAL UIDENT TYPE TRY TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RAISES RAISE PREFIXOP OPEN MODULE MINUSGREATER MINUSDOT MINUSBRACE MINUS MATCH LPAREN LIDENT LEVEL LET LESSWORD LESS LBRACKETBAR LBRACKET LBRACE LAZY INT INFIXOP0 INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA CHARVECT CHAR BRACEMINUSGREATER BRACEEQUALGREATER BEGIN BARBAR BAR ASSERT AND AFFECTS ]
## Transitions:
-- On LIDENT shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## PREFIXOP LIDENT
## LR(1) items:
principal -> PREFIXOP LIDENT . [ WITH WHILE VAL UIDENT TYPE TRY TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RAISES RAISE PREFIXOP OPEN MODULE MINUSGREATER MINUSDOT MINUSBRACE MINUS MATCH LPAREN LIDENT LEVEL LET LESSWORD LESS LBRACKETBAR LBRACKET LBRACE LAZY INT INFIXOP0 INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA CHARVECT CHAR BRACEMINUSGREATER BRACEEQUALGREATER BEGIN BARBAR BAR ASSERT AND AFFECTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production principal -> PREFIXOP LIDENT

State 17:
## Known stack suffix:
## principal
## LR(1) items:
flow_hand_side -> principal . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF COMMA CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flow_hand_side -> principal

State 18:
## Known stack suffix:
## FLOW flows
## LR(1) items:
flows -> flows . AND flow [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
flows_declaration -> FLOW flows . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AFFECTS ]
## Transitions:
-- On AND shift to state 19
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AFFECTS
--   reduce production flows_declaration -> FLOW flows

State 19:
## Known stack suffix:
## flows AND
## LR(1) items:
flows -> flows AND . flow [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
-- On PREFIXOP shift to state 15
-- On principal shift to state 17
-- On flow_hand_side shift to state 20
-- On flow shift to state 25
## Reductions:

State 20:
## Known stack suffix:
## flow_hand_side
## LR(1) items:
flow -> flow_hand_side . LESS flow_hand_side [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
flow_hand_side -> flow_hand_side . COMMA principal [ LESS COMMA ]
## Transitions:
-- On LESS shift to state 21
-- On COMMA shift to state 23
## Reductions:

State 21:
## Known stack suffix:
## flow_hand_side LESS
## LR(1) items:
flow -> flow_hand_side LESS . flow_hand_side [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
-- On PREFIXOP shift to state 15
-- On principal shift to state 17
-- On flow_hand_side shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## flow_hand_side LESS flow_hand_side
## LR(1) items:
flow -> flow_hand_side LESS flow_hand_side . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
flow_hand_side -> flow_hand_side . COMMA principal [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF COMMA CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
-- On COMMA shift to state 23
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS
--   reduce production flow -> flow_hand_side LESS flow_hand_side

State 23:
## Known stack suffix:
## flow_hand_side COMMA
## LR(1) items:
flow_hand_side -> flow_hand_side COMMA . principal [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF COMMA CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
-- On PREFIXOP shift to state 15
-- On principal shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## flow_hand_side COMMA principal
## LR(1) items:
flow_hand_side -> flow_hand_side COMMA principal . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF COMMA CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flow_hand_side -> flow_hand_side COMMA principal

State 25:
## Known stack suffix:
## flows AND flow
## LR(1) items:
flows -> flows AND flow . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flows -> flows AND flow

State 26:
## Known stack suffix:
## flow
## LR(1) items:
flows -> flow . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SEMISEMI RAISES RAISE PREFIXOP OPEN MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ASSERT AND AFFECTS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flows -> flow

State 27:
## Known stack suffix:
## implementation
## LR(1) items:
implementation' -> implementation . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept implementation

State 28:
## Known stack suffix:
## flows_declaration
## LR(1) items:
implementation -> flows_declaration . structure EOF [ # ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TYPE shift to state 877
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On SEMISEMI shift to state 1001
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LEVEL shift to state 1401
-- On LET shift to state 1405
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On INCLUDE shift to state 1408
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On structure_tail shift to state 1440
-- On structure_item shift to state 1436
-- On structure shift to state 1441
-- On simple_expr shift to state 448
-- On seq_expr shift to state 1443
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 29:
## Known stack suffix:
## WHILE
## LR(1) items:
expr -> WHILE . seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 873
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 30:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_longident -> UIDENT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_longident -> UIDENT

State 31:
## Known stack suffix:
## TRY
## LR(1) items:
expr -> TRY . seq_expr FINALLY seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH opt_bar try_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 857
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 32:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_longident -> TRUE . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> TRUE

State 33:
## Known stack suffix:
## STRING
## LR(1) items:
constant -> STRING . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> STRING

State 34:
## Known stack suffix:
## RAISE
## LR(1) items:
expr -> RAISE . simple_exception_longident [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> RAISE . LPAREN constr_longident simple_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 35
-- On simple_exception_longident shift to state 856
-- On mod_longident shift to state 812
## Reductions:

State 35:
## Known stack suffix:
## RAISE LPAREN
## LR(1) items:
expr -> RAISE LPAREN . constr_longident simple_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On LPAREN shift to state 36
-- On LBRACKET shift to state 38
-- On FALSE shift to state 40
-- On mod_longident shift to state 41
-- On constr_longident shift to state 44
## Reductions:

State 36:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ VAL UIDENT TYPE TRUE STRING SEMISEMI PREFIXOP OPEN MODULE LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ]
## Transitions:
-- On RPAREN shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_longident -> LPAREN RPAREN . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> LPAREN RPAREN

State 38:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ VAL UIDENT TYPE TRUE STRING SEMISEMI PREFIXOP OPEN MODULE LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF CHARVECT CHAR BEGIN ]
## Transitions:
-- On RBRACKET shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_longident -> LBRACKET RBRACKET . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> LBRACKET RBRACKET

State 40:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_longident -> FALSE . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> FALSE

State 41:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI PREFIXOP OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CHARVECT CHAR BEGIN BAR AS ]
mod_longident -> mod_longident . DOT UIDENT [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI PREFIXOP OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF DOT COMMA COLONCOLON COLON CHARVECT CHAR BEGIN BAR AS ]
## Transitions:
-- On DOT shift to state 42
## Reductions:
-- On WHEN VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI PREFIXOP OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CHARVECT CHAR BEGIN BAR AS
--   reduce production constr_longident -> mod_longident

State 42:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## mod_longident DOT UIDENT
## LR(1) items:
mod_longident -> mod_longident DOT UIDENT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_longident -> mod_longident DOT UIDENT

State 44:
## Known stack suffix:
## RAISE LPAREN constr_longident
## LR(1) items:
expr -> RAISE LPAREN constr_longident . simple_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 854
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 45:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
simple_expr -> PREFIXOP . simple_expr [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 853
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 46:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On STAR shift to state 63
-- On RPAREN shift to state 37
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 401
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 67
-- On MINUS shift to state 751
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LESS shift to state 73
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On IF shift to state 462
-- On GREATER shift to state 124
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On BARBAR shift to state 127
-- On ASSERT shift to state 531
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 848
-- On operator shift to state 363
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 47:
## Known stack suffix:
## WHILE
## LR(1) items:
expr -> WHILE . seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 844
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 48:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
subtractive -> MINUSDOT . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtractive -> MINUSDOT

State 49:
## Known stack suffix:
## MINUS
## LR(1) items:
subtractive -> MINUS . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subtractive -> MINUS

State 50:
## Known stack suffix:
## MATCH
## LR(1) items:
expr -> MATCH . seq_expr WITH opt_bar match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 840
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 51:
## Known stack suffix:
## LIDENT
## LR(1) items:
val_ident -> LIDENT . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident -> LIDENT

State 52:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . rec_flag let_bindings IN seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 54
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 53:
## Known stack suffix:
## REC
## LR(1) items:
rec_flag -> REC . [ UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rec_flag -> REC

State 54:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
expr -> LET rec_flag . let_bindings IN seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 387
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 425
-- On mod_longident shift to state 41
-- On let_bindings shift to state 837
-- On let_binding shift to state 731
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 55:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_pattern -> UNDERSCORE . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> UNDERSCORE

State 56:
## Known stack suffix:
## MINUS
## LR(1) items:
signed_constant -> MINUS . INT [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
subtractive -> MINUS . [ FLOAT ]
## Transitions:
-- On INT shift to state 57
## Reductions:
-- On FLOAT
--   reduce production subtractive -> MINUS

State 57:
## Known stack suffix:
## MINUS INT
## LR(1) items:
signed_constant -> MINUS INT . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> MINUS INT

State 58:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN . pattern error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type_scheme RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type_scheme error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
val_ident -> LPAREN . operator RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On STAR shift to state 63
-- On RPAREN shift to state 37
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 67
-- On MINUS shift to state 68
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LESS shift to state 73
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 356
-- On operator shift to state 363
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 59:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_pattern -> UNDERSCORE . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> UNDERSCORE

State 60:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_longident -> UIDENT . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_longident -> UIDENT

State 61:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_longident -> TRUE . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> TRUE

State 62:
## Known stack suffix:
## STRING
## LR(1) items:
constant -> STRING . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> STRING

State 63:
## Known stack suffix:
## STAR
## LR(1) items:
operator -> STAR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> STAR

State 64:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
operator -> PREFIXOP . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> PREFIXOP

State 65:
## Known stack suffix:
## PLUS
## LR(1) items:
operator -> PLUS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> PLUS

State 66:
## Known stack suffix:
## OR
## LR(1) items:
operator -> OR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> OR

State 67:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
operator -> MINUSDOT . [ RPAREN ]
subtractive -> MINUSDOT . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUSDOT
-- On WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT
--   reduce production subtractive -> MINUSDOT

State 68:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
signed_constant -> MINUS . INT [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
subtractive -> MINUS . [ FLOAT ]
## Transitions:
-- On INT shift to state 69
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUS
-- On FLOAT
--   reduce production subtractive -> MINUS

State 69:
## Known stack suffix:
## MINUS INT
## LR(1) items:
signed_constant -> MINUS INT . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> MINUS INT

State 70:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE COMMA COLONCOLON COLON CHARVECT CHAR BARRBRACKET BAR AS ]
simple_pattern -> LPAREN . pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN . pattern error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type_scheme RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type_scheme error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
val_ident -> LPAREN . operator RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On STAR shift to state 63
-- On RPAREN shift to state 71
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 67
-- On MINUS shift to state 68
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LESS shift to state 73
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 151
-- On operator shift to state 130
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 71:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_longident -> LPAREN RPAREN . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> LPAREN RPAREN

State 72:
## Known stack suffix:
## LIDENT
## LR(1) items:
val_ident -> LIDENT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident -> LIDENT

State 73:
## Known stack suffix:
## LESS
## LR(1) items:
operator -> LESS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> LESS

State 74:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_pattern -> LBRACKETBAR . pattern_semi_list opt_semi BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKETBAR . BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKETBAR . pattern_semi_list opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On BARRBRACKET shift to state 146
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_semi_list shift to state 147
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 145
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 75:
## Known stack suffix:
## MINUS
## LR(1) items:
signed_constant -> MINUS . INT [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
subtractive -> MINUS . [ FLOAT ]
## Transitions:
-- On INT shift to state 69
## Reductions:
-- On FLOAT
--   reduce production subtractive -> MINUS

State 76:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE COMMA COLONCOLON COLON CHARVECT CHAR BARRBRACKET BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RBRACKET shift to state 77
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_semi_list shift to state 139
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 145
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 77:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_longident -> LBRACKET RBRACKET . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> LBRACKET RBRACKET

State 78:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_pattern -> LBRACE . lbl_pattern_list opt_semi RBRACE [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACE . lbl_pattern_list opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On lbl_pattern_list shift to state 83
-- On label_longident shift to state 136
## Reductions:

State 79:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_longident -> LIDENT . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_longident -> LIDENT

State 80:
## Known stack suffix:
## mod_longident
## LR(1) items:
label_longident -> mod_longident . DOT LIDENT [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
## Transitions:
-- On DOT shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
label_longident -> mod_longident DOT . LIDENT [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
## Transitions:
-- On UIDENT shift to state 43
-- On LIDENT shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
label_longident -> mod_longident DOT LIDENT . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_longident -> mod_longident DOT LIDENT

State 83:
## Known stack suffix:
## LBRACE lbl_pattern_list
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list . SEMI label_longident EQUAL pattern [ error SEMI RBRACE ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi RBRACE [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On SEMI shift to state 84
-- On opt_semi shift to state 133
## Reductions:
-- On error RBRACE
--   reduce production opt_semi ->

State 84:
## Known stack suffix:
## lbl_pattern_list SEMI
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list SEMI . label_longident EQUAL pattern [ error SEMI RBRACE ]
opt_semi -> SEMI . [ error RBRACE ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On label_longident shift to state 85
## Reductions:
-- On error RBRACE
--   reduce production opt_semi -> SEMI

State 85:
## Known stack suffix:
## lbl_pattern_list SEMI label_longident
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident . EQUAL pattern [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## lbl_pattern_list SEMI label_longident EQUAL
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL . pattern [ error SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 110
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 87:
## Known stack suffix:
## INT
## LR(1) items:
constant -> INT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> INT

State 88:
## Known stack suffix:
## FLOAT
## LR(1) items:
constant -> FLOAT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> FLOAT

State 89:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_longident -> FALSE . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_longident -> FALSE

State 90:
## Known stack suffix:
## CHARVECT
## LR(1) items:
constant -> CHARVECT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> CHARVECT

State 91:
## Known stack suffix:
## CHAR
## LR(1) items:
constant -> CHAR . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> CHAR . DOTDOT CHAR [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On DOTDOT shift to state 92
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production constant -> CHAR

State 92:
## Known stack suffix:
## CHAR DOTDOT
## LR(1) items:
simple_pattern -> CHAR DOTDOT . CHAR [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On CHAR shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## CHAR DOTDOT CHAR
## LR(1) items:
simple_pattern -> CHAR DOTDOT CHAR . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> CHAR DOTDOT CHAR

State 94:
## Known stack suffix:
## val_ident
## LR(1) items:
simple_pattern -> val_ident . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> val_ident

State 95:
## Known stack suffix:
## subtractive
## LR(1) items:
signed_constant -> subtractive . FLOAT [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On FLOAT shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## subtractive FLOAT
## LR(1) items:
signed_constant -> subtractive FLOAT . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> subtractive FLOAT

State 97:
## Known stack suffix:
## simple_pattern
## LR(1) items:
pattern -> simple_pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> simple_pattern

State 98:
## Known stack suffix:
## signed_constant
## LR(1) items:
simple_pattern -> signed_constant . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> signed_constant

State 99:
## Known stack suffix:
## pattern_comma_list
## LR(1) items:
pattern -> pattern_comma_list . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COMMA shift to state 100
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern_comma_list

State 100:
## Known stack suffix:
## pattern_comma_list COMMA
## LR(1) items:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 101
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 101:
## Known stack suffix:
## pattern_comma_list COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 102
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 102:
## Known stack suffix:
## pattern COLONCOLON
## LR(1) items:
pattern -> pattern COLONCOLON . pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 103
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 103:
## Known stack suffix:
## pattern COLONCOLON pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern COLONCOLON pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 102
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern COLONCOLON pattern

State 104:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END COMMA COLONCOLON COLON CHARVECT CHAR BARRBRACKET BAR AS ]
mod_longident -> mod_longident . DOT UIDENT [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END DOT COMMA COLONCOLON COLON CHARVECT CHAR BARRBRACKET BAR AS ]
## Transitions:
-- On DOT shift to state 105
## Reductions:
-- On error VAL UNDERSCORE UIDENT TYPE TRUE STRING SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LBRACKETBAR LBRACKET LBRACE INT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END COMMA COLONCOLON COLON CHARVECT CHAR BARRBRACKET BAR AS
--   reduce production constr_longident -> mod_longident

State 105:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## mod_longident DOT UIDENT
## LR(1) items:
mod_longident -> mod_longident DOT UIDENT . [ error VAL UNDERSCORE UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_longident -> mod_longident DOT UIDENT

State 107:
## Known stack suffix:
## constr_longident
## LR(1) items:
pattern -> constr_longident . pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> constr_longident . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 108
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production simple_pattern -> constr_longident

State 108:
## Known stack suffix:
## constr_longident pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> constr_longident pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> constr_longident pattern

State 109:
## Known stack suffix:
## constant
## LR(1) items:
signed_constant -> constant . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> constant

State 110:
## Known stack suffix:
## lbl_pattern_list SEMI label_longident EQUAL pattern
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern . [ error SEMI RBRACE ]
pattern -> pattern . AS val_ident [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:
-- On error SEMI RBRACE
--   reduce production lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern

State 111:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
pattern_comma_list -> pattern COMMA . pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 112
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 112:
## Known stack suffix:
## pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 102
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern_comma_list -> pattern COMMA pattern

State 113:
## Known stack suffix:
## pattern BAR
## LR(1) items:
pattern -> pattern BAR . pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 114
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 114:
## Known stack suffix:
## pattern BAR pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern BAR pattern . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
## Reductions:
-- On error SEMI RPAREN RBRACKET RBRACE COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern BAR pattern

State 115:
## Known stack suffix:
## pattern AS
## LR(1) items:
pattern -> pattern AS . val_ident [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LPAREN shift to state 116
-- On LIDENT shift to state 72
-- On val_ident shift to state 132
## Reductions:

State 116:
## Known stack suffix:
## LPAREN
## LR(1) items:
val_ident -> LPAREN . operator RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 63
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 117
-- On MINUS shift to state 118
-- On LESS shift to state 73
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On operator shift to state 130
## Reductions:

State 117:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
operator -> MINUSDOT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> MINUSDOT

State 118:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> MINUS

State 119:
## Known stack suffix:
## INFIXOP4
## LR(1) items:
operator -> INFIXOP4 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> INFIXOP4

State 120:
## Known stack suffix:
## INFIXOP3
## LR(1) items:
operator -> INFIXOP3 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> INFIXOP3

State 121:
## Known stack suffix:
## INFIXOP2
## LR(1) items:
operator -> INFIXOP2 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> INFIXOP2

State 122:
## Known stack suffix:
## INFIXOP1
## LR(1) items:
operator -> INFIXOP1 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> INFIXOP1

State 123:
## Known stack suffix:
## INFIXOP0
## LR(1) items:
operator -> INFIXOP0 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> INFIXOP0

State 124:
## Known stack suffix:
## GREATER
## LR(1) items:
operator -> GREATER . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> GREATER

State 125:
## Known stack suffix:
## EQUAL
## LR(1) items:
operator -> EQUAL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> EQUAL

State 126:
## Known stack suffix:
## COLONEQUAL
## LR(1) items:
operator -> COLONEQUAL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> COLONEQUAL

State 127:
## Known stack suffix:
## BARBAR
## LR(1) items:
operator -> BARBAR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> BARBAR

State 128:
## Known stack suffix:
## AMPERSAND
## LR(1) items:
operator -> AMPERSAND . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> AMPERSAND

State 129:
## Known stack suffix:
## AMPERAMPER
## LR(1) items:
operator -> AMPERAMPER . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator -> AMPERAMPER

State 130:
## Known stack suffix:
## LPAREN operator
## LR(1) items:
val_ident -> LPAREN operator . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## LPAREN operator RPAREN
## LR(1) items:
val_ident -> LPAREN operator RPAREN . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident -> LPAREN operator RPAREN

State 132:
## Known stack suffix:
## pattern AS val_ident
## LR(1) items:
pattern -> pattern AS val_ident . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> pattern AS val_ident

State 133:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi . RBRACE [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list opt_semi . error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On error shift to state 134
-- On RBRACE shift to state 135
## Reductions:

State 134:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi error . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error

State 135:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi RBRACE
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE

State 136:
## Known stack suffix:
## label_longident
## LR(1) items:
lbl_pattern_list -> label_longident . EQUAL pattern [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## label_longident EQUAL
## LR(1) items:
lbl_pattern_list -> label_longident EQUAL . pattern [ error SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 138
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 138:
## Known stack suffix:
## label_longident EQUAL pattern
## LR(1) items:
lbl_pattern_list -> label_longident EQUAL pattern . [ error SEMI RBRACE ]
pattern -> pattern . AS val_ident [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:
-- On error SEMI RBRACE
--   reduce production lbl_pattern_list -> label_longident EQUAL pattern

State 139:
## Known stack suffix:
## LBRACKET pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI RBRACKET ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi RBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On SEMI shift to state 140
-- On opt_semi shift to state 142
## Reductions:
-- On error RBRACKET
--   reduce production opt_semi ->

State 140:
## Known stack suffix:
## pattern_semi_list SEMI
## LR(1) items:
opt_semi -> SEMI . [ error RBRACKET BARRBRACKET ]
pattern_semi_list -> pattern_semi_list SEMI . pattern [ error SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 141
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:
-- On error RBRACKET BARRBRACKET
--   reduce production opt_semi -> SEMI

State 141:
## Known stack suffix:
## pattern_semi_list SEMI pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_semi_list -> pattern_semi_list SEMI pattern . [ error SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:
-- On error SEMI RBRACKET BARRBRACKET
--   reduce production pattern_semi_list -> pattern_semi_list SEMI pattern

State 142:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi . RBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list opt_semi . error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On error shift to state 143
-- On RBRACKET shift to state 144
## Reductions:

State 143:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi error . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error

State 144:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi RBRACKET
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET

State 145:
## Known stack suffix:
## pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACKET COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_semi_list -> pattern . [ error SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:
-- On error SEMI RBRACKET BARRBRACKET
--   reduce production pattern_semi_list -> pattern

State 146:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_pattern -> LBRACKETBAR BARRBRACKET . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR BARRBRACKET

State 147:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI BARRBRACKET ]
simple_pattern -> LBRACKETBAR pattern_semi_list . opt_semi BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKETBAR pattern_semi_list . opt_semi error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On SEMI shift to state 140
-- On opt_semi shift to state 148
## Reductions:
-- On error BARRBRACKET
--   reduce production opt_semi ->

State 148:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi . BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi . error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On error shift to state 149
-- On BARRBRACKET shift to state 150
## Reductions:

State 149:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi error . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi error

State 150:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET

State 151:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN pattern . error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type_scheme RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type_scheme error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On error shift to state 152
-- On RPAREN shift to state 153
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On COLON shift to state 154
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:

State 152:
## Known stack suffix:
## LPAREN pattern error
## LR(1) items:
simple_pattern -> LPAREN pattern error . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern error

State 153:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern RPAREN . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern RPAREN

State 154:
## Known stack suffix:
## LPAREN pattern COLON
## LR(1) items:
simple_pattern -> LPAREN pattern COLON . core_type_scheme RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN pattern COLON . core_type_scheme error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 311
-- On exception_longident shift to state 334
-- On core_type_scheme shift to state 353
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 155:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_extcore_type2 -> UNDERSCORE . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> UNDERSCORE

State 156:
## Known stack suffix:
## UIDENT
## LR(1) items:
exception_longident -> UIDENT . [ COLON ]
level_longident -> UIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> UIDENT
-- On error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND
--   reduce production level_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 157:
## Known stack suffix:
## STAR
## LR(1) items:
core_type_row_bounds -> STAR . COLON core_type_bounds [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On COLON shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## STAR COLON
## LR(1) items:
core_type_row_bounds -> STAR COLON . core_type_bounds [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level shift to state 188
-- On core_type_bounds shift to state 189
## Reductions:

State 159:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_longident -> UIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND
--   reduce production level_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 160:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
principal -> PREFIXOP . LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On LIDENT shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## PREFIXOP LIDENT
## LR(1) items:
principal -> PREFIXOP LIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production principal -> PREFIXOP LIDENT

State 162:
## Known stack suffix:
## LBRACKETLESS
## LR(1) items:
core_type_bounds -> LBRACKETLESS . level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
core_type_bounds -> LBRACKETLESS . level_comma_list INFIXOP0 level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 169
-- On level shift to state 176
## Reductions:
-- On RBRACKET INFIXOP0 COMMA
--   reduce production level_comma_list ->

State 163:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_longident -> UIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production level_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 164:
## Known stack suffix:
## principal
## LR(1) items:
level -> principal . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level -> principal

State 165:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
level_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
level_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## Transitions:
-- On UIDENT shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
level_longident -> mod_ext_longident DOT UIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production level_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 168:
## Known stack suffix:
## level_longident
## LR(1) items:
level -> level_longident . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACKET RAISES OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD LESS INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level -> level_longident

State 169:
## Known stack suffix:
## LBRACKETLESS level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list . RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
core_type_bounds -> LBRACKETLESS level_comma_list . INFIXOP0 level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET INFIXOP0 COMMA ]
## Transitions:
-- On RBRACKET shift to state 170
-- On INFIXOP0 shift to state 171
-- On COMMA shift to state 174
## Reductions:

State 170:
## Known stack suffix:
## LBRACKETLESS level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list RBRACKET . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETLESS level_comma_list RBRACKET

State 171:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 . level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 172
-- On level shift to state 176
## Reductions:
-- On RBRACKET COMMA
--   reduce production level_comma_list ->

State 172:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0 level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list . RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 173
-- On COMMA shift to state 174
## Reductions:

State 173:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET

State 174:
## Known stack suffix:
## level_comma_list COMMA
## LR(1) items:
level_comma_list -> level_comma_list COMMA . level [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET RAISES OPEN MODULE LEVEL LET LESSWORD INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## level_comma_list COMMA level
## LR(1) items:
level_comma_list -> level_comma_list COMMA level . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET RAISES OPEN MODULE LEVEL LET LESSWORD INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_comma_list -> level_comma_list COMMA level

State 176:
## Known stack suffix:
## level
## LR(1) items:
level_comma_list -> level . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET RAISES OPEN MODULE LEVEL LET LESSWORD INFIXOP0 INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_comma_list -> level

State 177:
## Known stack suffix:
## LBRACKETGREATER
## LR(1) items:
core_type_bounds -> LBRACKETGREATER . level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
core_type_bounds -> LBRACKETGREATER . level_comma_list INFIXOP0 level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 178
-- On level shift to state 176
## Reductions:
-- On RBRACKET INFIXOP0 COMMA
--   reduce production level_comma_list ->

State 178:
## Known stack suffix:
## LBRACKETGREATER level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list . RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
core_type_bounds -> LBRACKETGREATER level_comma_list . INFIXOP0 level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET INFIXOP0 COMMA ]
## Transitions:
-- On RBRACKET shift to state 179
-- On INFIXOP0 shift to state 180
-- On COMMA shift to state 174
## Reductions:

State 179:
## Known stack suffix:
## LBRACKETGREATER level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list RBRACKET . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETGREATER level_comma_list RBRACKET

State 180:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 . level_comma_list RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 181
-- On level shift to state 176
## Reductions:
-- On RBRACKET COMMA
--   reduce production level_comma_list ->

State 181:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list . RBRACKET [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 182
-- On COMMA shift to state 174
## Reductions:

State 182:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET

State 183:
## Known stack suffix:
## principal
## LR(1) items:
level -> principal . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level -> principal

State 184:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
level_longident -> mod_ext_longident . DOT UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
level_longident -> mod_ext_longident DOT . UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## Transitions:
-- On UIDENT shift to state 186
## Reductions:

State 186:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
level_longident -> mod_ext_longident DOT UIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND
--   reduce production level_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 187:
## Known stack suffix:
## level_longident
## LR(1) items:
level -> level_longident . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level -> level_longident

State 188:
## Known stack suffix:
## level
## LR(1) items:
core_type_bounds -> level . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> level

State 189:
## Known stack suffix:
## STAR COLON core_type_bounds
## LR(1) items:
core_type_row_bounds -> STAR COLON core_type_bounds . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_row_bounds -> STAR COLON core_type_bounds

State 190:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_extcore_type2 -> QUOTE . ident [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 191
-- On LIDENT shift to state 192
-- On ident shift to state 193
## Reductions:

State 191:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> UIDENT

State 192:
## Known stack suffix:
## LIDENT
## LR(1) items:
ident -> LIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> LIDENT

State 193:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_extcore_type2 -> QUOTE ident . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> QUOTE ident

State 194:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_extcore_type -> LPAREN . extcore_type_comma_list RPAREN [ error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
simple_extcore_type2 -> LPAREN . extcore_type_comma_list RPAREN type_longident [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_comma_list shift to state 278
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 277
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 195:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_extcore_type2 -> UNDERSCORE . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> UNDERSCORE

State 196:
## Known stack suffix:
## UIDENT
## LR(1) items:
exception_longident -> UIDENT . [ COLON ]
level_longident -> UIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> UIDENT
-- On WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production level_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 197:
## Known stack suffix:
## STAR
## LR(1) items:
core_type_row_bounds -> STAR . COLON core_type_bounds [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On COLON shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## STAR COLON
## LR(1) items:
core_type_row_bounds -> STAR COLON . core_type_bounds [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level shift to state 211
-- On core_type_bounds shift to state 212
## Reductions:

State 199:
## Known stack suffix:
## LBRACKETLESS
## LR(1) items:
core_type_bounds -> LBRACKETLESS . level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
core_type_bounds -> LBRACKETLESS . level_comma_list INFIXOP0 level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 200
-- On level shift to state 176
## Reductions:
-- On RBRACKET INFIXOP0 COMMA
--   reduce production level_comma_list ->

State 200:
## Known stack suffix:
## LBRACKETLESS level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list . RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
core_type_bounds -> LBRACKETLESS level_comma_list . INFIXOP0 level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET INFIXOP0 COMMA ]
## Transitions:
-- On RBRACKET shift to state 201
-- On INFIXOP0 shift to state 202
-- On COMMA shift to state 174
## Reductions:

State 201:
## Known stack suffix:
## LBRACKETLESS level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list RBRACKET . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETLESS level_comma_list RBRACKET

State 202:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 . level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 203
-- On level shift to state 176
## Reductions:
-- On RBRACKET COMMA
--   reduce production level_comma_list ->

State 203:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0 level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list . RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 204
-- On COMMA shift to state 174
## Reductions:

State 204:
## Known stack suffix:
## LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETLESS level_comma_list INFIXOP0 level_comma_list RBRACKET

State 205:
## Known stack suffix:
## LBRACKETGREATER
## LR(1) items:
core_type_bounds -> LBRACKETGREATER . level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
core_type_bounds -> LBRACKETGREATER . level_comma_list INFIXOP0 level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 206
-- On level shift to state 176
## Reductions:
-- On RBRACKET INFIXOP0 COMMA
--   reduce production level_comma_list ->

State 206:
## Known stack suffix:
## LBRACKETGREATER level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list . RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
core_type_bounds -> LBRACKETGREATER level_comma_list . INFIXOP0 level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET INFIXOP0 COMMA ]
## Transitions:
-- On RBRACKET shift to state 207
-- On INFIXOP0 shift to state 208
-- On COMMA shift to state 174
## Reductions:

State 207:
## Known stack suffix:
## LBRACKETGREATER level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list RBRACKET . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETGREATER level_comma_list RBRACKET

State 208:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 . level_comma_list RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 209
-- On level shift to state 176
## Reductions:
-- On RBRACKET COMMA
--   reduce production level_comma_list ->

State 209:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list . RBRACKET [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
level_comma_list -> level_comma_list . COMMA level [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 210
-- On COMMA shift to state 174
## Reductions:

State 210:
## Known stack suffix:
## LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET
## LR(1) items:
core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> LBRACKETGREATER level_comma_list INFIXOP0 level_comma_list RBRACKET

State 211:
## Known stack suffix:
## level
## LR(1) items:
core_type_bounds -> level . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_bounds -> level

State 212:
## Known stack suffix:
## STAR COLON core_type_bounds
## LR(1) items:
core_type_row_bounds -> STAR COLON core_type_bounds . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_row_bounds -> STAR COLON core_type_bounds

State 213:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_extcore_type2 -> QUOTE . ident [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 216
## Reductions:

State 214:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH VAL UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LPAREN LIDENT LEVEL LET LESS INT INCLUDE FALSE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA COLON BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> UIDENT

State 215:
## Known stack suffix:
## LIDENT
## LR(1) items:
ident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LPAREN LIDENT LEVEL LET LESS INT INCLUDE FALSE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA COLON BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> LIDENT

State 216:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_extcore_type2 -> QUOTE ident . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> QUOTE ident

State 217:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_extcore_type -> LPAREN . extcore_type_comma_list RPAREN [ WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type2 -> LPAREN . extcore_type_comma_list RPAREN type_longident [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_comma_list shift to state 240
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 277
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 218:
## Known stack suffix:
## LIDENT
## LR(1) items:
exception_longident -> LIDENT . [ COLON ]
type_longident -> LIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> LIDENT
-- On WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production type_longident -> LIDENT

State 219:
## Known stack suffix:
## type_longident
## LR(1) items:
simple_extcore_type2 -> type_longident . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> type_longident

State 220:
## Known stack suffix:
## simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> simple_extcore_type_or_tuple . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type_args -> simple_extcore_type_or_tuple . [ EQUALGREATER EQUALBRACE ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production extcore_type2 -> simple_extcore_type_or_tuple
-- On EQUALGREATER EQUALBRACE
--   reduce production extcore_type_args -> simple_extcore_type_or_tuple

State 221:
## Known stack suffix:
## simple_extcore_type2
## LR(1) items:
simple_extcore_type -> simple_extcore_type2 . [ WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type2 -> simple_extcore_type2 . type_longident [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 222
-- On type_longident shift to state 223
-- On mod_ext_longident shift to state 224
## Reductions:
-- On WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production simple_extcore_type -> simple_extcore_type2

State 222:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_longident -> LIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_longident -> LIDENT

State 223:
## Known stack suffix:
## simple_extcore_type2 type_longident
## LR(1) items:
simple_extcore_type2 -> simple_extcore_type2 type_longident . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> simple_extcore_type2 type_longident

State 224:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 9
-- On LIDENT shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
type_longident -> mod_ext_longident DOT LIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_longident -> mod_ext_longident DOT LIDENT

State 227:
## Known stack suffix:
## simple_extcore_type
## LR(1) items:
simple_extcore_type_or_tuple -> simple_extcore_type . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type_or_tuple -> simple_extcore_type . STAR extcore_type_list [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On STAR shift to state 228
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production simple_extcore_type_or_tuple -> simple_extcore_type

State 228:
## Known stack suffix:
## simple_extcore_type STAR
## LR(1) items:
simple_extcore_type_or_tuple -> simple_extcore_type STAR . extcore_type_list [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 229
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_list shift to state 232
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 229:
## Known stack suffix:
## simple_extcore_type
## LR(1) items:
extcore_type_list -> simple_extcore_type . [ WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_list -> simple_extcore_type

State 230:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
level_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
level_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 167
-- On LIDENT shift to state 226
## Reductions:

State 232:
## Known stack suffix:
## simple_extcore_type STAR extcore_type_list
## LR(1) items:
extcore_type_list -> extcore_type_list . STAR simple_extcore_type [ WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type_or_tuple -> simple_extcore_type STAR extcore_type_list . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On STAR shift to state 233
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production simple_extcore_type_or_tuple -> simple_extcore_type STAR extcore_type_list

State 233:
## Known stack suffix:
## extcore_type_list STAR
## LR(1) items:
extcore_type_list -> extcore_type_list STAR . simple_extcore_type [ WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 234
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 234:
## Known stack suffix:
## extcore_type_list STAR simple_extcore_type
## LR(1) items:
extcore_type_list -> extcore_type_list STAR simple_extcore_type . [ WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_list -> extcore_type_list STAR simple_extcore_type

State 235:
## Known stack suffix:
## core_type_row_bounds
## LR(1) items:
simple_extcore_type2 -> core_type_row_bounds . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> core_type_row_bounds

State 236:
## Known stack suffix:
## core_type_bounds
## LR(1) items:
simple_extcore_type2 -> core_type_bounds . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> core_type_bounds

State 237:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
exception_longident -> mod_ext_longident . DOT UIDENT [ COLON ]
level_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
exception_longident -> mod_ext_longident DOT . UIDENT [ COLON ]
level_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 239
-- On LIDENT shift to state 226
## Reductions:

State 239:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
exception_longident -> mod_ext_longident DOT UIDENT . [ COLON ]
level_longident -> mod_ext_longident DOT UIDENT . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> mod_ext_longident DOT UIDENT
-- On WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production level_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 240:
## Known stack suffix:
## LPAREN extcore_type_comma_list
## LR(1) items:
extcore_type_comma_list -> extcore_type_comma_list . COMMA extcore_type [ RPAREN COMMA ]
simple_extcore_type -> LPAREN extcore_type_comma_list . RPAREN [ WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type2 -> LPAREN extcore_type_comma_list . RPAREN type_longident [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On RPAREN shift to state 241
-- On COMMA shift to state 243
## Reductions:

State 241:
## Known stack suffix:
## LPAREN extcore_type_comma_list RPAREN
## LR(1) items:
simple_extcore_type -> LPAREN extcore_type_comma_list RPAREN . [ WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN . type_longident [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 222
-- On type_longident shift to state 242
-- On mod_ext_longident shift to state 224
## Reductions:
-- On WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production simple_extcore_type -> LPAREN extcore_type_comma_list RPAREN

State 242:
## Known stack suffix:
## LPAREN extcore_type_comma_list RPAREN type_longident
## LR(1) items:
simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN type_longident . [ WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET LESS INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN type_longident

State 243:
## Known stack suffix:
## extcore_type_comma_list COMMA
## LR(1) items:
extcore_type_comma_list -> extcore_type_comma_list COMMA . extcore_type [ RPAREN COMMA ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 276
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 244:
## Known stack suffix:
## extcore_type_args
## LR(1) items:
extcore_type2 -> extcore_type_args . EQUALGREATER simple_extcore_type_or_tuple [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type2 -> extcore_type_args . extcore_type_arrow_abbrev simple_extcore_type_or_tuple [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type_args -> extcore_type_args . EQUALGREATER simple_extcore_type_or_tuple [ EQUALGREATER EQUALBRACE ]
## Transitions:
-- On EQUALGREATER shift to state 245
-- On EQUALBRACE shift to state 247
-- On extcore_type_arrow_abbrev shift to state 274
## Reductions:

State 245:
## Known stack suffix:
## extcore_type_args EQUALGREATER
## LR(1) items:
extcore_type2 -> extcore_type_args EQUALGREATER . simple_extcore_type_or_tuple [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type_args -> extcore_type_args EQUALGREATER . simple_extcore_type_or_tuple [ EQUALGREATER EQUALBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 246
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 246:
## Known stack suffix:
## extcore_type_args EQUALGREATER simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type_args -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple . [ EQUALGREATER EQUALBRACE ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production extcore_type2 -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple
-- On EQUALGREATER EQUALBRACE
--   reduce production extcore_type_args -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple

State 247:
## Known stack suffix:
## EQUALBRACE
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE . BRACEEQUALGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
extcore_type_arrow_abbrev -> EQUALBRACE . opt_extcore_type BAR opt_extcore_type BRACEEQUALGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On BRACEEQUALGREATER shift to state 248
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 249
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BAR
--   reduce production opt_extcore_type ->

State 248:
## Known stack suffix:
## EQUALBRACE BRACEEQUALGREATER
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE BRACEEQUALGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow_abbrev -> EQUALBRACE BRACEEQUALGREATER

State 249:
## Known stack suffix:
## EQUALBRACE opt_extcore_type
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE opt_extcore_type . BAR opt_extcore_type BRACEEQUALGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BAR shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## EQUALBRACE opt_extcore_type BAR
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE opt_extcore_type BAR . opt_extcore_type BRACEEQUALGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 251
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BRACEEQUALGREATER
--   reduce production opt_extcore_type ->

State 251:
## Known stack suffix:
## EQUALBRACE opt_extcore_type BAR opt_extcore_type
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE opt_extcore_type BAR opt_extcore_type . BRACEEQUALGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BRACEEQUALGREATER shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## EQUALBRACE opt_extcore_type BAR opt_extcore_type BRACEEQUALGREATER
## LR(1) items:
extcore_type_arrow_abbrev -> EQUALBRACE opt_extcore_type BAR opt_extcore_type BRACEEQUALGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow_abbrev -> EQUALBRACE opt_extcore_type BAR opt_extcore_type BRACEEQUALGREATER

State 253:
## Known stack suffix:
## extcore_type2
## LR(1) items:
extcore_type -> extcore_type2 . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type2 -> extcore_type2 . extcore_type_arrow extcore_type2 [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On MINUSGREATER shift to state 254
-- On MINUSBRACE shift to state 255
-- On extcore_type_arrow shift to state 272
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production extcore_type -> extcore_type2

State 254:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
extcore_type_arrow -> MINUSGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow -> MINUSGREATER

State 255:
## Known stack suffix:
## MINUSBRACE
## LR(1) items:
extcore_type_arrow -> MINUSBRACE . BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
extcore_type_arrow -> MINUSBRACE . opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
extcore_type_arrow -> MINUSBRACE . opt_extcore_type BARBAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On BRACEMINUSGREATER shift to state 256
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 257
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BARBAR BAR
--   reduce production opt_extcore_type ->

State 256:
## Known stack suffix:
## MINUSBRACE BRACEMINUSGREATER
## LR(1) items:
extcore_type_arrow -> MINUSBRACE BRACEMINUSGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow -> MINUSBRACE BRACEMINUSGREATER

State 257:
## Known stack suffix:
## MINUSBRACE opt_extcore_type
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type . BAR opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
extcore_type_arrow -> MINUSBRACE opt_extcore_type . BARBAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BARBAR shift to state 258
-- On BAR shift to state 267
## Reductions:

State 258:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BARBAR
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BARBAR . opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 259
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BRACEMINUSGREATER
--   reduce production opt_extcore_type ->

State 259:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BARBAR opt_extcore_type
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BARBAR opt_extcore_type . BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BRACEMINUSGREATER shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BARBAR opt_extcore_type BRACEMINUSGREATER
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BARBAR opt_extcore_type BRACEMINUSGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow -> MINUSBRACE opt_extcore_type BARBAR opt_extcore_type BRACEMINUSGREATER

State 261:
## Known stack suffix:
## extcore_type
## LR(1) items:
opt_extcore_type -> extcore_type . [ BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_extcore_type -> extcore_type

State 262:
## Known stack suffix:
## exception_longident
## LR(1) items:
extcore_type -> exception_longident . COLON simple_extcore_type SEMI extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type -> exception_longident . COLON simple_extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On COLON shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## exception_longident COLON
## LR(1) items:
extcore_type -> exception_longident COLON . simple_extcore_type SEMI extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type -> exception_longident COLON . simple_extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 264
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 264:
## Known stack suffix:
## exception_longident COLON simple_extcore_type
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type . SEMI extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type -> exception_longident COLON simple_extcore_type . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On SEMI shift to state 265
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production extcore_type -> exception_longident COLON simple_extcore_type

State 265:
## Known stack suffix:
## exception_longident COLON simple_extcore_type SEMI
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type SEMI . extcore_type [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 266
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 266:
## Known stack suffix:
## exception_longident COLON simple_extcore_type SEMI extcore_type
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type SEMI extcore_type . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type -> exception_longident COLON simple_extcore_type SEMI extcore_type

State 267:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BAR
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR . opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 268
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BAR
--   reduce production opt_extcore_type ->

State 268:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BAR opt_extcore_type
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR opt_extcore_type . BAR opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BAR shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR . opt_extcore_type BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On opt_extcore_type shift to state 270
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 261
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:
-- On BRACEMINUSGREATER
--   reduce production opt_extcore_type ->

State 270:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type . BRACEMINUSGREATER [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On BRACEMINUSGREATER shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER
## LR(1) items:
extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_arrow -> MINUSBRACE opt_extcore_type BAR opt_extcore_type BAR opt_extcore_type BRACEMINUSGREATER

State 272:
## Known stack suffix:
## extcore_type2 extcore_type_arrow
## LR(1) items:
extcore_type2 -> extcore_type2 extcore_type_arrow . extcore_type2 [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 273
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 273:
## Known stack suffix:
## extcore_type2 extcore_type_arrow extcore_type2
## LR(1) items:
extcore_type2 -> extcore_type2 . extcore_type_arrow extcore_type2 [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2 . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On MINUSGREATER shift to state 254
-- On MINUSBRACE shift to state 255
-- On extcore_type_arrow shift to state 272
## Reductions:
-- On WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND
--   reduce production extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2

State 274:
## Known stack suffix:
## extcore_type_args extcore_type_arrow_abbrev
## LR(1) items:
extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev . simple_extcore_type_or_tuple [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 275
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 275:
## Known stack suffix:
## extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple . [ WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LESS INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA BRACEMINUSGREATER BRACEEQUALGREATER BARBAR BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple

State 276:
## Known stack suffix:
## extcore_type_comma_list COMMA extcore_type
## LR(1) items:
extcore_type_comma_list -> extcore_type_comma_list COMMA extcore_type . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_comma_list -> extcore_type_comma_list COMMA extcore_type

State 277:
## Known stack suffix:
## extcore_type
## LR(1) items:
extcore_type_comma_list -> extcore_type . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_comma_list -> extcore_type

State 278:
## Known stack suffix:
## LPAREN extcore_type_comma_list
## LR(1) items:
extcore_type_comma_list -> extcore_type_comma_list . COMMA extcore_type [ RPAREN COMMA ]
simple_extcore_type -> LPAREN extcore_type_comma_list . RPAREN [ error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
simple_extcore_type2 -> LPAREN extcore_type_comma_list . RPAREN type_longident [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On RPAREN shift to state 279
-- On COMMA shift to state 243
## Reductions:

State 279:
## Known stack suffix:
## LPAREN extcore_type_comma_list RPAREN
## LR(1) items:
simple_extcore_type -> LPAREN extcore_type_comma_list RPAREN . [ error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN . type_longident [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 280
-- On type_longident shift to state 281
-- On mod_ext_longident shift to state 282
## Reductions:
-- On error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND
--   reduce production simple_extcore_type -> LPAREN extcore_type_comma_list RPAREN

State 280:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_longident -> LIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_longident -> LIDENT

State 281:
## Known stack suffix:
## LPAREN extcore_type_comma_list RPAREN type_longident
## LR(1) items:
simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN type_longident . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> LPAREN extcore_type_comma_list RPAREN type_longident

State 282:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
-- On UIDENT shift to state 9
-- On LIDENT shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
type_longident -> mod_ext_longident DOT LIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SHARP SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_longident -> mod_ext_longident DOT LIDENT

State 285:
## Known stack suffix:
## LIDENT
## LR(1) items:
exception_longident -> LIDENT . [ COLON ]
type_longident -> LIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA AND ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> LIDENT
-- On error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END CONSTRAINT COMMA AND
--   reduce production type_longident -> LIDENT

State 286:
## Known stack suffix:
## type_longident
## LR(1) items:
simple_extcore_type2 -> type_longident . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> type_longident

State 287:
## Known stack suffix:
## simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> simple_extcore_type_or_tuple . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type_args -> simple_extcore_type_or_tuple . [ EQUALGREATER EQUALBRACE ]
## Transitions:
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production extcore_type2 -> simple_extcore_type_or_tuple
-- On EQUALGREATER EQUALBRACE
--   reduce production extcore_type_args -> simple_extcore_type_or_tuple

State 288:
## Known stack suffix:
## simple_extcore_type2
## LR(1) items:
simple_extcore_type -> simple_extcore_type2 . [ error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
simple_extcore_type2 -> simple_extcore_type2 . type_longident [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 280
-- On type_longident shift to state 289
-- On mod_ext_longident shift to state 282
## Reductions:
-- On error WITH VAL TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND
--   reduce production simple_extcore_type -> simple_extcore_type2

State 289:
## Known stack suffix:
## simple_extcore_type2 type_longident
## LR(1) items:
simple_extcore_type2 -> simple_extcore_type2 type_longident . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> simple_extcore_type2 type_longident

State 290:
## Known stack suffix:
## simple_extcore_type
## LR(1) items:
simple_extcore_type_or_tuple -> simple_extcore_type . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
simple_extcore_type_or_tuple -> simple_extcore_type . STAR extcore_type_list [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
## Transitions:
-- On STAR shift to state 291
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND
--   reduce production simple_extcore_type_or_tuple -> simple_extcore_type

State 291:
## Known stack suffix:
## simple_extcore_type STAR
## LR(1) items:
simple_extcore_type_or_tuple -> simple_extcore_type STAR . extcore_type_list [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 292
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_list shift to state 295
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 292:
## Known stack suffix:
## simple_extcore_type
## LR(1) items:
extcore_type_list -> simple_extcore_type . [ error WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_list -> simple_extcore_type

State 293:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
level_longident -> mod_ext_longident . DOT UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
level_longident -> mod_ext_longident DOT . UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 186
-- On LIDENT shift to state 284
## Reductions:

State 295:
## Known stack suffix:
## simple_extcore_type STAR extcore_type_list
## LR(1) items:
extcore_type_list -> extcore_type_list . STAR simple_extcore_type [ error WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
simple_extcore_type_or_tuple -> simple_extcore_type STAR extcore_type_list . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
## Transitions:
-- On STAR shift to state 296
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND
--   reduce production simple_extcore_type_or_tuple -> simple_extcore_type STAR extcore_type_list

State 296:
## Known stack suffix:
## extcore_type_list STAR
## LR(1) items:
extcore_type_list -> extcore_type_list STAR . simple_extcore_type [ error WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 297
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 297:
## Known stack suffix:
## extcore_type_list STAR simple_extcore_type
## LR(1) items:
extcore_type_list -> extcore_type_list STAR simple_extcore_type . [ error WITH VAL TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type_list -> extcore_type_list STAR simple_extcore_type

State 298:
## Known stack suffix:
## core_type_row_bounds
## LR(1) items:
simple_extcore_type2 -> core_type_row_bounds . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> core_type_row_bounds

State 299:
## Known stack suffix:
## core_type_bounds
## LR(1) items:
simple_extcore_type2 -> core_type_bounds . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI SEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE EQUAL END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_extcore_type2 -> core_type_bounds

State 300:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
exception_longident -> mod_ext_longident . DOT UIDENT [ COLON ]
level_longident -> mod_ext_longident . DOT UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
exception_longident -> mod_ext_longident DOT . UIDENT [ COLON ]
level_longident -> mod_ext_longident DOT . UIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 302
-- On LIDENT shift to state 284
## Reductions:

State 302:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
exception_longident -> mod_ext_longident DOT UIDENT . [ COLON ]
level_longident -> mod_ext_longident DOT UIDENT . [ error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> mod_ext_longident DOT UIDENT
-- On error WITH VAL UIDENT TYPE TILDE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LIDENT LEVEL INCLUDE EXTERNAL EXCEPTION EQUALGREATER EQUALBRACE END COMMA AND
--   reduce production level_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 303:
## Known stack suffix:
## extcore_type_args
## LR(1) items:
extcore_type2 -> extcore_type_args . EQUALGREATER simple_extcore_type_or_tuple [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type2 -> extcore_type_args . extcore_type_arrow_abbrev simple_extcore_type_or_tuple [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type_args -> extcore_type_args . EQUALGREATER simple_extcore_type_or_tuple [ EQUALGREATER EQUALBRACE ]
## Transitions:
-- On EQUALGREATER shift to state 304
-- On EQUALBRACE shift to state 247
-- On extcore_type_arrow_abbrev shift to state 306
## Reductions:

State 304:
## Known stack suffix:
## extcore_type_args EQUALGREATER
## LR(1) items:
extcore_type2 -> extcore_type_args EQUALGREATER . simple_extcore_type_or_tuple [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type_args -> extcore_type_args EQUALGREATER . simple_extcore_type_or_tuple [ EQUALGREATER EQUALBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 305
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 305:
## Known stack suffix:
## extcore_type_args EQUALGREATER simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type_args -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple . [ EQUALGREATER EQUALBRACE ]
## Transitions:
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production extcore_type2 -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple
-- On EQUALGREATER EQUALBRACE
--   reduce production extcore_type_args -> extcore_type_args EQUALGREATER simple_extcore_type_or_tuple

State 306:
## Known stack suffix:
## extcore_type_args extcore_type_arrow_abbrev
## LR(1) items:
extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev . simple_extcore_type_or_tuple [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 307
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 307:
## Known stack suffix:
## extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple
## LR(1) items:
extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type2 -> extcore_type_args extcore_type_arrow_abbrev simple_extcore_type_or_tuple

State 308:
## Known stack suffix:
## extcore_type2
## LR(1) items:
extcore_type -> extcore_type2 . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type2 -> extcore_type2 . extcore_type_arrow extcore_type2 [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On MINUSGREATER shift to state 254
-- On MINUSBRACE shift to state 255
-- On extcore_type_arrow shift to state 309
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production extcore_type -> extcore_type2

State 309:
## Known stack suffix:
## extcore_type2 extcore_type_arrow
## LR(1) items:
extcore_type2 -> extcore_type2 extcore_type_arrow . extcore_type2 [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 310
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 310:
## Known stack suffix:
## extcore_type2 extcore_type_arrow extcore_type2
## LR(1) items:
extcore_type2 -> extcore_type2 . extcore_type_arrow extcore_type2 [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2 . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE MINUSGREATER MINUSBRACE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On MINUSGREATER shift to state 254
-- On MINUSBRACE shift to state 255
-- On extcore_type_arrow shift to state 309
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2

State 311:
## Known stack suffix:
## extcore_type
## LR(1) items:
core_type_scheme -> extcore_type . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
core_type_scheme -> extcore_type . WITH core_type_constraints_list [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 312
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production core_type_scheme -> extcore_type

State 312:
## Known stack suffix:
## extcore_type WITH
## LR(1) items:
core_type_scheme -> extcore_type WITH . core_type_constraints_list [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 324
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 343
-- On exception_longident shift to state 262
-- On core_type_skeleton shift to state 346
-- On core_type_row_bounds shift to state 235
-- On core_type_constraints_list shift to state 349
-- On core_type_constraint shift to state 352
-- On core_type_bounds shift to state 236
## Reductions:

State 313:
## Known stack suffix:
## CONTENT
## LR(1) items:
left_hand_side -> CONTENT . extcore_type [ LESS ]
left_hand_side -> CONTENT . TILDE extcore_type [ LESS ]
left_hand_side -> CONTENT . extcore_type COMMA left_hand_side [ LESS ]
left_hand_side -> CONTENT . TILDE extcore_type COMMA left_hand_side [ LESS ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On TILDE shift to state 314
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 321
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 314:
## Known stack suffix:
## CONTENT TILDE
## LR(1) items:
left_hand_side -> CONTENT TILDE . extcore_type [ LESS ]
left_hand_side -> CONTENT TILDE . extcore_type COMMA left_hand_side [ LESS ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 315
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 315:
## Known stack suffix:
## CONTENT TILDE extcore_type
## LR(1) items:
left_hand_side -> CONTENT TILDE extcore_type . [ LESS ]
left_hand_side -> CONTENT TILDE extcore_type . COMMA left_hand_side [ LESS ]
## Transitions:
-- On COMMA shift to state 316
## Reductions:
-- On LESS
--   reduce production left_hand_side -> CONTENT TILDE extcore_type

State 316:
## Known stack suffix:
## CONTENT TILDE extcore_type COMMA
## LR(1) items:
left_hand_side -> CONTENT TILDE extcore_type COMMA . left_hand_side [ LESS ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 317
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 318
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 317:
## Known stack suffix:
## CONTENT TILDE extcore_type COMMA left_hand_side
## LR(1) items:
left_hand_side -> CONTENT TILDE extcore_type COMMA left_hand_side . [ LESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production left_hand_side -> CONTENT TILDE extcore_type COMMA left_hand_side

State 318:
## Known stack suffix:
## extcore_type
## LR(1) items:
left_hand_side -> extcore_type . [ LESS ]
left_hand_side -> extcore_type . COMMA left_hand_side [ LESS ]
## Transitions:
-- On COMMA shift to state 319
## Reductions:
-- On LESS
--   reduce production left_hand_side -> extcore_type

State 319:
## Known stack suffix:
## extcore_type COMMA
## LR(1) items:
left_hand_side -> extcore_type COMMA . left_hand_side [ LESS ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 320
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 318
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 320:
## Known stack suffix:
## extcore_type COMMA left_hand_side
## LR(1) items:
left_hand_side -> extcore_type COMMA left_hand_side . [ LESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production left_hand_side -> extcore_type COMMA left_hand_side

State 321:
## Known stack suffix:
## CONTENT extcore_type
## LR(1) items:
left_hand_side -> CONTENT extcore_type . [ LESS ]
left_hand_side -> CONTENT extcore_type . COMMA left_hand_side [ LESS ]
## Transitions:
-- On COMMA shift to state 322
## Reductions:
-- On LESS
--   reduce production left_hand_side -> CONTENT extcore_type

State 322:
## Known stack suffix:
## CONTENT extcore_type COMMA
## LR(1) items:
left_hand_side -> CONTENT extcore_type COMMA . left_hand_side [ LESS ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 323
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 318
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 323:
## Known stack suffix:
## CONTENT extcore_type COMMA left_hand_side
## LR(1) items:
left_hand_side -> CONTENT extcore_type COMMA left_hand_side . [ LESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production left_hand_side -> CONTENT extcore_type COMMA left_hand_side

State 324:
## Known stack suffix:
## left_hand_side
## LR(1) items:
core_type_constraint -> left_hand_side . LESS right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On LESS shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## left_hand_side LESS
## LR(1) items:
core_type_constraint -> left_hand_side LESS . right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LEVEL shift to state 326
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On right_hand_side shift to state 342
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 331
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 326:
## Known stack suffix:
## LEVEL
## LR(1) items:
right_hand_side -> LEVEL . extcore_type [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL . TILDE extcore_type [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL . extcore_type COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL . TILDE extcore_type COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On TILDE shift to state 327
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 339
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 327:
## Known stack suffix:
## LEVEL TILDE
## LR(1) items:
right_hand_side -> LEVEL TILDE . extcore_type [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL TILDE . extcore_type COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 328
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 328:
## Known stack suffix:
## LEVEL TILDE extcore_type
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL TILDE extcore_type . COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On COMMA shift to state 329
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production right_hand_side -> LEVEL TILDE extcore_type

State 329:
## Known stack suffix:
## LEVEL TILDE extcore_type COMMA
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type COMMA . right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LEVEL shift to state 326
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On right_hand_side shift to state 330
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 331
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 330:
## Known stack suffix:
## LEVEL TILDE extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type COMMA right_hand_side . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> LEVEL TILDE extcore_type COMMA right_hand_side

State 331:
## Known stack suffix:
## extcore_type
## LR(1) items:
right_hand_side -> extcore_type . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> extcore_type . COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On COMMA shift to state 332
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production right_hand_side -> extcore_type

State 332:
## Known stack suffix:
## extcore_type COMMA
## LR(1) items:
right_hand_side -> extcore_type COMMA . right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LEVEL shift to state 326
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On right_hand_side shift to state 333
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 331
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 333:
## Known stack suffix:
## extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> extcore_type COMMA right_hand_side . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> extcore_type COMMA right_hand_side

State 334:
## Known stack suffix:
## exception_longident
## LR(1) items:
extcore_type -> exception_longident . COLON simple_extcore_type SEMI extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type -> exception_longident . COLON simple_extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On COLON shift to state 335
## Reductions:

State 335:
## Known stack suffix:
## exception_longident COLON
## LR(1) items:
extcore_type -> exception_longident COLON . simple_extcore_type SEMI extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type -> exception_longident COLON . simple_extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 336
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 336:
## Known stack suffix:
## exception_longident COLON simple_extcore_type
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type . SEMI extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
extcore_type -> exception_longident COLON simple_extcore_type . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On SEMI shift to state 337
## Reductions:
-- On error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production extcore_type -> exception_longident COLON simple_extcore_type

State 337:
## Known stack suffix:
## exception_longident COLON simple_extcore_type SEMI
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type SEMI . extcore_type [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 338
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 338:
## Known stack suffix:
## exception_longident COLON simple_extcore_type SEMI extcore_type
## LR(1) items:
extcore_type -> exception_longident COLON simple_extcore_type SEMI extcore_type . [ error WITH VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extcore_type -> exception_longident COLON simple_extcore_type SEMI extcore_type

State 339:
## Known stack suffix:
## LEVEL extcore_type
## LR(1) items:
right_hand_side -> LEVEL extcore_type . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
right_hand_side -> LEVEL extcore_type . COMMA right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On COMMA shift to state 340
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production right_hand_side -> LEVEL extcore_type

State 340:
## Known stack suffix:
## LEVEL extcore_type COMMA
## LR(1) items:
right_hand_side -> LEVEL extcore_type COMMA . right_hand_side [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LEVEL shift to state 326
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On right_hand_side shift to state 341
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 331
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 341:
## Known stack suffix:
## LEVEL extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> LEVEL extcore_type COMMA right_hand_side . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> LEVEL extcore_type COMMA right_hand_side

State 342:
## Known stack suffix:
## left_hand_side LESS right_hand_side
## LR(1) items:
core_type_constraint -> left_hand_side LESS right_hand_side . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraint -> left_hand_side LESS right_hand_side

State 343:
## Known stack suffix:
## extcore_type
## LR(1) items:
core_type_skeleton -> extcore_type . TILDE extcore_type [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
left_hand_side -> extcore_type . [ LESS ]
left_hand_side -> extcore_type . COMMA left_hand_side [ LESS ]
## Transitions:
-- On TILDE shift to state 344
-- On COMMA shift to state 319
## Reductions:
-- On LESS
--   reduce production left_hand_side -> extcore_type

State 344:
## Known stack suffix:
## extcore_type TILDE
## LR(1) items:
core_type_skeleton -> extcore_type TILDE . extcore_type [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 345
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 345:
## Known stack suffix:
## extcore_type TILDE extcore_type
## LR(1) items:
core_type_skeleton -> extcore_type TILDE extcore_type . [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_skeleton -> extcore_type TILDE extcore_type

State 346:
## Known stack suffix:
## core_type_skeleton
## LR(1) items:
core_type_constraint -> core_type_skeleton . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
core_type_skeleton -> core_type_skeleton . TILDE extcore_type [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On TILDE shift to state 347
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production core_type_constraint -> core_type_skeleton

State 347:
## Known stack suffix:
## core_type_skeleton TILDE
## LR(1) items:
core_type_skeleton -> core_type_skeleton TILDE . extcore_type [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 348
-- On exception_longident shift to state 334
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 348:
## Known stack suffix:
## core_type_skeleton TILDE extcore_type
## LR(1) items:
core_type_skeleton -> core_type_skeleton TILDE extcore_type . [ error VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_skeleton -> core_type_skeleton TILDE extcore_type

State 349:
## Known stack suffix:
## extcore_type WITH core_type_constraints_list
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list . AND core_type_constraint [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
core_type_scheme -> extcore_type WITH core_type_constraints_list . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On AND shift to state 350
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production core_type_scheme -> extcore_type WITH core_type_constraints_list

State 350:
## Known stack suffix:
## core_type_constraints_list AND
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list AND . core_type_constraint [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 324
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 343
-- On exception_longident shift to state 262
-- On core_type_skeleton shift to state 346
-- On core_type_row_bounds shift to state 235
-- On core_type_constraint shift to state 351
-- On core_type_bounds shift to state 236
## Reductions:

State 351:
## Known stack suffix:
## core_type_constraints_list AND core_type_constraint
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list AND core_type_constraint . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraints_list -> core_type_constraints_list AND core_type_constraint

State 352:
## Known stack suffix:
## core_type_constraint
## LR(1) items:
core_type_constraints_list -> core_type_constraint . [ error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraints_list -> core_type_constraint

State 353:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme . RPAREN [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern -> LPAREN pattern COLON core_type_scheme . error [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On error shift to state 354
-- On RPAREN shift to state 355
## Reductions:

State 354:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme error
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme error . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern COLON core_type_scheme error

State 355:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme RPAREN . [ error SEMI RPAREN RBRACKET RBRACE COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern COLON core_type_scheme RPAREN

State 356:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN pattern . error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type_scheme RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type_scheme error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On error shift to state 357
-- On RPAREN shift to state 358
-- On COMMA shift to state 111
-- On COLONCOLON shift to state 102
-- On COLON shift to state 359
-- On BAR shift to state 113
-- On AS shift to state 115
## Reductions:

State 357:
## Known stack suffix:
## LPAREN pattern error
## LR(1) items:
simple_pattern -> LPAREN pattern error . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern error

State 358:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern RPAREN . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern RPAREN

State 359:
## Known stack suffix:
## LPAREN pattern COLON
## LR(1) items:
simple_pattern -> LPAREN pattern COLON . core_type_scheme RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN pattern COLON . core_type_scheme error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 311
-- On exception_longident shift to state 334
-- On core_type_scheme shift to state 360
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 360:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme . RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LPAREN pattern COLON core_type_scheme . error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On error shift to state 361
-- On RPAREN shift to state 362
## Reductions:

State 361:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme error
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme error . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern COLON core_type_scheme error

State 362:
## Known stack suffix:
## LPAREN pattern COLON core_type_scheme RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern COLON core_type_scheme RPAREN . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern COLON core_type_scheme RPAREN

State 363:
## Known stack suffix:
## LPAREN operator
## LR(1) items:
val_ident -> LPAREN operator . RPAREN [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## LPAREN operator RPAREN
## LR(1) items:
val_ident -> LPAREN operator RPAREN . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident -> LPAREN operator RPAREN

State 365:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_pattern -> LBRACKETBAR . pattern_semi_list opt_semi BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKETBAR . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKETBAR . pattern_semi_list opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On BARRBRACKET shift to state 366
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_semi_list shift to state 367
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 145
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 366:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_pattern -> LBRACKETBAR BARRBRACKET . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR BARRBRACKET

State 367:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI BARRBRACKET ]
simple_pattern -> LBRACKETBAR pattern_semi_list . opt_semi BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKETBAR pattern_semi_list . opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On SEMI shift to state 140
-- On opt_semi shift to state 368
## Reductions:
-- On error BARRBRACKET
--   reduce production opt_semi ->

State 368:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi . error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On error shift to state 369
-- On BARRBRACKET shift to state 370
## Reductions:

State 369:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi error . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi error

State 370:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET

State 371:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 59
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RBRACKET shift to state 39
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 75
-- On LPAREN shift to state 70
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 74
-- On LBRACKET shift to state 76
-- On LBRACE shift to state 78
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 91
-- On val_ident shift to state 94
-- On subtractive shift to state 95
-- On simple_pattern shift to state 97
-- On signed_constant shift to state 98
-- On pattern_semi_list shift to state 372
-- On pattern_comma_list shift to state 99
-- On pattern shift to state 145
-- On mod_longident shift to state 104
-- On constr_longident shift to state 107
-- On constant shift to state 109
## Reductions:

State 372:
## Known stack suffix:
## LBRACKET pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI RBRACKET ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On SEMI shift to state 140
-- On opt_semi shift to state 373
## Reductions:
-- On error RBRACKET
--   reduce production opt_semi ->

State 373:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list opt_semi . error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On error shift to state 374
-- On RBRACKET shift to state 375
## Reductions:

State 374:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi error . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error

State 375:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi RBRACKET
## LR(1) items:
simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET

State 376:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_pattern -> LBRACE . lbl_pattern_list opt_semi RBRACE [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACE . lbl_pattern_list opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On lbl_pattern_list shift to state 377
-- On label_longident shift to state 136
## Reductions:

State 377:
## Known stack suffix:
## LBRACE lbl_pattern_list
## LR(1) items:
lbl_pattern_list -> lbl_pattern_list . SEMI label_longident EQUAL pattern [ error SEMI RBRACE ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi RBRACE [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On SEMI shift to state 84
-- On opt_semi shift to state 378
## Reductions:
-- On error RBRACE
--   reduce production opt_semi ->

State 378:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi . RBRACE [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list opt_semi . error [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On error shift to state 379
-- On RBRACE shift to state 380
## Reductions:

State 379:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi error
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi error . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error

State 380:
## Known stack suffix:
## LBRACE lbl_pattern_list opt_semi RBRACE
## LR(1) items:
simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE

State 381:
## Known stack suffix:
## INT
## LR(1) items:
constant -> INT . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> INT

State 382:
## Known stack suffix:
## FLOAT
## LR(1) items:
constant -> FLOAT . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> FLOAT

State 383:
## Known stack suffix:
## CHARVECT
## LR(1) items:
constant -> CHARVECT . [ WITH WHEN UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> CHARVECT

State 384:
## Known stack suffix:
## CHAR
## LR(1) items:
constant -> CHAR . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
simple_pattern -> CHAR . DOTDOT CHAR [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On DOTDOT shift to state 385
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS
--   reduce production constant -> CHAR

State 385:
## Known stack suffix:
## CHAR DOTDOT
## LR(1) items:
simple_pattern -> CHAR DOTDOT . CHAR [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On CHAR shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## CHAR DOTDOT CHAR
## LR(1) items:
simple_pattern -> CHAR DOTDOT CHAR . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> CHAR DOTDOT CHAR

State 387:
## Known stack suffix:
## val_ident
## LR(1) items:
let_binding -> val_ident . fun_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
simple_pattern -> val_ident . [ EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EQUAL shift to state 388
-- On COLON shift to state 755
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On type_constraint shift to state 831
-- On subtractive shift to state 412
-- On simple_pattern shift to state 834
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On fun_binding shift to state 836
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:
-- On COMMA COLONCOLON BAR AS
--   reduce production simple_pattern -> val_ident

State 388:
## Known stack suffix:
## EQUAL
## LR(1) items:
fun_binding -> EQUAL . seq_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 830
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 389:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . BARRBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On BARRBRACKET shift to state 825
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_semi_list shift to state 826
-- On expr_comma_list shift to state 548
-- On expr shift to state 675
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 390:
## Known stack suffix:
## TRY
## LR(1) items:
expr -> TRY . seq_expr FINALLY seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH opt_bar try_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 801
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 391:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RBRACKET shift to state 39
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_semi_list shift to state 797
-- On expr_comma_list shift to state 548
-- On expr shift to state 675
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 392:
## Known stack suffix:
## RAISE
## LR(1) items:
expr -> RAISE . simple_exception_longident [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> RAISE . LPAREN constr_longident simple_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On LPAREN shift to state 393
-- On simple_exception_longident shift to state 795
-- On mod_longident shift to state 796
## Reductions:

State 393:
## Known stack suffix:
## RAISE LPAREN
## LR(1) items:
expr -> RAISE LPAREN . constr_longident simple_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On LPAREN shift to state 36
-- On LBRACKET shift to state 38
-- On FALSE shift to state 40
-- On mod_longident shift to state 41
-- On constr_longident shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## RAISE LPAREN constr_longident
## LR(1) items:
expr -> RAISE LPAREN constr_longident . simple_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 793
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 395:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_expr -> LBRACE . record_expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE . record_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 396
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 453
-- On record_expr shift to state 790
-- On mod_longident shift to state 664
-- On lbl_expr_list shift to state 667
-- On label_longident shift to state 658
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 396:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_longident -> LIDENT . [ EQUAL ]
val_ident -> LIDENT . [ WITH DOT ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production label_longident -> LIDENT
-- On WITH DOT
--   reduce production val_ident -> LIDENT

State 397:
## Known stack suffix:
## CHAR
## LR(1) items:
constant -> CHAR . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> CHAR

State 398:
## Known stack suffix:
## BEGIN
## LR(1) items:
simple_expr -> BEGIN . seq_expr END [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . END [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On END shift to state 786
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 787
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 399:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
simple_expr -> PREFIXOP . simple_expr [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 750
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:

State 400:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On STAR shift to state 63
-- On RPAREN shift to state 71
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 401
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 67
-- On MINUS shift to state 751
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LESS shift to state 73
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On IF shift to state 462
-- On GREATER shift to state 124
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On BARBAR shift to state 127
-- On ASSERT shift to state 531
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 752
-- On operator shift to state 130
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 401:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
operator -> PREFIXOP . [ RPAREN ]
simple_expr -> PREFIXOP . simple_expr [ error UIDENT TRUE STRING STAR SEMI RPAREN PREFIXOP PLUS OR MINUSDOT MINUS LPAREN LIDENT LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 750
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:
-- On RPAREN
--   reduce production operator -> PREFIXOP

State 402:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . BARRBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On BARRBRACKET shift to state 745
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_semi_list shift to state 746
-- On expr_comma_list shift to state 548
-- On expr shift to state 675
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 403:
## Known stack suffix:
## MATCH
## LR(1) items:
expr -> MATCH . seq_expr WITH opt_bar match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 741
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 404:
## Known stack suffix:
## LAZY
## LR(1) items:
expr -> LAZY . simple_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 407
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 405:
## Known stack suffix:
## val_longident
## LR(1) items:
simple_expr -> val_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> val_longident

State 406:
## Known stack suffix:
## val_ident
## LR(1) items:
val_longident -> val_ident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_longident -> val_ident

State 407:
## Known stack suffix:
## LAZY simple_expr
## LR(1) items:
expr -> LAZY simple_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 408
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LAZY simple_expr

State 408:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
simple_expr -> simple_expr DOT . label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 409
-- On LIDENT shift to state 79
-- On LBRACKET shift to state 734
-- On LBRACE shift to state 737
-- On mod_longident shift to state 80
-- On label_longident shift to state 740
## Reductions:

State 409:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 732
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 410:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . rec_flag let_bindings IN seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 411
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 411:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
expr -> LET rec_flag . let_bindings IN seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 387
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 425
-- On mod_longident shift to state 41
-- On let_bindings shift to state 726
-- On let_binding shift to state 731
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 412:
## Known stack suffix:
## subtractive
## LR(1) items:
signed_constant -> subtractive . FLOAT [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
-- On FLOAT shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## subtractive FLOAT
## LR(1) items:
signed_constant -> subtractive FLOAT . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> subtractive FLOAT

State 414:
## Known stack suffix:
## simple_pattern
## LR(1) items:
pattern -> simple_pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> simple_pattern

State 415:
## Known stack suffix:
## signed_constant
## LR(1) items:
simple_pattern -> signed_constant . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> signed_constant

State 416:
## Known stack suffix:
## pattern_comma_list
## LR(1) items:
pattern -> pattern_comma_list . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COMMA shift to state 417
## Reductions:
-- On WHEN MINUSGREATER EQUAL COLONCOLON BAR AS
--   reduce production pattern -> pattern_comma_list

State 417:
## Known stack suffix:
## pattern_comma_list COMMA
## LR(1) items:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 419
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 418:
## Known stack suffix:
## val_ident
## LR(1) items:
simple_pattern -> val_ident . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> val_ident

State 419:
## Known stack suffix:
## pattern_comma_list COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 420
## Reductions:
-- On WHEN MINUSGREATER EQUAL COMMA BAR AS
--   reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 420:
## Known stack suffix:
## pattern COLONCOLON
## LR(1) items:
pattern -> pattern COLONCOLON . pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 421
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 421:
## Known stack suffix:
## pattern COLONCOLON pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern COLONCOLON pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 420
## Reductions:
-- On WHEN MINUSGREATER EQUAL COMMA BAR AS
--   reduce production pattern -> pattern COLONCOLON pattern

State 422:
## Known stack suffix:
## constr_longident
## LR(1) items:
pattern -> constr_longident . pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
simple_pattern -> constr_longident . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 423
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:
-- On WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS
--   reduce production simple_pattern -> constr_longident

State 423:
## Known stack suffix:
## constr_longident pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> constr_longident pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> constr_longident pattern

State 424:
## Known stack suffix:
## constant
## LR(1) items:
signed_constant -> constant . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHARVECT CHAR BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signed_constant -> constant

State 425:
## Known stack suffix:
## pattern
## LR(1) items:
let_binding -> pattern . EQUAL seq_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
pattern -> pattern . AS val_ident [ EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On EQUAL shift to state 426
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
## Reductions:

State 426:
## Known stack suffix:
## pattern EQUAL
## LR(1) items:
let_binding -> pattern EQUAL . seq_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 725
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 427:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . seq_expr THEN expr ELSE expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF . seq_expr THEN expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 720
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 428:
## Known stack suffix:
## FUNCTION
## LR(1) items:
expr -> FUNCTION . opt_bar match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 429
-- On opt_bar shift to state 430
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production opt_bar ->

State 429:
## Known stack suffix:
## BAR
## LR(1) items:
opt_bar -> BAR . [ UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_bar -> BAR

State 430:
## Known stack suffix:
## FUNCTION opt_bar
## LR(1) items:
expr -> FUNCTION opt_bar . match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 431
-- On mod_longident shift to state 41
-- On match_cases shift to state 716
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 431:
## Known stack suffix:
## pattern
## LR(1) items:
match_cases -> pattern . match_action [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
## Transitions:
-- On WHEN shift to state 432
-- On MINUSGREATER shift to state 435
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
-- On match_action shift to state 715
## Reductions:

State 432:
## Known stack suffix:
## WHEN
## LR(1) items:
match_action -> WHEN . seq_expr MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 712
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 433:
## Known stack suffix:
## FUN
## LR(1) items:
expr -> FUN . simple_pattern fun_def [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 434
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 434:
## Known stack suffix:
## FUN simple_pattern
## LR(1) items:
expr -> FUN simple_pattern . fun_def [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHEN shift to state 432
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSGREATER shift to state 435
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 708
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On match_action shift to state 709
-- On fun_def shift to state 711
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 435:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
match_action -> MINUSGREATER . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 707
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 436:
## Known stack suffix:
## FOR
## LR(1) items:
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 437
-- On LIDENT shift to state 51
-- On val_ident shift to state 438
## Reductions:

State 437:
## Known stack suffix:
## LPAREN
## LR(1) items:
val_ident -> LPAREN . operator RPAREN [ WITH WHEN UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 63
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 117
-- On MINUS shift to state 118
-- On LESS shift to state 73
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On operator shift to state 363
## Reductions:

State 438:
## Known stack suffix:
## FOR val_ident
## LR(1) items:
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On EQUAL shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## FOR val_ident EQUAL
## LR(1) items:
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 701
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 440:
## Known stack suffix:
## ASSERT
## LR(1) items:
expr -> ASSERT . simple_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 441
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 441:
## Known stack suffix:
## ASSERT simple_expr
## LR(1) items:
expr -> ASSERT simple_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 408
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> ASSERT simple_expr

State 442:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident . DOT val_ident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 443
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> mod_longident

State 443:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident DOT . val_ident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 43
-- On LPAREN shift to state 437
-- On LIDENT shift to state 51
-- On val_ident shift to state 444
## Reductions:

State 444:
## Known stack suffix:
## mod_longident DOT val_ident
## LR(1) items:
val_longident -> mod_longident DOT val_ident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_longident -> mod_longident DOT val_ident

State 445:
## Known stack suffix:
## constr_longident
## LR(1) items:
simple_expr -> constr_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> constr_longident

State 446:
## Known stack suffix:
## constant
## LR(1) items:
simple_expr -> constant . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> constant

State 447:
## Known stack suffix:
## subtractive
## LR(1) items:
expr -> subtractive . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 700
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 448:
## Known stack suffix:
## simple_expr
## LR(1) items:
expr -> simple_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . simple_expr_list [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT label_longident LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACE expr RBRACE LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On DOT shift to state 449
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr_list shift to state 697
-- On simple_expr shift to state 699
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr

State 449:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
expr -> simple_expr DOT . label_longident LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACE expr RBRACE LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 450
-- On LIDENT shift to state 79
-- On LBRACKET shift to state 681
-- On LBRACE shift to state 687
-- On mod_longident shift to state 80
-- On label_longident shift to state 694
## Reductions:

State 450:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 676
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 451:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RBRACKET shift to state 77
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_semi_list shift to state 669
-- On expr_comma_list shift to state 548
-- On expr shift to state 675
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 452:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_expr -> LBRACE . record_expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE . record_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 396
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 453
-- On record_expr shift to state 661
-- On mod_longident shift to state 664
-- On lbl_expr_list shift to state 667
-- On label_longident shift to state 658
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:

State 453:
## Known stack suffix:
## simple_expr
## LR(1) items:
record_expr -> simple_expr . WITH lbl_expr_list opt_semi [ error RBRACE ]
simple_expr -> simple_expr . DOT label_longident [ WITH DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH DOT ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH DOT ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH DOT ]
## Transitions:
-- On WITH shift to state 454
-- On DOT shift to state 408
## Reductions:

State 454:
## Known stack suffix:
## simple_expr WITH
## LR(1) items:
record_expr -> simple_expr WITH . lbl_expr_list opt_semi [ error RBRACE ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On lbl_expr_list shift to state 455
-- On label_longident shift to state 658
## Reductions:

State 455:
## Known stack suffix:
## simple_expr WITH lbl_expr_list
## LR(1) items:
lbl_expr_list -> lbl_expr_list . SEMI label_longident EQUAL expr [ error SEMI RBRACE ]
record_expr -> simple_expr WITH lbl_expr_list . opt_semi [ error RBRACE ]
## Transitions:
-- On SEMI shift to state 456
-- On opt_semi shift to state 657
## Reductions:
-- On error RBRACE
--   reduce production opt_semi ->

State 456:
## Known stack suffix:
## lbl_expr_list SEMI
## LR(1) items:
lbl_expr_list -> lbl_expr_list SEMI . label_longident EQUAL expr [ error SEMI RBRACE ]
opt_semi -> SEMI . [ error RBRACE ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On label_longident shift to state 457
## Reductions:
-- On error RBRACE
--   reduce production opt_semi -> SEMI

State 457:
## Known stack suffix:
## lbl_expr_list SEMI label_longident
## LR(1) items:
lbl_expr_list -> lbl_expr_list SEMI label_longident . EQUAL expr [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 458
## Reductions:

State 458:
## Known stack suffix:
## lbl_expr_list SEMI label_longident EQUAL
## LR(1) items:
lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL . expr [ error SEMI RBRACE ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 656
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 459:
## Known stack suffix:
## LAZY
## LR(1) items:
expr -> LAZY . simple_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 655
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:

State 460:
## Known stack suffix:
## CHAR
## LR(1) items:
constant -> CHAR . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> CHAR

State 461:
## Known stack suffix:
## BEGIN
## LR(1) items:
simple_expr -> BEGIN . seq_expr END [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . END [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On END shift to state 651
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 652
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 462:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . seq_expr THEN expr ELSE expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF . seq_expr THEN expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 463
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 463:
## Known stack suffix:
## IF seq_expr
## LR(1) items:
expr -> IF seq_expr . THEN expr ELSE expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr . THEN expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On THEN shift to state 464
## Reductions:

State 464:
## Known stack suffix:
## IF seq_expr THEN
## LR(1) items:
expr -> IF seq_expr THEN . expr ELSE expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 648
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 465:
## Known stack suffix:
## FUNCTION
## LR(1) items:
expr -> FUNCTION . opt_bar match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 429
-- On opt_bar shift to state 466
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production opt_bar ->

State 466:
## Known stack suffix:
## FUNCTION opt_bar
## LR(1) items:
expr -> FUNCTION opt_bar . match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 467
-- On mod_longident shift to state 41
-- On match_cases shift to state 644
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 467:
## Known stack suffix:
## pattern
## LR(1) items:
match_cases -> pattern . match_action [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
## Transitions:
-- On WHEN shift to state 468
-- On MINUSGREATER shift to state 473
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
-- On match_action shift to state 643
## Reductions:

State 468:
## Known stack suffix:
## WHEN
## LR(1) items:
match_action -> WHEN . seq_expr MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 469
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 469:
## Known stack suffix:
## WHEN seq_expr
## LR(1) items:
match_action -> WHEN seq_expr . MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 470
## Reductions:

State 470:
## Known stack suffix:
## WHEN seq_expr MINUSGREATER
## LR(1) items:
match_action -> WHEN seq_expr MINUSGREATER . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 636
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 471:
## Known stack suffix:
## FUN
## LR(1) items:
expr -> FUN . simple_pattern fun_def [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 472
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 472:
## Known stack suffix:
## FUN simple_pattern
## LR(1) items:
expr -> FUN simple_pattern . fun_def [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHEN shift to state 468
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSGREATER shift to state 473
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 631
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On match_action shift to state 632
-- On fun_def shift to state 635
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 473:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
match_action -> MINUSGREATER . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 630
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 474:
## Known stack suffix:
## FOR
## LR(1) items:
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 437
-- On LIDENT shift to state 51
-- On val_ident shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## FOR val_ident
## LR(1) items:
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On EQUAL shift to state 476
## Reductions:

State 476:
## Known stack suffix:
## FOR val_ident EQUAL
## LR(1) items:
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 477
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 477:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On TO shift to state 478
-- On DOWNTO shift to state 479
-- On direction_flag shift to state 480
## Reductions:

State 478:
## Known stack suffix:
## TO
## LR(1) items:
direction_flag -> TO . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction_flag -> TO

State 479:
## Known stack suffix:
## DOWNTO
## LR(1) items:
direction_flag -> DOWNTO . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction_flag -> DOWNTO

State 480:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 481
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 481:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 483
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 483:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE

State 485:
## Known stack suffix:
## expr_comma_list
## LR(1) items:
expr -> expr_comma_list . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On COMMA shift to state 486
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr_comma_list

State 486:
## Known stack suffix:
## expr_comma_list COMMA
## LR(1) items:
expr_comma_list -> expr_comma_list COMMA . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 487
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 487:
## Known stack suffix:
## expr_comma_list COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list COMMA expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BAR AND
--   reduce production expr_comma_list -> expr_comma_list COMMA expr

State 488:
## Known stack suffix:
## expr STAR
## LR(1) items:
expr -> expr STAR . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 489
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 489:
## Known stack suffix:
## expr STAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr STAR expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 490
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr STAR expr

State 490:
## Known stack suffix:
## expr INFIXOP4
## LR(1) items:
expr -> expr INFIXOP4 . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 491
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 491:
## Known stack suffix:
## expr INFIXOP4 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP4 expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 490
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP4 expr

State 492:
## Known stack suffix:
## constr_longident
## LR(1) items:
expr -> constr_longident . simple_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> constr_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 493
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> constr_longident

State 493:
## Known stack suffix:
## constr_longident simple_expr
## LR(1) items:
expr -> constr_longident simple_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 408
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> constr_longident simple_expr

State 494:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 495
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 495:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PLUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PLUS expr

State 496:
## Known stack suffix:
## expr INFIXOP3
## LR(1) items:
expr -> expr INFIXOP3 . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 497
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 497:
## Known stack suffix:
## expr INFIXOP3 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP3 expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 490
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP3 expr

State 498:
## Known stack suffix:
## expr OR
## LR(1) items:
expr -> expr OR . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 499
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 499:
## Known stack suffix:
## expr OR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr OR expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BAR AND
--   reduce production expr -> expr OR expr

State 500:
## Known stack suffix:
## expr MINUSDOT
## LR(1) items:
expr -> expr MINUSDOT . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 501
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 501:
## Known stack suffix:
## expr MINUSDOT expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUSDOT expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUSDOT expr

State 502:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 503
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 503:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUS expr

State 504:
## Known stack suffix:
## expr LESS
## LR(1) items:
expr -> expr LESS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 505
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 505:
## Known stack suffix:
## expr LESS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr LESS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr LESS expr

State 506:
## Known stack suffix:
## expr INFIXOP2
## LR(1) items:
expr -> expr INFIXOP2 . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 507
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 507:
## Known stack suffix:
## expr INFIXOP2 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP2 expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP2 expr

State 508:
## Known stack suffix:
## expr INFIXOP1
## LR(1) items:
expr -> expr INFIXOP1 . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 509
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 509:
## Known stack suffix:
## expr INFIXOP1 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP1 expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP1 expr

State 510:
## Known stack suffix:
## expr COLONCOLON
## LR(1) items:
expr -> expr COLONCOLON . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 511
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 511:
## Known stack suffix:
## expr COLONCOLON expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONCOLON expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr COLONCOLON expr

State 512:
## Known stack suffix:
## expr INFIXOP0
## LR(1) items:
expr -> expr INFIXOP0 . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 513
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 513:
## Known stack suffix:
## expr INFIXOP0 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP0 expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP0 expr

State 514:
## Known stack suffix:
## expr GREATER
## LR(1) items:
expr -> expr GREATER . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 515
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 515:
## Known stack suffix:
## expr GREATER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr GREATER expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr GREATER expr

State 516:
## Known stack suffix:
## expr EQUAL
## LR(1) items:
expr -> expr EQUAL . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 517
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 517:
## Known stack suffix:
## expr EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr EQUAL expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On COLONCOLON shift to state 510
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr EQUAL expr

State 518:
## Known stack suffix:
## expr BARBAR
## LR(1) items:
expr -> expr BARBAR . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 519
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 519:
## Known stack suffix:
## expr BARBAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr BARBAR expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BAR AND
--   reduce production expr -> expr BARBAR expr

State 520:
## Known stack suffix:
## expr AMPERSAND
## LR(1) items:
expr -> expr AMPERSAND . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 521
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 521:
## Known stack suffix:
## expr AMPERSAND expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERSAND expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND
--   reduce production expr -> expr AMPERSAND expr

State 522:
## Known stack suffix:
## expr AMPERAMPER
## LR(1) items:
expr -> expr AMPERAMPER . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 523
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 523:
## Known stack suffix:
## expr AMPERAMPER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERAMPER expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OR OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BARBAR BAR AND
--   reduce production expr -> expr AMPERAMPER expr

State 524:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On SEMI shift to state 525
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production seq_expr -> expr

State 525:
## Known stack suffix:
## expr SEMI
## LR(1) items:
seq_expr -> expr SEMI . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 526
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER LEVEL LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production seq_expr -> expr SEMI

State 526:
## Known stack suffix:
## expr SEMI seq_expr
## LR(1) items:
seq_expr -> expr SEMI seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seq_expr -> expr SEMI seq_expr

State 527:
## Known stack suffix:
## expr COMMA
## LR(1) items:
expr_comma_list -> expr COMMA . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 528
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 528:
## Known stack suffix:
## expr COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL BAR AND
--   reduce production expr_comma_list -> expr COMMA expr

State 529:
## Known stack suffix:
## expr COLONEQUAL
## LR(1) items:
expr -> expr COLONEQUAL . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 530
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 530:
## Known stack suffix:
## expr COLONEQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONEQUAL expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> expr COLONEQUAL expr

State 531:
## Known stack suffix:
## ASSERT
## LR(1) items:
expr -> ASSERT . simple_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 534
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:

State 532:
## Known stack suffix:
## val_longident
## LR(1) items:
simple_expr -> val_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> val_longident

State 533:
## Known stack suffix:
## val_ident
## LR(1) items:
val_longident -> val_ident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_longident -> val_ident

State 534:
## Known stack suffix:
## ASSERT simple_expr
## LR(1) items:
expr -> ASSERT simple_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 535
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> ASSERT simple_expr

State 535:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
simple_expr -> simple_expr DOT . label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 536
-- On LIDENT shift to state 597
-- On LBRACKET shift to state 623
-- On LBRACE shift to state 626
-- On mod_longident shift to state 611
-- On label_longident shift to state 629
## Reductions:

State 536:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 621
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 537:
## Known stack suffix:
## subtractive
## LR(1) items:
expr -> subtractive . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 620
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 538:
## Known stack suffix:
## simple_expr
## LR(1) items:
expr -> simple_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . simple_expr_list [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT label_longident LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACE expr RBRACE LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On DOT shift to state 539
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr_list shift to state 617
-- On simple_expr shift to state 619
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr

State 539:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
expr -> simple_expr DOT . label_longident LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACE expr RBRACE LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 540
-- On LIDENT shift to state 597
-- On LBRACKET shift to state 598
-- On LBRACE shift to state 604
-- On mod_longident shift to state 611
-- On label_longident shift to state 614
## Reductions:

State 540:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 541
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 541:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 542
-- On RPAREN shift to state 543
## Reductions:

State 542:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr error
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error

State 543:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 544
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 544:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 589
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 545:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident . DOT val_ident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 546
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> mod_longident

State 546:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident DOT . val_ident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 106
-- On LPAREN shift to state 116
-- On LIDENT shift to state 72
-- On val_ident shift to state 547
## Reductions:

State 547:
## Known stack suffix:
## mod_longident DOT val_ident
## LR(1) items:
val_longident -> mod_longident DOT val_ident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_longident -> mod_longident DOT val_ident

State 548:
## Known stack suffix:
## expr_comma_list
## LR(1) items:
expr -> expr_comma_list . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On COMMA shift to state 549
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr_comma_list

State 549:
## Known stack suffix:
## expr_comma_list COMMA
## LR(1) items:
expr_comma_list -> expr_comma_list COMMA . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 550
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 550:
## Known stack suffix:
## expr_comma_list COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list COMMA expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BAR AND
--   reduce production expr_comma_list -> expr_comma_list COMMA expr

State 551:
## Known stack suffix:
## expr STAR
## LR(1) items:
expr -> expr STAR . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 552
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 552:
## Known stack suffix:
## expr STAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr STAR expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 553
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr STAR expr

State 553:
## Known stack suffix:
## expr INFIXOP4
## LR(1) items:
expr -> expr INFIXOP4 . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 554
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 554:
## Known stack suffix:
## expr INFIXOP4 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP4 expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 553
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP4 expr

State 555:
## Known stack suffix:
## constr_longident
## LR(1) items:
expr -> constr_longident . simple_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> constr_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 556
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> constr_longident

State 556:
## Known stack suffix:
## constr_longident simple_expr
## LR(1) items:
expr -> constr_longident simple_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 535
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> constr_longident simple_expr

State 557:
## Known stack suffix:
## constr_longident
## LR(1) items:
simple_expr -> constr_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> constr_longident

State 558:
## Known stack suffix:
## constant
## LR(1) items:
simple_expr -> constant . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> constant

State 559:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 560
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 560:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PLUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PLUS expr

State 561:
## Known stack suffix:
## expr INFIXOP3
## LR(1) items:
expr -> expr INFIXOP3 . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 562
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 562:
## Known stack suffix:
## expr INFIXOP3 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP3 expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 553
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP3 expr

State 563:
## Known stack suffix:
## expr OR
## LR(1) items:
expr -> expr OR . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 564
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 564:
## Known stack suffix:
## expr OR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr OR expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BAR AND
--   reduce production expr -> expr OR expr

State 565:
## Known stack suffix:
## expr MINUSDOT
## LR(1) items:
expr -> expr MINUSDOT . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 566
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 566:
## Known stack suffix:
## expr MINUSDOT expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUSDOT expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUSDOT expr

State 567:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 568
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 568:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUS expr

State 569:
## Known stack suffix:
## expr LESS
## LR(1) items:
expr -> expr LESS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 570
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 570:
## Known stack suffix:
## expr LESS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr LESS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr LESS expr

State 571:
## Known stack suffix:
## expr INFIXOP2
## LR(1) items:
expr -> expr INFIXOP2 . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 572
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 572:
## Known stack suffix:
## expr INFIXOP2 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP2 expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP2 expr

State 573:
## Known stack suffix:
## expr INFIXOP1
## LR(1) items:
expr -> expr INFIXOP1 . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 574
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 574:
## Known stack suffix:
## expr INFIXOP1 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP1 expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP1 expr

State 575:
## Known stack suffix:
## expr COLONCOLON
## LR(1) items:
expr -> expr COLONCOLON . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 576
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 576:
## Known stack suffix:
## expr COLONCOLON expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONCOLON expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr COLONCOLON expr

State 577:
## Known stack suffix:
## expr INFIXOP0
## LR(1) items:
expr -> expr INFIXOP0 . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 578
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 578:
## Known stack suffix:
## expr INFIXOP0 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP0 expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP0 expr

State 579:
## Known stack suffix:
## expr GREATER
## LR(1) items:
expr -> expr GREATER . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 580
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 580:
## Known stack suffix:
## expr GREATER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr GREATER expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr GREATER expr

State 581:
## Known stack suffix:
## expr EQUAL
## LR(1) items:
expr -> expr EQUAL . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 582
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 582:
## Known stack suffix:
## expr EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr EQUAL expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On COLONCOLON shift to state 575
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET LESS INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr EQUAL expr

State 583:
## Known stack suffix:
## expr BARBAR
## LR(1) items:
expr -> expr BARBAR . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 584
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 584:
## Known stack suffix:
## expr BARBAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr BARBAR expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BAR AND
--   reduce production expr -> expr BARBAR expr

State 585:
## Known stack suffix:
## expr AMPERSAND
## LR(1) items:
expr -> expr AMPERSAND . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 586
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 586:
## Known stack suffix:
## expr AMPERSAND expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERSAND expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND
--   reduce production expr -> expr AMPERSAND expr

State 587:
## Known stack suffix:
## expr AMPERAMPER
## LR(1) items:
expr -> expr AMPERAMPER . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 588
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 588:
## Known stack suffix:
## expr AMPERAMPER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERAMPER expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OR OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BARBAR BAR AND
--   reduce production expr -> expr AMPERAMPER expr

State 589:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr

State 590:
## Known stack suffix:
## expr COMMA
## LR(1) items:
expr_comma_list -> expr COMMA . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 591
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 591:
## Known stack suffix:
## expr COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COMMA COLONEQUAL COLON BARRBRACKET BAR AND
--   reduce production expr_comma_list -> expr COMMA expr

State 592:
## Known stack suffix:
## expr COLONEQUAL
## LR(1) items:
expr -> expr COLONEQUAL . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 593
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 593:
## Known stack suffix:
## expr COLONEQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONEQUAL expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> expr COLONEQUAL expr

State 594:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On SEMI shift to state 595
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production seq_expr -> expr

State 595:
## Known stack suffix:
## expr SEMI
## LR(1) items:
seq_expr -> expr SEMI . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 596
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE LEVEL LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production seq_expr -> expr SEMI

State 596:
## Known stack suffix:
## expr SEMI seq_expr
## LR(1) items:
seq_expr -> expr SEMI seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seq_expr -> expr SEMI seq_expr

State 597:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_longident -> LIDENT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_longident -> LIDENT

State 598:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 599
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 599:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 600
-- On RBRACKET shift to state 601
## Reductions:

State 600:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr error
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error

State 601:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 602
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 602:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 603
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 603:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr

State 604:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE . expr RBRACE LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 605
-- On expr shift to state 607
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 605:
## Known stack suffix:
## simple_expr DOT LBRACE expr_comma_list
## LR(1) items:
expr -> expr_comma_list . [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr_comma_list . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 606
-- On COMMA shift to state 549
## Reductions:
-- On STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER
--   reduce production expr -> expr_comma_list

State 606:
## Known stack suffix:
## simple_expr DOT LBRACE expr_comma_list error
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE expr_comma_list error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACE expr_comma_list error

State 607:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr . RBRACE LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On RBRACE shift to state 608
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:

State 608:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE . LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 609
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 609:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 610
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 610:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr

State 611:
## Known stack suffix:
## mod_longident
## LR(1) items:
label_longident -> mod_longident . DOT LIDENT [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
## Transitions:
-- On DOT shift to state 612
## Reductions:

State 612:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
label_longident -> mod_longident DOT . LIDENT [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
## Transitions:
-- On UIDENT shift to state 43
-- On LIDENT shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
label_longident -> mod_longident DOT LIDENT . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESSMINUS LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_longident -> mod_longident DOT LIDENT

State 614:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
expr -> simple_expr DOT label_longident . LESSMINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT label_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 615
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT label_longident

State 615:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS
## LR(1) items:
expr -> simple_expr DOT label_longident LESSMINUS . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 616
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 616:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT label_longident LESSMINUS expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT label_longident LESSMINUS expr

State 617:
## Known stack suffix:
## simple_expr simple_expr_list
## LR(1) items:
expr -> simple_expr simple_expr_list . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list . simple_expr [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On PREFIXOP shift to state 399
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On INT shift to state 87
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On simple_expr shift to state 618
-- On mod_longident shift to state 545
-- On constr_longident shift to state 557
-- On constant shift to state 558
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr simple_expr_list

State 618:
## Known stack suffix:
## simple_expr_list simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list simple_expr . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 535
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr_list -> simple_expr_list simple_expr

State 619:
## Known stack suffix:
## simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 535
## Reductions:
-- On error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr_list -> simple_expr

State 620:
## Known stack suffix:
## subtractive expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> subtractive expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> subtractive expr

State 621:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 542
-- On RPAREN shift to state 622
## Reductions:

State 622:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 623:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 624
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 624:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 600
-- On RBRACKET shift to state 625
## Reductions:

State 625:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 626:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 605
-- On expr shift to state 627
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 627:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On RBRACE shift to state 628
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:

State 628:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 629:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
simple_expr -> simple_expr DOT label_longident . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT label_longident

State 630:
## Known stack suffix:
## MINUSGREATER seq_expr
## LR(1) items:
match_action -> MINUSGREATER seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_action -> MINUSGREATER seq_expr

State 631:
## Known stack suffix:
## simple_pattern
## LR(1) items:
fun_def -> simple_pattern . fun_def [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHEN shift to state 468
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSGREATER shift to state 473
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 631
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On match_action shift to state 632
-- On fun_def shift to state 633
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 632:
## Known stack suffix:
## match_action
## LR(1) items:
fun_def -> match_action . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_def -> match_action

State 633:
## Known stack suffix:
## simple_pattern fun_def
## LR(1) items:
fun_def -> simple_pattern fun_def . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_def -> simple_pattern fun_def

State 634:
## Known stack suffix:
## constr_longident
## LR(1) items:
simple_pattern -> constr_longident . [ WHEN UNDERSCORE UIDENT TRUE STRING MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE EQUAL COLON CHARVECT CHAR BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> constr_longident

State 635:
## Known stack suffix:
## FUN simple_pattern fun_def
## LR(1) items:
expr -> FUN simple_pattern fun_def . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> FUN simple_pattern fun_def

State 636:
## Known stack suffix:
## WHEN seq_expr MINUSGREATER seq_expr
## LR(1) items:
match_action -> WHEN seq_expr MINUSGREATER seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr

State 637:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
pattern_comma_list -> pattern COMMA . pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 638
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 638:
## Known stack suffix:
## pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 420
## Reductions:
-- On WHEN MINUSGREATER EQUAL COMMA BAR AS
--   reduce production pattern_comma_list -> pattern COMMA pattern

State 639:
## Known stack suffix:
## pattern BAR
## LR(1) items:
pattern -> pattern BAR . pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 640
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 640:
## Known stack suffix:
## pattern BAR pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern BAR pattern . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
## Reductions:
-- On WHEN MINUSGREATER EQUAL BAR AS
--   reduce production pattern -> pattern BAR pattern

State 641:
## Known stack suffix:
## pattern AS
## LR(1) items:
pattern -> pattern AS . val_ident [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LPAREN shift to state 437
-- On LIDENT shift to state 51
-- On val_ident shift to state 642
## Reductions:

State 642:
## Known stack suffix:
## pattern AS val_ident
## LR(1) items:
pattern -> pattern AS val_ident . [ WHEN MINUSGREATER EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> pattern AS val_ident

State 643:
## Known stack suffix:
## pattern match_action
## LR(1) items:
match_cases -> pattern match_action . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_cases -> pattern match_action

State 644:
## Known stack suffix:
## FUNCTION opt_bar match_cases
## LR(1) items:
expr -> FUNCTION opt_bar match_cases . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 645
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FUNCTION opt_bar match_cases

State 645:
## Known stack suffix:
## match_cases BAR
## LR(1) items:
match_cases -> match_cases BAR . pattern match_action [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 646
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 646:
## Known stack suffix:
## match_cases BAR pattern
## LR(1) items:
match_cases -> match_cases BAR pattern . match_action [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
## Transitions:
-- On WHEN shift to state 468
-- On MINUSGREATER shift to state 473
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
-- On match_action shift to state 647
## Reductions:

State 647:
## Known stack suffix:
## match_cases BAR pattern match_action
## LR(1) items:
match_cases -> match_cases BAR pattern match_action . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_cases -> match_cases BAR pattern match_action

State 648:
## Known stack suffix:
## IF seq_expr THEN expr
## LR(1) items:
expr -> IF seq_expr THEN expr . ELSE expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On ELSE shift to state 649
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END COLON BARRBRACKET BAR AND
--   reduce production expr -> IF seq_expr THEN expr

State 649:
## Known stack suffix:
## IF seq_expr THEN expr ELSE
## LR(1) items:
expr -> IF seq_expr THEN expr ELSE . expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 650
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 650:
## Known stack suffix:
## IF seq_expr THEN expr ELSE expr
## LR(1) items:
expr -> IF seq_expr THEN expr ELSE expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END ELSE COLON BARRBRACKET BAR AND
--   reduce production expr -> IF seq_expr THEN expr ELSE expr

State 651:
## Known stack suffix:
## BEGIN END
## LR(1) items:
simple_expr -> BEGIN END . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN END

State 652:
## Known stack suffix:
## BEGIN seq_expr
## LR(1) items:
simple_expr -> BEGIN seq_expr . END [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 653
-- On END shift to state 654
## Reductions:

State 653:
## Known stack suffix:
## BEGIN seq_expr error
## LR(1) items:
simple_expr -> BEGIN seq_expr error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN seq_expr error

State 654:
## Known stack suffix:
## BEGIN seq_expr END
## LR(1) items:
simple_expr -> BEGIN seq_expr END . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN seq_expr END

State 655:
## Known stack suffix:
## LAZY simple_expr
## LR(1) items:
expr -> LAZY simple_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 535
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LAZY simple_expr

State 656:
## Known stack suffix:
## lbl_expr_list SEMI label_longident EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr . [ error SEMI RBRACE ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error SEMI RBRACE
--   reduce production lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr

State 657:
## Known stack suffix:
## simple_expr WITH lbl_expr_list opt_semi
## LR(1) items:
record_expr -> simple_expr WITH lbl_expr_list opt_semi . [ error RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_expr -> simple_expr WITH lbl_expr_list opt_semi

State 658:
## Known stack suffix:
## label_longident
## LR(1) items:
lbl_expr_list -> label_longident . EQUAL expr [ error SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## label_longident EQUAL
## LR(1) items:
lbl_expr_list -> label_longident EQUAL . expr [ error SEMI RBRACE ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 660
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 660:
## Known stack suffix:
## label_longident EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR SEMI RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
lbl_expr_list -> label_longident EQUAL expr . [ error SEMI RBRACE ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error SEMI RBRACE
--   reduce production lbl_expr_list -> label_longident EQUAL expr

State 661:
## Known stack suffix:
## LBRACE record_expr
## LR(1) items:
simple_expr -> LBRACE record_expr . RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE record_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 662
-- On RBRACE shift to state 663
## Reductions:

State 662:
## Known stack suffix:
## LBRACE record_expr error
## LR(1) items:
simple_expr -> LBRACE record_expr error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACE record_expr error

State 663:
## Known stack suffix:
## LBRACE record_expr RBRACE
## LR(1) items:
simple_expr -> LBRACE record_expr RBRACE . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACE record_expr RBRACE

State 664:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WITH DOT ]
label_longident -> mod_longident . DOT LIDENT [ EQUAL ]
mod_longident -> mod_longident . DOT UIDENT [ WITH DOT ]
val_longident -> mod_longident . DOT val_ident [ WITH DOT ]
## Transitions:
-- On DOT shift to state 665
## Reductions:
-- On WITH
--   reduce production constr_longident -> mod_longident

State 665:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
label_longident -> mod_longident DOT . LIDENT [ EQUAL ]
mod_longident -> mod_longident DOT . UIDENT [ WITH DOT ]
val_longident -> mod_longident DOT . val_ident [ WITH DOT ]
## Transitions:
-- On UIDENT shift to state 43
-- On LPAREN shift to state 437
-- On LIDENT shift to state 666
-- On val_ident shift to state 444
## Reductions:

State 666:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
label_longident -> mod_longident DOT LIDENT . [ EQUAL ]
val_ident -> LIDENT . [ WITH DOT ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production label_longident -> mod_longident DOT LIDENT
-- On WITH DOT
--   reduce production val_ident -> LIDENT

State 667:
## Known stack suffix:
## lbl_expr_list
## LR(1) items:
lbl_expr_list -> lbl_expr_list . SEMI label_longident EQUAL expr [ error SEMI RBRACE ]
record_expr -> lbl_expr_list . opt_semi [ error RBRACE ]
## Transitions:
-- On SEMI shift to state 456
-- On opt_semi shift to state 668
## Reductions:
-- On error RBRACE
--   reduce production opt_semi ->

State 668:
## Known stack suffix:
## lbl_expr_list opt_semi
## LR(1) items:
record_expr -> lbl_expr_list opt_semi . [ error RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_expr -> lbl_expr_list opt_semi

State 669:
## Known stack suffix:
## LBRACKET expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI RBRACKET ]
simple_expr -> LBRACKET expr_semi_list . opt_semi RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list . opt_semi error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 670
-- On opt_semi shift to state 672
## Reductions:
-- On error RBRACKET
--   reduce production opt_semi ->

State 670:
## Known stack suffix:
## expr_semi_list SEMI
## LR(1) items:
expr_semi_list -> expr_semi_list SEMI . expr [ error SEMI RBRACKET BARRBRACKET ]
opt_semi -> SEMI . [ error RBRACKET BARRBRACKET ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 671
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:
-- On error RBRACKET BARRBRACKET
--   reduce production opt_semi -> SEMI

State 671:
## Known stack suffix:
## expr_semi_list SEMI expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr_semi_list SEMI expr . [ error SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error SEMI RBRACKET BARRBRACKET
--   reduce production expr_semi_list -> expr_semi_list SEMI expr

State 672:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi . RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list opt_semi . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 673
-- On RBRACKET shift to state 674
## Reductions:

State 673:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi error
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error

State 674:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi RBRACKET
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET

State 675:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR SEMI RBRACKET PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr . [ error SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On STAR shift to state 551
-- On PLUS shift to state 559
-- On OR shift to state 563
-- On MINUSDOT shift to state 565
-- On MINUS shift to state 567
-- On LESS shift to state 569
-- On INFIXOP4 shift to state 553
-- On INFIXOP3 shift to state 561
-- On INFIXOP2 shift to state 571
-- On INFIXOP1 shift to state 573
-- On INFIXOP0 shift to state 577
-- On GREATER shift to state 579
-- On EQUAL shift to state 581
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 592
-- On COLONCOLON shift to state 575
-- On BARBAR shift to state 583
-- On AMPERSAND shift to state 585
-- On AMPERAMPER shift to state 587
## Reductions:
-- On error SEMI RBRACKET BARRBRACKET
--   reduce production expr_semi_list -> expr

State 676:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 677
-- On RPAREN shift to state 678
## Reductions:

State 677:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr error
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error

State 678:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 679
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 679:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 680
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 680:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr

State 681:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 682
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 682:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 683
-- On RBRACKET shift to state 684
## Reductions:

State 683:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr error
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error

State 684:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 685
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 685:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 686
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 686:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr

State 687:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE . expr RBRACE LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 688
-- On expr shift to state 690
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 688:
## Known stack suffix:
## simple_expr DOT LBRACE expr_comma_list
## LR(1) items:
expr -> expr_comma_list . [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr_comma_list . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 689
-- On COMMA shift to state 549
## Reductions:
-- On STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER
--   reduce production expr -> expr_comma_list

State 689:
## Known stack suffix:
## simple_expr DOT LBRACE expr_comma_list error
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE expr_comma_list error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACE expr_comma_list error

State 690:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr . RBRACE LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On RBRACE shift to state 691
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:

State 691:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE . LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 692
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 692:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 693
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 693:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr

State 694:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
expr -> simple_expr DOT label_longident . LESSMINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT label_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 695
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT label_longident

State 695:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS
## LR(1) items:
expr -> simple_expr DOT label_longident LESSMINUS . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 696
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 696:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT label_longident LESSMINUS expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> simple_expr DOT label_longident LESSMINUS expr

State 697:
## Known stack suffix:
## simple_expr simple_expr_list
## LR(1) items:
expr -> simple_expr simple_expr_list . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list . simple_expr [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On PREFIXOP shift to state 45
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On simple_expr shift to state 698
-- On mod_longident shift to state 442
-- On constr_longident shift to state 445
-- On constant shift to state 446
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr simple_expr_list

State 698:
## Known stack suffix:
## simple_expr_list simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list simple_expr . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 408
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr_list -> simple_expr_list simple_expr

State 699:
## Known stack suffix:
## simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 408
## Reductions:
-- On WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr_list -> simple_expr

State 700:
## Known stack suffix:
## subtractive expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> subtractive expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> subtractive expr

State 701:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On TO shift to state 478
-- On DOWNTO shift to state 479
-- On direction_flag shift to state 702
## Reductions:

State 702:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 703
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 703:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 704
## Reductions:

State 704:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 705
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 705:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 706
## Reductions:

State 706:
## Known stack suffix:
## FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
## LR(1) items:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE

State 707:
## Known stack suffix:
## MINUSGREATER seq_expr
## LR(1) items:
match_action -> MINUSGREATER seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_action -> MINUSGREATER seq_expr

State 708:
## Known stack suffix:
## simple_pattern
## LR(1) items:
fun_def -> simple_pattern . fun_def [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHEN shift to state 432
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSGREATER shift to state 435
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 708
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On match_action shift to state 709
-- On fun_def shift to state 710
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 709:
## Known stack suffix:
## match_action
## LR(1) items:
fun_def -> match_action . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_def -> match_action

State 710:
## Known stack suffix:
## simple_pattern fun_def
## LR(1) items:
fun_def -> simple_pattern fun_def . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_def -> simple_pattern fun_def

State 711:
## Known stack suffix:
## FUN simple_pattern fun_def
## LR(1) items:
expr -> FUN simple_pattern fun_def . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> FUN simple_pattern fun_def

State 712:
## Known stack suffix:
## WHEN seq_expr
## LR(1) items:
match_action -> WHEN seq_expr . MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 713
## Reductions:

State 713:
## Known stack suffix:
## WHEN seq_expr MINUSGREATER
## LR(1) items:
match_action -> WHEN seq_expr MINUSGREATER . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 714
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 714:
## Known stack suffix:
## WHEN seq_expr MINUSGREATER seq_expr
## LR(1) items:
match_action -> WHEN seq_expr MINUSGREATER seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr

State 715:
## Known stack suffix:
## pattern match_action
## LR(1) items:
match_cases -> pattern match_action . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_cases -> pattern match_action

State 716:
## Known stack suffix:
## FUNCTION opt_bar match_cases
## LR(1) items:
expr -> FUNCTION opt_bar match_cases . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 717
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FUNCTION opt_bar match_cases

State 717:
## Known stack suffix:
## match_cases BAR
## LR(1) items:
match_cases -> match_cases BAR . pattern match_action [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 718
-- On mod_longident shift to state 41
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 718:
## Known stack suffix:
## match_cases BAR pattern
## LR(1) items:
match_cases -> match_cases BAR pattern . match_action [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
## Transitions:
-- On WHEN shift to state 432
-- On MINUSGREATER shift to state 435
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
-- On match_action shift to state 719
## Reductions:

State 719:
## Known stack suffix:
## match_cases BAR pattern match_action
## LR(1) items:
match_cases -> match_cases BAR pattern match_action . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_cases -> match_cases BAR pattern match_action

State 720:
## Known stack suffix:
## IF seq_expr
## LR(1) items:
expr -> IF seq_expr . THEN expr ELSE expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr . THEN expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On THEN shift to state 721
## Reductions:

State 721:
## Known stack suffix:
## IF seq_expr THEN
## LR(1) items:
expr -> IF seq_expr THEN . expr ELSE expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 722
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 722:
## Known stack suffix:
## IF seq_expr THEN expr
## LR(1) items:
expr -> IF seq_expr THEN expr . ELSE expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On ELSE shift to state 723
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF DOWNTO DONE DO BAR AND
--   reduce production expr -> IF seq_expr THEN expr

State 723:
## Known stack suffix:
## IF seq_expr THEN expr ELSE
## LR(1) items:
expr -> IF seq_expr THEN expr ELSE . expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 724
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 724:
## Known stack suffix:
## IF seq_expr THEN expr ELSE expr
## LR(1) items:
expr -> IF seq_expr THEN expr ELSE expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 527
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:
-- On WITH TYPE TO THEN SEMISEMI SEMI RBRACE PROPAGATE OPEN MODULE MINUSGREATER LEVEL LET INCLUDE IN FINALLY EXTERNAL EXCEPTION EOF ELSE DOWNTO DONE DO BAR AND
--   reduce production expr -> IF seq_expr THEN expr ELSE expr

State 725:
## Known stack suffix:
## pattern EQUAL seq_expr
## LR(1) items:
let_binding -> pattern EQUAL seq_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_binding -> pattern EQUAL seq_expr

State 726:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
expr -> LET rec_flag let_bindings . IN seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ IN AND ]
## Transitions:
-- On IN shift to state 727
-- On AND shift to state 729
## Reductions:

State 727:
## Known stack suffix:
## LET rec_flag let_bindings IN
## LR(1) items:
expr -> LET rec_flag let_bindings IN . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 728
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 728:
## Known stack suffix:
## LET rec_flag let_bindings IN seq_expr
## LR(1) items:
expr -> LET rec_flag let_bindings IN seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LET rec_flag let_bindings IN seq_expr

State 729:
## Known stack suffix:
## let_bindings AND
## LR(1) items:
let_bindings -> let_bindings AND . let_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 387
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 425
-- On mod_longident shift to state 41
-- On let_binding shift to state 730
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 730:
## Known stack suffix:
## let_bindings AND let_binding
## LR(1) items:
let_bindings -> let_bindings AND let_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_bindings -> let_bindings AND let_binding

State 731:
## Known stack suffix:
## let_binding
## LR(1) items:
let_bindings -> let_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_bindings -> let_binding

State 732:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 677
-- On RPAREN shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 734:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 735
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 735:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 683
-- On RBRACKET shift to state 736
## Reductions:

State 736:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 737:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 688
-- On expr shift to state 738
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 738:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error STAR RBRACE PLUS OR MINUSDOT MINUS LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 488
-- On RBRACE shift to state 739
-- On PLUS shift to state 494
-- On OR shift to state 498
-- On MINUSDOT shift to state 500
-- On MINUS shift to state 502
-- On LESS shift to state 504
-- On INFIXOP4 shift to state 490
-- On INFIXOP3 shift to state 496
-- On INFIXOP2 shift to state 506
-- On INFIXOP1 shift to state 508
-- On INFIXOP0 shift to state 512
-- On GREATER shift to state 514
-- On EQUAL shift to state 516
-- On COMMA shift to state 590
-- On COLONEQUAL shift to state 529
-- On COLONCOLON shift to state 510
-- On BARBAR shift to state 518
-- On AMPERSAND shift to state 520
-- On AMPERAMPER shift to state 522
## Reductions:

State 739:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 740:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
simple_expr -> simple_expr DOT label_longident . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> simple_expr DOT label_longident

State 741:
## Known stack suffix:
## MATCH seq_expr
## LR(1) items:
expr -> MATCH seq_expr . WITH opt_bar match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 742
## Reductions:

State 742:
## Known stack suffix:
## MATCH seq_expr WITH
## LR(1) items:
expr -> MATCH seq_expr WITH . opt_bar match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 429
-- On opt_bar shift to state 743
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production opt_bar ->

State 743:
## Known stack suffix:
## MATCH seq_expr WITH opt_bar
## LR(1) items:
expr -> MATCH seq_expr WITH opt_bar . match_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 467
-- On mod_longident shift to state 41
-- On match_cases shift to state 744
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 744:
## Known stack suffix:
## MATCH seq_expr WITH opt_bar match_cases
## LR(1) items:
expr -> MATCH seq_expr WITH opt_bar match_cases . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 645
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> MATCH seq_expr WITH opt_bar match_cases

State 745:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR BARRBRACKET . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR BARRBRACKET

State 746:
## Known stack suffix:
## LBRACKETBAR expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI BARRBRACKET ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 670
-- On opt_semi shift to state 747
## Reductions:
-- On error BARRBRACKET
--   reduce production opt_semi ->

State 747:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 748
-- On BARRBRACKET shift to state 749
## Reductions:

State 748:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi error
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error

State 749:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 750:
## Known stack suffix:
## PREFIXOP simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> PREFIXOP simple_expr . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> PREFIXOP simple_expr

State 751:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
subtractive -> MINUS . [ WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUS
-- On WHILE UIDENT TRY TRUE STRING RAISE PREFIXOP MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHARVECT CHAR BEGIN ASSERT
--   reduce production subtractive -> MINUS

State 752:
## Known stack suffix:
## LPAREN seq_expr
## LR(1) items:
simple_expr -> LPAREN seq_expr . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . error [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 753
-- On RPAREN shift to state 754
-- On COLON shift to state 755
-- On type_constraint shift to state 784
## Reductions:

State 753:
## Known stack suffix:
## LPAREN seq_expr error
## LR(1) items:
simple_expr -> LPAREN seq_expr error . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr error

State 754:
## Known stack suffix:
## LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr RPAREN . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr RPAREN

State 755:
## Known stack suffix:
## COLON
## LR(1) items:
type_constraint -> COLON . core_type_scheme [ RPAREN EQUAL ]
type_constraint -> COLON . error [ RPAREN EQUAL ]
## Transitions:
-- On error shift to state 756
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 783
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 756:
## Known stack suffix:
## COLON error
## LR(1) items:
type_constraint -> COLON error . [ RPAREN EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_constraint -> COLON error

State 757:
## Known stack suffix:
## extcore_type
## LR(1) items:
core_type_scheme -> extcore_type . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
core_type_scheme -> extcore_type . WITH core_type_constraints_list [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On WITH shift to state 758
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production core_type_scheme -> extcore_type

State 758:
## Known stack suffix:
## extcore_type WITH
## LR(1) items:
core_type_scheme -> extcore_type WITH . core_type_constraints_list [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 759
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 773
-- On exception_longident shift to state 262
-- On core_type_skeleton shift to state 776
-- On core_type_row_bounds shift to state 235
-- On core_type_constraints_list shift to state 779
-- On core_type_constraint shift to state 782
-- On core_type_bounds shift to state 236
## Reductions:

State 759:
## Known stack suffix:
## left_hand_side
## LR(1) items:
core_type_constraint -> left_hand_side . LESS right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On LESS shift to state 760
## Reductions:

State 760:
## Known stack suffix:
## left_hand_side LESS
## LR(1) items:
core_type_constraint -> left_hand_side LESS . right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LEVEL shift to state 761
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On right_hand_side shift to state 772
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 766
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 761:
## Known stack suffix:
## LEVEL
## LR(1) items:
right_hand_side -> LEVEL . extcore_type [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL . TILDE extcore_type [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL . extcore_type COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL . TILDE extcore_type COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On TILDE shift to state 762
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 769
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 762:
## Known stack suffix:
## LEVEL TILDE
## LR(1) items:
right_hand_side -> LEVEL TILDE . extcore_type [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL TILDE . extcore_type COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 763
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 763:
## Known stack suffix:
## LEVEL TILDE extcore_type
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL TILDE extcore_type . COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On COMMA shift to state 764
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production right_hand_side -> LEVEL TILDE extcore_type

State 764:
## Known stack suffix:
## LEVEL TILDE extcore_type COMMA
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type COMMA . right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LEVEL shift to state 761
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On right_hand_side shift to state 765
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 766
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 765:
## Known stack suffix:
## LEVEL TILDE extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> LEVEL TILDE extcore_type COMMA right_hand_side . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> LEVEL TILDE extcore_type COMMA right_hand_side

State 766:
## Known stack suffix:
## extcore_type
## LR(1) items:
right_hand_side -> extcore_type . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> extcore_type . COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On COMMA shift to state 767
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production right_hand_side -> extcore_type

State 767:
## Known stack suffix:
## extcore_type COMMA
## LR(1) items:
right_hand_side -> extcore_type COMMA . right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LEVEL shift to state 761
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On right_hand_side shift to state 768
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 766
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 768:
## Known stack suffix:
## extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> extcore_type COMMA right_hand_side . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> extcore_type COMMA right_hand_side

State 769:
## Known stack suffix:
## LEVEL extcore_type
## LR(1) items:
right_hand_side -> LEVEL extcore_type . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
right_hand_side -> LEVEL extcore_type . COMMA right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On COMMA shift to state 770
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production right_hand_side -> LEVEL extcore_type

State 770:
## Known stack suffix:
## LEVEL extcore_type COMMA
## LR(1) items:
right_hand_side -> LEVEL extcore_type COMMA . right_hand_side [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LEVEL shift to state 761
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On right_hand_side shift to state 771
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 766
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 771:
## Known stack suffix:
## LEVEL extcore_type COMMA right_hand_side
## LR(1) items:
right_hand_side -> LEVEL extcore_type COMMA right_hand_side . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_hand_side -> LEVEL extcore_type COMMA right_hand_side

State 772:
## Known stack suffix:
## left_hand_side LESS right_hand_side
## LR(1) items:
core_type_constraint -> left_hand_side LESS right_hand_side . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraint -> left_hand_side LESS right_hand_side

State 773:
## Known stack suffix:
## extcore_type
## LR(1) items:
core_type_skeleton -> extcore_type . TILDE extcore_type [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
left_hand_side -> extcore_type . [ LESS ]
left_hand_side -> extcore_type . COMMA left_hand_side [ LESS ]
## Transitions:
-- On TILDE shift to state 774
-- On COMMA shift to state 319
## Reductions:
-- On LESS
--   reduce production left_hand_side -> extcore_type

State 774:
## Known stack suffix:
## extcore_type TILDE
## LR(1) items:
core_type_skeleton -> extcore_type TILDE . extcore_type [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 775
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 775:
## Known stack suffix:
## extcore_type TILDE extcore_type
## LR(1) items:
core_type_skeleton -> extcore_type TILDE extcore_type . [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_skeleton -> extcore_type TILDE extcore_type

State 776:
## Known stack suffix:
## core_type_skeleton
## LR(1) items:
core_type_constraint -> core_type_skeleton . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
core_type_skeleton -> core_type_skeleton . TILDE extcore_type [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On TILDE shift to state 777
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production core_type_constraint -> core_type_skeleton

State 777:
## Known stack suffix:
## core_type_skeleton TILDE
## LR(1) items:
core_type_skeleton -> core_type_skeleton TILDE . extcore_type [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 778
-- On exception_longident shift to state 262
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 778:
## Known stack suffix:
## core_type_skeleton TILDE extcore_type
## LR(1) items:
core_type_skeleton -> core_type_skeleton TILDE extcore_type . [ VAL TYPE TILDE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_skeleton -> core_type_skeleton TILDE extcore_type

State 779:
## Known stack suffix:
## extcore_type WITH core_type_constraints_list
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list . AND core_type_constraint [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
core_type_scheme -> extcore_type WITH core_type_constraints_list . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On AND shift to state 780
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production core_type_scheme -> extcore_type WITH core_type_constraints_list

State 780:
## Known stack suffix:
## core_type_constraints_list AND
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list AND . core_type_constraint [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On CONTENT shift to state 313
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On left_hand_side shift to state 759
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 773
-- On exception_longident shift to state 262
-- On core_type_skeleton shift to state 776
-- On core_type_row_bounds shift to state 235
-- On core_type_constraint shift to state 781
-- On core_type_bounds shift to state 236
## Reductions:

State 781:
## Known stack suffix:
## core_type_constraints_list AND core_type_constraint
## LR(1) items:
core_type_constraints_list -> core_type_constraints_list AND core_type_constraint . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraints_list -> core_type_constraints_list AND core_type_constraint

State 782:
## Known stack suffix:
## core_type_constraint
## LR(1) items:
core_type_constraints_list -> core_type_constraint . [ VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_constraints_list -> core_type_constraint

State 783:
## Known stack suffix:
## COLON core_type_scheme
## LR(1) items:
type_constraint -> COLON core_type_scheme . [ RPAREN EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_constraint -> COLON core_type_scheme

State 784:
## Known stack suffix:
## LPAREN seq_expr type_constraint
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 785
## Reductions:

State 785:
## Known stack suffix:
## LPAREN seq_expr type_constraint RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint RPAREN . [ error UIDENT TYPE TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON CHARVECT CHAR BEGIN BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN

State 786:
## Known stack suffix:
## BEGIN END
## LR(1) items:
simple_expr -> BEGIN END . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN END

State 787:
## Known stack suffix:
## BEGIN seq_expr
## LR(1) items:
simple_expr -> BEGIN seq_expr . END [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 788
-- On END shift to state 789
## Reductions:

State 788:
## Known stack suffix:
## BEGIN seq_expr error
## LR(1) items:
simple_expr -> BEGIN seq_expr error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN seq_expr error

State 789:
## Known stack suffix:
## BEGIN seq_expr END
## LR(1) items:
simple_expr -> BEGIN seq_expr END . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> BEGIN seq_expr END

State 790:
## Known stack suffix:
## LBRACE record_expr
## LR(1) items:
simple_expr -> LBRACE record_expr . RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE record_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 791
-- On RBRACE shift to state 792
## Reductions:

State 791:
## Known stack suffix:
## LBRACE record_expr error
## LR(1) items:
simple_expr -> LBRACE record_expr error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACE record_expr error

State 792:
## Known stack suffix:
## LBRACE record_expr RBRACE
## LR(1) items:
simple_expr -> LBRACE record_expr RBRACE . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACE record_expr RBRACE

State 793:
## Known stack suffix:
## RAISE LPAREN constr_longident simple_expr
## LR(1) items:
expr -> RAISE LPAREN constr_longident simple_expr . RPAREN [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ RPAREN DOT ]
## Transitions:
-- On RPAREN shift to state 794
-- On DOT shift to state 408
## Reductions:

State 794:
## Known stack suffix:
## RAISE LPAREN constr_longident simple_expr RPAREN
## LR(1) items:
expr -> RAISE LPAREN constr_longident simple_expr RPAREN . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> RAISE LPAREN constr_longident simple_expr RPAREN

State 795:
## Known stack suffix:
## RAISE simple_exception_longident
## LR(1) items:
expr -> RAISE simple_exception_longident . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> RAISE simple_exception_longident

State 796:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOT COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_exception_longident -> mod_longident . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 105
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_exception_longident -> mod_longident

State 797:
## Known stack suffix:
## LBRACKET expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI RBRACKET ]
simple_expr -> LBRACKET expr_semi_list . opt_semi RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list . opt_semi error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 670
-- On opt_semi shift to state 798
## Reductions:
-- On error RBRACKET
--   reduce production opt_semi ->

State 798:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi . RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list opt_semi . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 799
-- On RBRACKET shift to state 800
## Reductions:

State 799:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi error
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error

State 800:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi RBRACKET
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET

State 801:
## Known stack suffix:
## TRY seq_expr
## LR(1) items:
expr -> TRY seq_expr . FINALLY seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH opt_bar try_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 802
-- On FINALLY shift to state 823
## Reductions:

State 802:
## Known stack suffix:
## TRY seq_expr WITH
## LR(1) items:
expr -> TRY seq_expr WITH . opt_bar try_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr WITH . error [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 803
-- On BAR shift to state 429
-- On opt_bar shift to state 804
## Reductions:
-- On UNDERSCORE UIDENT
--   reduce production opt_bar ->

State 803:
## Known stack suffix:
## TRY seq_expr WITH error
## LR(1) items:
expr -> TRY seq_expr WITH error . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> TRY seq_expr WITH error

State 804:
## Known stack suffix:
## TRY seq_expr WITH opt_bar
## LR(1) items:
expr -> TRY seq_expr WITH opt_bar . try_cases [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 805
-- On UIDENT shift to state 30
-- On try_pattern_list shift to state 806
-- On try_pattern_item shift to state 807
-- On try_pattern shift to state 813
-- On try_cases shift to state 817
-- On simple_exception_longident shift to state 810
-- On mod_longident shift to state 812
## Reductions:

State 805:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
try_pattern -> UNDERSCORE . [ MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_pattern -> UNDERSCORE

State 806:
## Known stack suffix:
## try_pattern_list
## LR(1) items:
try_pattern -> try_pattern_list . [ MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_pattern -> try_pattern_list

State 807:
## Known stack suffix:
## try_pattern_item
## LR(1) items:
try_pattern_list -> try_pattern_item . [ MINUSGREATER ]
try_pattern_list -> try_pattern_item . BAR try_pattern_list [ MINUSGREATER ]
## Transitions:
-- On BAR shift to state 808
## Reductions:
-- On MINUSGREATER
--   reduce production try_pattern_list -> try_pattern_item

State 808:
## Known stack suffix:
## try_pattern_item BAR
## LR(1) items:
try_pattern_list -> try_pattern_item BAR . try_pattern_list [ MINUSGREATER ]
## Transitions:
-- On UIDENT shift to state 30
-- On try_pattern_list shift to state 809
-- On try_pattern_item shift to state 807
-- On simple_exception_longident shift to state 810
-- On mod_longident shift to state 812
## Reductions:

State 809:
## Known stack suffix:
## try_pattern_item BAR try_pattern_list
## LR(1) items:
try_pattern_list -> try_pattern_item BAR try_pattern_list . [ MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_pattern_list -> try_pattern_item BAR try_pattern_list

State 810:
## Known stack suffix:
## simple_exception_longident
## LR(1) items:
try_pattern_item -> simple_exception_longident . [ MINUSGREATER BAR ]
try_pattern_item -> simple_exception_longident . simple_pattern [ MINUSGREATER BAR ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 811
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:
-- On MINUSGREATER BAR
--   reduce production try_pattern_item -> simple_exception_longident

State 811:
## Known stack suffix:
## simple_exception_longident simple_pattern
## LR(1) items:
try_pattern_item -> simple_exception_longident simple_pattern . [ MINUSGREATER BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_pattern_item -> simple_exception_longident simple_pattern

State 812:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ WITH UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_exception_longident -> mod_longident . [ WITH UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 42
## Reductions:
-- On WITH UNDERSCORE UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_exception_longident -> mod_longident

State 813:
## Known stack suffix:
## try_pattern
## LR(1) items:
try_cases -> try_pattern . MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern . MINUSGREATER seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 814
## Reductions:

State 814:
## Known stack suffix:
## try_pattern MINUSGREATER
## LR(1) items:
try_cases -> try_pattern MINUSGREATER . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern MINUSGREATER . seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 815
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 815:
## Known stack suffix:
## try_pattern MINUSGREATER seq_expr
## LR(1) items:
try_cases -> try_pattern MINUSGREATER seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern MINUSGREATER seq_expr . PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PROPAGATE shift to state 816
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production try_cases -> try_pattern MINUSGREATER seq_expr

State 816:
## Known stack suffix:
## try_pattern MINUSGREATER seq_expr PROPAGATE
## LR(1) items:
try_cases -> try_pattern MINUSGREATER seq_expr PROPAGATE . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_cases -> try_pattern MINUSGREATER seq_expr PROPAGATE

State 817:
## Known stack suffix:
## TRY seq_expr WITH opt_bar try_cases
## LR(1) items:
expr -> TRY seq_expr WITH opt_bar try_cases . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases . BAR try_pattern MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases . BAR try_pattern MINUSGREATER seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 818
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> TRY seq_expr WITH opt_bar try_cases

State 818:
## Known stack suffix:
## try_cases BAR
## LR(1) items:
try_cases -> try_cases BAR . try_pattern MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR . try_pattern MINUSGREATER seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 805
-- On UIDENT shift to state 30
-- On try_pattern_list shift to state 806
-- On try_pattern_item shift to state 807
-- On try_pattern shift to state 819
-- On simple_exception_longident shift to state 810
-- On mod_longident shift to state 812
## Reductions:

State 819:
## Known stack suffix:
## try_cases BAR try_pattern
## LR(1) items:
try_cases -> try_cases BAR try_pattern . MINUSGREATER seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern . MINUSGREATER seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern MINUSGREATER . seq_expr PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 821
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 821:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER seq_expr
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr . PROPAGATE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PROPAGATE shift to state 822
## Reductions:
-- On error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr

State 822:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE

State 823:
## Known stack suffix:
## TRY seq_expr FINALLY
## LR(1) items:
expr -> TRY seq_expr FINALLY . seq_expr [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 824
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 824:
## Known stack suffix:
## TRY seq_expr FINALLY seq_expr
## LR(1) items:
expr -> TRY seq_expr FINALLY seq_expr . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> TRY seq_expr FINALLY seq_expr

State 825:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR BARRBRACKET . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR BARRBRACKET

State 826:
## Known stack suffix:
## LBRACKETBAR expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI BARRBRACKET ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 670
-- On opt_semi shift to state 827
## Reductions:
-- On error BARRBRACKET
--   reduce production opt_semi ->

State 827:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 828
-- On BARRBRACKET shift to state 829
## Reductions:

State 828:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi error
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error

State 829:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 830:
## Known stack suffix:
## EQUAL seq_expr
## LR(1) items:
fun_binding -> EQUAL seq_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> EQUAL seq_expr

State 831:
## Known stack suffix:
## type_constraint
## LR(1) items:
fun_binding -> type_constraint . EQUAL seq_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On EQUAL shift to state 832
## Reductions:

State 832:
## Known stack suffix:
## type_constraint EQUAL
## LR(1) items:
fun_binding -> type_constraint EQUAL . seq_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 833
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 833:
## Known stack suffix:
## type_constraint EQUAL seq_expr
## LR(1) items:
fun_binding -> type_constraint EQUAL seq_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> type_constraint EQUAL seq_expr

State 834:
## Known stack suffix:
## simple_pattern
## LR(1) items:
fun_binding -> simple_pattern . fun_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EQUAL shift to state 388
-- On COLON shift to state 755
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On type_constraint shift to state 831
-- On subtractive shift to state 412
-- On simple_pattern shift to state 834
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On fun_binding shift to state 835
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 835:
## Known stack suffix:
## simple_pattern fun_binding
## LR(1) items:
fun_binding -> simple_pattern fun_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> simple_pattern fun_binding

State 836:
## Known stack suffix:
## val_ident fun_binding
## LR(1) items:
let_binding -> val_ident fun_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_binding -> val_ident fun_binding

State 837:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
expr -> LET rec_flag let_bindings . IN seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ IN AND ]
## Transitions:
-- On IN shift to state 838
-- On AND shift to state 729
## Reductions:

State 838:
## Known stack suffix:
## LET rec_flag let_bindings IN
## LR(1) items:
expr -> LET rec_flag let_bindings IN . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 839
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 839:
## Known stack suffix:
## LET rec_flag let_bindings IN seq_expr
## LR(1) items:
expr -> LET rec_flag let_bindings IN seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LET rec_flag let_bindings IN seq_expr

State 840:
## Known stack suffix:
## MATCH seq_expr
## LR(1) items:
expr -> MATCH seq_expr . WITH opt_bar match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 841
## Reductions:

State 841:
## Known stack suffix:
## MATCH seq_expr WITH
## LR(1) items:
expr -> MATCH seq_expr WITH . opt_bar match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 429
-- On opt_bar shift to state 842
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production opt_bar ->

State 842:
## Known stack suffix:
## MATCH seq_expr WITH opt_bar
## LR(1) items:
expr -> MATCH seq_expr WITH opt_bar . match_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 431
-- On mod_longident shift to state 41
-- On match_cases shift to state 843
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 843:
## Known stack suffix:
## MATCH seq_expr WITH opt_bar match_cases
## LR(1) items:
expr -> MATCH seq_expr WITH opt_bar match_cases . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 717
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> MATCH seq_expr WITH opt_bar match_cases

State 844:
## Known stack suffix:
## WHILE seq_expr
## LR(1) items:
expr -> WHILE seq_expr . DO seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 845
## Reductions:

State 845:
## Known stack suffix:
## WHILE seq_expr DO
## LR(1) items:
expr -> WHILE seq_expr DO . seq_expr DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 846
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 846:
## Known stack suffix:
## WHILE seq_expr DO seq_expr
## LR(1) items:
expr -> WHILE seq_expr DO seq_expr . DONE [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 847
## Reductions:

State 847:
## Known stack suffix:
## WHILE seq_expr DO seq_expr DONE
## LR(1) items:
expr -> WHILE seq_expr DO seq_expr DONE . [ error TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL END ELSE COMMA COLONEQUAL COLONCOLON COLON BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> WHILE seq_expr DO seq_expr DONE

State 848:
## Known stack suffix:
## LPAREN seq_expr
## LR(1) items:
simple_expr -> LPAREN seq_expr . RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 849
-- On RPAREN shift to state 850
-- On COLON shift to state 755
-- On type_constraint shift to state 851
## Reductions:

State 849:
## Known stack suffix:
## LPAREN seq_expr error
## LR(1) items:
simple_expr -> LPAREN seq_expr error . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr error

State 850:
## Known stack suffix:
## LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr RPAREN . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr RPAREN

State 851:
## Known stack suffix:
## LPAREN seq_expr type_constraint
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 852
## Reductions:

State 852:
## Known stack suffix:
## LPAREN seq_expr type_constraint RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint RPAREN . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN

State 853:
## Known stack suffix:
## PREFIXOP simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> PREFIXOP simple_expr . [ WITH UIDENT TYPE TRUE TO THEN STRING STAR SEMISEMI SEMI RPAREN RBRACE PROPAGATE PREFIXOP PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LEVEL LET LESS LBRACKETBAR LBRACKET LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FLOAT FINALLY FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOT DONE DO COMMA COLONEQUAL COLONCOLON CHARVECT CHAR BEGIN BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> PREFIXOP simple_expr

State 854:
## Known stack suffix:
## RAISE LPAREN constr_longident simple_expr
## LR(1) items:
expr -> RAISE LPAREN constr_longident simple_expr . RPAREN [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ RPAREN DOT ]
simple_expr -> simple_expr . DOT LBRACE expr_comma_list error [ RPAREN DOT ]
## Transitions:
-- On RPAREN shift to state 855
-- On DOT shift to state 408
## Reductions:

State 855:
## Known stack suffix:
## RAISE LPAREN constr_longident simple_expr RPAREN
## LR(1) items:
expr -> RAISE LPAREN constr_longident simple_expr RPAREN . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> RAISE LPAREN constr_longident simple_expr RPAREN

State 856:
## Known stack suffix:
## RAISE simple_exception_longident
## LR(1) items:
expr -> RAISE simple_exception_longident . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> RAISE simple_exception_longident

State 857:
## Known stack suffix:
## TRY seq_expr
## LR(1) items:
expr -> TRY seq_expr . FINALLY seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH opt_bar try_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 858
-- On FINALLY shift to state 871
## Reductions:

State 858:
## Known stack suffix:
## TRY seq_expr WITH
## LR(1) items:
expr -> TRY seq_expr WITH . opt_bar try_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr WITH . error [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On error shift to state 859
-- On BAR shift to state 429
-- On opt_bar shift to state 860
## Reductions:
-- On UNDERSCORE UIDENT
--   reduce production opt_bar ->

State 859:
## Known stack suffix:
## TRY seq_expr WITH error
## LR(1) items:
expr -> TRY seq_expr WITH error . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> TRY seq_expr WITH error

State 860:
## Known stack suffix:
## TRY seq_expr WITH opt_bar
## LR(1) items:
expr -> TRY seq_expr WITH opt_bar . try_cases [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 805
-- On UIDENT shift to state 30
-- On try_pattern_list shift to state 806
-- On try_pattern_item shift to state 807
-- On try_pattern shift to state 861
-- On try_cases shift to state 865
-- On simple_exception_longident shift to state 810
-- On mod_longident shift to state 812
## Reductions:

State 861:
## Known stack suffix:
## try_pattern
## LR(1) items:
try_cases -> try_pattern . MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern . MINUSGREATER seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 862
## Reductions:

State 862:
## Known stack suffix:
## try_pattern MINUSGREATER
## LR(1) items:
try_cases -> try_pattern MINUSGREATER . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern MINUSGREATER . seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 863
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 863:
## Known stack suffix:
## try_pattern MINUSGREATER seq_expr
## LR(1) items:
try_cases -> try_pattern MINUSGREATER seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_pattern MINUSGREATER seq_expr . PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PROPAGATE shift to state 864
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production try_cases -> try_pattern MINUSGREATER seq_expr

State 864:
## Known stack suffix:
## try_pattern MINUSGREATER seq_expr PROPAGATE
## LR(1) items:
try_cases -> try_pattern MINUSGREATER seq_expr PROPAGATE . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_cases -> try_pattern MINUSGREATER seq_expr PROPAGATE

State 865:
## Known stack suffix:
## TRY seq_expr WITH opt_bar try_cases
## LR(1) items:
expr -> TRY seq_expr WITH opt_bar try_cases . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases . BAR try_pattern MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases . BAR try_pattern MINUSGREATER seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 866
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> TRY seq_expr WITH opt_bar try_cases

State 866:
## Known stack suffix:
## try_cases BAR
## LR(1) items:
try_cases -> try_cases BAR . try_pattern MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR . try_pattern MINUSGREATER seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 805
-- On UIDENT shift to state 30
-- On try_pattern_list shift to state 806
-- On try_pattern_item shift to state 807
-- On try_pattern shift to state 867
-- On simple_exception_longident shift to state 810
-- On mod_longident shift to state 812
## Reductions:

State 867:
## Known stack suffix:
## try_cases BAR try_pattern
## LR(1) items:
try_cases -> try_cases BAR try_pattern . MINUSGREATER seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern . MINUSGREATER seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern MINUSGREATER . seq_expr PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 869
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 869:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER seq_expr
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr . PROPAGATE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PROPAGATE shift to state 870
## Reductions:
-- On WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr

State 870:
## Known stack suffix:
## try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE
## LR(1) items:
try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_cases -> try_cases BAR try_pattern MINUSGREATER seq_expr PROPAGATE

State 871:
## Known stack suffix:
## TRY seq_expr FINALLY
## LR(1) items:
expr -> TRY seq_expr FINALLY . seq_expr [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 872
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 872:
## Known stack suffix:
## TRY seq_expr FINALLY seq_expr
## LR(1) items:
expr -> TRY seq_expr FINALLY seq_expr . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> TRY seq_expr FINALLY seq_expr

State 873:
## Known stack suffix:
## WHILE seq_expr
## LR(1) items:
expr -> WHILE seq_expr . DO seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 874
## Reductions:

State 874:
## Known stack suffix:
## WHILE seq_expr DO
## LR(1) items:
expr -> WHILE seq_expr DO . seq_expr DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LET shift to state 52
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On simple_expr shift to state 448
-- On seq_expr shift to state 875
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 875:
## Known stack suffix:
## WHILE seq_expr DO seq_expr
## LR(1) items:
expr -> WHILE seq_expr DO seq_expr . DONE [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 876
## Reductions:

State 876:
## Known stack suffix:
## WHILE seq_expr DO seq_expr DONE
## LR(1) items:
expr -> WHILE seq_expr DO seq_expr DONE . [ WITH TYPE TO THEN STAR SEMISEMI SEMI RBRACE PROPAGATE PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATER FINALLY EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> WHILE seq_expr DO seq_expr DONE

State 877:
## Known stack suffix:
## TYPE
## LR(1) items:
structure_item -> TYPE . type_declarations [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declarations shift to state 879
-- On type_declaration shift to state 1000
-- On opt_fun shift to state 882
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 878:
## Known stack suffix:
## NONEQ
## LR(1) items:
opt_fun -> NONEQ . [ SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_fun -> NONEQ

State 879:
## Known stack suffix:
## TYPE type_declarations
## LR(1) items:
structure_item -> TYPE type_declarations . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
type_declarations -> type_declarations . AND type_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On AND shift to state 880
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> TYPE type_declarations

State 880:
## Known stack suffix:
## type_declarations AND
## LR(1) items:
type_declarations -> type_declarations AND . type_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declaration shift to state 881
-- On opt_fun shift to state 882
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 881:
## Known stack suffix:
## type_declarations AND type_declaration
## LR(1) items:
type_declarations -> type_declarations AND type_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declarations -> type_declarations AND type_declaration

State 882:
## Known stack suffix:
## opt_fun
## LR(1) items:
type_declaration -> opt_fun . type_parameters LIDENT type_kind constraints [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On LPAREN shift to state 886
-- On EQUAL shift to state 887
-- On type_parameters shift to state 908
-- On type_parameter shift to state 999
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->
-- On LIDENT
--   reduce production type_parameters ->

State 883:
## Known stack suffix:
## SHARP
## LR(1) items:
opt_variance -> SHARP . [ QUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_variance -> SHARP

State 884:
## Known stack suffix:
## PLUS
## LR(1) items:
opt_variance -> PLUS . [ QUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_variance -> PLUS

State 885:
## Known stack suffix:
## MINUS
## LR(1) items:
opt_variance -> MINUS . [ QUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_variance -> MINUS

State 886:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_parameters -> LPAREN . type_parameter_list RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On EQUAL shift to state 887
-- On type_parameter_list shift to state 888
-- On type_parameter shift to state 907
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->

State 887:
## Known stack suffix:
## EQUAL
## LR(1) items:
opt_variance -> EQUAL . [ QUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_variance -> EQUAL

State 888:
## Known stack suffix:
## LPAREN type_parameter_list
## LR(1) items:
type_parameter_list -> type_parameter_list . COMMA type_parameter [ RPAREN COMMA ]
type_parameters -> LPAREN type_parameter_list . RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On RPAREN shift to state 889
-- On COMMA shift to state 890
## Reductions:

State 889:
## Known stack suffix:
## LPAREN type_parameter_list RPAREN
## LR(1) items:
type_parameters -> LPAREN type_parameter_list RPAREN . [ UIDENT LIDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameters -> LPAREN type_parameter_list RPAREN

State 890:
## Known stack suffix:
## type_parameter_list COMMA
## LR(1) items:
type_parameter_list -> type_parameter_list COMMA . type_parameter [ RPAREN COMMA ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On EQUAL shift to state 887
-- On type_parameter shift to state 891
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->

State 891:
## Known stack suffix:
## type_parameter_list COMMA type_parameter
## LR(1) items:
type_parameter_list -> type_parameter_list COMMA type_parameter . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameter_list -> type_parameter_list COMMA type_parameter

State 892:
## Known stack suffix:
## opt_variance
## LR(1) items:
type_parameter -> opt_variance . QUOTE ident opt_kind [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On QUOTE shift to state 893
## Reductions:

State 893:
## Known stack suffix:
## opt_variance QUOTE
## LR(1) items:
type_parameter -> opt_variance QUOTE . ident opt_kind [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 894
## Reductions:

State 894:
## Known stack suffix:
## opt_variance QUOTE ident
## LR(1) items:
type_parameter -> opt_variance QUOTE ident . opt_kind [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On COLON shift to state 895
-- On opt_kind shift to state 906
## Reductions:
-- On UIDENT RPAREN LIDENT COMMA
--   reduce production opt_kind ->

State 895:
## Known stack suffix:
## COLON
## LR(1) items:
opt_kind -> COLON . LEVEL [ UIDENT RPAREN LIDENT COMMA ]
opt_kind -> COLON . TYPE [ UIDENT RPAREN LIDENT COMMA ]
opt_kind -> COLON . ROW LBRACKET opt_rowlabel_list RBRACKET [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On TYPE shift to state 896
-- On ROW shift to state 897
-- On LEVEL shift to state 905
## Reductions:

State 896:
## Known stack suffix:
## COLON TYPE
## LR(1) items:
opt_kind -> COLON TYPE . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_kind -> COLON TYPE

State 897:
## Known stack suffix:
## COLON ROW
## LR(1) items:
opt_kind -> COLON ROW . LBRACKET opt_rowlabel_list RBRACKET [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On LBRACKET shift to state 898
## Reductions:

State 898:
## Known stack suffix:
## COLON ROW LBRACKET
## LR(1) items:
opt_kind -> COLON ROW LBRACKET . opt_rowlabel_list RBRACKET [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On UIDENT shift to state 30
-- On rowlabel_list shift to state 899
-- On opt_rowlabel_list shift to state 900
-- On mod_longident shift to state 902
## Reductions:
-- On RBRACKET
--   reduce production opt_rowlabel_list ->

State 899:
## Known stack suffix:
## rowlabel_list
## LR(1) items:
opt_rowlabel_list -> rowlabel_list . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_rowlabel_list -> rowlabel_list

State 900:
## Known stack suffix:
## COLON ROW LBRACKET opt_rowlabel_list
## LR(1) items:
opt_kind -> COLON ROW LBRACKET opt_rowlabel_list . RBRACKET [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On RBRACKET shift to state 901
## Reductions:

State 901:
## Known stack suffix:
## COLON ROW LBRACKET opt_rowlabel_list RBRACKET
## LR(1) items:
opt_kind -> COLON ROW LBRACKET opt_rowlabel_list RBRACKET . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_kind -> COLON ROW LBRACKET opt_rowlabel_list RBRACKET

State 902:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ RBRACKET DOT COMMA ]
rowlabel_list -> mod_longident . [ RBRACKET ]
rowlabel_list -> mod_longident . COMMA rowlabel_list [ RBRACKET ]
## Transitions:
-- On DOT shift to state 42
-- On COMMA shift to state 903
## Reductions:
-- On RBRACKET
--   reduce production rowlabel_list -> mod_longident

State 903:
## Known stack suffix:
## mod_longident COMMA
## LR(1) items:
rowlabel_list -> mod_longident COMMA . rowlabel_list [ RBRACKET ]
## Transitions:
-- On UIDENT shift to state 30
-- On rowlabel_list shift to state 904
-- On mod_longident shift to state 902
## Reductions:

State 904:
## Known stack suffix:
## mod_longident COMMA rowlabel_list
## LR(1) items:
rowlabel_list -> mod_longident COMMA rowlabel_list . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rowlabel_list -> mod_longident COMMA rowlabel_list

State 905:
## Known stack suffix:
## COLON LEVEL
## LR(1) items:
opt_kind -> COLON LEVEL . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_kind -> COLON LEVEL

State 906:
## Known stack suffix:
## opt_variance QUOTE ident opt_kind
## LR(1) items:
type_parameter -> opt_variance QUOTE ident opt_kind . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameter -> opt_variance QUOTE ident opt_kind

State 907:
## Known stack suffix:
## type_parameter
## LR(1) items:
type_parameter_list -> type_parameter . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameter_list -> type_parameter

State 908:
## Known stack suffix:
## opt_fun type_parameters
## LR(1) items:
type_declaration -> opt_fun type_parameters . LIDENT type_kind constraints [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On LIDENT shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## opt_fun type_parameters LIDENT
## LR(1) items:
type_declaration -> opt_fun type_parameters LIDENT . type_kind constraints [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On EQUAL shift to state 910
-- On type_kind shift to state 992
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND
--   reduce production type_kind ->

State 910:
## Known stack suffix:
## EQUAL
## LR(1) items:
type_kind -> EQUAL . core_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL . type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL . BAR type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL . type_kind_record [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL . core_type EQUAL type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL . core_type EQUAL type_kind_record [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 912
-- On TRUE shift to state 913
-- On QUOTE shift to state 914
-- On LPAREN shift to state 916
-- On LIDENT shift to state 218
-- On LBRACKET shift to state 953
-- On LBRACE shift to state 955
-- On FALSE shift to state 971
-- On COLONCOLON shift to state 972
-- On BAR shift to state 973
-- On type_longident shift to state 920
-- On type_kind_variant shift to state 986
-- On type_kind_record shift to state 987
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 988
-- On constructor_declarations shift to state 977
-- On constructor_declaration shift to state 985
-- On constr_ident shift to state 980
## Reductions:

State 911:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_core_type2 -> UNDERSCORE . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> UNDERSCORE

State 912:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
exception_longident -> UIDENT . [ COLON ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND
--   reduce production constr_ident -> UIDENT
-- On COLON
--   reduce production exception_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 913:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_ident -> TRUE . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> TRUE

State 914:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_core_type2 -> QUOTE . ident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 915
## Reductions:

State 915:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_core_type2 -> QUOTE ident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> QUOTE ident

State 916:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ VAL TYPE STAR SEMISEMI OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ VAL UIDENT TYPE STAR SEMISEMI OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On RPAREN shift to state 918
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type_comma_list shift to state 947
-- On core_type2 shift to state 937
-- On core_type shift to state 952
## Reductions:

State 917:
## Known stack suffix:
## UIDENT
## LR(1) items:
exception_longident -> UIDENT . [ COLON ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 918:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_ident -> LPAREN RPAREN . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> LPAREN RPAREN

State 919:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type_comma_list shift to state 947
-- On core_type2 shift to state 937
-- On core_type shift to state 952
## Reductions:

State 920:
## Known stack suffix:
## type_longident
## LR(1) items:
simple_core_type2 -> type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> type_longident

State 921:
## Known stack suffix:
## simple_core_type_or_tuple
## LR(1) items:
core_type2 -> simple_core_type_or_tuple . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type2 -> simple_core_type_or_tuple

State 922:
## Known stack suffix:
## simple_core_type2
## LR(1) items:
simple_core_type -> simple_core_type2 . [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type2 -> simple_core_type2 . type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 222
-- On type_longident shift to state 923
-- On mod_ext_longident shift to state 224
## Reductions:
-- On WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production simple_core_type -> simple_core_type2

State 923:
## Known stack suffix:
## simple_core_type2 type_longident
## LR(1) items:
simple_core_type2 -> simple_core_type2 type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> simple_core_type2 type_longident

State 924:
## Known stack suffix:
## simple_core_type
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type_or_tuple -> simple_core_type . STAR core_type_list [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On STAR shift to state 925
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production simple_core_type_or_tuple -> simple_core_type

State 925:
## Known stack suffix:
## simple_core_type STAR
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type STAR . core_type_list [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 926
-- On mod_ext_longident shift to state 224
-- On core_type_list shift to state 927
## Reductions:

State 926:
## Known stack suffix:
## simple_core_type
## LR(1) items:
core_type_list -> simple_core_type . [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_list -> simple_core_type

State 927:
## Known stack suffix:
## simple_core_type STAR core_type_list
## LR(1) items:
core_type_list -> core_type_list . STAR simple_core_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type_or_tuple -> simple_core_type STAR core_type_list . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On STAR shift to state 928
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production simple_core_type_or_tuple -> simple_core_type STAR core_type_list

State 928:
## Known stack suffix:
## core_type_list STAR
## LR(1) items:
core_type_list -> core_type_list STAR . simple_core_type [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 929
-- On mod_ext_longident shift to state 224
## Reductions:

State 929:
## Known stack suffix:
## core_type_list STAR simple_core_type
## LR(1) items:
core_type_list -> core_type_list STAR simple_core_type . [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_list -> core_type_list STAR simple_core_type

State 930:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
exception_longident -> mod_ext_longident . DOT UIDENT [ COLON ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 931
## Reductions:

State 931:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
exception_longident -> mod_ext_longident DOT . UIDENT [ COLON ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 932
-- On LIDENT shift to state 226
## Reductions:

State 932:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
exception_longident -> mod_ext_longident DOT UIDENT . [ COLON ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production exception_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 933:
## Known stack suffix:
## exception_longident
## LR(1) items:
core_type -> exception_longident . COLON simple_core_type SEMI core_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On COLON shift to state 934
## Reductions:

State 934:
## Known stack suffix:
## exception_longident COLON
## LR(1) items:
core_type -> exception_longident COLON . simple_core_type SEMI core_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 935
-- On mod_ext_longident shift to state 224
## Reductions:

State 935:
## Known stack suffix:
## exception_longident COLON simple_core_type
## LR(1) items:
core_type -> exception_longident COLON simple_core_type . SEMI core_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On SEMI shift to state 936
## Reductions:

State 936:
## Known stack suffix:
## exception_longident COLON simple_core_type SEMI
## LR(1) items:
core_type -> exception_longident COLON simple_core_type SEMI . core_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 946
## Reductions:

State 937:
## Known stack suffix:
## core_type2
## LR(1) items:
core_type -> core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
core_type2 -> core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On MINUSBRACE shift to state 938
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production core_type -> core_type2

State 938:
## Known stack suffix:
## core_type2 MINUSBRACE
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE . core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 939
## Reductions:

State 939:
## Known stack suffix:
## core_type2 MINUSBRACE core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type . BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On BAR shift to state 940
## Reductions:

State 940:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR . core_type BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 941
## Reductions:

State 941:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type . BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On BAR shift to state 942
## Reductions:

State 942:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR . core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 943
## Reductions:

State 943:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type . BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On BRACEMINUSGREATER shift to state 944
## Reductions:

State 944:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER . core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 224
-- On core_type2 shift to state 945
## Reductions:

State 945:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2
## LR(1) items:
core_type2 -> core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On MINUSBRACE shift to state 938
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2

State 946:
## Known stack suffix:
## exception_longident COLON simple_core_type SEMI core_type
## LR(1) items:
core_type -> exception_longident COLON simple_core_type SEMI core_type . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type -> exception_longident COLON simple_core_type SEMI core_type

State 947:
## Known stack suffix:
## LPAREN core_type_comma_list
## LR(1) items:
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type2 -> LPAREN core_type_comma_list . RPAREN type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On RPAREN shift to state 948
-- On COMMA shift to state 950
## Reductions:

State 948:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN
## LR(1) items:
simple_core_type -> LPAREN core_type_comma_list RPAREN . [ WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
simple_core_type2 -> LPAREN core_type_comma_list RPAREN . type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 222
-- On type_longident shift to state 949
-- On mod_ext_longident shift to state 224
## Reductions:
-- On WITH VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND
--   reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN

State 949:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN type_longident
## LR(1) items:
simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA BRACEMINUSGREATER BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident

State 950:
## Known stack suffix:
## core_type_comma_list COMMA
## LR(1) items:
core_type_comma_list -> core_type_comma_list COMMA . core_type [ RPAREN COMMA ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 951
## Reductions:

State 951:
## Known stack suffix:
## core_type_comma_list COMMA core_type
## LR(1) items:
core_type_comma_list -> core_type_comma_list COMMA core_type . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_comma_list -> core_type_comma_list COMMA core_type

State 952:
## Known stack suffix:
## core_type
## LR(1) items:
core_type_comma_list -> core_type . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_comma_list -> core_type

State 953:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_ident -> LBRACKET . RBRACKET [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On RBRACKET shift to state 954
## Reductions:

State 954:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_ident -> LBRACKET RBRACKET . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> LBRACKET RBRACKET

State 955:
## Known stack suffix:
## LBRACE
## LR(1) items:
type_kind_record -> LBRACE . label_declarations opt_semi RBRACE opt_annot_level [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On MUTABLE shift to state 956
-- On mutable_flag shift to state 957
-- On label_declarations shift to state 962
-- On label_declaration shift to state 970
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 956:
## Known stack suffix:
## MUTABLE
## LR(1) items:
mutable_flag -> MUTABLE . [ LIDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mutable_flag -> MUTABLE

State 957:
## Known stack suffix:
## mutable_flag
## LR(1) items:
label_declaration -> mutable_flag . label COLON core_type [ SEMI RBRACE ]
## Transitions:
-- On LIDENT shift to state 958
-- On label shift to state 959
## Reductions:

State 958:
## Known stack suffix:
## LIDENT
## LR(1) items:
label -> LIDENT . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> LIDENT

State 959:
## Known stack suffix:
## mutable_flag label
## LR(1) items:
label_declaration -> mutable_flag label . COLON core_type [ SEMI RBRACE ]
## Transitions:
-- On COLON shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## mutable_flag label COLON
## LR(1) items:
label_declaration -> mutable_flag label COLON . core_type [ SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 961
## Reductions:

State 961:
## Known stack suffix:
## mutable_flag label COLON core_type
## LR(1) items:
label_declaration -> mutable_flag label COLON core_type . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_declaration -> mutable_flag label COLON core_type

State 962:
## Known stack suffix:
## LBRACE label_declarations
## LR(1) items:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind_record -> LBRACE label_declarations . opt_semi RBRACE opt_annot_level [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On SEMI shift to state 963
-- On opt_semi shift to state 965
## Reductions:
-- On RBRACE
--   reduce production opt_semi ->

State 963:
## Known stack suffix:
## label_declarations SEMI
## LR(1) items:
label_declarations -> label_declarations SEMI . label_declaration [ SEMI RBRACE ]
opt_semi -> SEMI . [ RBRACE ]
## Transitions:
-- On MUTABLE shift to state 956
-- On mutable_flag shift to state 957
-- On label_declaration shift to state 964
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->
-- On RBRACE
--   reduce production opt_semi -> SEMI

State 964:
## Known stack suffix:
## label_declarations SEMI label_declaration
## LR(1) items:
label_declarations -> label_declarations SEMI label_declaration . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_declarations -> label_declarations SEMI label_declaration

State 965:
## Known stack suffix:
## LBRACE label_declarations opt_semi
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi . RBRACE opt_annot_level [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On RBRACE shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## LBRACE label_declarations opt_semi RBRACE
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi RBRACE . opt_annot_level [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On SHARP shift to state 967
-- On opt_annot_level shift to state 969
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND
--   reduce production opt_annot_level ->

State 967:
## Known stack suffix:
## SHARP
## LR(1) items:
opt_annot_level -> SHARP . simple_core_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 968
-- On mod_ext_longident shift to state 224
## Reductions:

State 968:
## Known stack suffix:
## SHARP simple_core_type
## LR(1) items:
opt_annot_level -> SHARP simple_core_type . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_annot_level -> SHARP simple_core_type

State 969:
## Known stack suffix:
## LBRACE label_declarations opt_semi RBRACE opt_annot_level
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi RBRACE opt_annot_level . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind_record -> LBRACE label_declarations opt_semi RBRACE opt_annot_level

State 970:
## Known stack suffix:
## label_declaration
## LR(1) items:
label_declarations -> label_declaration . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_declarations -> label_declaration

State 971:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_ident -> FALSE . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> FALSE

State 972:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
constr_ident -> COLONCOLON . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> COLONCOLON

State 973:
## Known stack suffix:
## EQUAL BAR
## LR(1) items:
type_kind -> EQUAL BAR . type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On UIDENT shift to state 974
-- On TRUE shift to state 913
-- On LPAREN shift to state 975
-- On LBRACKET shift to state 953
-- On FALSE shift to state 971
-- On COLONCOLON shift to state 972
-- On type_kind_variant shift to state 976
-- On constructor_declarations shift to state 977
-- On constructor_declaration shift to state 985
-- On constr_ident shift to state 980
## Reductions:

State 974:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> UIDENT

State 975:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On RPAREN shift to state 918
## Reductions:

State 976:
## Known stack suffix:
## EQUAL BAR type_kind_variant
## LR(1) items:
type_kind -> EQUAL BAR type_kind_variant . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL BAR type_kind_variant

State 977:
## Known stack suffix:
## constructor_declarations
## LR(1) items:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
type_kind_variant -> constructor_declarations . opt_annot_level [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On SHARP shift to state 967
-- On BAR shift to state 978
-- On opt_annot_level shift to state 984
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND
--   reduce production opt_annot_level ->

State 978:
## Known stack suffix:
## constructor_declarations BAR
## LR(1) items:
constructor_declarations -> constructor_declarations BAR . constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On UIDENT shift to state 974
-- On TRUE shift to state 913
-- On LPAREN shift to state 975
-- On LBRACKET shift to state 953
-- On FALSE shift to state 971
-- On COLONCOLON shift to state 972
-- On constructor_declaration shift to state 979
-- On constr_ident shift to state 980
## Reductions:

State 979:
## Known stack suffix:
## constructor_declarations BAR constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declarations BAR constructor_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration

State 980:
## Known stack suffix:
## constr_ident
## LR(1) items:
constructor_declaration -> constr_ident . constructor_arguments [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On OF shift to state 981
-- On constructor_arguments shift to state 983
## Reductions:
-- On VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND
--   reduce production constructor_arguments ->

State 981:
## Known stack suffix:
## OF
## LR(1) items:
constructor_arguments -> OF . core_type_list [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 926
-- On mod_ext_longident shift to state 224
-- On core_type_list shift to state 982
## Reductions:

State 982:
## Known stack suffix:
## OF core_type_list
## LR(1) items:
constructor_arguments -> OF core_type_list . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
core_type_list -> core_type_list . STAR simple_core_type [ VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
-- On STAR shift to state 928
## Reductions:
-- On VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND
--   reduce production constructor_arguments -> OF core_type_list

State 983:
## Known stack suffix:
## constr_ident constructor_arguments
## LR(1) items:
constructor_declaration -> constr_ident constructor_arguments . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declaration -> constr_ident constructor_arguments

State 984:
## Known stack suffix:
## constructor_declarations opt_annot_level
## LR(1) items:
type_kind_variant -> constructor_declarations opt_annot_level . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind_variant -> constructor_declarations opt_annot_level

State 985:
## Known stack suffix:
## constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declarations -> constructor_declaration

State 986:
## Known stack suffix:
## EQUAL type_kind_variant
## LR(1) items:
type_kind -> EQUAL type_kind_variant . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL type_kind_variant

State 987:
## Known stack suffix:
## EQUAL type_kind_record
## LR(1) items:
type_kind -> EQUAL type_kind_record . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL type_kind_record

State 988:
## Known stack suffix:
## EQUAL core_type
## LR(1) items:
type_kind -> EQUAL core_type . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL core_type . EQUAL type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL core_type . EQUAL type_kind_record [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On EQUAL shift to state 989
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND
--   reduce production type_kind -> EQUAL core_type

State 989:
## Known stack suffix:
## EQUAL core_type EQUAL
## LR(1) items:
type_kind -> EQUAL core_type EQUAL . type_kind_variant [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_kind -> EQUAL core_type EQUAL . type_kind_record [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
-- On UIDENT shift to state 974
-- On TRUE shift to state 913
-- On LPAREN shift to state 975
-- On LBRACKET shift to state 953
-- On LBRACE shift to state 955
-- On FALSE shift to state 971
-- On COLONCOLON shift to state 972
-- On type_kind_variant shift to state 990
-- On type_kind_record shift to state 991
-- On constructor_declarations shift to state 977
-- On constructor_declaration shift to state 985
-- On constr_ident shift to state 980
## Reductions:

State 990:
## Known stack suffix:
## EQUAL core_type EQUAL type_kind_variant
## LR(1) items:
type_kind -> EQUAL core_type EQUAL type_kind_variant . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL core_type EQUAL type_kind_variant

State 991:
## Known stack suffix:
## EQUAL core_type EQUAL type_kind_record
## LR(1) items:
type_kind -> EQUAL core_type EQUAL type_kind_record . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL core_type EQUAL type_kind_record

State 992:
## Known stack suffix:
## opt_fun type_parameters LIDENT type_kind
## LR(1) items:
type_declaration -> opt_fun type_parameters LIDENT type_kind . constraints [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On constraints shift to state 993
## Default reduction:
-- After reading the next token, reduce production constraints ->

State 993:
## Known stack suffix:
## opt_fun type_parameters LIDENT type_kind constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT AND ]
type_declaration -> opt_fun type_parameters LIDENT type_kind constraints . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On CONSTRAINT shift to state 994
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND
--   reduce production type_declaration -> opt_fun type_parameters LIDENT type_kind constraints

State 994:
## Known stack suffix:
## constraints CONSTRAINT
## LR(1) items:
constraints -> constraints CONSTRAINT . constrain [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 995
-- On constrain shift to state 998
## Reductions:

State 995:
## Known stack suffix:
## core_type
## LR(1) items:
constrain -> core_type . EQUAL core_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
-- On EQUAL shift to state 996
## Reductions:

State 996:
## Known stack suffix:
## core_type EQUAL
## LR(1) items:
constrain -> core_type EQUAL . core_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 997
## Reductions:

State 997:
## Known stack suffix:
## core_type EQUAL core_type
## LR(1) items:
constrain -> core_type EQUAL core_type . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constrain -> core_type EQUAL core_type

State 998:
## Known stack suffix:
## constraints CONSTRAINT constrain
## LR(1) items:
constraints -> constraints CONSTRAINT constrain . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraints -> constraints CONSTRAINT constrain

State 999:
## Known stack suffix:
## type_parameter
## LR(1) items:
type_parameters -> type_parameter . [ UIDENT LIDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameters -> type_parameter

State 1000:
## Known stack suffix:
## type_declaration
## LR(1) items:
type_declarations -> type_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declarations -> type_declaration

State 1001:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
structure_tail -> SEMISEMI . [ EOF ]
structure_tail -> SEMISEMI . seq_expr structure_tail [ EOF ]
structure_tail -> SEMISEMI . structure_item structure_tail [ EOF ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TYPE shift to state 877
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LEVEL shift to state 1401
-- On LET shift to state 1405
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On INCLUDE shift to state 1408
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On subtractive shift to state 447
-- On structure_item shift to state 1431
-- On simple_expr shift to state 448
-- On seq_expr shift to state 1438
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:
-- On EOF
--   reduce production structure_tail -> SEMISEMI

State 1002:
## Known stack suffix:
## OPEN
## LR(1) items:
structure_item -> OPEN . mod_longident [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On mod_longident shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## OPEN mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF DOT ]
structure_item -> OPEN mod_longident . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On DOT shift to state 42
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> OPEN mod_longident

State 1004:
## Known stack suffix:
## MODULE
## LR(1) items:
structure_item -> MODULE . UIDENT module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
structure_item -> MODULE . TYPE ident EQUAL module_type [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1005
-- On TYPE shift to state 1397
## Reductions:

State 1005:
## Known stack suffix:
## MODULE UIDENT
## LR(1) items:
structure_item -> MODULE UIDENT . module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1006
-- On EQUAL shift to state 1275
-- On COLON shift to state 1391
-- On module_binding shift to state 1396
## Reductions:

State 1006:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_binding -> LPAREN . UIDENT COLON module_type RPAREN module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1007
## Reductions:

State 1007:
## Known stack suffix:
## LPAREN UIDENT
## LR(1) items:
module_binding -> LPAREN UIDENT . COLON module_type RPAREN module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On COLON shift to state 1008
## Reductions:

State 1008:
## Known stack suffix:
## LPAREN UIDENT COLON
## LR(1) items:
module_binding -> LPAREN UIDENT COLON . module_type RPAREN module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1273
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1009:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 1010:
## Known stack suffix:
## SIG
## LR(1) items:
module_type -> SIG . signature END [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> SIG . signature error [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On signature shift to state 1011
## Default reduction:
-- After reading the next token, reduce production signature ->

State 1011:
## Known stack suffix:
## SIG signature
## LR(1) items:
module_type -> SIG signature . END [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> SIG signature . error [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
signature -> signature . signature_item [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature -> signature . signature_item SEMISEMI [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On error shift to state 1012
-- On VAL shift to state 1013
-- On TYPE shift to state 1023
-- On OPEN shift to state 1106
-- On MODULE shift to state 1108
-- On LEVEL shift to state 1118
-- On INCLUDE shift to state 1136
-- On EXTERNAL shift to state 1233
-- On EXCEPTION shift to state 1240
-- On END shift to state 1272
-- On signature_item shift to state 1257
## Reductions:

State 1012:
## Known stack suffix:
## SIG signature error
## LR(1) items:
module_type -> SIG signature error . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> SIG signature error

State 1013:
## Known stack suffix:
## VAL
## LR(1) items:
signature_item -> VAL . val_ident_colon core_type_scheme [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1021
## Reductions:

State 1014:
## Known stack suffix:
## LPAREN
## LR(1) items:
val_ident_colon -> LPAREN . operator RPAREN COLON [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On STAR shift to state 63
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 117
-- On MINUS shift to state 118
-- On LESS shift to state 73
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On operator shift to state 1015
## Reductions:

State 1015:
## Known stack suffix:
## LPAREN operator
## LR(1) items:
val_ident_colon -> LPAREN operator . RPAREN COLON [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On RPAREN shift to state 1016
## Reductions:

State 1016:
## Known stack suffix:
## LPAREN operator RPAREN
## LR(1) items:
val_ident_colon -> LPAREN operator RPAREN . COLON [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On COLON shift to state 1017
## Reductions:

State 1017:
## Known stack suffix:
## LPAREN operator RPAREN COLON
## LR(1) items:
val_ident_colon -> LPAREN operator RPAREN COLON . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident_colon -> LPAREN operator RPAREN COLON

State 1018:
## Known stack suffix:
## LIDENT
## LR(1) items:
val_ident_colon -> LIDENT . COLON [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
-- On COLON shift to state 1019
## Reductions:

State 1019:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
val_ident_colon -> LIDENT COLON . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident_colon -> LIDENT COLON

State 1020:
## Known stack suffix:
## LABEL
## LR(1) items:
val_ident_colon -> LABEL . [ UNDERSCORE UIDENT STAR QUOTE PREFIXOP LPAREN LIDENT LBRACKETLESS LBRACKETGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production val_ident_colon -> LABEL

State 1021:
## Known stack suffix:
## VAL val_ident_colon
## LR(1) items:
signature_item -> VAL val_ident_colon . core_type_scheme [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 156
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 285
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type_or_tuple shift to state 287
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 290
-- On principal shift to state 183
-- On mod_ext_longident shift to state 300
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_args shift to state 303
-- On extcore_type2 shift to state 308
-- On extcore_type shift to state 311
-- On exception_longident shift to state 334
-- On core_type_scheme shift to state 1022
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 1022:
## Known stack suffix:
## VAL val_ident_colon core_type_scheme
## LR(1) items:
signature_item -> VAL val_ident_colon core_type_scheme . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> VAL val_ident_colon core_type_scheme

State 1023:
## Known stack suffix:
## TYPE
## LR(1) items:
signature_item -> TYPE . type_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declarations shift to state 1024
-- On type_declaration shift to state 1105
-- On opt_fun shift to state 1027
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 1024:
## Known stack suffix:
## TYPE type_declarations
## LR(1) items:
signature_item -> TYPE type_declarations . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
type_declarations -> type_declarations . AND type_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On AND shift to state 1025
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature_item -> TYPE type_declarations

State 1025:
## Known stack suffix:
## type_declarations AND
## LR(1) items:
type_declarations -> type_declarations AND . type_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declaration shift to state 1026
-- On opt_fun shift to state 1027
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 1026:
## Known stack suffix:
## type_declarations AND type_declaration
## LR(1) items:
type_declarations -> type_declarations AND type_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declarations -> type_declarations AND type_declaration

State 1027:
## Known stack suffix:
## opt_fun
## LR(1) items:
type_declaration -> opt_fun . type_parameters LIDENT type_kind constraints [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On LPAREN shift to state 886
-- On EQUAL shift to state 887
-- On type_parameters shift to state 1028
-- On type_parameter shift to state 999
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->
-- On LIDENT
--   reduce production type_parameters ->

State 1028:
## Known stack suffix:
## opt_fun type_parameters
## LR(1) items:
type_declaration -> opt_fun type_parameters . LIDENT type_kind constraints [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On LIDENT shift to state 1029
## Reductions:

State 1029:
## Known stack suffix:
## opt_fun type_parameters LIDENT
## LR(1) items:
type_declaration -> opt_fun type_parameters LIDENT . type_kind constraints [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On EQUAL shift to state 1030
-- On type_kind shift to state 1098
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND
--   reduce production type_kind ->

State 1030:
## Known stack suffix:
## EQUAL
## LR(1) items:
type_kind -> EQUAL . core_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL . type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL . BAR type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL . type_kind_record [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL . core_type EQUAL type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL . core_type EQUAL type_kind_record [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 1032
-- On TRUE shift to state 1033
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1036
-- On LIDENT shift to state 285
-- On LBRACKET shift to state 1041
-- On LBRACE shift to state 1043
-- On FALSE shift to state 1054
-- On COLONCOLON shift to state 1055
-- On BAR shift to state 1056
-- On type_longident shift to state 1049
-- On type_kind_variant shift to state 1072
-- On type_kind_record shift to state 1073
-- On simple_core_type_or_tuple shift to state 1074
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 1078
-- On exception_longident shift to state 1080
-- On core_type2 shift to state 1084
-- On core_type shift to state 1094
-- On constructor_declarations shift to state 1060
-- On constructor_declaration shift to state 1071
-- On constr_ident shift to state 1063
## Reductions:

State 1031:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_core_type2 -> UNDERSCORE . [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> UNDERSCORE

State 1032:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
exception_longident -> UIDENT . [ COLON ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND
--   reduce production constr_ident -> UIDENT
-- On COLON
--   reduce production exception_longident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 1033:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_ident -> TRUE . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> TRUE

State 1034:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_core_type2 -> QUOTE . ident [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On UIDENT shift to state 191
-- On LIDENT shift to state 192
-- On ident shift to state 1035
## Reductions:

State 1035:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_core_type2 -> QUOTE ident . [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> QUOTE ident

State 1036:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ error VAL TYPE STAR SEMISEMI OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ error VAL UIDENT TYPE STAR SEMISEMI OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On RPAREN shift to state 1037
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type_comma_list shift to state 1038
-- On core_type2 shift to state 937
-- On core_type shift to state 952
## Reductions:

State 1037:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_ident -> LPAREN RPAREN . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> LPAREN RPAREN

State 1038:
## Known stack suffix:
## LPAREN core_type_comma_list
## LR(1) items:
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
simple_core_type2 -> LPAREN core_type_comma_list . RPAREN type_longident [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On RPAREN shift to state 1039
-- On COMMA shift to state 950
## Reductions:

State 1039:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN
## LR(1) items:
simple_core_type -> LPAREN core_type_comma_list RPAREN . [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
simple_core_type2 -> LPAREN core_type_comma_list RPAREN . type_longident [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 280
-- On type_longident shift to state 1040
-- On mod_ext_longident shift to state 282
## Reductions:
-- On error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND
--   reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN

State 1040:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN type_longident
## LR(1) items:
simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident . [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident

State 1041:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_ident -> LBRACKET . RBRACKET [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On RBRACKET shift to state 1042
## Reductions:

State 1042:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_ident -> LBRACKET RBRACKET . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> LBRACKET RBRACKET

State 1043:
## Known stack suffix:
## LBRACE
## LR(1) items:
type_kind_record -> LBRACE . label_declarations opt_semi RBRACE opt_annot_level [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On MUTABLE shift to state 956
-- On mutable_flag shift to state 957
-- On label_declarations shift to state 1044
-- On label_declaration shift to state 970
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1044:
## Known stack suffix:
## LBRACE label_declarations
## LR(1) items:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind_record -> LBRACE label_declarations . opt_semi RBRACE opt_annot_level [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On SEMI shift to state 963
-- On opt_semi shift to state 1045
## Reductions:
-- On RBRACE
--   reduce production opt_semi ->

State 1045:
## Known stack suffix:
## LBRACE label_declarations opt_semi
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi . RBRACE opt_annot_level [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On RBRACE shift to state 1046
## Reductions:

State 1046:
## Known stack suffix:
## LBRACE label_declarations opt_semi RBRACE
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi RBRACE . opt_annot_level [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On SHARP shift to state 1047
-- On opt_annot_level shift to state 1053
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND
--   reduce production opt_annot_level ->

State 1047:
## Known stack suffix:
## SHARP
## LR(1) items:
opt_annot_level -> SHARP . simple_core_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 5
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 280
-- On type_longident shift to state 1049
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1052
-- On mod_ext_longident shift to state 282
## Reductions:

State 1048:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type_comma_list shift to state 1038
-- On core_type2 shift to state 937
-- On core_type shift to state 952
## Reductions:

State 1049:
## Known stack suffix:
## type_longident
## LR(1) items:
simple_core_type2 -> type_longident . [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> type_longident

State 1050:
## Known stack suffix:
## simple_core_type2
## LR(1) items:
simple_core_type -> simple_core_type2 . [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
simple_core_type2 -> simple_core_type2 . type_longident [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 280
-- On type_longident shift to state 1051
-- On mod_ext_longident shift to state 282
## Reductions:
-- On error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND
--   reduce production simple_core_type -> simple_core_type2

State 1051:
## Known stack suffix:
## simple_core_type2 type_longident
## LR(1) items:
simple_core_type2 -> simple_core_type2 type_longident . [ error WITH VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_core_type2 -> simple_core_type2 type_longident

State 1052:
## Known stack suffix:
## SHARP simple_core_type
## LR(1) items:
opt_annot_level -> SHARP simple_core_type . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_annot_level -> SHARP simple_core_type

State 1053:
## Known stack suffix:
## LBRACE label_declarations opt_semi RBRACE opt_annot_level
## LR(1) items:
type_kind_record -> LBRACE label_declarations opt_semi RBRACE opt_annot_level . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind_record -> LBRACE label_declarations opt_semi RBRACE opt_annot_level

State 1054:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_ident -> FALSE . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> FALSE

State 1055:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
constr_ident -> COLONCOLON . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> COLONCOLON

State 1056:
## Known stack suffix:
## EQUAL BAR
## LR(1) items:
type_kind -> EQUAL BAR . type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UIDENT shift to state 1057
-- On TRUE shift to state 1033
-- On LPAREN shift to state 1058
-- On LBRACKET shift to state 1041
-- On FALSE shift to state 1054
-- On COLONCOLON shift to state 1055
-- On type_kind_variant shift to state 1059
-- On constructor_declarations shift to state 1060
-- On constructor_declaration shift to state 1071
-- On constr_ident shift to state 1063
## Reductions:

State 1057:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constr_ident -> UIDENT

State 1058:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ error VAL TYPE SHARP SEMISEMI OPEN OF MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On RPAREN shift to state 1037
## Reductions:

State 1059:
## Known stack suffix:
## EQUAL BAR type_kind_variant
## LR(1) items:
type_kind -> EQUAL BAR type_kind_variant . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL BAR type_kind_variant

State 1060:
## Known stack suffix:
## constructor_declarations
## LR(1) items:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
type_kind_variant -> constructor_declarations . opt_annot_level [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On SHARP shift to state 1047
-- On BAR shift to state 1061
-- On opt_annot_level shift to state 1070
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND
--   reduce production opt_annot_level ->

State 1061:
## Known stack suffix:
## constructor_declarations BAR
## LR(1) items:
constructor_declarations -> constructor_declarations BAR . constructor_declaration [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On UIDENT shift to state 1057
-- On TRUE shift to state 1033
-- On LPAREN shift to state 1058
-- On LBRACKET shift to state 1041
-- On FALSE shift to state 1054
-- On COLONCOLON shift to state 1055
-- On constructor_declaration shift to state 1062
-- On constr_ident shift to state 1063
## Reductions:

State 1062:
## Known stack suffix:
## constructor_declarations BAR constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declarations BAR constructor_declaration . [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration

State 1063:
## Known stack suffix:
## constr_ident
## LR(1) items:
constructor_declaration -> constr_ident . constructor_arguments [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On OF shift to state 1064
-- On constructor_arguments shift to state 1069
## Reductions:
-- On error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND
--   reduce production constructor_arguments ->

State 1064:
## Known stack suffix:
## OF
## LR(1) items:
constructor_arguments -> OF . core_type_list [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 5
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 280
-- On type_longident shift to state 1049
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1065
-- On mod_ext_longident shift to state 282
-- On core_type_list shift to state 1066
## Reductions:

State 1065:
## Known stack suffix:
## simple_core_type
## LR(1) items:
core_type_list -> simple_core_type . [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_list -> simple_core_type

State 1066:
## Known stack suffix:
## OF core_type_list
## LR(1) items:
constructor_arguments -> OF core_type_list . [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
core_type_list -> core_type_list . STAR simple_core_type [ error VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
-- On STAR shift to state 1067
## Reductions:
-- On error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND
--   reduce production constructor_arguments -> OF core_type_list

State 1067:
## Known stack suffix:
## core_type_list STAR
## LR(1) items:
core_type_list -> core_type_list STAR . simple_core_type [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 5
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 280
-- On type_longident shift to state 1049
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1068
-- On mod_ext_longident shift to state 282
## Reductions:

State 1068:
## Known stack suffix:
## core_type_list STAR simple_core_type
## LR(1) items:
core_type_list -> core_type_list STAR simple_core_type . [ error WITH VAL TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type_list -> core_type_list STAR simple_core_type

State 1069:
## Known stack suffix:
## constr_ident constructor_arguments
## LR(1) items:
constructor_declaration -> constr_ident constructor_arguments . [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declaration -> constr_ident constructor_arguments

State 1070:
## Known stack suffix:
## constructor_declarations opt_annot_level
## LR(1) items:
type_kind_variant -> constructor_declarations opt_annot_level . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind_variant -> constructor_declarations opt_annot_level

State 1071:
## Known stack suffix:
## constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declaration . [ error VAL TYPE SHARP SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor_declarations -> constructor_declaration

State 1072:
## Known stack suffix:
## EQUAL type_kind_variant
## LR(1) items:
type_kind -> EQUAL type_kind_variant . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL type_kind_variant

State 1073:
## Known stack suffix:
## EQUAL type_kind_record
## LR(1) items:
type_kind -> EQUAL type_kind_record . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL type_kind_record

State 1074:
## Known stack suffix:
## simple_core_type_or_tuple
## LR(1) items:
core_type2 -> simple_core_type_or_tuple . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type2 -> simple_core_type_or_tuple

State 1075:
## Known stack suffix:
## simple_core_type
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
simple_core_type_or_tuple -> simple_core_type . STAR core_type_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On STAR shift to state 1076
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND
--   reduce production simple_core_type_or_tuple -> simple_core_type

State 1076:
## Known stack suffix:
## simple_core_type STAR
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type STAR . core_type_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 5
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 280
-- On type_longident shift to state 1049
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1065
-- On mod_ext_longident shift to state 282
-- On core_type_list shift to state 1077
## Reductions:

State 1077:
## Known stack suffix:
## simple_core_type STAR core_type_list
## LR(1) items:
core_type_list -> core_type_list . STAR simple_core_type [ error WITH VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
simple_core_type_or_tuple -> simple_core_type STAR core_type_list . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On STAR shift to state 1067
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND
--   reduce production simple_core_type_or_tuple -> simple_core_type STAR core_type_list

State 1078:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
exception_longident -> mod_ext_longident . DOT UIDENT [ COLON ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ error WITH VAL UIDENT TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 1079
## Reductions:

State 1079:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
exception_longident -> mod_ext_longident DOT . UIDENT [ COLON ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ error WITH VAL UIDENT TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSBRACE LIDENT LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UIDENT shift to state 932
-- On LIDENT shift to state 284
## Reductions:

State 1080:
## Known stack suffix:
## exception_longident
## LR(1) items:
core_type -> exception_longident . COLON simple_core_type SEMI core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On COLON shift to state 1081
## Reductions:

State 1081:
## Known stack suffix:
## exception_longident COLON
## LR(1) items:
core_type -> exception_longident COLON . simple_core_type SEMI core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 5
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 222
-- On type_longident shift to state 920
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 1082
-- On mod_ext_longident shift to state 224
## Reductions:

State 1082:
## Known stack suffix:
## exception_longident COLON simple_core_type
## LR(1) items:
core_type -> exception_longident COLON simple_core_type . SEMI core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On SEMI shift to state 1083
## Reductions:

State 1083:
## Known stack suffix:
## exception_longident COLON simple_core_type SEMI
## LR(1) items:
core_type -> exception_longident COLON simple_core_type SEMI . core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 917
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 285
-- On type_longident shift to state 1049
-- On simple_core_type_or_tuple shift to state 1074
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 1078
-- On exception_longident shift to state 1080
-- On core_type2 shift to state 1084
-- On core_type shift to state 1093
## Reductions:

State 1084:
## Known stack suffix:
## core_type2
## LR(1) items:
core_type -> core_type2 . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
core_type2 -> core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On MINUSBRACE shift to state 1085
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND
--   reduce production core_type -> core_type2

State 1085:
## Known stack suffix:
## core_type2 MINUSBRACE
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE . core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 1086
## Reductions:

State 1086:
## Known stack suffix:
## core_type2 MINUSBRACE core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type . BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On BAR shift to state 1087
## Reductions:

State 1087:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR . core_type BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 1088
## Reductions:

State 1088:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type . BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On BAR shift to state 1089
## Reductions:

State 1089:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR . core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 1090
## Reductions:

State 1090:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type . BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On BRACEMINUSGREATER shift to state 1091
## Reductions:

State 1091:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER
## LR(1) items:
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER . core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 5
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 280
-- On type_longident shift to state 1049
-- On simple_core_type_or_tuple shift to state 1074
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 282
-- On core_type2 shift to state 1092
## Reductions:

State 1092:
## Known stack suffix:
## core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2
## LR(1) items:
core_type2 -> core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSBRACE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
-- On MINUSBRACE shift to state 1085
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND
--   reduce production core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2

State 1093:
## Known stack suffix:
## exception_longident COLON simple_core_type SEMI core_type
## LR(1) items:
core_type -> exception_longident COLON simple_core_type SEMI core_type . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production core_type -> exception_longident COLON simple_core_type SEMI core_type

State 1094:
## Known stack suffix:
## EQUAL core_type
## LR(1) items:
type_kind -> EQUAL core_type . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL core_type . EQUAL type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL core_type . EQUAL type_kind_record [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On EQUAL shift to state 1095
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND
--   reduce production type_kind -> EQUAL core_type

State 1095:
## Known stack suffix:
## EQUAL core_type EQUAL
## LR(1) items:
type_kind -> EQUAL core_type EQUAL . type_kind_variant [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_kind -> EQUAL core_type EQUAL . type_kind_record [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UIDENT shift to state 1057
-- On TRUE shift to state 1033
-- On LPAREN shift to state 1058
-- On LBRACKET shift to state 1041
-- On LBRACE shift to state 1043
-- On FALSE shift to state 1054
-- On COLONCOLON shift to state 1055
-- On type_kind_variant shift to state 1096
-- On type_kind_record shift to state 1097
-- On constructor_declarations shift to state 1060
-- On constructor_declaration shift to state 1071
-- On constr_ident shift to state 1063
## Reductions:

State 1096:
## Known stack suffix:
## EQUAL core_type EQUAL type_kind_variant
## LR(1) items:
type_kind -> EQUAL core_type EQUAL type_kind_variant . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL core_type EQUAL type_kind_variant

State 1097:
## Known stack suffix:
## EQUAL core_type EQUAL type_kind_record
## LR(1) items:
type_kind -> EQUAL core_type EQUAL type_kind_record . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_kind -> EQUAL core_type EQUAL type_kind_record

State 1098:
## Known stack suffix:
## opt_fun type_parameters LIDENT type_kind
## LR(1) items:
type_declaration -> opt_fun type_parameters LIDENT type_kind . constraints [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On constraints shift to state 1099
## Default reduction:
-- After reading the next token, reduce production constraints ->

State 1099:
## Known stack suffix:
## opt_fun type_parameters LIDENT type_kind constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
type_declaration -> opt_fun type_parameters LIDENT type_kind constraints . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On CONSTRAINT shift to state 1100
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production type_declaration -> opt_fun type_parameters LIDENT type_kind constraints

State 1100:
## Known stack suffix:
## constraints CONSTRAINT
## LR(1) items:
constraints -> constraints CONSTRAINT . constrain [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 1101
-- On constrain shift to state 1104
## Reductions:

State 1101:
## Known stack suffix:
## core_type
## LR(1) items:
constrain -> core_type . EQUAL core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On EQUAL shift to state 1102
## Reductions:

State 1102:
## Known stack suffix:
## core_type EQUAL
## LR(1) items:
constrain -> core_type EQUAL . core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 917
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 285
-- On type_longident shift to state 1049
-- On simple_core_type_or_tuple shift to state 1074
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 1078
-- On exception_longident shift to state 1080
-- On core_type2 shift to state 1084
-- On core_type shift to state 1103
## Reductions:

State 1103:
## Known stack suffix:
## core_type EQUAL core_type
## LR(1) items:
constrain -> core_type EQUAL core_type . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constrain -> core_type EQUAL core_type

State 1104:
## Known stack suffix:
## constraints CONSTRAINT constrain
## LR(1) items:
constraints -> constraints CONSTRAINT constrain . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraints -> constraints CONSTRAINT constrain

State 1105:
## Known stack suffix:
## type_declaration
## LR(1) items:
type_declarations -> type_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declarations -> type_declaration

State 1106:
## Known stack suffix:
## OPEN
## LR(1) items:
signature_item -> OPEN . mod_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On mod_longident shift to state 1107
## Reductions:

State 1107:
## Known stack suffix:
## OPEN mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END DOT ]
signature_item -> OPEN mod_longident . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On DOT shift to state 105
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature_item -> OPEN mod_longident

State 1108:
## Known stack suffix:
## MODULE
## LR(1) items:
signature_item -> MODULE . UIDENT module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> MODULE . TYPE ident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> MODULE . TYPE ident EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1109
-- On TYPE shift to state 1268
## Reductions:

State 1109:
## Known stack suffix:
## MODULE UIDENT
## LR(1) items:
signature_item -> MODULE UIDENT . module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1110
-- On COLON shift to state 1264
-- On module_declaration shift to state 1267
## Reductions:

State 1110:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_declaration -> LPAREN . UIDENT COLON module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1111
## Reductions:

State 1111:
## Known stack suffix:
## LPAREN UIDENT
## LR(1) items:
module_declaration -> LPAREN UIDENT . COLON module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On COLON shift to state 1112
## Reductions:

State 1112:
## Known stack suffix:
## LPAREN UIDENT COLON
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON . module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1262
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1113:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_type -> LPAREN . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> LPAREN . module_type error [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1259
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1114:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 1115:
## Known stack suffix:
## SIG
## LR(1) items:
module_type -> SIG . signature END [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> SIG . signature error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On signature shift to state 1116
## Default reduction:
-- After reading the next token, reduce production signature ->

State 1116:
## Known stack suffix:
## SIG signature
## LR(1) items:
module_type -> SIG signature . END [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> SIG signature . error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
signature -> signature . signature_item [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature -> signature . signature_item SEMISEMI [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On error shift to state 1117
-- On VAL shift to state 1013
-- On TYPE shift to state 1023
-- On OPEN shift to state 1106
-- On MODULE shift to state 1108
-- On LEVEL shift to state 1118
-- On INCLUDE shift to state 1136
-- On EXTERNAL shift to state 1233
-- On EXCEPTION shift to state 1240
-- On END shift to state 1256
-- On signature_item shift to state 1257
## Reductions:

State 1117:
## Known stack suffix:
## SIG signature error
## LR(1) items:
module_type -> SIG signature error . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> SIG signature error

State 1118:
## Known stack suffix:
## LEVEL
## LR(1) items:
signature_item -> LEVEL . level_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1119
-- On level_declaration shift to state 1135
## Reductions:

State 1119:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_declaration -> UIDENT . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
level_declaration -> UIDENT . level_repr [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LESSWORD shift to state 1120
-- On GREATERWORD shift to state 1126
-- On EQUAL shift to state 1132
-- On level_repr shift to state 1134
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production level_declaration -> UIDENT

State 1120:
## Known stack suffix:
## LESSWORD
## LR(1) items:
level_repr -> LESSWORD . THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On THAN shift to state 1121
## Reductions:

State 1121:
## Known stack suffix:
## LESSWORD THAN
## LR(1) items:
level_repr -> LESSWORD THAN . level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level_comma_list shift to state 1122
-- On level shift to state 1125
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production level_comma_list ->

State 1122:
## Known stack suffix:
## LESSWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
level_repr -> LESSWORD THAN level_comma_list . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On COMMA shift to state 1123
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production level_repr -> LESSWORD THAN level_comma_list

State 1123:
## Known stack suffix:
## level_comma_list COMMA
## LR(1) items:
level_comma_list -> level_comma_list COMMA . level [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level shift to state 1124
## Reductions:

State 1124:
## Known stack suffix:
## level_comma_list COMMA level
## LR(1) items:
level_comma_list -> level_comma_list COMMA level . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_comma_list -> level_comma_list COMMA level

State 1125:
## Known stack suffix:
## level
## LR(1) items:
level_comma_list -> level . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_comma_list -> level

State 1126:
## Known stack suffix:
## GREATERWORD
## LR(1) items:
level_repr -> GREATERWORD . THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
level_repr -> GREATERWORD . THAN level_comma_list LESSWORD THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On THAN shift to state 1127
## Reductions:

State 1127:
## Known stack suffix:
## GREATERWORD THAN
## LR(1) items:
level_repr -> GREATERWORD THAN . level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
level_repr -> GREATERWORD THAN . level_comma_list LESSWORD THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level_comma_list shift to state 1128
-- On level shift to state 1125
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production level_comma_list ->

State 1128:
## Known stack suffix:
## GREATERWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
level_repr -> GREATERWORD THAN level_comma_list . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
level_repr -> GREATERWORD THAN level_comma_list . LESSWORD THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On LESSWORD shift to state 1129
-- On COMMA shift to state 1123
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production level_repr -> GREATERWORD THAN level_comma_list

State 1129:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD
## LR(1) items:
level_repr -> GREATERWORD THAN level_comma_list LESSWORD . THAN level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On THAN shift to state 1130
## Reductions:

State 1130:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD THAN
## LR(1) items:
level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN . level_comma_list [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level_comma_list shift to state 1131
-- On level shift to state 1125
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END COMMA AND
--   reduce production level_comma_list ->

State 1131:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END COMMA AND ]
level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On COMMA shift to state 1123
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list

State 1132:
## Known stack suffix:
## EQUAL
## LR(1) items:
level_repr -> EQUAL . level [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 159
-- On PREFIXOP shift to state 160
-- On principal shift to state 183
-- On mod_ext_longident shift to state 184
-- On level_longident shift to state 187
-- On level shift to state 1133
## Reductions:

State 1133:
## Known stack suffix:
## EQUAL level
## LR(1) items:
level_repr -> EQUAL level . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_repr -> EQUAL level

State 1134:
## Known stack suffix:
## UIDENT level_repr
## LR(1) items:
level_declaration -> UIDENT level_repr . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_declaration -> UIDENT level_repr

State 1135:
## Known stack suffix:
## LEVEL level_declaration
## LR(1) items:
signature_item -> LEVEL level_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> LEVEL level_declaration

State 1136:
## Known stack suffix:
## INCLUDE
## LR(1) items:
signature_item -> INCLUDE . module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1232
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1137:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_type -> LPAREN . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> LPAREN . module_type error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1229
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1138:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_type -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1139
## Reductions:

State 1139:
## Known stack suffix:
## FUNCTOR LPAREN
## LR(1) items:
module_type -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1140
## Reductions:

State 1140:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On COLON shift to state 1141
## Reductions:

State 1141:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1195
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1142:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_type -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On LPAREN shift to state 1143
## Reductions:

State 1143:
## Known stack suffix:
## FUNCTOR LPAREN
## LR(1) items:
module_type -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UIDENT shift to state 1144
## Reductions:

State 1144:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On COLON shift to state 1145
## Reductions:

State 1145:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1147
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1146:
## Known stack suffix:
## mty_longident
## LR(1) items:
module_type -> mty_longident . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> mty_longident

State 1147:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1181
## Reductions:

State 1148:
## Known stack suffix:
## module_type WITH
## LR(1) items:
module_type -> module_type WITH . with_constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On TYPE shift to state 1149
-- On MODULE shift to state 1155
-- On LEVEL shift to state 1159
-- On with_constraints shift to state 1177
-- On with_constraint shift to state 1180
## Reductions:

State 1149:
## Known stack suffix:
## TYPE
## LR(1) items:
with_constraint -> TYPE . type_parameters label_longident EQUAL core_type constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On LPAREN shift to state 886
-- On EQUAL shift to state 887
-- On type_parameters shift to state 1150
-- On type_parameter shift to state 999
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->
-- On UIDENT LIDENT
--   reduce production type_parameters ->

State 1150:
## Known stack suffix:
## TYPE type_parameters
## LR(1) items:
with_constraint -> TYPE type_parameters . label_longident EQUAL core_type constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On label_longident shift to state 1151
## Reductions:

State 1151:
## Known stack suffix:
## TYPE type_parameters label_longident
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident . EQUAL core_type constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On EQUAL shift to state 1152
## Reductions:

State 1152:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident EQUAL . core_type constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UNDERSCORE shift to state 911
-- On UIDENT shift to state 917
-- On QUOTE shift to state 914
-- On LPAREN shift to state 919
-- On LIDENT shift to state 218
-- On type_longident shift to state 920
-- On simple_core_type_or_tuple shift to state 921
-- On simple_core_type2 shift to state 922
-- On simple_core_type shift to state 924
-- On mod_ext_longident shift to state 930
-- On exception_longident shift to state 933
-- On core_type2 shift to state 937
-- On core_type shift to state 1153
## Reductions:

State 1153:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL core_type
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident EQUAL core_type . constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On constraints shift to state 1154
## Default reduction:
-- After reading the next token, reduce production constraints ->

State 1154:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL core_type constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On CONSTRAINT shift to state 994
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints

State 1155:
## Known stack suffix:
## MODULE
## LR(1) items:
with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 30
-- On mod_longident shift to state 1156
## Reductions:

State 1156:
## Known stack suffix:
## MODULE mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ EQUAL DOT ]
with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On EQUAL shift to state 1157
-- On DOT shift to state 42
## Reductions:

State 1157:
## Known stack suffix:
## MODULE mod_longident EQUAL
## LR(1) items:
with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On mod_ext_longident shift to state 1158
## Reductions:

State 1158:
## Known stack suffix:
## MODULE mod_longident EQUAL mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT AND ]
with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 8
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident

State 1159:
## Known stack suffix:
## LEVEL
## LR(1) items:
with_constraint -> LEVEL . level_strict_longident level_repr [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 1160
-- On mod_longident shift to state 1161
-- On level_strict_longident shift to state 1164
## Reductions:

State 1160:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_strict_longident -> UIDENT . [ LESSWORD GREATERWORD EQUAL ]
mod_longident -> UIDENT . [ DOT ]
## Transitions:
## Reductions:
-- On LESSWORD GREATERWORD EQUAL
--   reduce production level_strict_longident -> UIDENT
-- On DOT
--   reduce production mod_longident -> UIDENT

State 1161:
## Known stack suffix:
## mod_longident
## LR(1) items:
level_strict_longident -> mod_longident . DOT UIDENT [ LESSWORD GREATERWORD EQUAL ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
## Transitions:
-- On DOT shift to state 1162
## Reductions:

State 1162:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
level_strict_longident -> mod_longident DOT . UIDENT [ LESSWORD GREATERWORD EQUAL ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
## Transitions:
-- On UIDENT shift to state 1163
## Reductions:

State 1163:
## Known stack suffix:
## mod_longident DOT UIDENT
## LR(1) items:
level_strict_longident -> mod_longident DOT UIDENT . [ LESSWORD GREATERWORD EQUAL ]
mod_longident -> mod_longident DOT UIDENT . [ DOT ]
## Transitions:
## Reductions:
-- On LESSWORD GREATERWORD EQUAL
--   reduce production level_strict_longident -> mod_longident DOT UIDENT
-- On DOT
--   reduce production mod_longident -> mod_longident DOT UIDENT

State 1164:
## Known stack suffix:
## LEVEL level_strict_longident
## LR(1) items:
with_constraint -> LEVEL level_strict_longident . level_repr [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On LESSWORD shift to state 1165
-- On GREATERWORD shift to state 1168
-- On EQUAL shift to state 1174
-- On level_repr shift to state 1176
## Reductions:

State 1165:
## Known stack suffix:
## LESSWORD
## LR(1) items:
level_repr -> LESSWORD . THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On THAN shift to state 1166
## Reductions:

State 1166:
## Known stack suffix:
## LESSWORD THAN
## LR(1) items:
level_repr -> LESSWORD THAN . level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1167
-- On level shift to state 176
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND
--   reduce production level_comma_list ->

State 1167:
## Known stack suffix:
## LESSWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND ]
level_repr -> LESSWORD THAN level_comma_list . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On COMMA shift to state 174
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production level_repr -> LESSWORD THAN level_comma_list

State 1168:
## Known stack suffix:
## GREATERWORD
## LR(1) items:
level_repr -> GREATERWORD . THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
level_repr -> GREATERWORD . THAN level_comma_list LESSWORD THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On THAN shift to state 1169
## Reductions:

State 1169:
## Known stack suffix:
## GREATERWORD THAN
## LR(1) items:
level_repr -> GREATERWORD THAN . level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
level_repr -> GREATERWORD THAN . level_comma_list LESSWORD THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1170
-- On level shift to state 176
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND
--   reduce production level_comma_list ->

State 1170:
## Known stack suffix:
## GREATERWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET LESSWORD INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND ]
level_repr -> GREATERWORD THAN level_comma_list . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
level_repr -> GREATERWORD THAN level_comma_list . LESSWORD THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On LESSWORD shift to state 1171
-- On COMMA shift to state 174
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production level_repr -> GREATERWORD THAN level_comma_list

State 1171:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD
## LR(1) items:
level_repr -> GREATERWORD THAN level_comma_list LESSWORD . THAN level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On THAN shift to state 1172
## Reductions:

State 1172:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD THAN
## LR(1) items:
level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN . level_comma_list [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1173
-- On level shift to state 176
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND
--   reduce production level_comma_list ->

State 1173:
## Known stack suffix:
## GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF COMMA AND ]
level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On COMMA shift to state 174
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND
--   reduce production level_repr -> GREATERWORD THAN level_comma_list LESSWORD THAN level_comma_list

State 1174:
## Known stack suffix:
## EQUAL
## LR(1) items:
level_repr -> EQUAL . level [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level shift to state 1175
## Reductions:

State 1175:
## Known stack suffix:
## EQUAL level
## LR(1) items:
level_repr -> EQUAL level . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_repr -> EQUAL level

State 1176:
## Known stack suffix:
## LEVEL level_strict_longident level_repr
## LR(1) items:
with_constraint -> LEVEL level_strict_longident level_repr . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraint -> LEVEL level_strict_longident level_repr

State 1177:
## Known stack suffix:
## module_type WITH with_constraints
## LR(1) items:
module_type -> module_type WITH with_constraints . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
with_constraints -> with_constraints . AND with_constraint [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On AND shift to state 1178
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production module_type -> module_type WITH with_constraints

State 1178:
## Known stack suffix:
## with_constraints AND
## LR(1) items:
with_constraints -> with_constraints AND . with_constraint [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
-- On TYPE shift to state 1149
-- On MODULE shift to state 1155
-- On LEVEL shift to state 1159
-- On with_constraint shift to state 1179
## Reductions:

State 1179:
## Known stack suffix:
## with_constraints AND with_constraint
## LR(1) items:
with_constraints -> with_constraints AND with_constraint . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraints -> with_constraints AND with_constraint

State 1180:
## Known stack suffix:
## with_constraint
## LR(1) items:
with_constraints -> with_constraint . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraints -> with_constraint

State 1181:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . module_type_arrow module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On MINUSGREATER shift to state 1182
-- On MINUSBRACE shift to state 1183
-- On module_type_arrow shift to state 1188
## Reductions:

State 1182:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
module_type_arrow -> MINUSGREATER . [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type_arrow -> MINUSGREATER

State 1183:
## Known stack suffix:
## MINUSBRACE
## LR(1) items:
module_type_arrow -> MINUSBRACE . level_comma_list BAR level_comma_list BRACEMINUSGREATER [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1184
-- On level shift to state 176
## Reductions:
-- On COMMA BAR
--   reduce production level_comma_list ->

State 1184:
## Known stack suffix:
## MINUSBRACE level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ COMMA BAR ]
module_type_arrow -> MINUSBRACE level_comma_list . BAR level_comma_list BRACEMINUSGREATER [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
-- On COMMA shift to state 174
-- On BAR shift to state 1185
## Reductions:

State 1185:
## Known stack suffix:
## MINUSBRACE level_comma_list BAR
## LR(1) items:
module_type_arrow -> MINUSBRACE level_comma_list BAR . level_comma_list BRACEMINUSGREATER [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1186
-- On level shift to state 176
## Reductions:
-- On COMMA BRACEMINUSGREATER
--   reduce production level_comma_list ->

State 1186:
## Known stack suffix:
## MINUSBRACE level_comma_list BAR level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ COMMA BRACEMINUSGREATER ]
module_type_arrow -> MINUSBRACE level_comma_list BAR level_comma_list . BRACEMINUSGREATER [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
-- On COMMA shift to state 174
-- On BRACEMINUSGREATER shift to state 1187
## Reductions:

State 1187:
## Known stack suffix:
## MINUSBRACE level_comma_list BAR level_comma_list BRACEMINUSGREATER
## LR(1) items:
module_type_arrow -> MINUSBRACE level_comma_list BAR level_comma_list BRACEMINUSGREATER . [ UIDENT SIG LPAREN LIDENT FUNCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type_arrow -> MINUSBRACE level_comma_list BAR level_comma_list BRACEMINUSGREATER

State 1188:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow . module_type [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1189
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1189:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On WITH shift to state 1148
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type

State 1190:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
mty_longident -> mod_ext_longident . DOT ident [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 1191
## Reductions:

State 1191:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
mty_longident -> mod_ext_longident DOT . ident [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UIDENT shift to state 1192
-- On LIDENT shift to state 215
-- On ident shift to state 1193
## Reductions:

State 1192:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 1193:
## Known stack suffix:
## mod_ext_longident DOT ident
## LR(1) items:
mty_longident -> mod_ext_longident DOT ident . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mty_longident -> mod_ext_longident DOT ident

State 1194:
## Known stack suffix:
## ident
## LR(1) items:
mty_longident -> ident . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mty_longident -> ident

State 1195:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1196
## Reductions:

State 1196:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . module_type_arrow module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On MINUSGREATER shift to state 1182
-- On MINUSBRACE shift to state 1183
-- On module_type_arrow shift to state 1197
## Reductions:

State 1197:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow . module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1199
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1198:
## Known stack suffix:
## mty_longident
## LR(1) items:
module_type -> mty_longident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> mty_longident

State 1199:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type
## LR(1) items:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 1200
## Reductions:
-- On error VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type

State 1200:
## Known stack suffix:
## module_type WITH
## LR(1) items:
module_type -> module_type WITH . with_constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On TYPE shift to state 1201
-- On MODULE shift to state 1207
-- On LEVEL shift to state 1217
-- On with_constraints shift to state 1220
-- On with_constraint shift to state 1223
## Reductions:

State 1201:
## Known stack suffix:
## TYPE
## LR(1) items:
with_constraint -> TYPE . type_parameters label_longident EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On SHARP shift to state 883
-- On PLUS shift to state 884
-- On MINUS shift to state 885
-- On LPAREN shift to state 886
-- On EQUAL shift to state 887
-- On type_parameters shift to state 1202
-- On type_parameter shift to state 999
-- On opt_variance shift to state 892
## Reductions:
-- On QUOTE
--   reduce production opt_variance ->
-- On UIDENT LIDENT
--   reduce production type_parameters ->

State 1202:
## Known stack suffix:
## TYPE type_parameters
## LR(1) items:
with_constraint -> TYPE type_parameters . label_longident EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 30
-- On LIDENT shift to state 79
-- On mod_longident shift to state 80
-- On label_longident shift to state 1203
## Reductions:

State 1203:
## Known stack suffix:
## TYPE type_parameters label_longident
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident . EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On EQUAL shift to state 1204
## Reductions:

State 1204:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident EQUAL . core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 1031
-- On UIDENT shift to state 917
-- On QUOTE shift to state 1034
-- On LPAREN shift to state 1048
-- On LIDENT shift to state 285
-- On type_longident shift to state 1049
-- On simple_core_type_or_tuple shift to state 1074
-- On simple_core_type2 shift to state 1050
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 1078
-- On exception_longident shift to state 1080
-- On core_type2 shift to state 1084
-- On core_type shift to state 1205
## Reductions:

State 1205:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL core_type
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident EQUAL core_type . constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On constraints shift to state 1206
## Default reduction:
-- After reading the next token, reduce production constraints ->

State 1206:
## Known stack suffix:
## TYPE type_parameters label_longident EQUAL core_type constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END CONSTRAINT AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On CONSTRAINT shift to state 1100
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints

State 1207:
## Known stack suffix:
## MODULE
## LR(1) items:
with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 30
-- On mod_longident shift to state 1208
## Reductions:

State 1208:
## Known stack suffix:
## MODULE mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ EQUAL DOT ]
with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On EQUAL shift to state 1209
-- On DOT shift to state 42
## Reductions:

State 1209:
## Known stack suffix:
## MODULE mod_longident EQUAL
## LR(1) items:
with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 1210
-- On mod_ext_longident shift to state 1211
## Reductions:

State 1210:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_ext_longident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> UIDENT

State 1211:
## Known stack suffix:
## MODULE mod_longident EQUAL mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On LPAREN shift to state 1212
-- On DOT shift to state 1215
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND
--   reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident

State 1212:
## Known stack suffix:
## mod_ext_longident LPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
-- On UIDENT shift to state 5
-- On mod_ext_longident shift to state 1213
## Reductions:

State 1213:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
-- On RPAREN shift to state 1214
-- On LPAREN shift to state 4
-- On DOT shift to state 8
## Reductions:

State 1214:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident RPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN

State 1215:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
-- On UIDENT shift to state 1216
## Reductions:

State 1216:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 1217:
## Known stack suffix:
## LEVEL
## LR(1) items:
with_constraint -> LEVEL . level_strict_longident level_repr [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UIDENT shift to state 1160
-- On mod_longident shift to state 1161
-- On level_strict_longident shift to state 1218
## Reductions:

State 1218:
## Known stack suffix:
## LEVEL level_strict_longident
## LR(1) items:
with_constraint -> LEVEL level_strict_longident . level_repr [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On LESSWORD shift to state 1120
-- On GREATERWORD shift to state 1126
-- On EQUAL shift to state 1132
-- On level_repr shift to state 1219
## Reductions:

State 1219:
## Known stack suffix:
## LEVEL level_strict_longident level_repr
## LR(1) items:
with_constraint -> LEVEL level_strict_longident level_repr . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraint -> LEVEL level_strict_longident level_repr

State 1220:
## Known stack suffix:
## module_type WITH with_constraints
## LR(1) items:
module_type -> module_type WITH with_constraints . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
with_constraints -> with_constraints . AND with_constraint [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On AND shift to state 1221
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production module_type -> module_type WITH with_constraints

State 1221:
## Known stack suffix:
## with_constraints AND
## LR(1) items:
with_constraints -> with_constraints AND . with_constraint [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On TYPE shift to state 1201
-- On MODULE shift to state 1207
-- On LEVEL shift to state 1217
-- On with_constraint shift to state 1222
## Reductions:

State 1222:
## Known stack suffix:
## with_constraints AND with_constraint
## LR(1) items:
with_constraints -> with_constraints AND with_constraint . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraints -> with_constraints AND with_constraint

State 1223:
## Known stack suffix:
## with_constraint
## LR(1) items:
with_constraints -> with_constraint . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_constraints -> with_constraint

State 1224:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
mty_longident -> mod_ext_longident . DOT ident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 1225
## Reductions:

State 1225:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
mty_longident -> mod_ext_longident DOT . ident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1226
-- On LIDENT shift to state 192
-- On ident shift to state 1227
## Reductions:

State 1226:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 1227:
## Known stack suffix:
## mod_ext_longident DOT ident
## LR(1) items:
mty_longident -> mod_ext_longident DOT ident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mty_longident -> mod_ext_longident DOT ident

State 1228:
## Known stack suffix:
## ident
## LR(1) items:
mty_longident -> ident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mty_longident -> ident

State 1229:
## Known stack suffix:
## LPAREN module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
module_type -> LPAREN module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> LPAREN module_type . error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On error shift to state 1230
-- On WITH shift to state 1200
-- On RPAREN shift to state 1231
## Reductions:

State 1230:
## Known stack suffix:
## LPAREN module_type error
## LR(1) items:
module_type -> LPAREN module_type error . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> LPAREN module_type error

State 1231:
## Known stack suffix:
## LPAREN module_type RPAREN
## LR(1) items:
module_type -> LPAREN module_type RPAREN . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> LPAREN module_type RPAREN

State 1232:
## Known stack suffix:
## INCLUDE module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> INCLUDE module_type . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 1200
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature_item -> INCLUDE module_type

State 1233:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
signature_item -> EXTERNAL . val_ident_colon core_type_scheme EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1234
## Reductions:

State 1234:
## Known stack suffix:
## EXTERNAL val_ident_colon
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon . core_type_scheme EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 1235
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1235:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme . EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1236
## Reductions:

State 1236:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL . primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On STRING shift to state 1237
-- On primitive_declaration shift to state 1239
## Reductions:

State 1237:
## Known stack suffix:
## STRING
## LR(1) items:
primitive_declaration -> STRING . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
primitive_declaration -> STRING . primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On STRING shift to state 1237
-- On primitive_declaration shift to state 1238
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production primitive_declaration -> STRING

State 1238:
## Known stack suffix:
## STRING primitive_declaration
## LR(1) items:
primitive_declaration -> STRING primitive_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitive_declaration -> STRING primitive_declaration

State 1239:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration

State 1240:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
signature_item -> EXCEPTION . UIDENT exception_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1241
## Reductions:

State 1241:
## Known stack suffix:
## EXCEPTION UIDENT
## LR(1) items:
signature_item -> EXCEPTION UIDENT . exception_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On OF shift to state 1242
-- On COLON shift to state 1244
-- On exception_declaration shift to state 1252
-- On exception_arguments shift to state 1253
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL END
--   reduce production exception_arguments ->

State 1242:
## Known stack suffix:
## OF
## LR(1) items:
exception_arguments -> OF . extcore_type_list [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END ]
## Transitions:
-- On UNDERSCORE shift to state 155
-- On UIDENT shift to state 159
-- On STAR shift to state 157
-- On QUOTE shift to state 190
-- On PREFIXOP shift to state 160
-- On LPAREN shift to state 194
-- On LIDENT shift to state 280
-- On LBRACKETLESS shift to state 162
-- On LBRACKETGREATER shift to state 177
-- On type_longident shift to state 286
-- On simple_extcore_type2 shift to state 288
-- On simple_extcore_type shift to state 292
-- On principal shift to state 183
-- On mod_ext_longident shift to state 293
-- On level_longident shift to state 187
-- On level shift to state 188
-- On extcore_type_list shift to state 1243
-- On core_type_row_bounds shift to state 298
-- On core_type_bounds shift to state 299
## Reductions:

State 1243:
## Known stack suffix:
## OF extcore_type_list
## LR(1) items:
exception_arguments -> OF extcore_type_list . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END ]
extcore_type_list -> extcore_type_list . STAR simple_extcore_type [ error VAL TYPE STAR SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END ]
## Transitions:
-- On STAR shift to state 296
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END
--   reduce production exception_arguments -> OF extcore_type_list

State 1244:
## Known stack suffix:
## COLON
## LR(1) items:
exception_declaration -> COLON . QUOTE LIDENT exception_arguments [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
exception_declaration -> COLON . QUOTE LIDENT exception_arguments EQUAL constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On QUOTE shift to state 1245
## Reductions:

State 1245:
## Known stack suffix:
## COLON QUOTE
## LR(1) items:
exception_declaration -> COLON QUOTE . LIDENT exception_arguments [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
exception_declaration -> COLON QUOTE . LIDENT exception_arguments EQUAL constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LIDENT shift to state 1246
## Reductions:

State 1246:
## Known stack suffix:
## COLON QUOTE LIDENT
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT . exception_arguments [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
exception_declaration -> COLON QUOTE LIDENT . exception_arguments EQUAL constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On OF shift to state 1242
-- On exception_arguments shift to state 1247
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END
--   reduce production exception_arguments ->

State 1247:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
exception_declaration -> COLON QUOTE LIDENT exception_arguments . EQUAL constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1248
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production exception_declaration -> COLON QUOTE LIDENT exception_arguments

State 1248:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments EQUAL
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL . constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On LPAREN shift to state 1249
-- On LBRACKET shift to state 1250
-- On FALSE shift to state 89
-- On mod_longident shift to state 104
-- On constr_longident shift to state 1251
## Reductions:

State 1249:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On RPAREN shift to state 71
## Reductions:

State 1250:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On RBRACKET shift to state 77
## Reductions:

State 1251:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments EQUAL constr_longident
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL constr_longident . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL constr_longident

State 1252:
## Known stack suffix:
## EXCEPTION UIDENT exception_declaration
## LR(1) items:
signature_item -> EXCEPTION UIDENT exception_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> EXCEPTION UIDENT exception_declaration

State 1253:
## Known stack suffix:
## exception_arguments
## LR(1) items:
exception_declaration -> exception_arguments . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
exception_declaration -> exception_arguments . EQUAL constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1254
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production exception_declaration -> exception_arguments

State 1254:
## Known stack suffix:
## exception_arguments EQUAL
## LR(1) items:
exception_declaration -> exception_arguments EQUAL . constr_longident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On TRUE shift to state 61
-- On LPAREN shift to state 1249
-- On LBRACKET shift to state 1250
-- On FALSE shift to state 89
-- On mod_longident shift to state 104
-- On constr_longident shift to state 1255
## Reductions:

State 1255:
## Known stack suffix:
## exception_arguments EQUAL constr_longident
## LR(1) items:
exception_declaration -> exception_arguments EQUAL constr_longident . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> exception_arguments EQUAL constr_longident

State 1256:
## Known stack suffix:
## SIG signature END
## LR(1) items:
module_type -> SIG signature END . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> SIG signature END

State 1257:
## Known stack suffix:
## signature signature_item
## LR(1) items:
signature -> signature signature_item . [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature -> signature signature_item . SEMISEMI [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On SEMISEMI shift to state 1258
## Reductions:
-- On error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature -> signature signature_item

State 1258:
## Known stack suffix:
## signature signature_item SEMISEMI
## LR(1) items:
signature -> signature signature_item SEMISEMI . [ error VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature -> signature signature_item SEMISEMI

State 1259:
## Known stack suffix:
## LPAREN module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
module_type -> LPAREN module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
module_type -> LPAREN module_type . error [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On error shift to state 1260
-- On WITH shift to state 1200
-- On RPAREN shift to state 1261
## Reductions:

State 1260:
## Known stack suffix:
## LPAREN module_type error
## LR(1) items:
module_type -> LPAREN module_type error . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> LPAREN module_type error

State 1261:
## Known stack suffix:
## LPAREN module_type RPAREN
## LR(1) items:
module_type -> LPAREN module_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> LPAREN module_type RPAREN

State 1262:
## Known stack suffix:
## LPAREN UIDENT COLON module_type
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type . RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1263
## Reductions:

State 1263:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN . module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1110
-- On COLON shift to state 1264
-- On module_declaration shift to state 1266
## Reductions:

State 1264:
## Known stack suffix:
## COLON
## LR(1) items:
module_declaration -> COLON . module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1265
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1265:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_declaration -> COLON module_type . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 1200
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production module_declaration -> COLON module_type

State 1266:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN module_declaration
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration

State 1267:
## Known stack suffix:
## MODULE UIDENT module_declaration
## LR(1) items:
signature_item -> MODULE UIDENT module_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> MODULE UIDENT module_declaration

State 1268:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
signature_item -> MODULE TYPE . ident [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> MODULE TYPE . ident EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 191
-- On LIDENT shift to state 192
-- On ident shift to state 1269
## Reductions:

State 1269:
## Known stack suffix:
## MODULE TYPE ident
## LR(1) items:
signature_item -> MODULE TYPE ident . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> MODULE TYPE ident . EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1270
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature_item -> MODULE TYPE ident

State 1270:
## Known stack suffix:
## MODULE TYPE ident EQUAL
## LR(1) items:
signature_item -> MODULE TYPE ident EQUAL . module_type [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1271
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1271:
## Known stack suffix:
## MODULE TYPE ident EQUAL module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
signature_item -> MODULE TYPE ident EQUAL module_type . [ error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 1200
## Reductions:
-- On error VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION END
--   reduce production signature_item -> MODULE TYPE ident EQUAL module_type

State 1272:
## Known stack suffix:
## SIG signature END
## LR(1) items:
module_type -> SIG signature END . [ WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_type -> SIG signature END

State 1273:
## Known stack suffix:
## LPAREN UIDENT COLON module_type
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type . RPAREN module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1274
## Reductions:

State 1274:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type RPAREN . module_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1006
-- On EQUAL shift to state 1275
-- On COLON shift to state 1391
-- On module_binding shift to state 1395
## Reductions:

State 1275:
## Known stack suffix:
## EQUAL
## LR(1) items:
module_binding -> EQUAL . module_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1390
-- On mod_longident shift to state 1342
## Reductions:

State 1276:
## Known stack suffix:
## STRUCT
## LR(1) items:
module_expr -> STRUCT . structure END [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> STRUCT . structure error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TYPE shift to state 1277
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On SEMISEMI shift to state 1279
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LEVEL shift to state 1291
-- On LET shift to state 1293
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On INCLUDE shift to state 1311
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On structure_tail shift to state 1361
-- On structure_item shift to state 1362
-- On structure shift to state 1387
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1370
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1277:
## Known stack suffix:
## TYPE
## LR(1) items:
structure_item -> TYPE . type_declarations [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declarations shift to state 1278
-- On type_declaration shift to state 1105
-- On opt_fun shift to state 1027
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 1278:
## Known stack suffix:
## TYPE type_declarations
## LR(1) items:
structure_item -> TYPE type_declarations . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
type_declarations -> type_declarations . AND type_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On AND shift to state 1025
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> TYPE type_declarations

State 1279:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
structure_tail -> SEMISEMI . [ error END ]
structure_tail -> SEMISEMI . seq_expr structure_tail [ error END ]
structure_tail -> SEMISEMI . structure_item structure_tail [ error END ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TYPE shift to state 1277
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LEVEL shift to state 1291
-- On LET shift to state 1293
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On INCLUDE shift to state 1311
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On structure_item shift to state 1383
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1385
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:
-- On error END
--   reduce production structure_tail -> SEMISEMI

State 1280:
## Known stack suffix:
## OPEN
## LR(1) items:
structure_item -> OPEN . mod_longident [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On mod_longident shift to state 1281
## Reductions:

State 1281:
## Known stack suffix:
## OPEN mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT ]
structure_item -> OPEN mod_longident . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On DOT shift to state 105
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> OPEN mod_longident

State 1282:
## Known stack suffix:
## MODULE
## LR(1) items:
structure_item -> MODULE . UIDENT module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
structure_item -> MODULE . TYPE ident EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1283
-- On TYPE shift to state 1379
## Reductions:

State 1283:
## Known stack suffix:
## MODULE UIDENT
## LR(1) items:
structure_item -> MODULE UIDENT . module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1284
-- On EQUAL shift to state 1289
-- On COLON shift to state 1373
-- On module_binding shift to state 1378
## Reductions:

State 1284:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_binding -> LPAREN . UIDENT COLON module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1285
## Reductions:

State 1285:
## Known stack suffix:
## LPAREN UIDENT
## LR(1) items:
module_binding -> LPAREN UIDENT . COLON module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On COLON shift to state 1286
## Reductions:

State 1286:
## Known stack suffix:
## LPAREN UIDENT COLON
## LR(1) items:
module_binding -> LPAREN UIDENT COLON . module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1287
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1287:
## Known stack suffix:
## LPAREN UIDENT COLON module_type
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type . RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1288
## Reductions:

State 1288:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type RPAREN . module_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1284
-- On EQUAL shift to state 1289
-- On COLON shift to state 1373
-- On module_binding shift to state 1377
## Reductions:

State 1289:
## Known stack suffix:
## EQUAL
## LR(1) items:
module_binding -> EQUAL . module_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1372
-- On mod_longident shift to state 1330
## Reductions:

State 1290:
## Known stack suffix:
## STRUCT
## LR(1) items:
module_expr -> STRUCT . structure END [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> STRUCT . structure error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TYPE shift to state 1277
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On SEMISEMI shift to state 1279
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LEVEL shift to state 1291
-- On LET shift to state 1293
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On INCLUDE shift to state 1311
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On structure_tail shift to state 1361
-- On structure_item shift to state 1362
-- On structure shift to state 1367
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1370
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1291:
## Known stack suffix:
## LEVEL
## LR(1) items:
structure_item -> LEVEL . level_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1119
-- On level_declaration shift to state 1292
## Reductions:

State 1292:
## Known stack suffix:
## LEVEL level_declaration
## LR(1) items:
structure_item -> LEVEL level_declaration . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> LEVEL level_declaration

State 1293:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . rec_flag let_bindings IN seq_expr [ error TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET . rec_flag let_bindings [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 1294
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 1294:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
expr -> LET rec_flag . let_bindings IN seq_expr [ error TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET rec_flag . let_bindings [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 1295
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 1304
-- On mod_longident shift to state 41
-- On let_bindings shift to state 1307
-- On let_binding shift to state 1310
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 1295:
## Known stack suffix:
## val_ident
## LR(1) items:
let_binding -> val_ident . fun_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
simple_pattern -> val_ident . [ EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EQUAL shift to state 1296
-- On COLON shift to state 755
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On type_constraint shift to state 1298
-- On subtractive shift to state 412
-- On simple_pattern shift to state 1301
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On fun_binding shift to state 1303
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:
-- On COMMA COLONCOLON BAR AS
--   reduce production simple_pattern -> val_ident

State 1296:
## Known stack suffix:
## EQUAL
## LR(1) items:
fun_binding -> EQUAL . seq_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1297
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 1297:
## Known stack suffix:
## EQUAL seq_expr
## LR(1) items:
fun_binding -> EQUAL seq_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> EQUAL seq_expr

State 1298:
## Known stack suffix:
## type_constraint
## LR(1) items:
fun_binding -> type_constraint . EQUAL seq_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On EQUAL shift to state 1299
## Reductions:

State 1299:
## Known stack suffix:
## type_constraint EQUAL
## LR(1) items:
fun_binding -> type_constraint EQUAL . seq_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1300
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 1300:
## Known stack suffix:
## type_constraint EQUAL seq_expr
## LR(1) items:
fun_binding -> type_constraint EQUAL seq_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> type_constraint EQUAL seq_expr

State 1301:
## Known stack suffix:
## simple_pattern
## LR(1) items:
fun_binding -> simple_pattern . fun_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EQUAL shift to state 1296
-- On COLON shift to state 755
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 418
-- On type_constraint shift to state 1298
-- On subtractive shift to state 412
-- On simple_pattern shift to state 1301
-- On signed_constant shift to state 415
-- On mod_longident shift to state 41
-- On fun_binding shift to state 1302
-- On constr_longident shift to state 634
-- On constant shift to state 424
## Reductions:

State 1302:
## Known stack suffix:
## simple_pattern fun_binding
## LR(1) items:
fun_binding -> simple_pattern fun_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fun_binding -> simple_pattern fun_binding

State 1303:
## Known stack suffix:
## val_ident fun_binding
## LR(1) items:
let_binding -> val_ident fun_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_binding -> val_ident fun_binding

State 1304:
## Known stack suffix:
## pattern
## LR(1) items:
let_binding -> pattern . EQUAL seq_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
pattern -> pattern . AS val_ident [ EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On EQUAL shift to state 1305
-- On COMMA shift to state 637
-- On COLONCOLON shift to state 420
-- On BAR shift to state 639
-- On AS shift to state 641
## Reductions:

State 1305:
## Known stack suffix:
## pattern EQUAL
## LR(1) items:
let_binding -> pattern EQUAL . seq_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On WHILE shift to state 47
-- On UIDENT shift to state 60
-- On TRY shift to state 390
-- On TRUE shift to state 61
-- On STRING shift to state 62
-- On RAISE shift to state 392
-- On PREFIXOP shift to state 399
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 403
-- On LPAREN shift to state 400
-- On LIDENT shift to state 72
-- On LET shift to state 410
-- On LBRACKETBAR shift to state 402
-- On LBRACKET shift to state 451
-- On LBRACE shift to state 452
-- On LAZY shift to state 459
-- On INT shift to state 87
-- On IF shift to state 462
-- On FUNCTION shift to state 465
-- On FUN shift to state 471
-- On FOR shift to state 474
-- On FLOAT shift to state 88
-- On FALSE shift to state 89
-- On CHARVECT shift to state 90
-- On CHAR shift to state 460
-- On BEGIN shift to state 461
-- On ASSERT shift to state 531
-- On val_longident shift to state 532
-- On val_ident shift to state 533
-- On subtractive shift to state 537
-- On simple_expr shift to state 538
-- On seq_expr shift to state 1306
-- On mod_longident shift to state 545
-- On expr_comma_list shift to state 548
-- On expr shift to state 594
-- On constr_longident shift to state 555
-- On constant shift to state 558
## Reductions:

State 1306:
## Known stack suffix:
## pattern EQUAL seq_expr
## LR(1) items:
let_binding -> pattern EQUAL seq_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_binding -> pattern EQUAL seq_expr

State 1307:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
expr -> LET rec_flag let_bindings . IN seq_expr [ error TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
structure_item -> LET rec_flag let_bindings . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On IN shift to state 727
-- On AND shift to state 1308
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> LET rec_flag let_bindings

State 1308:
## Known stack suffix:
## let_bindings AND
## LR(1) items:
let_bindings -> let_bindings AND . let_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 1295
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 1304
-- On mod_longident shift to state 41
-- On let_binding shift to state 1309
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 1309:
## Known stack suffix:
## let_bindings AND let_binding
## LR(1) items:
let_bindings -> let_bindings AND let_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_bindings -> let_bindings AND let_binding

State 1310:
## Known stack suffix:
## let_binding
## LR(1) items:
let_bindings -> let_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION END AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_bindings -> let_binding

State 1311:
## Known stack suffix:
## INCLUDE
## LR(1) items:
structure_item -> INCLUDE . module_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1352
-- On mod_longident shift to state 1330
## Reductions:

State 1312:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_expr -> LPAREN . module_expr COLON module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN . module_expr COLON module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN . module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN . module_expr error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1345
-- On mod_longident shift to state 1330
## Reductions:

State 1313:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_expr -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On LPAREN shift to state 1314
## Reductions:

State 1314:
## Known stack suffix:
## FUNCTOR LPAREN
## LR(1) items:
module_expr -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 1315
## Reductions:

State 1315:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On COLON shift to state 1316
## Reductions:

State 1316:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1317
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1317:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1318
## Reductions:

State 1318:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On MINUSGREATER shift to state 1319
## Reductions:

State 1319:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1320
-- On mod_longident shift to state 1330
## Reductions:

State 1320:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On LPAREN shift to state 1321
## Reductions:
-- On error TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON
--   reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr

State 1321:
## Known stack suffix:
## module_expr LPAREN
## LR(1) items:
module_expr -> module_expr LPAREN . module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1343
-- On mod_longident shift to state 1342
## Reductions:

State 1322:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_expr -> LPAREN . module_expr COLON module_type RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN . module_expr COLON module_type error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN . module_expr RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN . module_expr error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1323
-- On mod_longident shift to state 1330
## Reductions:

State 1323:
## Known stack suffix:
## LPAREN module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN COLON ]
module_expr -> LPAREN module_expr . COLON module_type RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN module_expr . COLON module_type error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN module_expr . RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN module_expr . error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On error shift to state 1324
-- On RPAREN shift to state 1325
-- On LPAREN shift to state 1321
-- On COLON shift to state 1326
## Reductions:

State 1324:
## Known stack suffix:
## LPAREN module_expr error
## LR(1) items:
module_expr -> LPAREN module_expr error . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr error

State 1325:
## Known stack suffix:
## LPAREN module_expr RPAREN
## LR(1) items:
module_expr -> LPAREN module_expr RPAREN . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr RPAREN

State 1326:
## Known stack suffix:
## LPAREN module_expr COLON
## LR(1) items:
module_expr -> LPAREN module_expr COLON . module_type RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN module_expr COLON . module_type error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1327
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1327:
## Known stack suffix:
## LPAREN module_expr COLON module_type
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type . RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> LPAREN module_expr COLON module_type . error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
## Transitions:
-- On error shift to state 1328
-- On WITH shift to state 1200
-- On RPAREN shift to state 1329
## Reductions:

State 1328:
## Known stack suffix:
## LPAREN module_expr COLON module_type error
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type error . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr COLON module_type error

State 1329:
## Known stack suffix:
## LPAREN module_expr COLON module_type RPAREN
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type RPAREN . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN

State 1330:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END DOT COLON ]
module_expr -> mod_longident . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On DOT shift to state 105
## Reductions:
-- On error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON
--   reduce production module_expr -> mod_longident

State 1331:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_expr -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1332
## Reductions:

State 1332:
## Known stack suffix:
## FUNCTOR LPAREN
## LR(1) items:
module_expr -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1333
## Reductions:

State 1333:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On COLON shift to state 1334
## Reductions:

State 1334:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1335
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1335:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1336
## Reductions:

State 1336:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On MINUSGREATER shift to state 1337
## Reductions:

State 1337:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_expr [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1338
-- On mod_longident shift to state 1342
## Reductions:

State 1338:
## Known stack suffix:
## FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
## LR(1) items:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1339
## Reductions:
-- On TYPE SEMISEMI RPAREN OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr

State 1339:
## Known stack suffix:
## module_expr LPAREN
## LR(1) items:
module_expr -> module_expr LPAREN . module_expr RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1340
-- On mod_longident shift to state 1342
## Reductions:

State 1340:
## Known stack suffix:
## module_expr LPAREN module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . RPAREN [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On RPAREN shift to state 1341
-- On LPAREN shift to state 1339
## Reductions:

State 1341:
## Known stack suffix:
## module_expr LPAREN module_expr RPAREN
## LR(1) items:
module_expr -> module_expr LPAREN module_expr RPAREN . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> module_expr LPAREN module_expr RPAREN

State 1342:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF DOT ]
module_expr -> mod_longident . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On DOT shift to state 42
## Reductions:
-- On TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production module_expr -> mod_longident

State 1343:
## Known stack suffix:
## module_expr LPAREN module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On RPAREN shift to state 1344
-- On LPAREN shift to state 1339
## Reductions:

State 1344:
## Known stack suffix:
## module_expr LPAREN module_expr RPAREN
## LR(1) items:
module_expr -> module_expr LPAREN module_expr RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> module_expr LPAREN module_expr RPAREN

State 1345:
## Known stack suffix:
## LPAREN module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN COLON ]
module_expr -> LPAREN module_expr . COLON module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN module_expr . COLON module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN module_expr . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN module_expr . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On error shift to state 1346
-- On RPAREN shift to state 1347
-- On LPAREN shift to state 1321
-- On COLON shift to state 1348
## Reductions:

State 1346:
## Known stack suffix:
## LPAREN module_expr error
## LR(1) items:
module_expr -> LPAREN module_expr error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr error

State 1347:
## Known stack suffix:
## LPAREN module_expr RPAREN
## LR(1) items:
module_expr -> LPAREN module_expr RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr RPAREN

State 1348:
## Known stack suffix:
## LPAREN module_expr COLON
## LR(1) items:
module_expr -> LPAREN module_expr COLON . module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN module_expr COLON . module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1349
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1349:
## Known stack suffix:
## LPAREN module_expr COLON module_type
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> LPAREN module_expr COLON module_type . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
## Transitions:
-- On error shift to state 1350
-- On WITH shift to state 1200
-- On RPAREN shift to state 1351
## Reductions:

State 1350:
## Known stack suffix:
## LPAREN module_expr COLON module_type error
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr COLON module_type error

State 1351:
## Known stack suffix:
## LPAREN module_expr COLON module_type RPAREN
## LR(1) items:
module_expr -> LPAREN module_expr COLON module_type RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN

State 1352:
## Known stack suffix:
## INCLUDE module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
structure_item -> INCLUDE module_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1321
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> INCLUDE module_expr

State 1353:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
structure_item -> EXTERNAL . val_ident_colon core_type_scheme EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1354
## Reductions:

State 1354:
## Known stack suffix:
## EXTERNAL val_ident_colon
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon . core_type_scheme EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 1355
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1355:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme . EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1356
## Reductions:

State 1356:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL . primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On STRING shift to state 1237
-- On primitive_declaration shift to state 1357
## Reductions:

State 1357:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration

State 1358:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
structure_item -> EXCEPTION . UIDENT exception_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1359
## Reductions:

State 1359:
## Known stack suffix:
## EXCEPTION UIDENT
## LR(1) items:
structure_item -> EXCEPTION UIDENT . exception_declaration [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On OF shift to state 1242
-- On COLON shift to state 1244
-- On exception_declaration shift to state 1360
-- On exception_arguments shift to state 1253
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL END
--   reduce production exception_arguments ->

State 1360:
## Known stack suffix:
## EXCEPTION UIDENT exception_declaration
## LR(1) items:
structure_item -> EXCEPTION UIDENT exception_declaration . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> EXCEPTION UIDENT exception_declaration

State 1361:
## Known stack suffix:
## structure_tail
## LR(1) items:
structure -> structure_tail . [ error END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure -> structure_tail

State 1362:
## Known stack suffix:
## structure_item
## LR(1) items:
structure_tail -> structure_item . structure_tail [ error END ]
## Transitions:
-- On TYPE shift to state 1277
-- On SEMISEMI shift to state 1279
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On LEVEL shift to state 1291
-- On LET shift to state 1363
-- On INCLUDE shift to state 1311
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On structure_tail shift to state 1366
-- On structure_item shift to state 1362
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1363:
## Known stack suffix:
## LET
## LR(1) items:
structure_item -> LET . rec_flag let_bindings [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 1364
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 1364:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
structure_item -> LET rec_flag . let_bindings [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 1295
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 1304
-- On mod_longident shift to state 41
-- On let_bindings shift to state 1365
-- On let_binding shift to state 1310
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 1365:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
let_bindings -> let_bindings . AND let_binding [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END AND ]
structure_item -> LET rec_flag let_bindings . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On AND shift to state 1308
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> LET rec_flag let_bindings

State 1366:
## Known stack suffix:
## structure_item structure_tail
## LR(1) items:
structure_tail -> structure_item structure_tail . [ error END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> structure_item structure_tail

State 1367:
## Known stack suffix:
## STRUCT structure
## LR(1) items:
module_expr -> STRUCT structure . END [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
module_expr -> STRUCT structure . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
-- On error shift to state 1368
-- On END shift to state 1369
## Reductions:

State 1368:
## Known stack suffix:
## STRUCT structure error
## LR(1) items:
module_expr -> STRUCT structure error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> STRUCT structure error

State 1369:
## Known stack suffix:
## STRUCT structure END
## LR(1) items:
module_expr -> STRUCT structure END . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> STRUCT structure END

State 1370:
## Known stack suffix:
## seq_expr
## LR(1) items:
structure -> seq_expr . structure_tail [ error END ]
## Transitions:
-- On TYPE shift to state 1277
-- On SEMISEMI shift to state 1279
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On LEVEL shift to state 1291
-- On LET shift to state 1363
-- On INCLUDE shift to state 1311
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On structure_tail shift to state 1371
-- On structure_item shift to state 1362
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1371:
## Known stack suffix:
## seq_expr structure_tail
## LR(1) items:
structure -> seq_expr structure_tail . [ error END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure -> seq_expr structure_tail

State 1372:
## Known stack suffix:
## EQUAL module_expr
## LR(1) items:
module_binding -> EQUAL module_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1321
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production module_binding -> EQUAL module_expr

State 1373:
## Known stack suffix:
## COLON
## LR(1) items:
module_binding -> COLON . module_type EQUAL module_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1374
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1374:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_binding -> COLON module_type . EQUAL module_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_type -> module_type . WITH with_constraints [ WITH EQUAL ]
## Transitions:
-- On WITH shift to state 1148
-- On EQUAL shift to state 1375
## Reductions:

State 1375:
## Known stack suffix:
## COLON module_type EQUAL
## LR(1) items:
module_binding -> COLON module_type EQUAL . module_expr [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 60
-- On STRUCT shift to state 1290
-- On LPAREN shift to state 1312
-- On FUNCTOR shift to state 1313
-- On module_expr shift to state 1376
-- On mod_longident shift to state 1330
## Reductions:

State 1376:
## Known stack suffix:
## COLON module_type EQUAL module_expr
## LR(1) items:
module_binding -> COLON module_type EQUAL module_expr . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On LPAREN shift to state 1321
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production module_binding -> COLON module_type EQUAL module_expr

State 1377:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN module_binding
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding

State 1378:
## Known stack suffix:
## MODULE UIDENT module_binding
## LR(1) items:
structure_item -> MODULE UIDENT module_binding . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> MODULE UIDENT module_binding

State 1379:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
structure_item -> MODULE TYPE . ident EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 1380
## Reductions:

State 1380:
## Known stack suffix:
## MODULE TYPE ident
## LR(1) items:
structure_item -> MODULE TYPE ident . EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On EQUAL shift to state 1381
## Reductions:

State 1381:
## Known stack suffix:
## MODULE TYPE ident EQUAL
## LR(1) items:
structure_item -> MODULE TYPE ident EQUAL . module_type [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On UIDENT shift to state 1114
-- On SIG shift to state 1115
-- On LPAREN shift to state 1137
-- On LIDENT shift to state 192
-- On FUNCTOR shift to state 1138
-- On mty_longident shift to state 1198
-- On module_type shift to state 1382
-- On mod_ext_longident shift to state 1224
-- On ident shift to state 1228
## Reductions:

State 1382:
## Known stack suffix:
## MODULE TYPE ident EQUAL module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ error WITH TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
structure_item -> MODULE TYPE ident EQUAL module_type . [ error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END ]
## Transitions:
-- On WITH shift to state 1200
## Reductions:
-- On error TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION END
--   reduce production structure_item -> MODULE TYPE ident EQUAL module_type

State 1383:
## Known stack suffix:
## SEMISEMI structure_item
## LR(1) items:
structure_tail -> SEMISEMI structure_item . structure_tail [ error END ]
## Transitions:
-- On TYPE shift to state 1277
-- On SEMISEMI shift to state 1279
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On LEVEL shift to state 1291
-- On LET shift to state 1363
-- On INCLUDE shift to state 1311
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On structure_tail shift to state 1384
-- On structure_item shift to state 1362
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1384:
## Known stack suffix:
## SEMISEMI structure_item structure_tail
## LR(1) items:
structure_tail -> SEMISEMI structure_item structure_tail . [ error END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> SEMISEMI structure_item structure_tail

State 1385:
## Known stack suffix:
## SEMISEMI seq_expr
## LR(1) items:
structure_tail -> SEMISEMI seq_expr . structure_tail [ error END ]
## Transitions:
-- On TYPE shift to state 1277
-- On SEMISEMI shift to state 1279
-- On OPEN shift to state 1280
-- On MODULE shift to state 1282
-- On LEVEL shift to state 1291
-- On LET shift to state 1363
-- On INCLUDE shift to state 1311
-- On EXTERNAL shift to state 1353
-- On EXCEPTION shift to state 1358
-- On structure_tail shift to state 1386
-- On structure_item shift to state 1362
## Reductions:
-- On error END
--   reduce production structure_tail ->

State 1386:
## Known stack suffix:
## SEMISEMI seq_expr structure_tail
## LR(1) items:
structure_tail -> SEMISEMI seq_expr structure_tail . [ error END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> SEMISEMI seq_expr structure_tail

State 1387:
## Known stack suffix:
## STRUCT structure
## LR(1) items:
module_expr -> STRUCT structure . END [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> STRUCT structure . error [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On error shift to state 1388
-- On END shift to state 1389
## Reductions:

State 1388:
## Known stack suffix:
## STRUCT structure error
## LR(1) items:
module_expr -> STRUCT structure error . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> STRUCT structure error

State 1389:
## Known stack suffix:
## STRUCT structure END
## LR(1) items:
module_expr -> STRUCT structure END . [ TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_expr -> STRUCT structure END

State 1390:
## Known stack suffix:
## EQUAL module_expr
## LR(1) items:
module_binding -> EQUAL module_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1339
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production module_binding -> EQUAL module_expr

State 1391:
## Known stack suffix:
## COLON
## LR(1) items:
module_binding -> COLON . module_type EQUAL module_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1392
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1392:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_binding -> COLON module_type . EQUAL module_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ WITH EQUAL ]
## Transitions:
-- On WITH shift to state 1148
-- On EQUAL shift to state 1393
## Reductions:

State 1393:
## Known stack suffix:
## COLON module_type EQUAL
## LR(1) items:
module_binding -> COLON module_type EQUAL . module_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1394
-- On mod_longident shift to state 1342
## Reductions:

State 1394:
## Known stack suffix:
## COLON module_type EQUAL module_expr
## LR(1) items:
module_binding -> COLON module_type EQUAL module_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1339
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production module_binding -> COLON module_type EQUAL module_expr

State 1395:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN module_binding
## LR(1) items:
module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding

State 1396:
## Known stack suffix:
## MODULE UIDENT module_binding
## LR(1) items:
structure_item -> MODULE UIDENT module_binding . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> MODULE UIDENT module_binding

State 1397:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
structure_item -> MODULE TYPE . ident EQUAL module_type [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 1398
## Reductions:

State 1398:
## Known stack suffix:
## MODULE TYPE ident
## LR(1) items:
structure_item -> MODULE TYPE ident . EQUAL module_type [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1399
## Reductions:

State 1399:
## Known stack suffix:
## MODULE TYPE ident EQUAL
## LR(1) items:
structure_item -> MODULE TYPE ident EQUAL . module_type [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1400
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1400:
## Known stack suffix:
## MODULE TYPE ident EQUAL module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ WITH TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
structure_item -> MODULE TYPE ident EQUAL module_type . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On WITH shift to state 1148
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> MODULE TYPE ident EQUAL module_type

State 1401:
## Known stack suffix:
## LEVEL
## LR(1) items:
structure_item -> LEVEL . level_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1402
-- On level_declaration shift to state 1404
## Reductions:

State 1402:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_declaration -> UIDENT . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
level_declaration -> UIDENT . level_repr [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LESSWORD shift to state 1165
-- On GREATERWORD shift to state 1168
-- On EQUAL shift to state 1174
-- On level_repr shift to state 1403
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production level_declaration -> UIDENT

State 1403:
## Known stack suffix:
## UIDENT level_repr
## LR(1) items:
level_declaration -> UIDENT level_repr . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production level_declaration -> UIDENT level_repr

State 1404:
## Known stack suffix:
## LEVEL level_declaration
## LR(1) items:
structure_item -> LEVEL level_declaration . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> LEVEL level_declaration

State 1405:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . rec_flag let_bindings IN seq_expr [ TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET . rec_flag let_bindings [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 1406
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 1406:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
expr -> LET rec_flag . let_bindings IN seq_expr [ TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET rec_flag . let_bindings [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 387
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 425
-- On mod_longident shift to state 41
-- On let_bindings shift to state 1407
-- On let_binding shift to state 731
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 1407:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
expr -> LET rec_flag let_bindings . IN seq_expr [ TYPE STAR SEMISEMI SEMI PLUS OR OPEN MODULE MINUSDOT MINUS LEVEL LET LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE IN EXTERNAL EXCEPTION EOF AND ]
structure_item -> LET rec_flag let_bindings . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On IN shift to state 838
-- On AND shift to state 729
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> LET rec_flag let_bindings

State 1408:
## Known stack suffix:
## INCLUDE
## LR(1) items:
structure_item -> INCLUDE . module_expr [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On STRUCT shift to state 1276
-- On LPAREN shift to state 1322
-- On FUNCTOR shift to state 1331
-- On module_expr shift to state 1409
-- On mod_longident shift to state 1342
## Reductions:

State 1409:
## Known stack suffix:
## INCLUDE module_expr
## LR(1) items:
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SEMISEMI OPEN MODULE LPAREN LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
structure_item -> INCLUDE module_expr . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1339
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> INCLUDE module_expr

State 1410:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
structure_item -> EXTERNAL . val_ident_colon core_type_scheme EQUAL primitive_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1411
## Reductions:

State 1411:
## Known stack suffix:
## EXTERNAL val_ident_colon
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon . core_type_scheme EQUAL primitive_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 1412
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1412:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme . EQUAL primitive_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1413
## Reductions:

State 1413:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL . primitive_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On STRING shift to state 1414
-- On primitive_declaration shift to state 1416
## Reductions:

State 1414:
## Known stack suffix:
## STRING
## LR(1) items:
primitive_declaration -> STRING . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
primitive_declaration -> STRING . primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On STRING shift to state 1414
-- On primitive_declaration shift to state 1415
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production primitive_declaration -> STRING

State 1415:
## Known stack suffix:
## STRING primitive_declaration
## LR(1) items:
primitive_declaration -> STRING primitive_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitive_declaration -> STRING primitive_declaration

State 1416:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration
## LR(1) items:
structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration

State 1417:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
structure_item -> EXCEPTION . UIDENT exception_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1418
## Reductions:

State 1418:
## Known stack suffix:
## EXCEPTION UIDENT
## LR(1) items:
structure_item -> EXCEPTION UIDENT . exception_declaration [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On OF shift to state 1419
-- On COLON shift to state 1421
-- On exception_declaration shift to state 1427
-- On exception_arguments shift to state 1428
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production exception_arguments ->

State 1419:
## Known stack suffix:
## OF
## LR(1) items:
exception_arguments -> OF . extcore_type_list [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 163
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 222
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 229
-- On principal shift to state 164
-- On mod_ext_longident shift to state 230
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_list shift to state 1420
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1420:
## Known stack suffix:
## OF extcore_type_list
## LR(1) items:
exception_arguments -> OF extcore_type_list . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
extcore_type_list -> extcore_type_list . STAR simple_extcore_type [ VAL TYPE STAR SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF ]
## Transitions:
-- On STAR shift to state 233
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production exception_arguments -> OF extcore_type_list

State 1421:
## Known stack suffix:
## COLON
## LR(1) items:
exception_declaration -> COLON . QUOTE LIDENT exception_arguments [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
exception_declaration -> COLON . QUOTE LIDENT exception_arguments EQUAL constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On QUOTE shift to state 1422
## Reductions:

State 1422:
## Known stack suffix:
## COLON QUOTE
## LR(1) items:
exception_declaration -> COLON QUOTE . LIDENT exception_arguments [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
exception_declaration -> COLON QUOTE . LIDENT exception_arguments EQUAL constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LIDENT shift to state 1423
## Reductions:

State 1423:
## Known stack suffix:
## COLON QUOTE LIDENT
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT . exception_arguments [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
exception_declaration -> COLON QUOTE LIDENT . exception_arguments EQUAL constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On OF shift to state 1419
-- On exception_arguments shift to state 1424
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production exception_arguments ->

State 1424:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
exception_declaration -> COLON QUOTE LIDENT exception_arguments . EQUAL constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1425
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production exception_declaration -> COLON QUOTE LIDENT exception_arguments

State 1425:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments EQUAL
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL . constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On LPAREN shift to state 36
-- On LBRACKET shift to state 38
-- On FALSE shift to state 40
-- On mod_longident shift to state 41
-- On constr_longident shift to state 1426
## Reductions:

State 1426:
## Known stack suffix:
## COLON QUOTE LIDENT exception_arguments EQUAL constr_longident
## LR(1) items:
exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL constr_longident . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> COLON QUOTE LIDENT exception_arguments EQUAL constr_longident

State 1427:
## Known stack suffix:
## EXCEPTION UIDENT exception_declaration
## LR(1) items:
structure_item -> EXCEPTION UIDENT exception_declaration . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_item -> EXCEPTION UIDENT exception_declaration

State 1428:
## Known stack suffix:
## exception_arguments
## LR(1) items:
exception_declaration -> exception_arguments . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
exception_declaration -> exception_arguments . EQUAL constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1429
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production exception_declaration -> exception_arguments

State 1429:
## Known stack suffix:
## exception_arguments EQUAL
## LR(1) items:
exception_declaration -> exception_arguments EQUAL . constr_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On LPAREN shift to state 36
-- On LBRACKET shift to state 38
-- On FALSE shift to state 40
-- On mod_longident shift to state 41
-- On constr_longident shift to state 1430
## Reductions:

State 1430:
## Known stack suffix:
## exception_arguments EQUAL constr_longident
## LR(1) items:
exception_declaration -> exception_arguments EQUAL constr_longident . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> exception_arguments EQUAL constr_longident

State 1431:
## Known stack suffix:
## SEMISEMI structure_item
## LR(1) items:
structure_tail -> SEMISEMI structure_item . structure_tail [ EOF ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1001
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On structure_tail shift to state 1435
-- On structure_item shift to state 1436
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 1432:
## Known stack suffix:
## LET
## LR(1) items:
structure_item -> LET . rec_flag let_bindings [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On REC shift to state 53
-- On rec_flag shift to state 1433
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING MINUSDOT MINUS LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR
--   reduce production rec_flag ->

State 1433:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
structure_item -> LET rec_flag . let_bindings [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UNDERSCORE shift to state 55
-- On UIDENT shift to state 30
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 58
-- On LIDENT shift to state 51
-- On LBRACKETBAR shift to state 365
-- On LBRACKET shift to state 371
-- On LBRACE shift to state 376
-- On INT shift to state 381
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On CHARVECT shift to state 383
-- On CHAR shift to state 384
-- On val_ident shift to state 387
-- On subtractive shift to state 412
-- On simple_pattern shift to state 414
-- On signed_constant shift to state 415
-- On pattern_comma_list shift to state 416
-- On pattern shift to state 425
-- On mod_longident shift to state 41
-- On let_bindings shift to state 1434
-- On let_binding shift to state 731
-- On constr_longident shift to state 422
-- On constant shift to state 424
## Reductions:

State 1434:
## Known stack suffix:
## LET rec_flag let_bindings
## LR(1) items:
let_bindings -> let_bindings . AND let_binding [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF AND ]
structure_item -> LET rec_flag let_bindings . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On AND shift to state 729
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production structure_item -> LET rec_flag let_bindings

State 1435:
## Known stack suffix:
## SEMISEMI structure_item structure_tail
## LR(1) items:
structure_tail -> SEMISEMI structure_item structure_tail . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> SEMISEMI structure_item structure_tail

State 1436:
## Known stack suffix:
## structure_item
## LR(1) items:
structure_tail -> structure_item . structure_tail [ EOF ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1001
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On structure_tail shift to state 1437
-- On structure_item shift to state 1436
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 1437:
## Known stack suffix:
## structure_item structure_tail
## LR(1) items:
structure_tail -> structure_item structure_tail . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> structure_item structure_tail

State 1438:
## Known stack suffix:
## SEMISEMI seq_expr
## LR(1) items:
structure_tail -> SEMISEMI seq_expr . structure_tail [ EOF ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1001
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On structure_tail shift to state 1439
-- On structure_item shift to state 1436
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 1439:
## Known stack suffix:
## SEMISEMI seq_expr structure_tail
## LR(1) items:
structure_tail -> SEMISEMI seq_expr structure_tail . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure_tail -> SEMISEMI seq_expr structure_tail

State 1440:
## Known stack suffix:
## structure_tail
## LR(1) items:
structure -> structure_tail . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure -> structure_tail

State 1441:
## Known stack suffix:
## flows_declaration structure
## LR(1) items:
implementation -> flows_declaration structure . EOF [ # ]
## Transitions:
-- On EOF shift to state 1442
## Reductions:

State 1442:
## Known stack suffix:
## flows_declaration structure EOF
## LR(1) items:
implementation -> flows_declaration structure EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production implementation -> flows_declaration structure EOF

State 1443:
## Known stack suffix:
## seq_expr
## LR(1) items:
structure -> seq_expr . structure_tail [ EOF ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1001
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On structure_tail shift to state 1444
-- On structure_item shift to state 1436
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 1444:
## Known stack suffix:
## seq_expr structure_tail
## LR(1) items:
structure -> seq_expr structure_tail . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production structure -> seq_expr structure_tail

State 1445:
## Known stack suffix:
##
## LR(1) items:
interface' -> . interface [ # ]
## Transitions:
-- On FLOW shift to state 14
-- On interface shift to state 1446
-- On flows_declaration shift to state 1447
## Reductions:
-- On VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF AFFECTS
--   reduce production flows_declaration ->

State 1446:
## Known stack suffix:
## interface
## LR(1) items:
interface' -> interface . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept interface

State 1447:
## Known stack suffix:
## flows_declaration
## LR(1) items:
interface -> flows_declaration . affects raises signature EOF [ # ]
## Transitions:
-- On AFFECTS shift to state 1448
-- On affects shift to state 1450
## Reductions:
-- On VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production affects ->

State 1448:
## Known stack suffix:
## AFFECTS
## LR(1) items:
affects -> AFFECTS . level_comma_list [ VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1449
-- On level shift to state 176
## Reductions:
-- On VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF COMMA
--   reduce production level_comma_list ->

State 1449:
## Known stack suffix:
## AFFECTS level_comma_list
## LR(1) items:
affects -> AFFECTS level_comma_list . [ VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
level_comma_list -> level_comma_list . COMMA level [ VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF COMMA ]
## Transitions:
-- On COMMA shift to state 174
## Reductions:
-- On VAL TYPE RAISES OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production affects -> AFFECTS level_comma_list

State 1450:
## Known stack suffix:
## flows_declaration affects
## LR(1) items:
interface -> flows_declaration affects . raises signature EOF [ # ]
## Transitions:
-- On RAISES shift to state 1451
-- On raises shift to state 1453
## Reductions:
-- On VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production raises ->

State 1451:
## Known stack suffix:
## RAISES
## LR(1) items:
raises -> RAISES . level_comma_list [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 163
-- On PREFIXOP shift to state 15
-- On principal shift to state 164
-- On mod_ext_longident shift to state 165
-- On level_longident shift to state 168
-- On level_comma_list shift to state 1452
-- On level shift to state 176
## Reductions:
-- On VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF COMMA
--   reduce production level_comma_list ->

State 1452:
## Known stack suffix:
## RAISES level_comma_list
## LR(1) items:
level_comma_list -> level_comma_list . COMMA level [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF COMMA ]
raises -> RAISES level_comma_list . [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On COMMA shift to state 174
## Reductions:
-- On VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production raises -> RAISES level_comma_list

State 1453:
## Known stack suffix:
## flows_declaration affects raises
## LR(1) items:
interface -> flows_declaration affects raises . signature EOF [ # ]
## Transitions:
-- On signature shift to state 1454
## Default reduction:
-- After reading the next token, reduce production signature ->

State 1454:
## Known stack suffix:
## flows_declaration affects raises signature
## LR(1) items:
interface -> flows_declaration affects raises signature . EOF [ # ]
signature -> signature . signature_item [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature -> signature . signature_item SEMISEMI [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On VAL shift to state 1455
-- On TYPE shift to state 1458
-- On OPEN shift to state 1460
-- On MODULE shift to state 1462
-- On LEVEL shift to state 1477
-- On INCLUDE shift to state 1479
-- On EXTERNAL shift to state 1481
-- On EXCEPTION shift to state 1486
-- On EOF shift to state 1489
-- On signature_item shift to state 1490
## Reductions:

State 1455:
## Known stack suffix:
## VAL
## LR(1) items:
signature_item -> VAL . val_ident_colon core_type_scheme [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1456
## Reductions:

State 1456:
## Known stack suffix:
## VAL val_ident_colon
## LR(1) items:
signature_item -> VAL val_ident_colon . core_type_scheme [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 1457
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1457:
## Known stack suffix:
## VAL val_ident_colon core_type_scheme
## LR(1) items:
signature_item -> VAL val_ident_colon core_type_scheme . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> VAL val_ident_colon core_type_scheme

State 1458:
## Known stack suffix:
## TYPE
## LR(1) items:
signature_item -> TYPE . type_declarations [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On NONEQ shift to state 878
-- On type_declarations shift to state 1459
-- On type_declaration shift to state 1000
-- On opt_fun shift to state 882
## Reductions:
-- On SHARP QUOTE PLUS MINUS LPAREN LIDENT EQUAL
--   reduce production opt_fun ->

State 1459:
## Known stack suffix:
## TYPE type_declarations
## LR(1) items:
signature_item -> TYPE type_declarations . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
type_declarations -> type_declarations . AND type_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF AND ]
## Transitions:
-- On AND shift to state 880
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature_item -> TYPE type_declarations

State 1460:
## Known stack suffix:
## OPEN
## LR(1) items:
signature_item -> OPEN . mod_longident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On mod_longident shift to state 1461
## Reductions:

State 1461:
## Known stack suffix:
## OPEN mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF DOT ]
signature_item -> OPEN mod_longident . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On DOT shift to state 42
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature_item -> OPEN mod_longident

State 1462:
## Known stack suffix:
## MODULE
## LR(1) items:
signature_item -> MODULE . UIDENT module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> MODULE . TYPE ident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> MODULE . TYPE ident EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1463
-- On TYPE shift to state 1473
## Reductions:

State 1463:
## Known stack suffix:
## MODULE UIDENT
## LR(1) items:
signature_item -> MODULE UIDENT . module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1464
-- On COLON shift to state 1469
-- On module_declaration shift to state 1472
## Reductions:

State 1464:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_declaration -> LPAREN . UIDENT COLON module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1465
## Reductions:

State 1465:
## Known stack suffix:
## LPAREN UIDENT
## LR(1) items:
module_declaration -> LPAREN UIDENT . COLON module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On COLON shift to state 1466
## Reductions:

State 1466:
## Known stack suffix:
## LPAREN UIDENT COLON
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON . module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1467
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1467:
## Known stack suffix:
## LPAREN UIDENT COLON module_type
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type . RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
## Transitions:
-- On WITH shift to state 1148
-- On RPAREN shift to state 1468
## Reductions:

State 1468:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN . module_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1464
-- On COLON shift to state 1469
-- On module_declaration shift to state 1471
## Reductions:

State 1469:
## Known stack suffix:
## COLON
## LR(1) items:
module_declaration -> COLON . module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1470
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1470:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_declaration -> COLON module_type . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On WITH shift to state 1148
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production module_declaration -> COLON module_type

State 1471:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN module_declaration
## LR(1) items:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration

State 1472:
## Known stack suffix:
## MODULE UIDENT module_declaration
## LR(1) items:
signature_item -> MODULE UIDENT module_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> MODULE UIDENT module_declaration

State 1473:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
signature_item -> MODULE TYPE . ident [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> MODULE TYPE . ident EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 1474
## Reductions:

State 1474:
## Known stack suffix:
## MODULE TYPE ident
## LR(1) items:
signature_item -> MODULE TYPE ident . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> MODULE TYPE ident . EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1475
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature_item -> MODULE TYPE ident

State 1475:
## Known stack suffix:
## MODULE TYPE ident EQUAL
## LR(1) items:
signature_item -> MODULE TYPE ident EQUAL . module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1476
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1476:
## Known stack suffix:
## MODULE TYPE ident EQUAL module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> MODULE TYPE ident EQUAL module_type . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On WITH shift to state 1148
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature_item -> MODULE TYPE ident EQUAL module_type

State 1477:
## Known stack suffix:
## LEVEL
## LR(1) items:
signature_item -> LEVEL . level_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1402
-- On level_declaration shift to state 1478
## Reductions:

State 1478:
## Known stack suffix:
## LEVEL level_declaration
## LR(1) items:
signature_item -> LEVEL level_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> LEVEL level_declaration

State 1479:
## Known stack suffix:
## INCLUDE
## LR(1) items:
signature_item -> INCLUDE . module_type [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1009
-- On SIG shift to state 1010
-- On LPAREN shift to state 1113
-- On LIDENT shift to state 215
-- On FUNCTOR shift to state 1142
-- On mty_longident shift to state 1146
-- On module_type shift to state 1480
-- On mod_ext_longident shift to state 1190
-- On ident shift to state 1194
## Reductions:

State 1480:
## Known stack suffix:
## INCLUDE module_type
## LR(1) items:
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature_item -> INCLUDE module_type . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On WITH shift to state 1148
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature_item -> INCLUDE module_type

State 1481:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
signature_item -> EXTERNAL . val_ident_colon core_type_scheme EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On LPAREN shift to state 1014
-- On LIDENT shift to state 1018
-- On LABEL shift to state 1020
-- On val_ident_colon shift to state 1482
## Reductions:

State 1482:
## Known stack suffix:
## EXTERNAL val_ident_colon
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon . core_type_scheme EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UNDERSCORE shift to state 195
-- On UIDENT shift to state 196
-- On STAR shift to state 197
-- On QUOTE shift to state 213
-- On PREFIXOP shift to state 15
-- On LPAREN shift to state 217
-- On LIDENT shift to state 218
-- On LBRACKETLESS shift to state 199
-- On LBRACKETGREATER shift to state 205
-- On type_longident shift to state 219
-- On simple_extcore_type_or_tuple shift to state 220
-- On simple_extcore_type2 shift to state 221
-- On simple_extcore_type shift to state 227
-- On principal shift to state 164
-- On mod_ext_longident shift to state 237
-- On level_longident shift to state 168
-- On level shift to state 211
-- On extcore_type_args shift to state 244
-- On extcore_type2 shift to state 253
-- On extcore_type shift to state 757
-- On exception_longident shift to state 262
-- On core_type_scheme shift to state 1483
-- On core_type_row_bounds shift to state 235
-- On core_type_bounds shift to state 236
## Reductions:

State 1483:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme . EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On EQUAL shift to state 1484
## Reductions:

State 1484:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL . primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On STRING shift to state 1414
-- On primitive_declaration shift to state 1485
## Reductions:

State 1485:
## Known stack suffix:
## EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration
## LR(1) items:
signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration

State 1486:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
signature_item -> EXCEPTION . UIDENT exception_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 1487
## Reductions:

State 1487:
## Known stack suffix:
## EXCEPTION UIDENT
## LR(1) items:
signature_item -> EXCEPTION UIDENT . exception_declaration [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On OF shift to state 1419
-- On COLON shift to state 1421
-- On exception_declaration shift to state 1488
-- On exception_arguments shift to state 1428
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EQUAL EOF
--   reduce production exception_arguments ->

State 1488:
## Known stack suffix:
## EXCEPTION UIDENT exception_declaration
## LR(1) items:
signature_item -> EXCEPTION UIDENT exception_declaration . [ VAL TYPE SEMISEMI OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_item -> EXCEPTION UIDENT exception_declaration

State 1489:
## Known stack suffix:
## flows_declaration affects raises signature EOF
## LR(1) items:
interface -> flows_declaration affects raises signature EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production interface -> flows_declaration affects raises signature EOF

State 1490:
## Known stack suffix:
## signature signature_item
## LR(1) items:
signature -> signature signature_item . [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
signature -> signature signature_item . SEMISEMI [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On SEMISEMI shift to state 1491
## Reductions:
-- On VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production signature -> signature signature_item

State 1491:
## Known stack suffix:
## signature signature_item SEMISEMI
## LR(1) items:
signature -> signature signature_item SEMISEMI . [ VAL TYPE OPEN MODULE LEVEL INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature -> signature signature_item SEMISEMI

State 1492:
## Known stack suffix:
##
## LR(1) items:
level_longident' -> . level_longident [ # ]
## Transitions:
-- On UIDENT shift to state 1493
-- On mod_ext_longident shift to state 1494
-- On level_longident shift to state 1497
## Reductions:

State 1493:
## Known stack suffix:
## UIDENT
## LR(1) items:
level_longident -> UIDENT . [ # ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> UIDENT

State 1494:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
level_longident -> mod_ext_longident . DOT UIDENT [ # ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 1495
## Reductions:

State 1495:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
level_longident -> mod_ext_longident DOT . UIDENT [ # ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## Transitions:
-- On UIDENT shift to state 1496
## Reductions:

State 1496:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
level_longident -> mod_ext_longident DOT UIDENT . [ # ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 1497:
## Known stack suffix:
## level_longident
## LR(1) items:
level_longident' -> level_longident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept level_longident

State 1498:
## Known stack suffix:
##
## LR(1) items:
toplevel_phrase' -> . toplevel_phrase [ # ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TYPE shift to state 877
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On SHARP shift to state 1499
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LEVEL shift to state 1401
-- On LET shift to state 1405
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On INCLUDE shift to state 1408
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOW shift to state 1507
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1510
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On toplevel_phrase shift to state 1511
-- On toplevel_directive shift to state 1512
-- On top_structure shift to state 1514
-- On subtractive shift to state 447
-- On structure_item shift to state 1516
-- On simple_expr shift to state 448
-- On seq_expr shift to state 1518
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 1499:
## Known stack suffix:
## SHARP
## LR(1) items:
toplevel_directive -> SHARP . ident [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP . ident STRING [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP . ident INT [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP . ident val_longident [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP . ident FALSE [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP . ident TRUE [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 214
-- On LIDENT shift to state 215
-- On ident shift to state 1500
## Reductions:

State 1500:
## Known stack suffix:
## SHARP ident
## LR(1) items:
toplevel_directive -> SHARP ident . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP ident . STRING [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP ident . INT [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP ident . val_longident [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP ident . FALSE [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
toplevel_directive -> SHARP ident . TRUE [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On UIDENT shift to state 30
-- On TRUE shift to state 1501
-- On STRING shift to state 1502
-- On LPAREN shift to state 437
-- On LIDENT shift to state 51
-- On INT shift to state 1503
-- On FALSE shift to state 1504
-- On val_longident shift to state 1505
-- On val_ident shift to state 406
-- On mod_longident shift to state 1506
## Reductions:
-- On TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF
--   reduce production toplevel_directive -> SHARP ident

State 1501:
## Known stack suffix:
## SHARP ident TRUE
## LR(1) items:
toplevel_directive -> SHARP ident TRUE . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_directive -> SHARP ident TRUE

State 1502:
## Known stack suffix:
## SHARP ident STRING
## LR(1) items:
toplevel_directive -> SHARP ident STRING . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_directive -> SHARP ident STRING

State 1503:
## Known stack suffix:
## SHARP ident INT
## LR(1) items:
toplevel_directive -> SHARP ident INT . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_directive -> SHARP ident INT

State 1504:
## Known stack suffix:
## SHARP ident FALSE
## LR(1) items:
toplevel_directive -> SHARP ident FALSE . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_directive -> SHARP ident FALSE

State 1505:
## Known stack suffix:
## SHARP ident val_longident
## LR(1) items:
toplevel_directive -> SHARP ident val_longident . [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production toplevel_directive -> SHARP ident val_longident

State 1506:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
val_longident -> mod_longident . DOT val_ident [ TYPE SEMISEMI OPEN MODULE LEVEL LET INCLUDE EXTERNAL EXCEPTION EOF ]
## Transitions:
-- On DOT shift to state 443
## Reductions:

State 1507:
## Known stack suffix:
## FLOW
## LR(1) items:
toplevel_phrase -> FLOW . flows SEMISEMI [ # ]
## Transitions:
-- On PREFIXOP shift to state 15
-- On principal shift to state 17
-- On flows shift to state 1508
-- On flow_hand_side shift to state 20
-- On flow shift to state 26
## Reductions:

State 1508:
## Known stack suffix:
## FLOW flows
## LR(1) items:
flows -> flows . AND flow [ SEMISEMI AND ]
toplevel_phrase -> FLOW flows . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 1509
-- On AND shift to state 19
## Reductions:

State 1509:
## Known stack suffix:
## FLOW flows SEMISEMI
## LR(1) items:
toplevel_phrase -> FLOW flows SEMISEMI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_phrase -> FLOW flows SEMISEMI

State 1510:
## Known stack suffix:
## EOF
## LR(1) items:
toplevel_phrase -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_phrase -> EOF

State 1511:
## Known stack suffix:
## toplevel_phrase
## LR(1) items:
toplevel_phrase' -> toplevel_phrase . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept toplevel_phrase

State 1512:
## Known stack suffix:
## toplevel_directive
## LR(1) items:
toplevel_phrase -> toplevel_directive . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 1513
## Reductions:

State 1513:
## Known stack suffix:
## toplevel_directive SEMISEMI
## LR(1) items:
toplevel_phrase -> toplevel_directive SEMISEMI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_phrase -> toplevel_directive SEMISEMI

State 1514:
## Known stack suffix:
## top_structure
## LR(1) items:
toplevel_phrase -> top_structure . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 1515
## Reductions:

State 1515:
## Known stack suffix:
## top_structure SEMISEMI
## LR(1) items:
toplevel_phrase -> top_structure SEMISEMI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_phrase -> top_structure SEMISEMI

State 1516:
## Known stack suffix:
## structure_item
## LR(1) items:
top_structure -> structure_item . [ SEMISEMI ]
top_structure -> structure_item . top_structure [ SEMISEMI ]
## Transitions:
-- On TYPE shift to state 877
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On top_structure shift to state 1517
-- On structure_item shift to state 1516
## Reductions:
-- On SEMISEMI
--   reduce production top_structure -> structure_item

State 1517:
## Known stack suffix:
## structure_item top_structure
## LR(1) items:
top_structure -> structure_item top_structure . [ SEMISEMI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_structure -> structure_item top_structure

State 1518:
## Known stack suffix:
## seq_expr
## LR(1) items:
toplevel_phrase -> seq_expr . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 1519
## Reductions:

State 1519:
## Known stack suffix:
## seq_expr SEMISEMI
## LR(1) items:
toplevel_phrase -> seq_expr SEMISEMI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_phrase -> seq_expr SEMISEMI

State 1520:
## Known stack suffix:
##
## LR(1) items:
type_longident' -> . type_longident [ # ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 1521
-- On type_longident shift to state 1522
-- On mod_ext_longident shift to state 1523
## Reductions:

State 1521:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_longident -> LIDENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production type_longident -> LIDENT

State 1522:
## Known stack suffix:
## type_longident
## LR(1) items:
type_longident' -> type_longident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept type_longident

State 1523:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ # ]
## Transitions:
-- On LPAREN shift to state 4
-- On DOT shift to state 1524
## Reductions:

State 1524:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ # ]
## Transitions:
-- On UIDENT shift to state 9
-- On LIDENT shift to state 1525
## Reductions:

State 1525:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
type_longident -> mod_ext_longident DOT LIDENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production type_longident -> mod_ext_longident DOT LIDENT

State 1526:
## Known stack suffix:
##
## LR(1) items:
use_file' -> . use_file [ # ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TYPE shift to state 877
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On SEMISEMI shift to state 1527
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LEVEL shift to state 1401
-- On LET shift to state 1405
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On INCLUDE shift to state 1408
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On use_file_tail shift to state 1538
-- On use_file shift to state 1539
-- On subtractive shift to state 447
-- On structure_item shift to state 1532
-- On simple_expr shift to state 448
-- On seq_expr shift to state 1540
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 1527:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
use_file_tail -> SEMISEMI . EOF [ # ]
use_file_tail -> SEMISEMI . seq_expr use_file_tail [ # ]
use_file_tail -> SEMISEMI . structure_item use_file_tail [ # ]
use_file_tail -> SEMISEMI . toplevel_directive use_file_tail [ # ]
## Transitions:
-- On WHILE shift to state 29
-- On UIDENT shift to state 30
-- On TYPE shift to state 877
-- On TRY shift to state 31
-- On TRUE shift to state 32
-- On STRING shift to state 33
-- On SHARP shift to state 1499
-- On RAISE shift to state 34
-- On PREFIXOP shift to state 45
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On MINUSDOT shift to state 48
-- On MINUS shift to state 49
-- On MATCH shift to state 50
-- On LPAREN shift to state 46
-- On LIDENT shift to state 51
-- On LEVEL shift to state 1401
-- On LET shift to state 1405
-- On LBRACKETBAR shift to state 389
-- On LBRACKET shift to state 391
-- On LBRACE shift to state 395
-- On LAZY shift to state 404
-- On INT shift to state 381
-- On INCLUDE shift to state 1408
-- On IF shift to state 427
-- On FUNCTION shift to state 428
-- On FUN shift to state 433
-- On FOR shift to state 436
-- On FLOAT shift to state 382
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1528
-- On CHARVECT shift to state 383
-- On CHAR shift to state 397
-- On BEGIN shift to state 398
-- On ASSERT shift to state 440
-- On val_longident shift to state 405
-- On val_ident shift to state 406
-- On toplevel_directive shift to state 1529
-- On subtractive shift to state 447
-- On structure_item shift to state 1534
-- On simple_expr shift to state 448
-- On seq_expr shift to state 1536
-- On mod_longident shift to state 442
-- On expr_comma_list shift to state 485
-- On expr shift to state 524
-- On constr_longident shift to state 492
-- On constant shift to state 446
## Reductions:

State 1528:
## Known stack suffix:
## SEMISEMI EOF
## LR(1) items:
use_file_tail -> SEMISEMI EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> SEMISEMI EOF

State 1529:
## Known stack suffix:
## SEMISEMI toplevel_directive
## LR(1) items:
use_file_tail -> SEMISEMI toplevel_directive . use_file_tail [ # ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1527
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On use_file_tail shift to state 1531
-- On structure_item shift to state 1532
## Reductions:

State 1530:
## Known stack suffix:
## EOF
## LR(1) items:
use_file_tail -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> EOF

State 1531:
## Known stack suffix:
## SEMISEMI toplevel_directive use_file_tail
## LR(1) items:
use_file_tail -> SEMISEMI toplevel_directive use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> SEMISEMI toplevel_directive use_file_tail

State 1532:
## Known stack suffix:
## structure_item
## LR(1) items:
use_file_tail -> structure_item . use_file_tail [ # ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1527
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On use_file_tail shift to state 1533
-- On structure_item shift to state 1532
## Reductions:

State 1533:
## Known stack suffix:
## structure_item use_file_tail
## LR(1) items:
use_file_tail -> structure_item use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> structure_item use_file_tail

State 1534:
## Known stack suffix:
## SEMISEMI structure_item
## LR(1) items:
use_file_tail -> SEMISEMI structure_item . use_file_tail [ # ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1527
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On use_file_tail shift to state 1535
-- On structure_item shift to state 1532
## Reductions:

State 1535:
## Known stack suffix:
## SEMISEMI structure_item use_file_tail
## LR(1) items:
use_file_tail -> SEMISEMI structure_item use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> SEMISEMI structure_item use_file_tail

State 1536:
## Known stack suffix:
## SEMISEMI seq_expr
## LR(1) items:
use_file_tail -> SEMISEMI seq_expr . use_file_tail [ # ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1527
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On use_file_tail shift to state 1537
-- On structure_item shift to state 1532
## Reductions:

State 1537:
## Known stack suffix:
## SEMISEMI seq_expr use_file_tail
## LR(1) items:
use_file_tail -> SEMISEMI seq_expr use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file_tail -> SEMISEMI seq_expr use_file_tail

State 1538:
## Known stack suffix:
## use_file_tail
## LR(1) items:
use_file -> use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file -> use_file_tail

State 1539:
## Known stack suffix:
## use_file
## LR(1) items:
use_file' -> use_file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept use_file

State 1540:
## Known stack suffix:
## seq_expr
## LR(1) items:
use_file -> seq_expr . use_file_tail [ # ]
## Transitions:
-- On TYPE shift to state 877
-- On SEMISEMI shift to state 1527
-- On OPEN shift to state 1002
-- On MODULE shift to state 1004
-- On LEVEL shift to state 1401
-- On LET shift to state 1432
-- On INCLUDE shift to state 1408
-- On EXTERNAL shift to state 1410
-- On EXCEPTION shift to state 1417
-- On EOF shift to state 1530
-- On use_file_tail shift to state 1541
-- On structure_item shift to state 1532
## Reductions:

State 1541:
## Known stack suffix:
## seq_expr use_file_tail
## LR(1) items:
use_file -> seq_expr use_file_tail . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production use_file -> seq_expr use_file_tail

State 1542:
## Known stack suffix:
##
## LR(1) items:
val_longident' -> . val_longident [ # ]
## Transitions:
-- On UIDENT shift to state 30
-- On LPAREN shift to state 1543
-- On LIDENT shift to state 1546
-- On val_longident shift to state 1547
-- On val_ident shift to state 1548
-- On mod_longident shift to state 1549
## Reductions:

State 1543:
## Known stack suffix:
## LPAREN
## LR(1) items:
val_ident -> LPAREN . operator RPAREN [ # ]
## Transitions:
-- On STAR shift to state 63
-- On PREFIXOP shift to state 64
-- On PLUS shift to state 65
-- On OR shift to state 66
-- On MINUSDOT shift to state 117
-- On MINUS shift to state 118
-- On LESS shift to state 73
-- On INFIXOP4 shift to state 119
-- On INFIXOP3 shift to state 120
-- On INFIXOP2 shift to state 121
-- On INFIXOP1 shift to state 122
-- On INFIXOP0 shift to state 123
-- On GREATER shift to state 124
-- On EQUAL shift to state 125
-- On COLONEQUAL shift to state 126
-- On BARBAR shift to state 127
-- On AMPERSAND shift to state 128
-- On AMPERAMPER shift to state 129
-- On operator shift to state 1544
## Reductions:

State 1544:
## Known stack suffix:
## LPAREN operator
## LR(1) items:
val_ident -> LPAREN operator . RPAREN [ # ]
## Transitions:
-- On RPAREN shift to state 1545
## Reductions:

State 1545:
## Known stack suffix:
## LPAREN operator RPAREN
## LR(1) items:
val_ident -> LPAREN operator RPAREN . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production val_ident -> LPAREN operator RPAREN

State 1546:
## Known stack suffix:
## LIDENT
## LR(1) items:
val_ident -> LIDENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production val_ident -> LIDENT

State 1547:
## Known stack suffix:
## val_longident
## LR(1) items:
val_longident' -> val_longident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept val_longident

State 1548:
## Known stack suffix:
## val_ident
## LR(1) items:
val_longident -> val_ident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production val_longident -> val_ident

State 1549:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
val_longident -> mod_longident . DOT val_ident [ # ]
## Transitions:
-- On DOT shift to state 1550
## Reductions:

State 1550:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
val_longident -> mod_longident DOT . val_ident [ # ]
## Transitions:
-- On UIDENT shift to state 43
-- On LPAREN shift to state 1543
-- On LIDENT shift to state 1546
-- On val_ident shift to state 1551
## Reductions:

State 1551:
## Known stack suffix:
## mod_longident DOT val_ident
## LR(1) items:
val_longident -> mod_longident DOT val_ident . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production val_longident -> mod_longident DOT val_ident

