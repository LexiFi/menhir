
** Conflict (shift/reduce) in state 1338.
** Token involved: LPAREN
** This state is reached from toplevel_phrase after reading:

INCLUDE FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
INCLUDE module_expr 
        (?)

** In state 1338, looking ahead at LPAREN, reducing production
** module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
** is permitted because of the following sub-derivation:

module_expr LPAREN module_expr RPAREN // lookahead token appears
FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . 

** In state 1338, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr 
                                                            module_expr . LPAREN module_expr RPAREN 

** Conflict (shift/reduce) in state 1320.
** Token involved: LPAREN
** This state is reached from toplevel_phrase after reading:

INCLUDE LPAREN FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
INCLUDE module_expr 
        LPAREN module_expr COLON module_type RPAREN 
               (?)

** In state 1320, looking ahead at LPAREN, reducing production
** module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
** is permitted because of the following sub-derivation:

module_expr LPAREN module_expr RPAREN // lookahead token appears
FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . 

** In state 1320, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr 
                                                            module_expr . LPAREN module_expr RPAREN 

** Conflict (shift/reduce) in state 1295.
** Token involved: EQUAL
** This state is reached from toplevel_phrase after reading:

INCLUDE STRUCT LET rec_flag val_ident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
INCLUDE module_expr 
        STRUCT structure END 
               structure_tail 
               structure_item structure_tail 
               LET rec_flag let_bindings 
                            let_binding 
                            (?)

** In state 1295, looking ahead at EQUAL, shifting is permitted
** because of the following sub-derivation:

val_ident fun_binding 
          . EQUAL seq_expr 

** In state 1295, looking ahead at EQUAL, reducing production
** simple_pattern -> val_ident
** is permitted because of the following sub-derivation:

pattern EQUAL seq_expr // lookahead token appears
simple_pattern // lookahead token is inherited
val_ident . 

** Conflict (shift/reduce) in state 1199.
** Token involved: WITH
** This state is reached from toplevel_phrase after reading:

MODULE UIDENT COLON LPAREN FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
MODULE UIDENT module_binding 
              COLON module_type EQUAL module_expr 
                    LPAREN module_type RPAREN 
                           (?)

** In state 1199, looking ahead at WITH, reducing production
** module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type
** is permitted because of the following sub-derivation:

module_type WITH with_constraints // lookahead token appears
FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type . 

** In state 1199, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type 
                                                                 module_type . WITH with_constraints 

** Conflict (shift/reduce) in state 1189.
** Token involved: WITH
** This state is reached from toplevel_phrase after reading:

MODULE UIDENT COLON FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
MODULE UIDENT module_binding 
              COLON module_type EQUAL module_expr 
                    (?)

** In state 1189, looking ahead at WITH, reducing production
** module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type
** is permitted because of the following sub-derivation:

module_type WITH with_constraints // lookahead token appears
FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type . 

** In state 1189, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

FUNCTOR LPAREN UIDENT COLON module_type RPAREN module_type_arrow module_type 
                                                                 module_type . WITH with_constraints 

** Conflict (shift/reduce) in state 1092.
** Token involved: MINUSBRACE
** This state is reached from toplevel_phrase after reading:

INCLUDE STRUCT TYPE opt_fun type_parameters LIDENT EQUAL core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
INCLUDE module_expr 
        STRUCT structure END 
               structure_tail 
               structure_item structure_tail 
               TYPE type_declarations 
                    type_declaration 
                    opt_fun type_parameters LIDENT type_kind constraints 
                                                   EQUAL core_type 
                                                         core_type2 
                                                         (?)

** In state 1092, looking ahead at MINUSBRACE, shifting is permitted
** because of the following sub-derivation:

core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 
                                                                              core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 

** In state 1092, looking ahead at MINUSBRACE, reducing production
** core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2
** is permitted because of the following sub-derivation:

core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 // lookahead token appears
core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 . 

** Conflict (shift/reduce) in state 945.
** Token involved: MINUSBRACE
** This state is reached from toplevel_phrase after reading:

TYPE opt_fun type_parameters LIDENT EQUAL core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
TYPE type_declarations 
     type_declaration 
     opt_fun type_parameters LIDENT type_kind constraints 
                                    EQUAL core_type 
                                          core_type2 
                                          (?)

** In state 945, looking ahead at MINUSBRACE, shifting is permitted
** because of the following sub-derivation:

core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 
                                                                              core_type2 . MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 

** In state 945, looking ahead at MINUSBRACE, reducing production
** core_type2 -> core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2
** is permitted because of the following sub-derivation:

core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 // lookahead token appears
core_type2 MINUSBRACE core_type BAR core_type BAR core_type BRACEMINUSGREATER core_type2 . 

** Conflict (shift/reduce) in state 722.
** Token involved: ELSE
** This state is reached from toplevel_phrase after reading:

IF seq_expr THEN IF seq_expr THEN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
(?)

** In state 722, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF seq_expr THEN expr ELSE expr 
                 IF seq_expr THEN expr . ELSE expr 

** In state 722, looking ahead at ELSE, reducing production
** expr -> IF seq_expr THEN expr
** is permitted because of the following sub-derivation:

IF seq_expr THEN expr ELSE expr // lookahead token appears
                 IF seq_expr THEN expr . 

** Conflict (shift/reduce) in state 688.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

simple_expr DOT LBRACE expr_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
simple_expr DOT LBRACE expr_comma_list error 
                       (?)

** In state 688, looking ahead at COMMA, reducing production
** expr -> expr_comma_list
** is permitted because of the following sub-derivation:

expr COMMA expr // lookahead token appears
expr_comma_list . 

** In state 688, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

expr_comma_list . COMMA expr 

** Conflict (shift/reduce) in state 664.
** Token involved: DOT
** This state is reached from toplevel_phrase after reading:

LBRACE mod_longident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LBRACE record_expr RBRACE 
       (?)

** In state 664, looking ahead at DOT, reducing production
** constr_longident -> mod_longident
** is permitted because of the following sub-derivation:

simple_expr WITH lbl_expr_list opt_semi 
simple_expr DOT label_longident // lookahead token appears
constr_longident // lookahead token is inherited
mod_longident . 

** In state 664, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

lbl_expr_list opt_semi 
label_longident EQUAL expr 
mod_longident . DOT LIDENT 

** Conflict (shift/reduce) in state 648.
** Token involved: ELSE
** This state is reached from toplevel_phrase after reading:

LPAREN IF seq_expr THEN IF seq_expr THEN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LPAREN seq_expr RPAREN 
       expr 
       (?)

** In state 648, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF seq_expr THEN expr ELSE expr 
                 IF seq_expr THEN expr . ELSE expr 

** In state 648, looking ahead at ELSE, reducing production
** expr -> IF seq_expr THEN expr
** is permitted because of the following sub-derivation:

IF seq_expr THEN expr ELSE expr // lookahead token appears
                 IF seq_expr THEN expr . 

** Conflict (shift/reduce) in state 605.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

LPAREN simple_expr DOT LBRACE expr_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LPAREN seq_expr RPAREN 
       expr 
       simple_expr 
       simple_expr DOT LBRACE expr_comma_list error 
                              (?)

** In state 605, looking ahead at COMMA, reducing production
** expr -> expr_comma_list
** is permitted because of the following sub-derivation:

expr COMMA expr // lookahead token appears
expr_comma_list . 

** In state 605, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

expr_comma_list . COMMA expr 

** Conflict (shift/reduce) in state 595.
** Token involved: LET
** This state is reached from toplevel_phrase after reading:

INCLUDE STRUCT expr SEMI

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
INCLUDE module_expr 
        STRUCT structure END 
               (?)

** In state 595, looking ahead at LET, shifting is permitted
** because of the following sub-derivation:

seq_expr structure_tail 
expr SEMI seq_expr 
          expr 
          . LET rec_flag let_bindings IN seq_expr 

** In state 595, looking ahead at LET, reducing production
** seq_expr -> expr SEMI
** is permitted because of the following sub-derivation:

seq_expr structure_tail // lookahead token appears because structure_tail can begin with LET
expr SEMI . 

** Conflict (shift/reduce) in state 555.
** Tokens involved: UIDENT TRUE STRING PREFIXOP LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR BEGIN
** The following explanations concentrate on token UIDENT.
** This state is reached from toplevel_phrase after reading:

LPAREN constr_longident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LPAREN seq_expr RPAREN 
       expr 
       (?)

** In state 555, looking ahead at UIDENT, shifting is permitted
** because of the following sub-derivation:

constr_longident simple_expr 
                 val_longident 
                 mod_longident DOT val_ident 
                 . UIDENT 

** In state 555, looking ahead at UIDENT, reducing production
** simple_expr -> constr_longident
** is permitted because of the following sub-derivation:

simple_expr simple_expr_list // lookahead token appears because simple_expr_list can begin with UIDENT
constr_longident . 

** Conflict (shift/reduce) in state 548.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

LPAREN expr_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LPAREN seq_expr RPAREN 
       expr 
       expr_comma_list 
       (?)

** In state 548, looking ahead at COMMA, reducing production
** expr -> expr_comma_list
** is permitted because of the following sub-derivation:

expr COMMA expr // lookahead token appears
expr_comma_list . 

** In state 548, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

expr_comma_list . COMMA expr 

** Conflict (shift/reduce) in state 545.
** Token involved: DOT
** This state is reached from toplevel_phrase after reading:

LPAREN mod_longident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
simple_expr 
LPAREN seq_expr RPAREN 
       expr 
       (?)

** In state 545, looking ahead at DOT, reducing production
** constr_longident -> mod_longident
** is permitted because of the following sub-derivation:

simple_expr DOT label_longident LESSMINUS expr // lookahead token appears
constr_longident // lookahead token is inherited
mod_longident . 

** In state 545, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

constr_longident simple_expr 
mod_longident 
mod_longident . DOT UIDENT 

** Conflict (shift/reduce) in state 525.
** Token involved: LET
** This state is reached from use_file after reading:

expr SEMI

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

use_file 
(?)

** In state 525, looking ahead at LET, shifting is permitted
** because of the following sub-derivation:

seq_expr use_file_tail 
expr SEMI seq_expr 
          expr 
          . LET rec_flag let_bindings IN seq_expr 

** In state 525, looking ahead at LET, reducing production
** seq_expr -> expr SEMI
** is permitted because of the following sub-derivation:

seq_expr use_file_tail // lookahead token appears because use_file_tail can begin with LET
expr SEMI . 

** Conflict (shift/reduce) in state 492.
** Tokens involved: UIDENT TRUE STRING PREFIXOP LPAREN LIDENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHARVECT CHAR BEGIN
** The following explanations concentrate on token UIDENT.
** This state is reached from toplevel_phrase after reading:

constr_longident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
(?)

** In state 492, looking ahead at UIDENT, shifting is permitted
** because of the following sub-derivation:

constr_longident simple_expr 
                 val_longident 
                 mod_longident DOT val_ident 
                 . UIDENT 

** In state 492, looking ahead at UIDENT, reducing production
** simple_expr -> constr_longident
** is permitted because of the following sub-derivation:

simple_expr simple_expr_list // lookahead token appears because simple_expr_list can begin with UIDENT
constr_longident . 

** Conflict (shift/reduce) in state 485.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

expr_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
expr_comma_list 
(?)

** In state 485, looking ahead at COMMA, reducing production
** expr -> expr_comma_list
** is permitted because of the following sub-derivation:

expr COMMA expr // lookahead token appears
expr_comma_list . 

** In state 485, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

expr_comma_list . COMMA expr 

** Conflict (shift/reduce) in state 442.
** Token involved: DOT
** This state is reached from toplevel_phrase after reading:

mod_longident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
(?)

** In state 442, looking ahead at DOT, reducing production
** constr_longident -> mod_longident
** is permitted because of the following sub-derivation:

simple_expr DOT label_longident LESSMINUS expr // lookahead token appears
constr_longident // lookahead token is inherited
mod_longident . 

** In state 442, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

constr_longident simple_expr 
mod_longident 
mod_longident . DOT UIDENT 

** Conflict (shift/reduce) in state 416.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

LET rec_flag pattern_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
LET rec_flag let_bindings 
             let_binding 
             pattern EQUAL seq_expr 
             pattern_comma_list 
             (?)

** In state 416, looking ahead at COMMA, reducing production
** pattern -> pattern_comma_list
** is permitted because of the following sub-derivation:

pattern COMMA pattern // lookahead token appears
pattern_comma_list . 

** In state 416, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

pattern_comma_list . COMMA pattern 

** Conflict (shift/reduce) in state 387.
** Token involved: EQUAL
** This state is reached from toplevel_phrase after reading:

LET rec_flag val_ident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
LET rec_flag let_bindings 
             let_binding 
             (?)

** In state 387, looking ahead at EQUAL, shifting is permitted
** because of the following sub-derivation:

val_ident fun_binding 
          . EQUAL seq_expr 

** In state 387, looking ahead at EQUAL, reducing production
** simple_pattern -> val_ident
** is permitted because of the following sub-derivation:

pattern EQUAL seq_expr // lookahead token appears
simple_pattern // lookahead token is inherited
val_ident . 

** Conflict (shift/reduce) in state 310.
** Tokens involved: MINUSGREATER MINUSBRACE
** The following explanations concentrate on token MINUSGREATER.
** This state is reached from toplevel_phrase after reading:

FUN LPAREN pattern COLON extcore_type2 extcore_type_arrow extcore_type2

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
FUN simple_pattern fun_def 
    LPAREN pattern COLON core_type_scheme RPAREN 
                         extcore_type 
                         extcore_type2 
                         (?)

** In state 310, looking ahead at MINUSGREATER, reducing production
** extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2
** is permitted because of the following sub-derivation:

extcore_type2 extcore_type_arrow extcore_type2 // lookahead token appears because extcore_type_arrow can begin with MINUSGREATER
extcore_type2 extcore_type_arrow extcore_type2 . 

** In state 310, looking ahead at MINUSGREATER, shifting is permitted
** because of the following sub-derivation:

extcore_type2 extcore_type_arrow extcore_type2 
                                 extcore_type2 extcore_type_arrow extcore_type2 
                                               . MINUSGREATER 

** Conflict (shift/reduce) in state 273.
** Tokens involved: MINUSGREATER MINUSBRACE
** The following explanations concentrate on token MINUSGREATER.
** This state is reached from toplevel_phrase after reading:

EXTERNAL val_ident_colon extcore_type2 extcore_type_arrow extcore_type2

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
top_structure SEMISEMI 
structure_item 
EXTERNAL val_ident_colon core_type_scheme EQUAL primitive_declaration 
                         extcore_type 
                         extcore_type2 
                         (?)

** In state 273, looking ahead at MINUSGREATER, reducing production
** extcore_type2 -> extcore_type2 extcore_type_arrow extcore_type2
** is permitted because of the following sub-derivation:

extcore_type2 extcore_type_arrow extcore_type2 // lookahead token appears because extcore_type_arrow can begin with MINUSGREATER
extcore_type2 extcore_type_arrow extcore_type2 . 

** In state 273, looking ahead at MINUSGREATER, shifting is permitted
** because of the following sub-derivation:

extcore_type2 extcore_type_arrow extcore_type2 
                                 extcore_type2 extcore_type_arrow extcore_type2 
                                               . MINUSGREATER 

** Conflict (shift/reduce) in state 99.
** Token involved: COMMA
** This state is reached from toplevel_phrase after reading:

FUN LPAREN pattern_comma_list

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel_phrase 
seq_expr SEMISEMI 
expr 
FUN simple_pattern fun_def 
    LPAREN pattern RPAREN 
           pattern_comma_list 
           (?)

** In state 99, looking ahead at COMMA, reducing production
** pattern -> pattern_comma_list
** is permitted because of the following sub-derivation:

pattern COMMA pattern // lookahead token appears
pattern_comma_list . 

** In state 99, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

pattern_comma_list . COMMA pattern 
