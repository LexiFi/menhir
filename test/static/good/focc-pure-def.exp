Grammar has 6 nonterminal symbols, among which 1 start symbols.
Grammar has 13 terminal symbols.
Grammar has 14 productions.
nullable(main) = false
nullable(limport) = false
nullable(idlist) = false
nullable(header_def) = false
nullable(def) = false
nullable(coll_def) = false
first(main) = IMPORT EOF COQ CAMLI CAML
first(limport) = ID END
first(idlist) = ID EQ
first(header_def) = COQ CAMLI CAML
first(def) = ID DEF
first(coll_def) = IMPORT
minimal(main) = (* 1 *) EOF
minimal(limport) = (* 1 *) END
minimal(idlist) = (* 1 *) EQ
minimal(header_def) = (* 2 *) COQ HEADER
minimal(def) = (* 1 *) DEF
minimal(coll_def) = (* 5 *) IMPORT FOR ID END IMPORT
follow(main) = #
follow(limport) = IMPORT
follow(idlist) = ID DEF
follow(header_def) = IMPORT EOF COQ CAMLI CAML
follow(def) = SEP LINK
follow(coll_def) = IMPORT EOF COQ CAMLI CAML
Built an LR(0) automaton with 34 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 34 states.
15 out of 34 states have a default reduction.
10 out of 34 states are represented.
0 out of 22 symbols keep track of their start position.
0 out of 22 symbols keep track of their end position.
12 out of 15 productions exploit shiftreduce optimization.
0 out of 34 states can peek at an error.
94 functions before inlining, 20 functions after inlining.
