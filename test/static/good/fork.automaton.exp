State 0:
program' -> . program [ # ]
-- On TYPE shift to state 1
-- On TERM shift to state 55
-- On LEMMA shift to state 146
-- On KIND shift to state 157
-- On INCLUDE shift to state 161
-- On DEFAULT shift to state 162
-- On program shift to state 167
-- On list(declaration) shift to state 168
-- On declaration shift to state 170
-- On EOF reduce production list(declaration) -> 

State 1:
declaration -> TYPE . type_variable COLON kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 3

State 2:
type_variable -> IDENTIFIER . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production type_variable -> IDENTIFIER 
-- On TERM reduce production type_variable -> IDENTIFIER 
-- On RPAR reduce production type_variable -> IDENTIFIER 
-- On RBRACKET reduce production type_variable -> IDENTIFIER 
-- On LPAR reduce production type_variable -> IDENTIFIER 
-- On LEMMA reduce production type_variable -> IDENTIFIER 
-- On KIND reduce production type_variable -> IDENTIFIER 
-- On INCLUDE reduce production type_variable -> IDENTIFIER 
-- On IN reduce production type_variable -> IDENTIFIER 
-- On IDENTIFIER reduce production type_variable -> IDENTIFIER 
-- On EQ reduce production type_variable -> IDENTIFIER 
-- On EOF reduce production type_variable -> IDENTIFIER 
-- On DOT reduce production type_variable -> IDENTIFIER 
-- On DEFAULT reduce production type_variable -> IDENTIFIER 
-- On COMMA reduce production type_variable -> IDENTIFIER 
-- On COLON reduce production type_variable -> IDENTIFIER 
-- On BACKQUOTE reduce production type_variable -> IDENTIFIER 
-- On AS reduce production type_variable -> IDENTIFIER 
-- On ARROW reduce production type_variable -> IDENTIFIER 

State 3:
declaration -> TYPE type_variable . COLON kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On COLON shift to state 4

State 4:
declaration -> TYPE type_variable COLON . kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 16
-- On kind0 shift to state 13

State 5:
kind0 -> STAR . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On TYPE reduce production kind0 -> STAR 
-- On TERM reduce production kind0 -> STAR 
-- On RPAR reduce production kind0 -> STAR 
-- On LEMMA reduce production kind0 -> STAR 
-- On KIND reduce production kind0 -> STAR 
-- On INCLUDE reduce production kind0 -> STAR 
-- On EQ reduce production kind0 -> STAR 
-- On EOF reduce production kind0 -> STAR 
-- On DOT reduce production kind0 -> STAR 
-- On DEFAULT reduce production kind0 -> STAR 
-- On ARROW reduce production kind0 -> STAR 

State 6:
kind0 -> LPAR . kind1 RPAR [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 11
-- On kind0 shift to state 13

State 7:
kind0 -> LATER . kind0 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind0 shift to state 10

State 8:
kind_variable -> IDENTIFIER . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On TYPE reduce production kind_variable -> IDENTIFIER 
-- On TERM reduce production kind_variable -> IDENTIFIER 
-- On RPAR reduce production kind_variable -> IDENTIFIER 
-- On LEMMA reduce production kind_variable -> IDENTIFIER 
-- On KIND reduce production kind_variable -> IDENTIFIER 
-- On INCLUDE reduce production kind_variable -> IDENTIFIER 
-- On EQ reduce production kind_variable -> IDENTIFIER 
-- On EOF reduce production kind_variable -> IDENTIFIER 
-- On DOT reduce production kind_variable -> IDENTIFIER 
-- On DEFAULT reduce production kind_variable -> IDENTIFIER 
-- On ARROW reduce production kind_variable -> IDENTIFIER 

State 9:
kind0 -> kind_variable . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On TYPE reduce production kind0 -> kind_variable 
-- On TERM reduce production kind0 -> kind_variable 
-- On RPAR reduce production kind0 -> kind_variable 
-- On LEMMA reduce production kind0 -> kind_variable 
-- On KIND reduce production kind0 -> kind_variable 
-- On INCLUDE reduce production kind0 -> kind_variable 
-- On EQ reduce production kind0 -> kind_variable 
-- On EOF reduce production kind0 -> kind_variable 
-- On DOT reduce production kind0 -> kind_variable 
-- On DEFAULT reduce production kind0 -> kind_variable 
-- On ARROW reduce production kind0 -> kind_variable 

State 10:
kind0 -> LATER kind0 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On TYPE reduce production kind0 -> LATER kind0 
-- On TERM reduce production kind0 -> LATER kind0 
-- On RPAR reduce production kind0 -> LATER kind0 
-- On LEMMA reduce production kind0 -> LATER kind0 
-- On KIND reduce production kind0 -> LATER kind0 
-- On INCLUDE reduce production kind0 -> LATER kind0 
-- On EQ reduce production kind0 -> LATER kind0 
-- On EOF reduce production kind0 -> LATER kind0 
-- On DOT reduce production kind0 -> LATER kind0 
-- On DEFAULT reduce production kind0 -> LATER kind0 
-- On ARROW reduce production kind0 -> LATER kind0 

State 11:
kind0 -> LPAR kind1 . RPAR [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On RPAR shift to state 12

State 12:
kind0 -> LPAR kind1 RPAR . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
-- On TYPE reduce production kind0 -> LPAR kind1 RPAR 
-- On TERM reduce production kind0 -> LPAR kind1 RPAR 
-- On RPAR reduce production kind0 -> LPAR kind1 RPAR 
-- On LEMMA reduce production kind0 -> LPAR kind1 RPAR 
-- On KIND reduce production kind0 -> LPAR kind1 RPAR 
-- On INCLUDE reduce production kind0 -> LPAR kind1 RPAR 
-- On EQ reduce production kind0 -> LPAR kind1 RPAR 
-- On EOF reduce production kind0 -> LPAR kind1 RPAR 
-- On DOT reduce production kind0 -> LPAR kind1 RPAR 
-- On DEFAULT reduce production kind0 -> LPAR kind1 RPAR 
-- On ARROW reduce production kind0 -> LPAR kind1 RPAR 

State 13:
kind1 -> kind0 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
kind1 -> kind0 . ARROW kind1 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
-- On ARROW shift to state 14
-- On TYPE reduce production kind1 -> kind0 
-- On TERM reduce production kind1 -> kind0 
-- On RPAR reduce production kind1 -> kind0 
-- On LEMMA reduce production kind1 -> kind0 
-- On KIND reduce production kind1 -> kind0 
-- On INCLUDE reduce production kind1 -> kind0 
-- On EQ reduce production kind1 -> kind0 
-- On EOF reduce production kind1 -> kind0 
-- On DOT reduce production kind1 -> kind0 
-- On DEFAULT reduce production kind1 -> kind0 

State 14:
kind1 -> kind0 ARROW . kind1 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 15
-- On kind0 shift to state 13

State 15:
kind1 -> kind0 ARROW kind1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
-- On TYPE reduce production kind1 -> kind0 ARROW kind1 
-- On TERM reduce production kind1 -> kind0 ARROW kind1 
-- On RPAR reduce production kind1 -> kind0 ARROW kind1 
-- On LEMMA reduce production kind1 -> kind0 ARROW kind1 
-- On KIND reduce production kind1 -> kind0 ARROW kind1 
-- On INCLUDE reduce production kind1 -> kind0 ARROW kind1 
-- On EQ reduce production kind1 -> kind0 ARROW kind1 
-- On EOF reduce production kind1 -> kind0 ARROW kind1 
-- On DOT reduce production kind1 -> kind0 ARROW kind1 
-- On DEFAULT reduce production kind1 -> kind0 ARROW kind1 

State 16:
declaration -> TYPE type_variable COLON kind1 . EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On EQ shift to state 17

State 17:
declaration -> TYPE type_variable COLON kind1 EQ . ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 54
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 18:
ty0 -> LPAR . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 COLON kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 COMMA ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On RPAR shift to state 19
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 46
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 19:
ty0 -> LPAR RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty0 -> LPAR RPAR 
-- On TERM reduce production ty0 -> LPAR RPAR 
-- On RPAR reduce production ty0 -> LPAR RPAR 
-- On RBRACKET reduce production ty0 -> LPAR RPAR 
-- On LPAR reduce production ty0 -> LPAR RPAR 
-- On LEMMA reduce production ty0 -> LPAR RPAR 
-- On KIND reduce production ty0 -> LPAR RPAR 
-- On INCLUDE reduce production ty0 -> LPAR RPAR 
-- On IN reduce production ty0 -> LPAR RPAR 
-- On IDENTIFIER reduce production ty0 -> LPAR RPAR 
-- On EQ reduce production ty0 -> LPAR RPAR 
-- On EOF reduce production ty0 -> LPAR RPAR 
-- On DOT reduce production ty0 -> LPAR RPAR 
-- On DEFAULT reduce production ty0 -> LPAR RPAR 
-- On COMMA reduce production ty0 -> LPAR RPAR 
-- On COLON reduce production ty0 -> LPAR RPAR 
-- On BACKQUOTE reduce production ty0 -> LPAR RPAR 
-- On AS reduce production ty0 -> LPAR RPAR 
-- On ARROW reduce production ty0 -> LPAR RPAR 

State 20:
ty3 -> LAMBDA . type_binder DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 23
-- On nonempty_list(loc(type_variable)) shift to state 43

State 21:
nonempty_list(loc(type_variable)) -> type_variable . [ DOT COLON ]
nonempty_list(loc(type_variable)) -> type_variable . nonempty_list(loc(type_variable)) [ DOT COLON ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On nonempty_list(loc(type_variable)) shift to state 22
-- On DOT reduce production nonempty_list(loc(type_variable)) -> type_variable 
-- On COLON reduce production nonempty_list(loc(type_variable)) -> type_variable 

State 22:
nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable)) . [ DOT COLON ]
-- On DOT reduce production nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable)) 
-- On COLON reduce production nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable)) 

State 23:
ty3 -> LAMBDA type_binder . DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On DOT shift to state 24

State 24:
ty3 -> LAMBDA type_binder DOT . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 28
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 25:
quantifier -> FORALL . [ IDENTIFIER ]
-- On IDENTIFIER reduce production quantifier -> FORALL 

State 26:
quantifier -> EXISTS . [ IDENTIFIER ]
-- On IDENTIFIER reduce production quantifier -> EXISTS 

State 27:
ty0 -> type_variable . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty0 -> type_variable 
-- On TERM reduce production ty0 -> type_variable 
-- On RPAR reduce production ty0 -> type_variable 
-- On RBRACKET reduce production ty0 -> type_variable 
-- On LPAR reduce production ty0 -> type_variable 
-- On LEMMA reduce production ty0 -> type_variable 
-- On KIND reduce production ty0 -> type_variable 
-- On INCLUDE reduce production ty0 -> type_variable 
-- On IN reduce production ty0 -> type_variable 
-- On IDENTIFIER reduce production ty0 -> type_variable 
-- On EQ reduce production ty0 -> type_variable 
-- On EOF reduce production ty0 -> type_variable 
-- On DOT reduce production ty0 -> type_variable 
-- On DEFAULT reduce production ty0 -> type_variable 
-- On COMMA reduce production ty0 -> type_variable 
-- On COLON reduce production ty0 -> type_variable 
-- On BACKQUOTE reduce production ty0 -> type_variable 
-- On AS reduce production ty0 -> type_variable 
-- On ARROW reduce production ty0 -> type_variable 

State 28:
ty3 -> LAMBDA type_binder DOT ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On TYPE reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On TERM reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On RPAR reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On RBRACKET reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On LEMMA reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On KIND reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On INCLUDE reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On IN reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On EQ reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On EOF reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On DOT reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On DEFAULT reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On COMMA reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On COLON reduce production ty3 -> LAMBDA type_binder DOT ty3 
-- On AS reduce production ty3 -> LAMBDA type_binder DOT ty3 

State 29:
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty3 -> ty2 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
ty3 -> ty2 . ARROW ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On BACKQUOTE shift to state 30
-- On ARROW shift to state 36
-- On TYPE reduce production ty3 -> ty2 
-- On TERM reduce production ty3 -> ty2 
-- On RPAR reduce production ty3 -> ty2 
-- On RBRACKET reduce production ty3 -> ty2 
-- On LEMMA reduce production ty3 -> ty2 
-- On KIND reduce production ty3 -> ty2 
-- On INCLUDE reduce production ty3 -> ty2 
-- On IN reduce production ty3 -> ty2 
-- On EQ reduce production ty3 -> ty2 
-- On EOF reduce production ty3 -> ty2 
-- On DOT reduce production ty3 -> ty2 
-- On DEFAULT reduce production ty3 -> ty2 
-- On COMMA reduce production ty3 -> ty2 
-- On COLON reduce production ty3 -> ty2 
-- On AS reduce production ty3 -> ty2 

State 30:
ty2 -> ty2 BACKQUOTE . ty1 BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty1 shift to state 31
-- On ty0 shift to state 35

State 31:
ty1 -> ty1 . ty0 [ LPAR IDENTIFIER BACKQUOTE ]
ty2 -> ty2 BACKQUOTE ty1 . BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On BACKQUOTE shift to state 32
-- On type_variable shift to state 27
-- On ty0 shift to state 34

State 32:
ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE . ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty1 shift to state 33
-- On ty0 shift to state 35

State 33:
ty1 -> ty1 . ty0 [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty0 shift to state 34
-- On TYPE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On TERM reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On RPAR reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On RBRACKET reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On LEMMA reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On KIND reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On INCLUDE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On IN reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On EQ reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On EOF reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On DOT reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On DEFAULT reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On COMMA reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On COLON reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On BACKQUOTE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On AS reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 
-- On ARROW reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 

State 34:
ty1 -> ty1 ty0 . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty1 -> ty1 ty0 
-- On TERM reduce production ty1 -> ty1 ty0 
-- On RPAR reduce production ty1 -> ty1 ty0 
-- On RBRACKET reduce production ty1 -> ty1 ty0 
-- On LPAR reduce production ty1 -> ty1 ty0 
-- On LEMMA reduce production ty1 -> ty1 ty0 
-- On KIND reduce production ty1 -> ty1 ty0 
-- On INCLUDE reduce production ty1 -> ty1 ty0 
-- On IN reduce production ty1 -> ty1 ty0 
-- On IDENTIFIER reduce production ty1 -> ty1 ty0 
-- On EQ reduce production ty1 -> ty1 ty0 
-- On EOF reduce production ty1 -> ty1 ty0 
-- On DOT reduce production ty1 -> ty1 ty0 
-- On DEFAULT reduce production ty1 -> ty1 ty0 
-- On COMMA reduce production ty1 -> ty1 ty0 
-- On COLON reduce production ty1 -> ty1 ty0 
-- On BACKQUOTE reduce production ty1 -> ty1 ty0 
-- On AS reduce production ty1 -> ty1 ty0 
-- On ARROW reduce production ty1 -> ty1 ty0 

State 35:
ty1 -> ty0 . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty1 -> ty0 
-- On TERM reduce production ty1 -> ty0 
-- On RPAR reduce production ty1 -> ty0 
-- On RBRACKET reduce production ty1 -> ty0 
-- On LPAR reduce production ty1 -> ty0 
-- On LEMMA reduce production ty1 -> ty0 
-- On KIND reduce production ty1 -> ty0 
-- On INCLUDE reduce production ty1 -> ty0 
-- On IN reduce production ty1 -> ty0 
-- On IDENTIFIER reduce production ty1 -> ty0 
-- On EQ reduce production ty1 -> ty0 
-- On EOF reduce production ty1 -> ty0 
-- On DOT reduce production ty1 -> ty0 
-- On DEFAULT reduce production ty1 -> ty0 
-- On COMMA reduce production ty1 -> ty0 
-- On COLON reduce production ty1 -> ty0 
-- On BACKQUOTE reduce production ty1 -> ty0 
-- On AS reduce production ty1 -> ty0 
-- On ARROW reduce production ty1 -> ty0 

State 36:
ty3 -> ty2 ARROW . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 37
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 37:
ty3 -> ty2 ARROW ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On TYPE reduce production ty3 -> ty2 ARROW ty3 
-- On TERM reduce production ty3 -> ty2 ARROW ty3 
-- On RPAR reduce production ty3 -> ty2 ARROW ty3 
-- On RBRACKET reduce production ty3 -> ty2 ARROW ty3 
-- On LEMMA reduce production ty3 -> ty2 ARROW ty3 
-- On KIND reduce production ty3 -> ty2 ARROW ty3 
-- On INCLUDE reduce production ty3 -> ty2 ARROW ty3 
-- On IN reduce production ty3 -> ty2 ARROW ty3 
-- On EQ reduce production ty3 -> ty2 ARROW ty3 
-- On EOF reduce production ty3 -> ty2 ARROW ty3 
-- On DOT reduce production ty3 -> ty2 ARROW ty3 
-- On DEFAULT reduce production ty3 -> ty2 ARROW ty3 
-- On COMMA reduce production ty3 -> ty2 ARROW ty3 
-- On COLON reduce production ty3 -> ty2 ARROW ty3 
-- On AS reduce production ty3 -> ty2 ARROW ty3 

State 38:
ty1 -> ty1 . ty0 [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty2 -> ty1 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty0 shift to state 34
-- On TYPE reduce production ty2 -> ty1 
-- On TERM reduce production ty2 -> ty1 
-- On RPAR reduce production ty2 -> ty1 
-- On RBRACKET reduce production ty2 -> ty1 
-- On LEMMA reduce production ty2 -> ty1 
-- On KIND reduce production ty2 -> ty1 
-- On INCLUDE reduce production ty2 -> ty1 
-- On IN reduce production ty2 -> ty1 
-- On EQ reduce production ty2 -> ty1 
-- On EOF reduce production ty2 -> ty1 
-- On DOT reduce production ty2 -> ty1 
-- On DEFAULT reduce production ty2 -> ty1 
-- On COMMA reduce production ty2 -> ty1 
-- On COLON reduce production ty2 -> ty1 
-- On BACKQUOTE reduce production ty2 -> ty1 
-- On AS reduce production ty2 -> ty1 
-- On ARROW reduce production ty2 -> ty1 

State 39:
ty3 -> quantifier . type_binder DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 40
-- On nonempty_list(loc(type_variable)) shift to state 43

State 40:
ty3 -> quantifier type_binder . DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On DOT shift to state 41

State 41:
ty3 -> quantifier type_binder DOT . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 42
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 42:
ty3 -> quantifier type_binder DOT ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
-- On TYPE reduce production ty3 -> quantifier type_binder DOT ty3 
-- On TERM reduce production ty3 -> quantifier type_binder DOT ty3 
-- On RPAR reduce production ty3 -> quantifier type_binder DOT ty3 
-- On RBRACKET reduce production ty3 -> quantifier type_binder DOT ty3 
-- On LEMMA reduce production ty3 -> quantifier type_binder DOT ty3 
-- On KIND reduce production ty3 -> quantifier type_binder DOT ty3 
-- On INCLUDE reduce production ty3 -> quantifier type_binder DOT ty3 
-- On IN reduce production ty3 -> quantifier type_binder DOT ty3 
-- On EQ reduce production ty3 -> quantifier type_binder DOT ty3 
-- On EOF reduce production ty3 -> quantifier type_binder DOT ty3 
-- On DOT reduce production ty3 -> quantifier type_binder DOT ty3 
-- On DEFAULT reduce production ty3 -> quantifier type_binder DOT ty3 
-- On COMMA reduce production ty3 -> quantifier type_binder DOT ty3 
-- On COLON reduce production ty3 -> quantifier type_binder DOT ty3 
-- On AS reduce production ty3 -> quantifier type_binder DOT ty3 

State 43:
type_binder -> nonempty_list(loc(type_variable)) . [ DOT ]
type_binder -> nonempty_list(loc(type_variable)) . COLON kind1 [ DOT ]
-- On COLON shift to state 44
-- On DOT reduce production type_binder -> nonempty_list(loc(type_variable)) 

State 44:
type_binder -> nonempty_list(loc(type_variable)) COLON . kind1 [ DOT ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 45
-- On kind0 shift to state 13

State 45:
type_binder -> nonempty_list(loc(type_variable)) COLON kind1 . [ DOT ]
-- On DOT reduce production type_binder -> nonempty_list(loc(type_variable)) COLON kind1 

State 46:
ty0 -> LPAR ty3 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR ty3 . COLON kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR ty3 . COMMA ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On RPAR shift to state 47
-- On COMMA shift to state 48
-- On COLON shift to state 51

State 47:
ty0 -> LPAR ty3 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty0 -> LPAR ty3 RPAR 
-- On TERM reduce production ty0 -> LPAR ty3 RPAR 
-- On RPAR reduce production ty0 -> LPAR ty3 RPAR 
-- On RBRACKET reduce production ty0 -> LPAR ty3 RPAR 
-- On LPAR reduce production ty0 -> LPAR ty3 RPAR 
-- On LEMMA reduce production ty0 -> LPAR ty3 RPAR 
-- On KIND reduce production ty0 -> LPAR ty3 RPAR 
-- On INCLUDE reduce production ty0 -> LPAR ty3 RPAR 
-- On IN reduce production ty0 -> LPAR ty3 RPAR 
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 RPAR 
-- On EQ reduce production ty0 -> LPAR ty3 RPAR 
-- On EOF reduce production ty0 -> LPAR ty3 RPAR 
-- On DOT reduce production ty0 -> LPAR ty3 RPAR 
-- On DEFAULT reduce production ty0 -> LPAR ty3 RPAR 
-- On COMMA reduce production ty0 -> LPAR ty3 RPAR 
-- On COLON reduce production ty0 -> LPAR ty3 RPAR 
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 RPAR 
-- On AS reduce production ty0 -> LPAR ty3 RPAR 
-- On ARROW reduce production ty0 -> LPAR ty3 RPAR 

State 48:
ty0 -> LPAR ty3 COMMA . ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 49
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 49:
ty0 -> LPAR ty3 COMMA ty3 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On RPAR shift to state 50

State 50:
ty0 -> LPAR ty3 COMMA ty3 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On TERM reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On RPAR reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On RBRACKET reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On LPAR reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On LEMMA reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On KIND reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On INCLUDE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On IN reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On EQ reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On EOF reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On DOT reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On DEFAULT reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On COMMA reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On COLON reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On AS reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 
-- On ARROW reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR 

State 51:
ty0 -> LPAR ty3 COLON . kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 52
-- On kind0 shift to state 13

State 52:
ty0 -> LPAR ty3 COLON kind1 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On RPAR shift to state 53

State 53:
ty0 -> LPAR ty3 COLON kind1 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
-- On TYPE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On TERM reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On RPAR reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On RBRACKET reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On LPAR reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On LEMMA reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On KIND reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On INCLUDE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On IN reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On EQ reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On EOF reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On DOT reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On DEFAULT reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On COMMA reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On COLON reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On AS reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 
-- On ARROW reduce production ty0 -> LPAR ty3 COLON kind1 RPAR 

State 54:
declaration -> TYPE type_variable COLON kind1 EQ ty3 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On TERM reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On LEMMA reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On KIND reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On INCLUDE reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On EOF reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 
-- On DEFAULT reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3 

State 55:
declaration -> TERM . term_variable COLON ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 57

State 56:
term_variable -> IDENTIFIER . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EQ EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term_variable -> IDENTIFIER 
-- On TERM reduce production term_variable -> IDENTIFIER 
-- On RPAR reduce production term_variable -> IDENTIFIER 
-- On LPAR reduce production term_variable -> IDENTIFIER 
-- On LEMMA reduce production term_variable -> IDENTIFIER 
-- On LBRACKET reduce production term_variable -> IDENTIFIER 
-- On KIND reduce production term_variable -> IDENTIFIER 
-- On INCLUDE reduce production term_variable -> IDENTIFIER 
-- On IN reduce production term_variable -> IDENTIFIER 
-- On IDENTIFIER reduce production term_variable -> IDENTIFIER 
-- On EQ reduce production term_variable -> IDENTIFIER 
-- On EOF reduce production term_variable -> IDENTIFIER 
-- On DEFAULT reduce production term_variable -> IDENTIFIER 
-- On COMMA reduce production term_variable -> IDENTIFIER 
-- On COLON reduce production term_variable -> IDENTIFIER 
-- On BACKQUOTE reduce production term_variable -> IDENTIFIER 
-- On AS reduce production term_variable -> IDENTIFIER 

State 57:
declaration -> TERM term_variable . COLON ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On COLON shift to state 58

State 58:
declaration -> TERM term_variable COLON . ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 59
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 59:
declaration -> TERM term_variable COLON ty3 . EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On EQ shift to state 60

State 60:
declaration -> TERM term_variable COLON ty3 EQ . term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 145
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 61:
term3 -> UNPACK . type_variable COMMA term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 62

State 62:
term3 -> UNPACK type_variable . COMMA term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On COMMA shift to state 63

State 63:
term3 -> UNPACK type_variable COMMA . term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 64

State 64:
term3 -> UNPACK type_variable COMMA term_variable . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On EQ shift to state 65

State 65:
term3 -> UNPACK type_variable COMMA term_variable EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 142
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 66:
term3 -> TYPE . type_variable EQ ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 67

State 67:
term3 -> TYPE type_variable . EQ ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On EQ shift to state 68

State 68:
term3 -> TYPE type_variable EQ . ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 69
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 69:
term3 -> TYPE type_variable EQ ty3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 70

State 70:
term3 -> TYPE type_variable EQ ty3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 141
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 71:
term3 -> PACK . ty3 COMMA term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 72
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 72:
term3 -> PACK ty3 . COMMA term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On COMMA shift to state 73

State 73:
term3 -> PACK ty3 COMMA . term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 138
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 74:
term0 -> LPAR . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 COLON ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 COMMA term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On RPAR shift to state 75
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 130
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 75:
term0 -> LPAR RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term0 -> LPAR RPAR 
-- On TERM reduce production term0 -> LPAR RPAR 
-- On RPAR reduce production term0 -> LPAR RPAR 
-- On LPAR reduce production term0 -> LPAR RPAR 
-- On LEMMA reduce production term0 -> LPAR RPAR 
-- On LBRACKET reduce production term0 -> LPAR RPAR 
-- On KIND reduce production term0 -> LPAR RPAR 
-- On INCLUDE reduce production term0 -> LPAR RPAR 
-- On IN reduce production term0 -> LPAR RPAR 
-- On IDENTIFIER reduce production term0 -> LPAR RPAR 
-- On EOF reduce production term0 -> LPAR RPAR 
-- On DEFAULT reduce production term0 -> LPAR RPAR 
-- On COMMA reduce production term0 -> LPAR RPAR 
-- On COLON reduce production term0 -> LPAR RPAR 
-- On BACKQUOTE reduce production term0 -> LPAR RPAR 
-- On AS reduce production term0 -> LPAR RPAR 

State 76:
term3 -> LET . term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET . LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET . term_variable COLON ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 77
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 119

State 77:
term3 -> LET LPAR . term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On WILDCARD shift to state 78
-- On IDENTIFIER shift to state 56
-- On term_variable_or_wildcard shift to state 79
-- On term_variable shift to state 118

State 78:
term_variable_or_wildcard -> WILDCARD . [ RPAR COMMA ]
-- On RPAR reduce production term_variable_or_wildcard -> WILDCARD 
-- On COMMA reduce production term_variable_or_wildcard -> WILDCARD 

State 79:
term3 -> LET LPAR term_variable_or_wildcard . COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On COMMA shift to state 80

State 80:
term3 -> LET LPAR term_variable_or_wildcard COMMA . term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On WILDCARD shift to state 78
-- On IDENTIFIER shift to state 56
-- On term_variable_or_wildcard shift to state 81
-- On term_variable shift to state 118

State 81:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard . RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On RPAR shift to state 82

State 82:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On EQ shift to state 83

State 83:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 115
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 84:
term3 -> LAMBDA . term_binder DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 85
-- On term_binder shift to state 87
-- On nonempty_list(loc(term_variable)) shift to state 112

State 85:
nonempty_list(loc(term_variable)) -> term_variable . [ COLON ]
nonempty_list(loc(term_variable)) -> term_variable . nonempty_list(loc(term_variable)) [ COLON ]
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 85
-- On nonempty_list(loc(term_variable)) shift to state 86
-- On COLON reduce production nonempty_list(loc(term_variable)) -> term_variable 

State 86:
nonempty_list(loc(term_variable)) -> term_variable nonempty_list(loc(term_variable)) . [ COLON ]
-- On COLON reduce production nonempty_list(loc(term_variable)) -> term_variable nonempty_list(loc(term_variable)) 

State 87:
term3 -> LAMBDA term_binder . DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On DOT shift to state 88

State 88:
term3 -> LAMBDA term_binder DOT . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 111
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 89:
term3 -> BIGLAMBDA . type_binder DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 90
-- On nonempty_list(loc(type_variable)) shift to state 43

State 90:
term3 -> BIGLAMBDA type_binder . DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On DOT shift to state 91

State 91:
term3 -> BIGLAMBDA type_binder DOT . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 110
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 92:
term3 -> ASSERT . term_variable COLON ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 93

State 93:
term3 -> ASSERT term_variable . COLON ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On COLON shift to state 94

State 94:
term3 -> ASSERT term_variable COLON . ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 95
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 95:
term3 -> ASSERT term_variable COLON ty3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 96

State 96:
term3 -> ASSERT term_variable COLON ty3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 98
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 97:
term0 -> term_variable . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term0 -> term_variable 
-- On TERM reduce production term0 -> term_variable 
-- On RPAR reduce production term0 -> term_variable 
-- On LPAR reduce production term0 -> term_variable 
-- On LEMMA reduce production term0 -> term_variable 
-- On LBRACKET reduce production term0 -> term_variable 
-- On KIND reduce production term0 -> term_variable 
-- On INCLUDE reduce production term0 -> term_variable 
-- On IN reduce production term0 -> term_variable 
-- On IDENTIFIER reduce production term0 -> term_variable 
-- On EOF reduce production term0 -> term_variable 
-- On DEFAULT reduce production term0 -> term_variable 
-- On COMMA reduce production term0 -> term_variable 
-- On COLON reduce production term0 -> term_variable 
-- On BACKQUOTE reduce production term0 -> term_variable 
-- On AS reduce production term0 -> term_variable 

State 98:
term3 -> ASSERT term_variable COLON ty3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On TERM reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On RPAR reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On LEMMA reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On KIND reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On INCLUDE reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On IN reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On EOF reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On DEFAULT reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On COMMA reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On COLON reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 
-- On AS reduce production term3 -> ASSERT term_variable COLON ty3 IN term3 

State 99:
term2 -> term2 . BACKQUOTE term1 BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term3 -> term2 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On BACKQUOTE shift to state 100
-- On TYPE reduce production term3 -> term2 
-- On TERM reduce production term3 -> term2 
-- On RPAR reduce production term3 -> term2 
-- On LEMMA reduce production term3 -> term2 
-- On KIND reduce production term3 -> term2 
-- On INCLUDE reduce production term3 -> term2 
-- On IN reduce production term3 -> term2 
-- On EOF reduce production term3 -> term2 
-- On DEFAULT reduce production term3 -> term2 
-- On COMMA reduce production term3 -> term2 
-- On COLON reduce production term3 -> term2 
-- On AS reduce production term3 -> term2 

State 100:
term2 -> term2 BACKQUOTE . term1 BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 74
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term1 shift to state 101
-- On term0 shift to state 108

State 101:
term1 -> term1 . term0 [ LPAR LBRACKET IDENTIFIER BACKQUOTE ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ LPAR LBRACKET IDENTIFIER BACKQUOTE ]
term2 -> term2 BACKQUOTE term1 . BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On BACKQUOTE shift to state 105
-- On term_variable shift to state 97
-- On term0 shift to state 107

State 102:
term1 -> term1 LBRACKET . ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 103
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 103:
term1 -> term1 LBRACKET ty3 . RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On RBRACKET shift to state 104

State 104:
term1 -> term1 LBRACKET ty3 RBRACKET . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On TERM reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On RPAR reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On LPAR reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On LEMMA reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On LBRACKET reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On KIND reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On INCLUDE reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On IN reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On IDENTIFIER reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On EOF reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On DEFAULT reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On COMMA reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On COLON reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On BACKQUOTE reduce production term1 -> term1 LBRACKET ty3 RBRACKET 
-- On AS reduce production term1 -> term1 LBRACKET ty3 RBRACKET 

State 105:
term2 -> term2 BACKQUOTE term1 BACKQUOTE . term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 74
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term1 shift to state 106
-- On term0 shift to state 108

State 106:
term1 -> term1 . term0 [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term0 shift to state 107
-- On TYPE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On TERM reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On RPAR reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On LEMMA reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On KIND reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On INCLUDE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On IN reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On EOF reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On DEFAULT reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On COMMA reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On COLON reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On BACKQUOTE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 
-- On AS reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 

State 107:
term1 -> term1 term0 . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term1 -> term1 term0 
-- On TERM reduce production term1 -> term1 term0 
-- On RPAR reduce production term1 -> term1 term0 
-- On LPAR reduce production term1 -> term1 term0 
-- On LEMMA reduce production term1 -> term1 term0 
-- On LBRACKET reduce production term1 -> term1 term0 
-- On KIND reduce production term1 -> term1 term0 
-- On INCLUDE reduce production term1 -> term1 term0 
-- On IN reduce production term1 -> term1 term0 
-- On IDENTIFIER reduce production term1 -> term1 term0 
-- On EOF reduce production term1 -> term1 term0 
-- On DEFAULT reduce production term1 -> term1 term0 
-- On COMMA reduce production term1 -> term1 term0 
-- On COLON reduce production term1 -> term1 term0 
-- On BACKQUOTE reduce production term1 -> term1 term0 
-- On AS reduce production term1 -> term1 term0 

State 108:
term1 -> term0 . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term1 -> term0 
-- On TERM reduce production term1 -> term0 
-- On RPAR reduce production term1 -> term0 
-- On LPAR reduce production term1 -> term0 
-- On LEMMA reduce production term1 -> term0 
-- On LBRACKET reduce production term1 -> term0 
-- On KIND reduce production term1 -> term0 
-- On INCLUDE reduce production term1 -> term0 
-- On IN reduce production term1 -> term0 
-- On IDENTIFIER reduce production term1 -> term0 
-- On EOF reduce production term1 -> term0 
-- On DEFAULT reduce production term1 -> term0 
-- On COMMA reduce production term1 -> term0 
-- On COLON reduce production term1 -> term0 
-- On BACKQUOTE reduce production term1 -> term0 
-- On AS reduce production term1 -> term0 

State 109:
term1 -> term1 . term0 [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term2 -> term1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term0 shift to state 107
-- On TYPE reduce production term2 -> term1 
-- On TERM reduce production term2 -> term1 
-- On RPAR reduce production term2 -> term1 
-- On LEMMA reduce production term2 -> term1 
-- On KIND reduce production term2 -> term1 
-- On INCLUDE reduce production term2 -> term1 
-- On IN reduce production term2 -> term1 
-- On EOF reduce production term2 -> term1 
-- On DEFAULT reduce production term2 -> term1 
-- On COMMA reduce production term2 -> term1 
-- On COLON reduce production term2 -> term1 
-- On BACKQUOTE reduce production term2 -> term1 
-- On AS reduce production term2 -> term1 

State 110:
term3 -> BIGLAMBDA type_binder DOT term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On TERM reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On RPAR reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On LEMMA reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On KIND reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On INCLUDE reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On IN reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On EOF reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On DEFAULT reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On COMMA reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On COLON reduce production term3 -> BIGLAMBDA type_binder DOT term3 
-- On AS reduce production term3 -> BIGLAMBDA type_binder DOT term3 

State 111:
term3 -> LAMBDA term_binder DOT term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> LAMBDA term_binder DOT term3 
-- On TERM reduce production term3 -> LAMBDA term_binder DOT term3 
-- On RPAR reduce production term3 -> LAMBDA term_binder DOT term3 
-- On LEMMA reduce production term3 -> LAMBDA term_binder DOT term3 
-- On KIND reduce production term3 -> LAMBDA term_binder DOT term3 
-- On INCLUDE reduce production term3 -> LAMBDA term_binder DOT term3 
-- On IN reduce production term3 -> LAMBDA term_binder DOT term3 
-- On EOF reduce production term3 -> LAMBDA term_binder DOT term3 
-- On DEFAULT reduce production term3 -> LAMBDA term_binder DOT term3 
-- On COMMA reduce production term3 -> LAMBDA term_binder DOT term3 
-- On COLON reduce production term3 -> LAMBDA term_binder DOT term3 
-- On AS reduce production term3 -> LAMBDA term_binder DOT term3 

State 112:
term_binder -> nonempty_list(loc(term_variable)) . COLON ty3 [ DOT ]
-- On COLON shift to state 113

State 113:
term_binder -> nonempty_list(loc(term_variable)) COLON . ty3 [ DOT ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 114
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 114:
term_binder -> nonempty_list(loc(term_variable)) COLON ty3 . [ DOT ]
-- On DOT reduce production term_binder -> nonempty_list(loc(term_variable)) COLON ty3 

State 115:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 116

State 116:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 117
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 117:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On TERM reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On RPAR reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On LEMMA reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On KIND reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On INCLUDE reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On IN reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On EOF reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On DEFAULT reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On COMMA reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On COLON reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 
-- On AS reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 

State 118:
term_variable_or_wildcard -> term_variable . [ RPAR COMMA ]
-- On RPAR reduce production term_variable_or_wildcard -> term_variable 
-- On COMMA reduce production term_variable_or_wildcard -> term_variable 

State 119:
term3 -> LET term_variable . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET term_variable . COLON ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On EQ shift to state 120
-- On COLON shift to state 124

State 120:
term3 -> LET term_variable EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 121
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 121:
term3 -> LET term_variable EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 122

State 122:
term3 -> LET term_variable EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 123
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 123:
term3 -> LET term_variable EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On TERM reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On RPAR reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On LEMMA reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On KIND reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On INCLUDE reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On IN reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On EOF reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On DEFAULT reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On COMMA reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On COLON reduce production term3 -> LET term_variable EQ term3 IN term3 
-- On AS reduce production term3 -> LET term_variable EQ term3 IN term3 

State 124:
term3 -> LET term_variable COLON . ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 125
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 125:
term3 -> LET term_variable COLON ty3 . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On EQ shift to state 126

State 126:
term3 -> LET term_variable COLON ty3 EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 127
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 127:
term3 -> LET term_variable COLON ty3 EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 128

State 128:
term3 -> LET term_variable COLON ty3 EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 129
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 129:
term3 -> LET term_variable COLON ty3 EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On TERM reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On RPAR reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On LEMMA reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On KIND reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On INCLUDE reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On IN reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On EOF reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On DEFAULT reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On COMMA reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On COLON reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 
-- On AS reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3 

State 130:
term0 -> LPAR term3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR term3 . COLON ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR term3 . COMMA term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On RPAR shift to state 131
-- On COMMA shift to state 132
-- On COLON shift to state 135

State 131:
term0 -> LPAR term3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term0 -> LPAR term3 RPAR 
-- On TERM reduce production term0 -> LPAR term3 RPAR 
-- On RPAR reduce production term0 -> LPAR term3 RPAR 
-- On LPAR reduce production term0 -> LPAR term3 RPAR 
-- On LEMMA reduce production term0 -> LPAR term3 RPAR 
-- On LBRACKET reduce production term0 -> LPAR term3 RPAR 
-- On KIND reduce production term0 -> LPAR term3 RPAR 
-- On INCLUDE reduce production term0 -> LPAR term3 RPAR 
-- On IN reduce production term0 -> LPAR term3 RPAR 
-- On IDENTIFIER reduce production term0 -> LPAR term3 RPAR 
-- On EOF reduce production term0 -> LPAR term3 RPAR 
-- On DEFAULT reduce production term0 -> LPAR term3 RPAR 
-- On COMMA reduce production term0 -> LPAR term3 RPAR 
-- On COLON reduce production term0 -> LPAR term3 RPAR 
-- On BACKQUOTE reduce production term0 -> LPAR term3 RPAR 
-- On AS reduce production term0 -> LPAR term3 RPAR 

State 132:
term0 -> LPAR term3 COMMA . term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 133
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 133:
term0 -> LPAR term3 COMMA term3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On RPAR shift to state 134

State 134:
term0 -> LPAR term3 COMMA term3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On TERM reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On RPAR reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On LPAR reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On LEMMA reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On LBRACKET reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On KIND reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On INCLUDE reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On IN reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On IDENTIFIER reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On EOF reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On DEFAULT reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On COMMA reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On COLON reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On BACKQUOTE reduce production term0 -> LPAR term3 COMMA term3 RPAR 
-- On AS reduce production term0 -> LPAR term3 COMMA term3 RPAR 

State 135:
term0 -> LPAR term3 COLON . ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 136
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 136:
term0 -> LPAR term3 COLON ty3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On RPAR shift to state 137

State 137:
term0 -> LPAR term3 COLON ty3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
-- On TYPE reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On TERM reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On RPAR reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On LPAR reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On LEMMA reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On LBRACKET reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On KIND reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On INCLUDE reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On IN reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On IDENTIFIER reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On EOF reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On DEFAULT reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On COMMA reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On COLON reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On BACKQUOTE reduce production term0 -> LPAR term3 COLON ty3 RPAR 
-- On AS reduce production term0 -> LPAR term3 COLON ty3 RPAR 

State 138:
term3 -> PACK ty3 COMMA term3 . AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On AS shift to state 139

State 139:
term3 -> PACK ty3 COMMA term3 AS . ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 140
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39

State 140:
term3 -> PACK ty3 COMMA term3 AS ty3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On TERM reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On RPAR reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On LEMMA reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On KIND reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On INCLUDE reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On IN reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On EOF reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On DEFAULT reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On COMMA reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On COLON reduce production term3 -> PACK ty3 COMMA term3 AS ty3 
-- On AS reduce production term3 -> PACK ty3 COMMA term3 AS ty3 

State 141:
term3 -> TYPE type_variable EQ ty3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On TERM reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On RPAR reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On LEMMA reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On KIND reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On INCLUDE reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On IN reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On EOF reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On DEFAULT reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On COMMA reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On COLON reduce production term3 -> TYPE type_variable EQ ty3 IN term3 
-- On AS reduce production term3 -> TYPE type_variable EQ ty3 IN term3 

State 142:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On IN shift to state 143

State 143:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 144
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108

State 144:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
-- On TYPE reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On TERM reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On RPAR reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On LEMMA reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On KIND reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On INCLUDE reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On IN reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On EOF reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On DEFAULT reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On COMMA reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On COLON reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 
-- On AS reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 

State 145:
declaration -> TERM term_variable COLON ty3 EQ term3 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On TERM reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On LEMMA reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On KIND reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On INCLUDE reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On EOF reduce production declaration -> TERM term_variable COLON ty3 EQ term3 
-- On DEFAULT reduce production declaration -> TERM term_variable COLON ty3 EQ term3 

State 146:
declaration -> LEMMA . IDENTIFIER COLON statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 147

State 147:
declaration -> LEMMA IDENTIFIER . COLON statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On COLON shift to state 148

State 148:
declaration -> LEMMA IDENTIFIER COLON . statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 149
-- On type_variable shift to state 27
-- On ty2 shift to state 152
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On statement shift to state 156

State 149:
statement -> FORALL . type_binder DOT statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 150
-- On nonempty_list(loc(type_variable)) shift to state 43

State 150:
statement -> FORALL type_binder . DOT statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On DOT shift to state 151

State 151:
statement -> FORALL type_binder DOT . statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 149
-- On type_variable shift to state 27
-- On ty2 shift to state 152
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On statement shift to state 155

State 152:
statement -> ty2 . EQ ty2 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ EQ BACKQUOTE ]
-- On EQ shift to state 153
-- On BACKQUOTE shift to state 30

State 153:
statement -> ty2 EQ . ty2 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty2 shift to state 154
-- On ty1 shift to state 38
-- On ty0 shift to state 35

State 154:
statement -> ty2 EQ ty2 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT BACKQUOTE ]
-- On BACKQUOTE shift to state 30
-- On TYPE reduce production statement -> ty2 EQ ty2 
-- On TERM reduce production statement -> ty2 EQ ty2 
-- On LEMMA reduce production statement -> ty2 EQ ty2 
-- On KIND reduce production statement -> ty2 EQ ty2 
-- On INCLUDE reduce production statement -> ty2 EQ ty2 
-- On EOF reduce production statement -> ty2 EQ ty2 
-- On DEFAULT reduce production statement -> ty2 EQ ty2 

State 155:
statement -> FORALL type_binder DOT statement . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production statement -> FORALL type_binder DOT statement 
-- On TERM reduce production statement -> FORALL type_binder DOT statement 
-- On LEMMA reduce production statement -> FORALL type_binder DOT statement 
-- On KIND reduce production statement -> FORALL type_binder DOT statement 
-- On INCLUDE reduce production statement -> FORALL type_binder DOT statement 
-- On EOF reduce production statement -> FORALL type_binder DOT statement 
-- On DEFAULT reduce production statement -> FORALL type_binder DOT statement 

State 156:
declaration -> LEMMA IDENTIFIER COLON statement . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On TERM reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On LEMMA reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On KIND reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On INCLUDE reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On EOF reduce production declaration -> LEMMA IDENTIFIER COLON statement 
-- On DEFAULT reduce production declaration -> LEMMA IDENTIFIER COLON statement 

State 157:
declaration -> KIND . kind_variable EQ kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 158

State 158:
declaration -> KIND kind_variable . EQ kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On EQ shift to state 159

State 159:
declaration -> KIND kind_variable EQ . kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 160
-- On kind0 shift to state 13

State 160:
declaration -> KIND kind_variable EQ kind1 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> KIND kind_variable EQ kind1 
-- On TERM reduce production declaration -> KIND kind_variable EQ kind1 
-- On LEMMA reduce production declaration -> KIND kind_variable EQ kind1 
-- On KIND reduce production declaration -> KIND kind_variable EQ kind1 
-- On INCLUDE reduce production declaration -> KIND kind_variable EQ kind1 
-- On EOF reduce production declaration -> KIND kind_variable EQ kind1 
-- On DEFAULT reduce production declaration -> KIND kind_variable EQ kind1 

State 161:
declaration -> INCLUDE . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> INCLUDE 
-- On TERM reduce production declaration -> INCLUDE 
-- On LEMMA reduce production declaration -> INCLUDE 
-- On KIND reduce production declaration -> INCLUDE 
-- On INCLUDE reduce production declaration -> INCLUDE 
-- On EOF reduce production declaration -> INCLUDE 
-- On DEFAULT reduce production declaration -> INCLUDE 

State 162:
declaration -> DEFAULT . KIND type_variable COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On KIND shift to state 163

State 163:
declaration -> DEFAULT KIND . type_variable COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 164

State 164:
declaration -> DEFAULT KIND type_variable . COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On COLON shift to state 165

State 165:
declaration -> DEFAULT KIND type_variable COLON . kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 166
-- On kind0 shift to state 13

State 166:
declaration -> DEFAULT KIND type_variable COLON kind1 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
-- On TYPE reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On TERM reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On LEMMA reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On KIND reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On INCLUDE reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On EOF reduce production declaration -> DEFAULT KIND type_variable COLON kind1 
-- On DEFAULT reduce production declaration -> DEFAULT KIND type_variable COLON kind1 

State 167:
program' -> program . [ # ]
-- On # accept program

State 168:
program -> list(declaration) . EOF [ # ]
-- On EOF shift to state 169

State 169:
program -> list(declaration) EOF . [ # ]
-- On # reduce production program -> list(declaration) EOF 

State 170:
list(declaration) -> declaration . list(declaration) [ EOF ]
-- On TYPE shift to state 1
-- On TERM shift to state 55
-- On LEMMA shift to state 146
-- On KIND shift to state 157
-- On INCLUDE shift to state 161
-- On DEFAULT shift to state 162
-- On list(declaration) shift to state 171
-- On declaration shift to state 170
-- On EOF reduce production list(declaration) -> 

State 171:
list(declaration) -> declaration list(declaration) . [ EOF ]
-- On EOF reduce production list(declaration) -> declaration list(declaration) 

