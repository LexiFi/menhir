State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On TYPE shift to state 1
-- On TERM shift to state 55
-- On LEMMA shift to state 146
-- On KIND shift to state 157
-- On INCLUDE shift to state 161
-- On DEFAULT shift to state 162
-- On program shift to state 167
-- On list(declaration) shift to state 168
-- On declaration shift to state 170
## Reductions:
-- On EOF reduce production list(declaration) ->

State 1:
## Known stack suffix:
## TYPE
## LR(1) items:
declaration -> TYPE . type_variable COLON kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 3
## Reductions:

State 2:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
type_variable -> IDENTIFIER . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production type_variable -> IDENTIFIER
-- On TERM reduce production type_variable -> IDENTIFIER
-- On RPAR reduce production type_variable -> IDENTIFIER
-- On RBRACKET reduce production type_variable -> IDENTIFIER
-- On LPAR reduce production type_variable -> IDENTIFIER
-- On LEMMA reduce production type_variable -> IDENTIFIER
-- On KIND reduce production type_variable -> IDENTIFIER
-- On INCLUDE reduce production type_variable -> IDENTIFIER
-- On IN reduce production type_variable -> IDENTIFIER
-- On IDENTIFIER reduce production type_variable -> IDENTIFIER
-- On EQ reduce production type_variable -> IDENTIFIER
-- On EOF reduce production type_variable -> IDENTIFIER
-- On DOT reduce production type_variable -> IDENTIFIER
-- On DEFAULT reduce production type_variable -> IDENTIFIER
-- On COMMA reduce production type_variable -> IDENTIFIER
-- On COLON reduce production type_variable -> IDENTIFIER
-- On BACKQUOTE reduce production type_variable -> IDENTIFIER
-- On AS reduce production type_variable -> IDENTIFIER
-- On ARROW reduce production type_variable -> IDENTIFIER

State 3:
## Known stack suffix:
## TYPE type_variable
## LR(1) items:
declaration -> TYPE type_variable . COLON kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On COLON shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## TYPE type_variable COLON
## LR(1) items:
declaration -> TYPE type_variable COLON . kind1 EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 16
-- On kind0 shift to state 13
## Reductions:

State 5:
## Known stack suffix:
## STAR
## LR(1) items:
kind0 -> STAR . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind0 -> STAR
-- On TERM reduce production kind0 -> STAR
-- On RPAR reduce production kind0 -> STAR
-- On LEMMA reduce production kind0 -> STAR
-- On KIND reduce production kind0 -> STAR
-- On INCLUDE reduce production kind0 -> STAR
-- On EQ reduce production kind0 -> STAR
-- On EOF reduce production kind0 -> STAR
-- On DOT reduce production kind0 -> STAR
-- On DEFAULT reduce production kind0 -> STAR
-- On ARROW reduce production kind0 -> STAR

State 6:
## Known stack suffix:
## LPAR
## LR(1) items:
kind0 -> LPAR . kind1 RPAR [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 11
-- On kind0 shift to state 13
## Reductions:

State 7:
## Known stack suffix:
## LATER
## LR(1) items:
kind0 -> LATER . kind0 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind0 shift to state 10
## Reductions:

State 8:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
kind_variable -> IDENTIFIER . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind_variable -> IDENTIFIER
-- On TERM reduce production kind_variable -> IDENTIFIER
-- On RPAR reduce production kind_variable -> IDENTIFIER
-- On LEMMA reduce production kind_variable -> IDENTIFIER
-- On KIND reduce production kind_variable -> IDENTIFIER
-- On INCLUDE reduce production kind_variable -> IDENTIFIER
-- On EQ reduce production kind_variable -> IDENTIFIER
-- On EOF reduce production kind_variable -> IDENTIFIER
-- On DOT reduce production kind_variable -> IDENTIFIER
-- On DEFAULT reduce production kind_variable -> IDENTIFIER
-- On ARROW reduce production kind_variable -> IDENTIFIER

State 9:
## Known stack suffix:
## kind_variable
## LR(1) items:
kind0 -> kind_variable . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind0 -> kind_variable
-- On TERM reduce production kind0 -> kind_variable
-- On RPAR reduce production kind0 -> kind_variable
-- On LEMMA reduce production kind0 -> kind_variable
-- On KIND reduce production kind0 -> kind_variable
-- On INCLUDE reduce production kind0 -> kind_variable
-- On EQ reduce production kind0 -> kind_variable
-- On EOF reduce production kind0 -> kind_variable
-- On DOT reduce production kind0 -> kind_variable
-- On DEFAULT reduce production kind0 -> kind_variable
-- On ARROW reduce production kind0 -> kind_variable

State 10:
## Known stack suffix:
## LATER kind0
## LR(1) items:
kind0 -> LATER kind0 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind0 -> LATER kind0
-- On TERM reduce production kind0 -> LATER kind0
-- On RPAR reduce production kind0 -> LATER kind0
-- On LEMMA reduce production kind0 -> LATER kind0
-- On KIND reduce production kind0 -> LATER kind0
-- On INCLUDE reduce production kind0 -> LATER kind0
-- On EQ reduce production kind0 -> LATER kind0
-- On EOF reduce production kind0 -> LATER kind0
-- On DOT reduce production kind0 -> LATER kind0
-- On DEFAULT reduce production kind0 -> LATER kind0
-- On ARROW reduce production kind0 -> LATER kind0

State 11:
## Known stack suffix:
## LPAR kind1
## LR(1) items:
kind0 -> LPAR kind1 . RPAR [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
-- On RPAR shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LPAR kind1 RPAR
## LR(1) items:
kind0 -> LPAR kind1 RPAR . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind0 -> LPAR kind1 RPAR
-- On TERM reduce production kind0 -> LPAR kind1 RPAR
-- On RPAR reduce production kind0 -> LPAR kind1 RPAR
-- On LEMMA reduce production kind0 -> LPAR kind1 RPAR
-- On KIND reduce production kind0 -> LPAR kind1 RPAR
-- On INCLUDE reduce production kind0 -> LPAR kind1 RPAR
-- On EQ reduce production kind0 -> LPAR kind1 RPAR
-- On EOF reduce production kind0 -> LPAR kind1 RPAR
-- On DOT reduce production kind0 -> LPAR kind1 RPAR
-- On DEFAULT reduce production kind0 -> LPAR kind1 RPAR
-- On ARROW reduce production kind0 -> LPAR kind1 RPAR

State 13:
## Known stack suffix:
## kind0
## LR(1) items:
kind1 -> kind0 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
kind1 -> kind0 . ARROW kind1 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
## Transitions:
-- On ARROW shift to state 14
## Reductions:
-- On TYPE reduce production kind1 -> kind0
-- On TERM reduce production kind1 -> kind0
-- On RPAR reduce production kind1 -> kind0
-- On LEMMA reduce production kind1 -> kind0
-- On KIND reduce production kind1 -> kind0
-- On INCLUDE reduce production kind1 -> kind0
-- On EQ reduce production kind1 -> kind0
-- On EOF reduce production kind1 -> kind0
-- On DOT reduce production kind1 -> kind0
-- On DEFAULT reduce production kind1 -> kind0

State 14:
## Known stack suffix:
## kind0 ARROW
## LR(1) items:
kind1 -> kind0 ARROW . kind1 [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 15
-- On kind0 shift to state 13
## Reductions:

State 15:
## Known stack suffix:
## kind0 ARROW kind1
## LR(1) items:
kind1 -> kind0 ARROW kind1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE EQ EOF DOT DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production kind1 -> kind0 ARROW kind1
-- On TERM reduce production kind1 -> kind0 ARROW kind1
-- On RPAR reduce production kind1 -> kind0 ARROW kind1
-- On LEMMA reduce production kind1 -> kind0 ARROW kind1
-- On KIND reduce production kind1 -> kind0 ARROW kind1
-- On INCLUDE reduce production kind1 -> kind0 ARROW kind1
-- On EQ reduce production kind1 -> kind0 ARROW kind1
-- On EOF reduce production kind1 -> kind0 ARROW kind1
-- On DOT reduce production kind1 -> kind0 ARROW kind1
-- On DEFAULT reduce production kind1 -> kind0 ARROW kind1

State 16:
## Known stack suffix:
## TYPE type_variable COLON kind1
## LR(1) items:
declaration -> TYPE type_variable COLON kind1 . EQ ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On EQ shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## TYPE type_variable COLON kind1 EQ
## LR(1) items:
declaration -> TYPE type_variable COLON kind1 EQ . ty3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 54
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 18:
## Known stack suffix:
## LPAR
## LR(1) items:
ty0 -> LPAR . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 COLON kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR . ty3 COMMA ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On RPAR shift to state 19
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 46
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 19:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
ty0 -> LPAR RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty0 -> LPAR RPAR
-- On TERM reduce production ty0 -> LPAR RPAR
-- On RPAR reduce production ty0 -> LPAR RPAR
-- On RBRACKET reduce production ty0 -> LPAR RPAR
-- On LPAR reduce production ty0 -> LPAR RPAR
-- On LEMMA reduce production ty0 -> LPAR RPAR
-- On KIND reduce production ty0 -> LPAR RPAR
-- On INCLUDE reduce production ty0 -> LPAR RPAR
-- On IN reduce production ty0 -> LPAR RPAR
-- On IDENTIFIER reduce production ty0 -> LPAR RPAR
-- On EQ reduce production ty0 -> LPAR RPAR
-- On EOF reduce production ty0 -> LPAR RPAR
-- On DOT reduce production ty0 -> LPAR RPAR
-- On DEFAULT reduce production ty0 -> LPAR RPAR
-- On COMMA reduce production ty0 -> LPAR RPAR
-- On COLON reduce production ty0 -> LPAR RPAR
-- On BACKQUOTE reduce production ty0 -> LPAR RPAR
-- On AS reduce production ty0 -> LPAR RPAR
-- On ARROW reduce production ty0 -> LPAR RPAR

State 20:
## Known stack suffix:
## LAMBDA
## LR(1) items:
ty3 -> LAMBDA . type_binder DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 23
-- On nonempty_list(loc(type_variable)) shift to state 43
## Reductions:

State 21:
## Known stack suffix:
## type_variable
## LR(1) items:
nonempty_list(loc(type_variable)) -> type_variable . [ DOT COLON ]
nonempty_list(loc(type_variable)) -> type_variable . nonempty_list(loc(type_variable)) [ DOT COLON ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On nonempty_list(loc(type_variable)) shift to state 22
## Reductions:
-- On DOT reduce production nonempty_list(loc(type_variable)) -> type_variable
-- On COLON reduce production nonempty_list(loc(type_variable)) -> type_variable

State 22:
## Known stack suffix:
## type_variable nonempty_list(loc(type_variable))
## LR(1) items:
nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable)) . [ DOT COLON ]
## Transitions:
## Reductions:
-- On DOT reduce production nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable))
-- On COLON reduce production nonempty_list(loc(type_variable)) -> type_variable nonempty_list(loc(type_variable))

State 23:
## Known stack suffix:
## LAMBDA type_binder
## LR(1) items:
ty3 -> LAMBDA type_binder . DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## LAMBDA type_binder DOT
## LR(1) items:
ty3 -> LAMBDA type_binder DOT . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 28
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 25:
## Known stack suffix:
## FORALL
## LR(1) items:
quantifier -> FORALL . [ IDENTIFIER ]
## Transitions:
## Reductions:
-- On IDENTIFIER reduce production quantifier -> FORALL

State 26:
## Known stack suffix:
## EXISTS
## LR(1) items:
quantifier -> EXISTS . [ IDENTIFIER ]
## Transitions:
## Reductions:
-- On IDENTIFIER reduce production quantifier -> EXISTS

State 27:
## Known stack suffix:
## type_variable
## LR(1) items:
ty0 -> type_variable . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty0 -> type_variable
-- On TERM reduce production ty0 -> type_variable
-- On RPAR reduce production ty0 -> type_variable
-- On RBRACKET reduce production ty0 -> type_variable
-- On LPAR reduce production ty0 -> type_variable
-- On LEMMA reduce production ty0 -> type_variable
-- On KIND reduce production ty0 -> type_variable
-- On INCLUDE reduce production ty0 -> type_variable
-- On IN reduce production ty0 -> type_variable
-- On IDENTIFIER reduce production ty0 -> type_variable
-- On EQ reduce production ty0 -> type_variable
-- On EOF reduce production ty0 -> type_variable
-- On DOT reduce production ty0 -> type_variable
-- On DEFAULT reduce production ty0 -> type_variable
-- On COMMA reduce production ty0 -> type_variable
-- On COLON reduce production ty0 -> type_variable
-- On BACKQUOTE reduce production ty0 -> type_variable
-- On AS reduce production ty0 -> type_variable
-- On ARROW reduce production ty0 -> type_variable

State 28:
## Known stack suffix:
## LAMBDA type_binder DOT ty3
## LR(1) items:
ty3 -> LAMBDA type_binder DOT ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On TERM reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On RPAR reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On RBRACKET reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On LEMMA reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On KIND reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On INCLUDE reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On IN reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On EQ reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On EOF reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On DOT reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On DEFAULT reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On COMMA reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On COLON reduce production ty3 -> LAMBDA type_binder DOT ty3
-- On AS reduce production ty3 -> LAMBDA type_binder DOT ty3

State 29:
## Known stack suffix:
## ty2
## LR(1) items:
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty3 -> ty2 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
ty3 -> ty2 . ARROW ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On BACKQUOTE shift to state 30
-- On ARROW shift to state 36
## Reductions:
-- On TYPE reduce production ty3 -> ty2
-- On TERM reduce production ty3 -> ty2
-- On RPAR reduce production ty3 -> ty2
-- On RBRACKET reduce production ty3 -> ty2
-- On LEMMA reduce production ty3 -> ty2
-- On KIND reduce production ty3 -> ty2
-- On INCLUDE reduce production ty3 -> ty2
-- On IN reduce production ty3 -> ty2
-- On EQ reduce production ty3 -> ty2
-- On EOF reduce production ty3 -> ty2
-- On DOT reduce production ty3 -> ty2
-- On DEFAULT reduce production ty3 -> ty2
-- On COMMA reduce production ty3 -> ty2
-- On COLON reduce production ty3 -> ty2
-- On AS reduce production ty3 -> ty2

State 30:
## Known stack suffix:
## ty2 BACKQUOTE
## LR(1) items:
ty2 -> ty2 BACKQUOTE . ty1 BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty1 shift to state 31
-- On ty0 shift to state 35
## Reductions:

State 31:
## Known stack suffix:
## ty2 BACKQUOTE ty1
## LR(1) items:
ty1 -> ty1 . ty0 [ LPAR IDENTIFIER BACKQUOTE ]
ty2 -> ty2 BACKQUOTE ty1 . BACKQUOTE ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On BACKQUOTE shift to state 32
-- On type_variable shift to state 27
-- On ty0 shift to state 34
## Reductions:

State 32:
## Known stack suffix:
## ty2 BACKQUOTE ty1 BACKQUOTE
## LR(1) items:
ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE . ty1 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty1 shift to state 33
-- On ty0 shift to state 35
## Reductions:

State 33:
## Known stack suffix:
## ty2 BACKQUOTE ty1 BACKQUOTE ty1
## LR(1) items:
ty1 -> ty1 . ty0 [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty0 shift to state 34
## Reductions:
-- On TYPE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On TERM reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On RPAR reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On RBRACKET reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On LEMMA reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On KIND reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On INCLUDE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On IN reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On EQ reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On EOF reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On DOT reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On DEFAULT reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On COMMA reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On COLON reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On BACKQUOTE reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On AS reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1
-- On ARROW reduce production ty2 -> ty2 BACKQUOTE ty1 BACKQUOTE ty1

State 34:
## Known stack suffix:
## ty1 ty0
## LR(1) items:
ty1 -> ty1 ty0 . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty1 -> ty1 ty0
-- On TERM reduce production ty1 -> ty1 ty0
-- On RPAR reduce production ty1 -> ty1 ty0
-- On RBRACKET reduce production ty1 -> ty1 ty0
-- On LPAR reduce production ty1 -> ty1 ty0
-- On LEMMA reduce production ty1 -> ty1 ty0
-- On KIND reduce production ty1 -> ty1 ty0
-- On INCLUDE reduce production ty1 -> ty1 ty0
-- On IN reduce production ty1 -> ty1 ty0
-- On IDENTIFIER reduce production ty1 -> ty1 ty0
-- On EQ reduce production ty1 -> ty1 ty0
-- On EOF reduce production ty1 -> ty1 ty0
-- On DOT reduce production ty1 -> ty1 ty0
-- On DEFAULT reduce production ty1 -> ty1 ty0
-- On COMMA reduce production ty1 -> ty1 ty0
-- On COLON reduce production ty1 -> ty1 ty0
-- On BACKQUOTE reduce production ty1 -> ty1 ty0
-- On AS reduce production ty1 -> ty1 ty0
-- On ARROW reduce production ty1 -> ty1 ty0

State 35:
## Known stack suffix:
## ty0
## LR(1) items:
ty1 -> ty0 . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty1 -> ty0
-- On TERM reduce production ty1 -> ty0
-- On RPAR reduce production ty1 -> ty0
-- On RBRACKET reduce production ty1 -> ty0
-- On LPAR reduce production ty1 -> ty0
-- On LEMMA reduce production ty1 -> ty0
-- On KIND reduce production ty1 -> ty0
-- On INCLUDE reduce production ty1 -> ty0
-- On IN reduce production ty1 -> ty0
-- On IDENTIFIER reduce production ty1 -> ty0
-- On EQ reduce production ty1 -> ty0
-- On EOF reduce production ty1 -> ty0
-- On DOT reduce production ty1 -> ty0
-- On DEFAULT reduce production ty1 -> ty0
-- On COMMA reduce production ty1 -> ty0
-- On COLON reduce production ty1 -> ty0
-- On BACKQUOTE reduce production ty1 -> ty0
-- On AS reduce production ty1 -> ty0
-- On ARROW reduce production ty1 -> ty0

State 36:
## Known stack suffix:
## ty2 ARROW
## LR(1) items:
ty3 -> ty2 ARROW . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 37
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 37:
## Known stack suffix:
## ty2 ARROW ty3
## LR(1) items:
ty3 -> ty2 ARROW ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty3 -> ty2 ARROW ty3
-- On TERM reduce production ty3 -> ty2 ARROW ty3
-- On RPAR reduce production ty3 -> ty2 ARROW ty3
-- On RBRACKET reduce production ty3 -> ty2 ARROW ty3
-- On LEMMA reduce production ty3 -> ty2 ARROW ty3
-- On KIND reduce production ty3 -> ty2 ARROW ty3
-- On INCLUDE reduce production ty3 -> ty2 ARROW ty3
-- On IN reduce production ty3 -> ty2 ARROW ty3
-- On EQ reduce production ty3 -> ty2 ARROW ty3
-- On EOF reduce production ty3 -> ty2 ARROW ty3
-- On DOT reduce production ty3 -> ty2 ARROW ty3
-- On DEFAULT reduce production ty3 -> ty2 ARROW ty3
-- On COMMA reduce production ty3 -> ty2 ARROW ty3
-- On COLON reduce production ty3 -> ty2 ARROW ty3
-- On AS reduce production ty3 -> ty2 ARROW ty3

State 38:
## Known stack suffix:
## ty1
## LR(1) items:
ty1 -> ty1 . ty0 [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty2 -> ty1 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty0 shift to state 34
## Reductions:
-- On TYPE reduce production ty2 -> ty1
-- On TERM reduce production ty2 -> ty1
-- On RPAR reduce production ty2 -> ty1
-- On RBRACKET reduce production ty2 -> ty1
-- On LEMMA reduce production ty2 -> ty1
-- On KIND reduce production ty2 -> ty1
-- On INCLUDE reduce production ty2 -> ty1
-- On IN reduce production ty2 -> ty1
-- On EQ reduce production ty2 -> ty1
-- On EOF reduce production ty2 -> ty1
-- On DOT reduce production ty2 -> ty1
-- On DEFAULT reduce production ty2 -> ty1
-- On COMMA reduce production ty2 -> ty1
-- On COLON reduce production ty2 -> ty1
-- On BACKQUOTE reduce production ty2 -> ty1
-- On AS reduce production ty2 -> ty1
-- On ARROW reduce production ty2 -> ty1

State 39:
## Known stack suffix:
## quantifier
## LR(1) items:
ty3 -> quantifier . type_binder DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 40
-- On nonempty_list(loc(type_variable)) shift to state 43
## Reductions:

State 40:
## Known stack suffix:
## quantifier type_binder
## LR(1) items:
ty3 -> quantifier type_binder . DOT ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## quantifier type_binder DOT
## LR(1) items:
ty3 -> quantifier type_binder DOT . ty3 [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 42
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 42:
## Known stack suffix:
## quantifier type_binder DOT ty3
## LR(1) items:
ty3 -> quantifier type_binder DOT ty3 . [ TYPE TERM RPAR RBRACKET LEMMA KIND INCLUDE IN EQ EOF DOT DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty3 -> quantifier type_binder DOT ty3
-- On TERM reduce production ty3 -> quantifier type_binder DOT ty3
-- On RPAR reduce production ty3 -> quantifier type_binder DOT ty3
-- On RBRACKET reduce production ty3 -> quantifier type_binder DOT ty3
-- On LEMMA reduce production ty3 -> quantifier type_binder DOT ty3
-- On KIND reduce production ty3 -> quantifier type_binder DOT ty3
-- On INCLUDE reduce production ty3 -> quantifier type_binder DOT ty3
-- On IN reduce production ty3 -> quantifier type_binder DOT ty3
-- On EQ reduce production ty3 -> quantifier type_binder DOT ty3
-- On EOF reduce production ty3 -> quantifier type_binder DOT ty3
-- On DOT reduce production ty3 -> quantifier type_binder DOT ty3
-- On DEFAULT reduce production ty3 -> quantifier type_binder DOT ty3
-- On COMMA reduce production ty3 -> quantifier type_binder DOT ty3
-- On COLON reduce production ty3 -> quantifier type_binder DOT ty3
-- On AS reduce production ty3 -> quantifier type_binder DOT ty3

State 43:
## Known stack suffix:
## nonempty_list(loc(type_variable))
## LR(1) items:
type_binder -> nonempty_list(loc(type_variable)) . [ DOT ]
type_binder -> nonempty_list(loc(type_variable)) . COLON kind1 [ DOT ]
## Transitions:
-- On COLON shift to state 44
## Reductions:
-- On DOT reduce production type_binder -> nonempty_list(loc(type_variable))

State 44:
## Known stack suffix:
## nonempty_list(loc(type_variable)) COLON
## LR(1) items:
type_binder -> nonempty_list(loc(type_variable)) COLON . kind1 [ DOT ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 45
-- On kind0 shift to state 13
## Reductions:

State 45:
## Known stack suffix:
## nonempty_list(loc(type_variable)) COLON kind1
## LR(1) items:
type_binder -> nonempty_list(loc(type_variable)) COLON kind1 . [ DOT ]
## Transitions:
## Reductions:
-- On DOT reduce production type_binder -> nonempty_list(loc(type_variable)) COLON kind1

State 46:
## Known stack suffix:
## LPAR ty3
## LR(1) items:
ty0 -> LPAR ty3 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR ty3 . COLON kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
ty0 -> LPAR ty3 . COMMA ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On RPAR shift to state 47
-- On COMMA shift to state 48
-- On COLON shift to state 51
## Reductions:

State 47:
## Known stack suffix:
## LPAR ty3 RPAR
## LR(1) items:
ty0 -> LPAR ty3 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty0 -> LPAR ty3 RPAR
-- On TERM reduce production ty0 -> LPAR ty3 RPAR
-- On RPAR reduce production ty0 -> LPAR ty3 RPAR
-- On RBRACKET reduce production ty0 -> LPAR ty3 RPAR
-- On LPAR reduce production ty0 -> LPAR ty3 RPAR
-- On LEMMA reduce production ty0 -> LPAR ty3 RPAR
-- On KIND reduce production ty0 -> LPAR ty3 RPAR
-- On INCLUDE reduce production ty0 -> LPAR ty3 RPAR
-- On IN reduce production ty0 -> LPAR ty3 RPAR
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 RPAR
-- On EQ reduce production ty0 -> LPAR ty3 RPAR
-- On EOF reduce production ty0 -> LPAR ty3 RPAR
-- On DOT reduce production ty0 -> LPAR ty3 RPAR
-- On DEFAULT reduce production ty0 -> LPAR ty3 RPAR
-- On COMMA reduce production ty0 -> LPAR ty3 RPAR
-- On COLON reduce production ty0 -> LPAR ty3 RPAR
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 RPAR
-- On AS reduce production ty0 -> LPAR ty3 RPAR
-- On ARROW reduce production ty0 -> LPAR ty3 RPAR

State 48:
## Known stack suffix:
## LPAR ty3 COMMA
## LR(1) items:
ty0 -> LPAR ty3 COMMA . ty3 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 49
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 49:
## Known stack suffix:
## LPAR ty3 COMMA ty3
## LR(1) items:
ty0 -> LPAR ty3 COMMA ty3 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On RPAR shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## LPAR ty3 COMMA ty3 RPAR
## LR(1) items:
ty0 -> LPAR ty3 COMMA ty3 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On TERM reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On RPAR reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On RBRACKET reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On LPAR reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On LEMMA reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On KIND reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On INCLUDE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On IN reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On EQ reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On EOF reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On DOT reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On DEFAULT reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On COMMA reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On COLON reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On AS reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR
-- On ARROW reduce production ty0 -> LPAR ty3 COMMA ty3 RPAR

State 51:
## Known stack suffix:
## LPAR ty3 COLON
## LR(1) items:
ty0 -> LPAR ty3 COLON . kind1 RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 52
-- On kind0 shift to state 13
## Reductions:

State 52:
## Known stack suffix:
## LPAR ty3 COLON kind1
## LR(1) items:
ty0 -> LPAR ty3 COLON kind1 . RPAR [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
-- On RPAR shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## LPAR ty3 COLON kind1 RPAR
## LR(1) items:
ty0 -> LPAR ty3 COLON kind1 RPAR . [ TYPE TERM RPAR RBRACKET LPAR LEMMA KIND INCLUDE IN IDENTIFIER EQ EOF DOT DEFAULT COMMA COLON BACKQUOTE AS ARROW ]
## Transitions:
## Reductions:
-- On TYPE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On TERM reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On RPAR reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On RBRACKET reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On LPAR reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On LEMMA reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On KIND reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On INCLUDE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On IN reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On IDENTIFIER reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On EQ reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On EOF reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On DOT reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On DEFAULT reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On COMMA reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On COLON reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On BACKQUOTE reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On AS reduce production ty0 -> LPAR ty3 COLON kind1 RPAR
-- On ARROW reduce production ty0 -> LPAR ty3 COLON kind1 RPAR

State 54:
## Known stack suffix:
## TYPE type_variable COLON kind1 EQ ty3
## LR(1) items:
declaration -> TYPE type_variable COLON kind1 EQ ty3 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On TERM reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On LEMMA reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On KIND reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On INCLUDE reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On EOF reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3
-- On DEFAULT reduce production declaration -> TYPE type_variable COLON kind1 EQ ty3

State 55:
## Known stack suffix:
## TERM
## LR(1) items:
declaration -> TERM . term_variable COLON ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 57
## Reductions:

State 56:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
term_variable -> IDENTIFIER . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EQ EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term_variable -> IDENTIFIER
-- On TERM reduce production term_variable -> IDENTIFIER
-- On RPAR reduce production term_variable -> IDENTIFIER
-- On LPAR reduce production term_variable -> IDENTIFIER
-- On LEMMA reduce production term_variable -> IDENTIFIER
-- On LBRACKET reduce production term_variable -> IDENTIFIER
-- On KIND reduce production term_variable -> IDENTIFIER
-- On INCLUDE reduce production term_variable -> IDENTIFIER
-- On IN reduce production term_variable -> IDENTIFIER
-- On IDENTIFIER reduce production term_variable -> IDENTIFIER
-- On EQ reduce production term_variable -> IDENTIFIER
-- On EOF reduce production term_variable -> IDENTIFIER
-- On DEFAULT reduce production term_variable -> IDENTIFIER
-- On COMMA reduce production term_variable -> IDENTIFIER
-- On COLON reduce production term_variable -> IDENTIFIER
-- On BACKQUOTE reduce production term_variable -> IDENTIFIER
-- On AS reduce production term_variable -> IDENTIFIER

State 57:
## Known stack suffix:
## TERM term_variable
## LR(1) items:
declaration -> TERM term_variable . COLON ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On COLON shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## TERM term_variable COLON
## LR(1) items:
declaration -> TERM term_variable COLON . ty3 EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 59
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 59:
## Known stack suffix:
## TERM term_variable COLON ty3
## LR(1) items:
declaration -> TERM term_variable COLON ty3 . EQ term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On EQ shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## TERM term_variable COLON ty3 EQ
## LR(1) items:
declaration -> TERM term_variable COLON ty3 EQ . term3 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 145
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 61:
## Known stack suffix:
## UNPACK
## LR(1) items:
term3 -> UNPACK . type_variable COMMA term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## UNPACK type_variable
## LR(1) items:
term3 -> UNPACK type_variable . COMMA term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On COMMA shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## UNPACK type_variable COMMA
## LR(1) items:
term3 -> UNPACK type_variable COMMA . term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## UNPACK type_variable COMMA term_variable
## LR(1) items:
term3 -> UNPACK type_variable COMMA term_variable . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On EQ shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## UNPACK type_variable COMMA term_variable EQ
## LR(1) items:
term3 -> UNPACK type_variable COMMA term_variable EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 142
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 66:
## Known stack suffix:
## TYPE
## LR(1) items:
term3 -> TYPE . type_variable EQ ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## TYPE type_variable
## LR(1) items:
term3 -> TYPE type_variable . EQ ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On EQ shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## TYPE type_variable EQ
## LR(1) items:
term3 -> TYPE type_variable EQ . ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 69
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 69:
## Known stack suffix:
## TYPE type_variable EQ ty3
## LR(1) items:
term3 -> TYPE type_variable EQ ty3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## TYPE type_variable EQ ty3 IN
## LR(1) items:
term3 -> TYPE type_variable EQ ty3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 141
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 71:
## Known stack suffix:
## PACK
## LR(1) items:
term3 -> PACK . ty3 COMMA term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 72
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 72:
## Known stack suffix:
## PACK ty3
## LR(1) items:
term3 -> PACK ty3 . COMMA term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On COMMA shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## PACK ty3 COMMA
## LR(1) items:
term3 -> PACK ty3 COMMA . term3 AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 138
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 74:
## Known stack suffix:
## LPAR
## LR(1) items:
term0 -> LPAR . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 COLON ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR . term3 COMMA term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On RPAR shift to state 75
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 130
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 75:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
term0 -> LPAR RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term0 -> LPAR RPAR
-- On TERM reduce production term0 -> LPAR RPAR
-- On RPAR reduce production term0 -> LPAR RPAR
-- On LPAR reduce production term0 -> LPAR RPAR
-- On LEMMA reduce production term0 -> LPAR RPAR
-- On LBRACKET reduce production term0 -> LPAR RPAR
-- On KIND reduce production term0 -> LPAR RPAR
-- On INCLUDE reduce production term0 -> LPAR RPAR
-- On IN reduce production term0 -> LPAR RPAR
-- On IDENTIFIER reduce production term0 -> LPAR RPAR
-- On EOF reduce production term0 -> LPAR RPAR
-- On DEFAULT reduce production term0 -> LPAR RPAR
-- On COMMA reduce production term0 -> LPAR RPAR
-- On COLON reduce production term0 -> LPAR RPAR
-- On BACKQUOTE reduce production term0 -> LPAR RPAR
-- On AS reduce production term0 -> LPAR RPAR

State 76:
## Known stack suffix:
## LET
## LR(1) items:
term3 -> LET . term_variable EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET . LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET . term_variable COLON ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 77
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 119
## Reductions:

State 77:
## Known stack suffix:
## LET LPAR
## LR(1) items:
term3 -> LET LPAR . term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On WILDCARD shift to state 78
-- On IDENTIFIER shift to state 56
-- On term_variable_or_wildcard shift to state 79
-- On term_variable shift to state 118
## Reductions:

State 78:
## Known stack suffix:
## WILDCARD
## LR(1) items:
term_variable_or_wildcard -> WILDCARD . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production term_variable_or_wildcard -> WILDCARD
-- On COMMA reduce production term_variable_or_wildcard -> WILDCARD

State 79:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard . COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On COMMA shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA . term_variable_or_wildcard RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On WILDCARD shift to state 78
-- On IDENTIFIER shift to state 56
-- On term_variable_or_wildcard shift to state 81
-- On term_variable shift to state 118
## Reductions:

State 81:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard . RPAR EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On RPAR shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On EQ shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 115
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 84:
## Known stack suffix:
## LAMBDA
## LR(1) items:
term3 -> LAMBDA . term_binder DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 85
-- On term_binder shift to state 87
-- On nonempty_list(loc(term_variable)) shift to state 112
## Reductions:

State 85:
## Known stack suffix:
## term_variable
## LR(1) items:
nonempty_list(loc(term_variable)) -> term_variable . [ COLON ]
nonempty_list(loc(term_variable)) -> term_variable . nonempty_list(loc(term_variable)) [ COLON ]
## Transitions:
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 85
-- On nonempty_list(loc(term_variable)) shift to state 86
## Reductions:
-- On COLON reduce production nonempty_list(loc(term_variable)) -> term_variable

State 86:
## Known stack suffix:
## term_variable nonempty_list(loc(term_variable))
## LR(1) items:
nonempty_list(loc(term_variable)) -> term_variable nonempty_list(loc(term_variable)) . [ COLON ]
## Transitions:
## Reductions:
-- On COLON reduce production nonempty_list(loc(term_variable)) -> term_variable nonempty_list(loc(term_variable))

State 87:
## Known stack suffix:
## LAMBDA term_binder
## LR(1) items:
term3 -> LAMBDA term_binder . DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## LAMBDA term_binder DOT
## LR(1) items:
term3 -> LAMBDA term_binder DOT . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 111
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 89:
## Known stack suffix:
## BIGLAMBDA
## LR(1) items:
term3 -> BIGLAMBDA . type_binder DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 90
-- On nonempty_list(loc(type_variable)) shift to state 43
## Reductions:

State 90:
## Known stack suffix:
## BIGLAMBDA type_binder
## LR(1) items:
term3 -> BIGLAMBDA type_binder . DOT term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## BIGLAMBDA type_binder DOT
## LR(1) items:
term3 -> BIGLAMBDA type_binder DOT . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 110
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 92:
## Known stack suffix:
## ASSERT
## LR(1) items:
term3 -> ASSERT . term_variable COLON ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## ASSERT term_variable
## LR(1) items:
term3 -> ASSERT term_variable . COLON ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On COLON shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## ASSERT term_variable COLON
## LR(1) items:
term3 -> ASSERT term_variable COLON . ty3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 95
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 95:
## Known stack suffix:
## ASSERT term_variable COLON ty3
## LR(1) items:
term3 -> ASSERT term_variable COLON ty3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## ASSERT term_variable COLON ty3 IN
## LR(1) items:
term3 -> ASSERT term_variable COLON ty3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 98
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 97:
## Known stack suffix:
## term_variable
## LR(1) items:
term0 -> term_variable . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term0 -> term_variable
-- On TERM reduce production term0 -> term_variable
-- On RPAR reduce production term0 -> term_variable
-- On LPAR reduce production term0 -> term_variable
-- On LEMMA reduce production term0 -> term_variable
-- On LBRACKET reduce production term0 -> term_variable
-- On KIND reduce production term0 -> term_variable
-- On INCLUDE reduce production term0 -> term_variable
-- On IN reduce production term0 -> term_variable
-- On IDENTIFIER reduce production term0 -> term_variable
-- On EOF reduce production term0 -> term_variable
-- On DEFAULT reduce production term0 -> term_variable
-- On COMMA reduce production term0 -> term_variable
-- On COLON reduce production term0 -> term_variable
-- On BACKQUOTE reduce production term0 -> term_variable
-- On AS reduce production term0 -> term_variable

State 98:
## Known stack suffix:
## ASSERT term_variable COLON ty3 IN term3
## LR(1) items:
term3 -> ASSERT term_variable COLON ty3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On TERM reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On RPAR reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On LEMMA reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On KIND reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On INCLUDE reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On IN reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On EOF reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On DEFAULT reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On COMMA reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On COLON reduce production term3 -> ASSERT term_variable COLON ty3 IN term3
-- On AS reduce production term3 -> ASSERT term_variable COLON ty3 IN term3

State 99:
## Known stack suffix:
## term2
## LR(1) items:
term2 -> term2 . BACKQUOTE term1 BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term3 -> term2 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On BACKQUOTE shift to state 100
## Reductions:
-- On TYPE reduce production term3 -> term2
-- On TERM reduce production term3 -> term2
-- On RPAR reduce production term3 -> term2
-- On LEMMA reduce production term3 -> term2
-- On KIND reduce production term3 -> term2
-- On INCLUDE reduce production term3 -> term2
-- On IN reduce production term3 -> term2
-- On EOF reduce production term3 -> term2
-- On DEFAULT reduce production term3 -> term2
-- On COMMA reduce production term3 -> term2
-- On COLON reduce production term3 -> term2
-- On AS reduce production term3 -> term2

State 100:
## Known stack suffix:
## term2 BACKQUOTE
## LR(1) items:
term2 -> term2 BACKQUOTE . term1 BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 74
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term1 shift to state 101
-- On term0 shift to state 108
## Reductions:

State 101:
## Known stack suffix:
## term2 BACKQUOTE term1
## LR(1) items:
term1 -> term1 . term0 [ LPAR LBRACKET IDENTIFIER BACKQUOTE ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ LPAR LBRACKET IDENTIFIER BACKQUOTE ]
term2 -> term2 BACKQUOTE term1 . BACKQUOTE term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On BACKQUOTE shift to state 105
-- On term_variable shift to state 97
-- On term0 shift to state 107
## Reductions:

State 102:
## Known stack suffix:
## term1 LBRACKET
## LR(1) items:
term1 -> term1 LBRACKET . ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 103
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 103:
## Known stack suffix:
## term1 LBRACKET ty3
## LR(1) items:
term1 -> term1 LBRACKET ty3 . RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On RBRACKET shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## term1 LBRACKET ty3 RBRACKET
## LR(1) items:
term1 -> term1 LBRACKET ty3 RBRACKET . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On TERM reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On RPAR reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On LPAR reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On LEMMA reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On LBRACKET reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On KIND reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On INCLUDE reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On IN reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On IDENTIFIER reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On EOF reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On DEFAULT reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On COMMA reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On COLON reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On BACKQUOTE reduce production term1 -> term1 LBRACKET ty3 RBRACKET
-- On AS reduce production term1 -> term1 LBRACKET ty3 RBRACKET

State 105:
## Known stack suffix:
## term2 BACKQUOTE term1 BACKQUOTE
## LR(1) items:
term2 -> term2 BACKQUOTE term1 BACKQUOTE . term1 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 74
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term1 shift to state 106
-- On term0 shift to state 108
## Reductions:

State 106:
## Known stack suffix:
## term2 BACKQUOTE term1 BACKQUOTE term1
## LR(1) items:
term1 -> term1 . term0 [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term2 -> term2 BACKQUOTE term1 BACKQUOTE term1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term0 shift to state 107
## Reductions:
-- On TYPE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On TERM reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On RPAR reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On LEMMA reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On KIND reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On INCLUDE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On IN reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On EOF reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On DEFAULT reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On COMMA reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On COLON reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On BACKQUOTE reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1
-- On AS reduce production term2 -> term2 BACKQUOTE term1 BACKQUOTE term1

State 107:
## Known stack suffix:
## term1 term0
## LR(1) items:
term1 -> term1 term0 . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term1 -> term1 term0
-- On TERM reduce production term1 -> term1 term0
-- On RPAR reduce production term1 -> term1 term0
-- On LPAR reduce production term1 -> term1 term0
-- On LEMMA reduce production term1 -> term1 term0
-- On LBRACKET reduce production term1 -> term1 term0
-- On KIND reduce production term1 -> term1 term0
-- On INCLUDE reduce production term1 -> term1 term0
-- On IN reduce production term1 -> term1 term0
-- On IDENTIFIER reduce production term1 -> term1 term0
-- On EOF reduce production term1 -> term1 term0
-- On DEFAULT reduce production term1 -> term1 term0
-- On COMMA reduce production term1 -> term1 term0
-- On COLON reduce production term1 -> term1 term0
-- On BACKQUOTE reduce production term1 -> term1 term0
-- On AS reduce production term1 -> term1 term0

State 108:
## Known stack suffix:
## term0
## LR(1) items:
term1 -> term0 . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term1 -> term0
-- On TERM reduce production term1 -> term0
-- On RPAR reduce production term1 -> term0
-- On LPAR reduce production term1 -> term0
-- On LEMMA reduce production term1 -> term0
-- On LBRACKET reduce production term1 -> term0
-- On KIND reduce production term1 -> term0
-- On INCLUDE reduce production term1 -> term0
-- On IN reduce production term1 -> term0
-- On IDENTIFIER reduce production term1 -> term0
-- On EOF reduce production term1 -> term0
-- On DEFAULT reduce production term1 -> term0
-- On COMMA reduce production term1 -> term0
-- On COLON reduce production term1 -> term0
-- On BACKQUOTE reduce production term1 -> term0
-- On AS reduce production term1 -> term0

State 109:
## Known stack suffix:
## term1
## LR(1) items:
term1 -> term1 . term0 [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term1 -> term1 . LBRACKET ty3 RBRACKET [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term2 -> term1 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 74
-- On LBRACKET shift to state 102
-- On IDENTIFIER shift to state 56
-- On term_variable shift to state 97
-- On term0 shift to state 107
## Reductions:
-- On TYPE reduce production term2 -> term1
-- On TERM reduce production term2 -> term1
-- On RPAR reduce production term2 -> term1
-- On LEMMA reduce production term2 -> term1
-- On KIND reduce production term2 -> term1
-- On INCLUDE reduce production term2 -> term1
-- On IN reduce production term2 -> term1
-- On EOF reduce production term2 -> term1
-- On DEFAULT reduce production term2 -> term1
-- On COMMA reduce production term2 -> term1
-- On COLON reduce production term2 -> term1
-- On BACKQUOTE reduce production term2 -> term1
-- On AS reduce production term2 -> term1

State 110:
## Known stack suffix:
## BIGLAMBDA type_binder DOT term3
## LR(1) items:
term3 -> BIGLAMBDA type_binder DOT term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On TERM reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On RPAR reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On LEMMA reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On KIND reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On INCLUDE reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On IN reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On EOF reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On DEFAULT reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On COMMA reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On COLON reduce production term3 -> BIGLAMBDA type_binder DOT term3
-- On AS reduce production term3 -> BIGLAMBDA type_binder DOT term3

State 111:
## Known stack suffix:
## LAMBDA term_binder DOT term3
## LR(1) items:
term3 -> LAMBDA term_binder DOT term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> LAMBDA term_binder DOT term3
-- On TERM reduce production term3 -> LAMBDA term_binder DOT term3
-- On RPAR reduce production term3 -> LAMBDA term_binder DOT term3
-- On LEMMA reduce production term3 -> LAMBDA term_binder DOT term3
-- On KIND reduce production term3 -> LAMBDA term_binder DOT term3
-- On INCLUDE reduce production term3 -> LAMBDA term_binder DOT term3
-- On IN reduce production term3 -> LAMBDA term_binder DOT term3
-- On EOF reduce production term3 -> LAMBDA term_binder DOT term3
-- On DEFAULT reduce production term3 -> LAMBDA term_binder DOT term3
-- On COMMA reduce production term3 -> LAMBDA term_binder DOT term3
-- On COLON reduce production term3 -> LAMBDA term_binder DOT term3
-- On AS reduce production term3 -> LAMBDA term_binder DOT term3

State 112:
## Known stack suffix:
## nonempty_list(loc(term_variable))
## LR(1) items:
term_binder -> nonempty_list(loc(term_variable)) . COLON ty3 [ DOT ]
## Transitions:
-- On COLON shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## nonempty_list(loc(term_variable)) COLON
## LR(1) items:
term_binder -> nonempty_list(loc(term_variable)) COLON . ty3 [ DOT ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 114
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 114:
## Known stack suffix:
## nonempty_list(loc(term_variable)) COLON ty3
## LR(1) items:
term_binder -> nonempty_list(loc(term_variable)) COLON ty3 . [ DOT ]
## Transitions:
## Reductions:
-- On DOT reduce production term_binder -> nonempty_list(loc(term_variable)) COLON ty3

State 115:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 117
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 117:
## Known stack suffix:
## LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
## LR(1) items:
term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On TERM reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On RPAR reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On LEMMA reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On KIND reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On INCLUDE reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On IN reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On EOF reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On DEFAULT reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On COMMA reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On COLON reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3
-- On AS reduce production term3 -> LET LPAR term_variable_or_wildcard COMMA term_variable_or_wildcard RPAR EQ term3 IN term3

State 118:
## Known stack suffix:
## term_variable
## LR(1) items:
term_variable_or_wildcard -> term_variable . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production term_variable_or_wildcard -> term_variable
-- On COMMA reduce production term_variable_or_wildcard -> term_variable

State 119:
## Known stack suffix:
## LET term_variable
## LR(1) items:
term3 -> LET term_variable . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
term3 -> LET term_variable . COLON ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On EQ shift to state 120
-- On COLON shift to state 124
## Reductions:

State 120:
## Known stack suffix:
## LET term_variable EQ
## LR(1) items:
term3 -> LET term_variable EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 121
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 121:
## Known stack suffix:
## LET term_variable EQ term3
## LR(1) items:
term3 -> LET term_variable EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## LET term_variable EQ term3 IN
## LR(1) items:
term3 -> LET term_variable EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 123
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 123:
## Known stack suffix:
## LET term_variable EQ term3 IN term3
## LR(1) items:
term3 -> LET term_variable EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> LET term_variable EQ term3 IN term3
-- On TERM reduce production term3 -> LET term_variable EQ term3 IN term3
-- On RPAR reduce production term3 -> LET term_variable EQ term3 IN term3
-- On LEMMA reduce production term3 -> LET term_variable EQ term3 IN term3
-- On KIND reduce production term3 -> LET term_variable EQ term3 IN term3
-- On INCLUDE reduce production term3 -> LET term_variable EQ term3 IN term3
-- On IN reduce production term3 -> LET term_variable EQ term3 IN term3
-- On EOF reduce production term3 -> LET term_variable EQ term3 IN term3
-- On DEFAULT reduce production term3 -> LET term_variable EQ term3 IN term3
-- On COMMA reduce production term3 -> LET term_variable EQ term3 IN term3
-- On COLON reduce production term3 -> LET term_variable EQ term3 IN term3
-- On AS reduce production term3 -> LET term_variable EQ term3 IN term3

State 124:
## Known stack suffix:
## LET term_variable COLON
## LR(1) items:
term3 -> LET term_variable COLON . ty3 EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 125
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 125:
## Known stack suffix:
## LET term_variable COLON ty3
## LR(1) items:
term3 -> LET term_variable COLON ty3 . EQ term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On EQ shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## LET term_variable COLON ty3 EQ
## LR(1) items:
term3 -> LET term_variable COLON ty3 EQ . term3 IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 127
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 127:
## Known stack suffix:
## LET term_variable COLON ty3 EQ term3
## LR(1) items:
term3 -> LET term_variable COLON ty3 EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## LET term_variable COLON ty3 EQ term3 IN
## LR(1) items:
term3 -> LET term_variable COLON ty3 EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 129
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 129:
## Known stack suffix:
## LET term_variable COLON ty3 EQ term3 IN term3
## LR(1) items:
term3 -> LET term_variable COLON ty3 EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On TERM reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On RPAR reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On LEMMA reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On KIND reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On INCLUDE reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On IN reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On EOF reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On DEFAULT reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On COMMA reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On COLON reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3
-- On AS reduce production term3 -> LET term_variable COLON ty3 EQ term3 IN term3

State 130:
## Known stack suffix:
## LPAR term3
## LR(1) items:
term0 -> LPAR term3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR term3 . COLON ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
term0 -> LPAR term3 . COMMA term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On RPAR shift to state 131
-- On COMMA shift to state 132
-- On COLON shift to state 135
## Reductions:

State 131:
## Known stack suffix:
## LPAR term3 RPAR
## LR(1) items:
term0 -> LPAR term3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term0 -> LPAR term3 RPAR
-- On TERM reduce production term0 -> LPAR term3 RPAR
-- On RPAR reduce production term0 -> LPAR term3 RPAR
-- On LPAR reduce production term0 -> LPAR term3 RPAR
-- On LEMMA reduce production term0 -> LPAR term3 RPAR
-- On LBRACKET reduce production term0 -> LPAR term3 RPAR
-- On KIND reduce production term0 -> LPAR term3 RPAR
-- On INCLUDE reduce production term0 -> LPAR term3 RPAR
-- On IN reduce production term0 -> LPAR term3 RPAR
-- On IDENTIFIER reduce production term0 -> LPAR term3 RPAR
-- On EOF reduce production term0 -> LPAR term3 RPAR
-- On DEFAULT reduce production term0 -> LPAR term3 RPAR
-- On COMMA reduce production term0 -> LPAR term3 RPAR
-- On COLON reduce production term0 -> LPAR term3 RPAR
-- On BACKQUOTE reduce production term0 -> LPAR term3 RPAR
-- On AS reduce production term0 -> LPAR term3 RPAR

State 132:
## Known stack suffix:
## LPAR term3 COMMA
## LR(1) items:
term0 -> LPAR term3 COMMA . term3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 133
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 133:
## Known stack suffix:
## LPAR term3 COMMA term3
## LR(1) items:
term0 -> LPAR term3 COMMA term3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On RPAR shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## LPAR term3 COMMA term3 RPAR
## LR(1) items:
term0 -> LPAR term3 COMMA term3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On TERM reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On RPAR reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On LPAR reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On LEMMA reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On LBRACKET reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On KIND reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On INCLUDE reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On IN reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On IDENTIFIER reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On EOF reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On DEFAULT reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On COMMA reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On COLON reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On BACKQUOTE reduce production term0 -> LPAR term3 COMMA term3 RPAR
-- On AS reduce production term0 -> LPAR term3 COMMA term3 RPAR

State 135:
## Known stack suffix:
## LPAR term3 COLON
## LR(1) items:
term0 -> LPAR term3 COLON . ty3 RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 136
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 136:
## Known stack suffix:
## LPAR term3 COLON ty3
## LR(1) items:
term0 -> LPAR term3 COLON ty3 . RPAR [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
-- On RPAR shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## LPAR term3 COLON ty3 RPAR
## LR(1) items:
term0 -> LPAR term3 COLON ty3 RPAR . [ TYPE TERM RPAR LPAR LEMMA LBRACKET KIND INCLUDE IN IDENTIFIER EOF DEFAULT COMMA COLON BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On TERM reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On RPAR reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On LPAR reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On LEMMA reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On LBRACKET reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On KIND reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On INCLUDE reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On IN reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On IDENTIFIER reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On EOF reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On DEFAULT reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On COMMA reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On COLON reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On BACKQUOTE reduce production term0 -> LPAR term3 COLON ty3 RPAR
-- On AS reduce production term0 -> LPAR term3 COLON ty3 RPAR

State 138:
## Known stack suffix:
## PACK ty3 COMMA term3
## LR(1) items:
term3 -> PACK ty3 COMMA term3 . AS ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On AS shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## PACK ty3 COMMA term3 AS
## LR(1) items:
term3 -> PACK ty3 COMMA term3 AS . ty3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On LPAR shift to state 18
-- On LAMBDA shift to state 20
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 25
-- On EXISTS shift to state 26
-- On type_variable shift to state 27
-- On ty3 shift to state 140
-- On ty2 shift to state 29
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On quantifier shift to state 39
## Reductions:

State 140:
## Known stack suffix:
## PACK ty3 COMMA term3 AS ty3
## LR(1) items:
term3 -> PACK ty3 COMMA term3 AS ty3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On TERM reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On RPAR reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On LEMMA reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On KIND reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On INCLUDE reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On IN reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On EOF reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On DEFAULT reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On COMMA reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On COLON reduce production term3 -> PACK ty3 COMMA term3 AS ty3
-- On AS reduce production term3 -> PACK ty3 COMMA term3 AS ty3

State 141:
## Known stack suffix:
## TYPE type_variable EQ ty3 IN term3
## LR(1) items:
term3 -> TYPE type_variable EQ ty3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On TERM reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On RPAR reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On LEMMA reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On KIND reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On INCLUDE reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On IN reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On EOF reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On DEFAULT reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On COMMA reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On COLON reduce production term3 -> TYPE type_variable EQ ty3 IN term3
-- On AS reduce production term3 -> TYPE type_variable EQ ty3 IN term3

State 142:
## Known stack suffix:
## UNPACK type_variable COMMA term_variable EQ term3
## LR(1) items:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 . IN term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On IN shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## UNPACK type_variable COMMA term_variable EQ term3 IN
## LR(1) items:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN . term3 [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
-- On UNPACK shift to state 61
-- On TYPE shift to state 66
-- On PACK shift to state 71
-- On LPAR shift to state 74
-- On LET shift to state 76
-- On LAMBDA shift to state 84
-- On IDENTIFIER shift to state 56
-- On BIGLAMBDA shift to state 89
-- On ASSERT shift to state 92
-- On term_variable shift to state 97
-- On term3 shift to state 144
-- On term2 shift to state 99
-- On term1 shift to state 109
-- On term0 shift to state 108
## Reductions:

State 144:
## Known stack suffix:
## UNPACK type_variable COMMA term_variable EQ term3 IN term3
## LR(1) items:
term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3 . [ TYPE TERM RPAR LEMMA KIND INCLUDE IN EOF DEFAULT COMMA COLON AS ]
## Transitions:
## Reductions:
-- On TYPE reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On TERM reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On RPAR reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On LEMMA reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On KIND reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On INCLUDE reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On IN reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On EOF reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On DEFAULT reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On COMMA reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On COLON reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3
-- On AS reduce production term3 -> UNPACK type_variable COMMA term_variable EQ term3 IN term3

State 145:
## Known stack suffix:
## TERM term_variable COLON ty3 EQ term3
## LR(1) items:
declaration -> TERM term_variable COLON ty3 EQ term3 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On TERM reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On LEMMA reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On KIND reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On INCLUDE reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On EOF reduce production declaration -> TERM term_variable COLON ty3 EQ term3
-- On DEFAULT reduce production declaration -> TERM term_variable COLON ty3 EQ term3

State 146:
## Known stack suffix:
## LEMMA
## LR(1) items:
declaration -> LEMMA . IDENTIFIER COLON statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## LEMMA IDENTIFIER
## LR(1) items:
declaration -> LEMMA IDENTIFIER . COLON statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On COLON shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## LEMMA IDENTIFIER COLON
## LR(1) items:
declaration -> LEMMA IDENTIFIER COLON . statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 149
-- On type_variable shift to state 27
-- On ty2 shift to state 152
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On statement shift to state 156
## Reductions:

State 149:
## Known stack suffix:
## FORALL
## LR(1) items:
statement -> FORALL . type_binder DOT statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 21
-- On type_binder shift to state 150
-- On nonempty_list(loc(type_variable)) shift to state 43
## Reductions:

State 150:
## Known stack suffix:
## FORALL type_binder
## LR(1) items:
statement -> FORALL type_binder . DOT statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On DOT shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## FORALL type_binder DOT
## LR(1) items:
statement -> FORALL type_binder DOT . statement [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On FORALL shift to state 149
-- On type_variable shift to state 27
-- On ty2 shift to state 152
-- On ty1 shift to state 38
-- On ty0 shift to state 35
-- On statement shift to state 155
## Reductions:

State 152:
## Known stack suffix:
## ty2
## LR(1) items:
statement -> ty2 . EQ ty2 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ EQ BACKQUOTE ]
## Transitions:
-- On EQ shift to state 153
-- On BACKQUOTE shift to state 30
## Reductions:

State 153:
## Known stack suffix:
## ty2 EQ
## LR(1) items:
statement -> ty2 EQ . ty2 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On LPAR shift to state 18
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 27
-- On ty2 shift to state 154
-- On ty1 shift to state 38
-- On ty0 shift to state 35
## Reductions:

State 154:
## Known stack suffix:
## ty2 EQ ty2
## LR(1) items:
statement -> ty2 EQ ty2 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
ty2 -> ty2 . BACKQUOTE ty1 BACKQUOTE ty1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT BACKQUOTE ]
## Transitions:
-- On BACKQUOTE shift to state 30
## Reductions:
-- On TYPE reduce production statement -> ty2 EQ ty2
-- On TERM reduce production statement -> ty2 EQ ty2
-- On LEMMA reduce production statement -> ty2 EQ ty2
-- On KIND reduce production statement -> ty2 EQ ty2
-- On INCLUDE reduce production statement -> ty2 EQ ty2
-- On EOF reduce production statement -> ty2 EQ ty2
-- On DEFAULT reduce production statement -> ty2 EQ ty2

State 155:
## Known stack suffix:
## FORALL type_binder DOT statement
## LR(1) items:
statement -> FORALL type_binder DOT statement . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production statement -> FORALL type_binder DOT statement
-- On TERM reduce production statement -> FORALL type_binder DOT statement
-- On LEMMA reduce production statement -> FORALL type_binder DOT statement
-- On KIND reduce production statement -> FORALL type_binder DOT statement
-- On INCLUDE reduce production statement -> FORALL type_binder DOT statement
-- On EOF reduce production statement -> FORALL type_binder DOT statement
-- On DEFAULT reduce production statement -> FORALL type_binder DOT statement

State 156:
## Known stack suffix:
## LEMMA IDENTIFIER COLON statement
## LR(1) items:
declaration -> LEMMA IDENTIFIER COLON statement . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On TERM reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On LEMMA reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On KIND reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On INCLUDE reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On EOF reduce production declaration -> LEMMA IDENTIFIER COLON statement
-- On DEFAULT reduce production declaration -> LEMMA IDENTIFIER COLON statement

State 157:
## Known stack suffix:
## KIND
## LR(1) items:
declaration -> KIND . kind_variable EQ kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## KIND kind_variable
## LR(1) items:
declaration -> KIND kind_variable . EQ kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On EQ shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## KIND kind_variable EQ
## LR(1) items:
declaration -> KIND kind_variable EQ . kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 160
-- On kind0 shift to state 13
## Reductions:

State 160:
## Known stack suffix:
## KIND kind_variable EQ kind1
## LR(1) items:
declaration -> KIND kind_variable EQ kind1 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> KIND kind_variable EQ kind1
-- On TERM reduce production declaration -> KIND kind_variable EQ kind1
-- On LEMMA reduce production declaration -> KIND kind_variable EQ kind1
-- On KIND reduce production declaration -> KIND kind_variable EQ kind1
-- On INCLUDE reduce production declaration -> KIND kind_variable EQ kind1
-- On EOF reduce production declaration -> KIND kind_variable EQ kind1
-- On DEFAULT reduce production declaration -> KIND kind_variable EQ kind1

State 161:
## Known stack suffix:
## INCLUDE
## LR(1) items:
declaration -> INCLUDE . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> INCLUDE
-- On TERM reduce production declaration -> INCLUDE
-- On LEMMA reduce production declaration -> INCLUDE
-- On KIND reduce production declaration -> INCLUDE
-- On INCLUDE reduce production declaration -> INCLUDE
-- On EOF reduce production declaration -> INCLUDE
-- On DEFAULT reduce production declaration -> INCLUDE

State 162:
## Known stack suffix:
## DEFAULT
## LR(1) items:
declaration -> DEFAULT . KIND type_variable COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On KIND shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## DEFAULT KIND
## LR(1) items:
declaration -> DEFAULT KIND . type_variable COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On IDENTIFIER shift to state 2
-- On type_variable shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## DEFAULT KIND type_variable
## LR(1) items:
declaration -> DEFAULT KIND type_variable . COLON kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On COLON shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## DEFAULT KIND type_variable COLON
## LR(1) items:
declaration -> DEFAULT KIND type_variable COLON . kind1 [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
-- On STAR shift to state 5
-- On LPAR shift to state 6
-- On LATER shift to state 7
-- On IDENTIFIER shift to state 8
-- On kind_variable shift to state 9
-- On kind1 shift to state 166
-- On kind0 shift to state 13
## Reductions:

State 166:
## Known stack suffix:
## DEFAULT KIND type_variable COLON kind1
## LR(1) items:
declaration -> DEFAULT KIND type_variable COLON kind1 . [ TYPE TERM LEMMA KIND INCLUDE EOF DEFAULT ]
## Transitions:
## Reductions:
-- On TYPE reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On TERM reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On LEMMA reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On KIND reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On INCLUDE reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On EOF reduce production declaration -> DEFAULT KIND type_variable COLON kind1
-- On DEFAULT reduce production declaration -> DEFAULT KIND type_variable COLON kind1

State 167:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On # accept program

State 168:
## Known stack suffix:
## list(declaration)
## LR(1) items:
program -> list(declaration) . EOF [ # ]
## Transitions:
-- On EOF shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## list(declaration) EOF
## LR(1) items:
program -> list(declaration) EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production program -> list(declaration) EOF

State 170:
## Known stack suffix:
## declaration
## LR(1) items:
list(declaration) -> declaration . list(declaration) [ EOF ]
## Transitions:
-- On TYPE shift to state 1
-- On TERM shift to state 55
-- On LEMMA shift to state 146
-- On KIND shift to state 157
-- On INCLUDE shift to state 161
-- On DEFAULT shift to state 162
-- On list(declaration) shift to state 171
-- On declaration shift to state 170
## Reductions:
-- On EOF reduce production list(declaration) ->

State 171:
## Known stack suffix:
## declaration list(declaration)
## LR(1) items:
list(declaration) -> declaration list(declaration) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production list(declaration) -> declaration list(declaration)

