Grammar has 185 nonterminal symbols, among which 4 start symbols.
Grammar has 158 terminal symbols.
Grammar has 672 productions.
nullable(zones) = false
nullable(wildcard) = false
nullable(volatile_opt) = true
nullable(variant) = false
nullable(var_spec_bis) = false
nullable(var_spec) = false
nullable(update_elt) = false
nullable(update) = false
nullable(typedef) = false
nullable(type_spec_cv) = false
nullable(type_spec) = false
nullable(type_annot) = false
nullable(terminates) = true
nullable(tabs) = false
nullable(string) = false
nullable(stmt_markup_attr) = false
nullable(stmt_markup) = false
nullable(stars_cv) = false
nullable(stars) = false
nullable(spec) = false
nullable(slice_pragma) = false
nullable(simple_clauses) = true
nullable(requires) = true
nullable(relation) = false
nullable(rel_list) = false
nullable(reads_clause) = true
nullable(range) = false
nullable(post_cond_kind) = false
nullable(post_cond) = false
nullable(poly_id_type_add_typename) = false
nullable(poly_id_type) = false
nullable(poly_id) = false
nullable(path_elt) = false
nullable(path) = false
nullable(parameters) = false
nullable(parameter) = false
nullable(opt_semicolon) = true
nullable(opt_parameters) = true
nullable(opt_label_list) = true
nullable(opt_label_2) = true
nullable(opt_label_1) = true
nullable(non_logic_keyword) = false
nullable(ne_zones) = false
nullable(ne_type_list) = false
nullable(ne_tvar_list) = false
nullable(ne_terminates) = false
nullable(ne_simple_clauses) = false
nullable(ne_requires) = false
nullable(ne_parameters) = false
nullable(ne_logic_type_list) = false
nullable(ne_lexpr_list) = false
nullable(ne_label_list) = false
nullable(ne_label_args) = false
nullable(ne_decreases) = false
nullable(ne_datacons_list) = false
nullable(ne_complete_or_disjoint) = false
nullable(ne_behaviors) = false
nullable(ne_behavior_name_list) = false
nullable(model_annot) = false
nullable(loop_variant) = false
nullable(loop_pragma) = false
nullable(loop_invariant) = false
nullable(loop_grammar_extension) = false
nullable(loop_effects) = false
nullable(loop_annotations) = false
nullable(loop_annot_stack) = false
nullable(loop_annot_opt) = true
nullable(loop_allocation) = false
nullable(logic_type) = false
nullable(logic_rt_type) = false
nullable(logic_def) = false
nullable(logic_decls) = true
nullable(logic_decl_loc) = false
nullable(logic_decl) = false
nullable(lexpr_rel) = false
nullable(lexpr_option) = true
nullable(lexpr_list) = true
nullable(lexpr_inner) = false
nullable(lexpr_eof) = false
nullable(lexpr_end_rel) = false
nullable(lexpr_binder) = false
nullable(lexpr) = false
nullable(label_name) = false
nullable(keyword) = false
nullable(is_spec) = false
nullable(is_ext_spec) = false
nullable(is_acsl_spec) = false
nullable(is_acsl_other) = false
nullable(is_acsl_decl_or_code_annot) = false
nullable(indcases) = true
nullable(impact_pragma) = false
nullable(identifier_or_typename) = false
nullable(identifier) = false
nullable(id_as_typename) = false
nullable(grammar_extension_name) = false
nullable(grammar_extension) = false
nullable(full_zones) = false
nullable(full_parameters) = false
nullable(full_parameter) = false
nullable(full_ne_lexpr_list) = false
nullable(full_logic_type) = false
nullable(full_logic_rt_type) = false
nullable(full_lexpr) = false
nullable(full_identifier_or_typename) = false
nullable(full_identifier) = false
nullable(full_assigns) = false
nullable(field_path_elt) = false
nullable(field_init_elt) = false
nullable(field_init) = false
nullable(ext_stmt_loop_spec) = false
nullable(ext_spec) = false
nullable(ext_module_specs_opt) = true
nullable(ext_module_specs) = false
nullable(ext_module_spec) = false
nullable(ext_module_markup) = false
nullable(ext_identifier_opt) = true
nullable(ext_identifier) = false
nullable(ext_global_specs_opt) = true
nullable(ext_global_specs) = false
nullable(ext_global_spec) = false
nullable(ext_global_clauses_opt) = true
nullable(ext_global_clauses) = false
nullable(ext_global_clause) = false
nullable(ext_function_specs_opt) = true
nullable(ext_function_specs) = false
nullable(ext_function_spec) = false
nullable(ext_function_markup) = false
nullable(ext_fun_specs) = false
nullable(ext_fun_spec) = false
nullable(ext_contract_markup) = false
nullable(ext_at_stmt_markup) = false
nullable(exit_rt_type) = true
nullable(exit_kw_c_mode) = true
nullable(enter_rt_type) = true
nullable(enter_kw_c_mode) = true
nullable(end_rt_type) = true
nullable(deprecated_logic_decl) = false
nullable(decreases) = true
nullable(decl_spec) = false
nullable(decl_list) = false
nullable(decl) = false
nullable(datacons_list) = true
nullable(datacons) = false
nullable(cv) = false
nullable(custom_tree_list) = false
nullable(custom_tree) = false
nullable(contract) = true
nullable(constant_option) = true
nullable(constant) = false
nullable(complete_or_disjoint) = true
nullable(code_annotation) = false
nullable(clause_kw) = false
nullable(cast_logic_type) = false
nullable(c_keyword) = false
nullable(bs_keyword) = false
nullable(bounded_var) = false
nullable(binders_reentrance) = false
nullable(binders) = false
nullable(behaviors) = true
nullable(behavior_name_list) = true
nullable(behavior_name) = false
nullable(behavior_body) = true
nullable(begin_rt_type) = true
nullable(beg_code_annotation) = false
nullable(assumes) = true
nullable(assigns) = false
nullable(array_path_elt) = false
nullable(array_init_elt) = false
nullable(array_init) = false
nullable(any_identifier_non_logic) = false
nullable(any_identifier) = false
nullable(any) = false
nullable(annotation) = false
nullable(annot) = false
nullable(allocation) = false
nullable(acsl_c_keyword) = false
nullable(abs_spec_option) = true
nullable(abs_spec_cv_option) = true
nullable(abs_spec_cv) = false
nullable(abs_spec_bis_cv) = false
nullable(abs_spec_bis) = false
nullable(abs_spec) = false
nullable(abs_param_type_list) = true
nullable(abs_param_list) = false
nullable(abs_param) = false
first(zones) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(wildcard) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
first(volatile_opt) = WRITES READS
first(variant) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(var_spec_bis) = LPAR IDENTIFIER
first(var_spec) = STAR LPAR IDENTIFIER
first(update_elt) = LSQUARE DOT
first(update) = LSQUARE DOT
first(typedef) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL PIPE LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(type_spec_cv) = VOLATILE VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CONST CHAR BOOLEAN BOOL
first(type_spec) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(type_annot) = TYPE
first(terminates) = TERMINATES
first(tabs) = LSQUARE
first(string) = STRING_LITERAL
first(stmt_markup_attr) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONSTANT10 CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(stmt_markup) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONSTANT10 CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(stars_cv) = STAR
first(stars) = STAR
first(spec) = WRITES VOID UNSIGNED UNION TYPENAME TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR ASSIGNS ALLOCATES
first(slice_pragma) = SLICE
first(simple_clauses) = WRITES VOID UNSIGNED UNION TYPENAME STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS ENUM ENSURES ELSE DOUBLE CONTINUES CONST CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS ASSIGNS ALLOCATES
first(requires) = REQUIRES
first(relation) = NE LT LE GT GE EQUAL EQ
first(rel_list) = NE LT LE GT GE EQUAL EQ
first(reads_clause) = READS
first(range) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOT DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(post_cond_kind) = RETURNS EXITS ENSURES CONTINUES BREAKS
first(post_cond) = RETURNS EXITS ENSURES CONTINUES BREAKS
first(poly_id_type_add_typename) = IDENTIFIER
first(poly_id_type) = IDENTIFIER
first(poly_id) = IDENTIFIER
first(path_elt) = LSQUARE DOT
first(path) = LSQUARE DOT
first(parameters) = LPAR
first(parameter) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(opt_semicolon) = SEMICOLON
first(opt_parameters) = LPAR
first(opt_label_list) = LBRACE
first(opt_label_2) = LBRACE
first(opt_label_1) = LBRACE
first(non_logic_keyword) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(ne_zones) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(ne_type_list) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(ne_tvar_list) = IDENTIFIER
first(ne_terminates) = TERMINATES
first(ne_simple_clauses) = WRITES VOID UNSIGNED UNION TYPENAME STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS ENUM ENSURES ELSE DOUBLE CONTINUES CONST CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS ASSIGNS ALLOCATES
first(ne_requires) = REQUIRES
first(ne_parameters) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(ne_logic_type_list) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(ne_lexpr_list) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(ne_label_list) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(ne_label_args) = TYPENAME IDENTIFIER
first(ne_decreases) = DECREASES
first(ne_datacons_list) = PIPE IDENTIFIER
first(ne_complete_or_disjoint) = DISJOINT COMPLETE
first(ne_behaviors) = BEHAVIOR
first(ne_behavior_name_list) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(model_annot) = MODEL
first(loop_variant) = LOOP
first(loop_pragma) = LOOP
first(loop_invariant) = LOOP
first(loop_grammar_extension) = LOOP
first(loop_effects) = LOOP
first(loop_annotations) = LOOP FOR
first(loop_annot_stack) = LOOP FOR
first(loop_annot_opt) = LOOP FOR
first(loop_allocation) = LOOP
first(logic_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(logic_rt_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(logic_def) = TYPE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC
first(logic_decls) = TYPE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM
first(logic_decl_loc) = TYPE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM
first(logic_decl) = TYPE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM
first(lexpr_rel) = VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LSQUAREPIPE LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE
first(lexpr_option) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(lexpr_list) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(lexpr_inner) = VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LSQUAREPIPE LPAR LBRACE INTER INITIALIZED IDENTIFIER FRESH FREEABLE FALSE EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE
first(lexpr_eof) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(lexpr_end_rel) = VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LSQUAREPIPE LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE
first(lexpr_binder) = LET LAMBDA FORALL EXISTS
first(lexpr) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(label_name) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(keyword) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(is_spec) = WRITES VOID UNSIGNED UNION TYPENAME TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR ASSIGNS ALLOCATES
first(is_ext_spec) = MODULE INCLUDE FUNCTION EXT_LET EXT_AT CONTRACT
first(is_acsl_spec) = TERMINATES RETURNS REQUIRES FREES EXITS ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSIGNS ALLOCATES
first(is_acsl_other) = WRITES REAL READS LABEL INTEGER BEHAVIORS
first(is_acsl_decl_or_code_annot) = VARIANT TYPE SLICE PREDICATE PRAGMA MODEL LOOP LEMMA INVARIANT INDUCTIVE IMPACT GLOBAL AXIOMATIC AXIOM ASSUMES ASSERT
first(indcases) = CASE
first(impact_pragma) = IMPACT
first(identifier_or_typename) = TYPENAME IDENTIFIER
first(identifier) = IDENTIFIER
first(id_as_typename) = IDENTIFIER
first(grammar_extension_name) = WRITES VOID UNSIGNED UNION TYPENAME STRUCT STATIC SIZEOF SIGNED SHORT REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FLOAT ENUM ELSE DOUBLE CONST CHAR CASE BOOLEAN BOOL BEHAVIORS
first(grammar_extension) = WRITES VOID UNSIGNED UNION TYPENAME STRUCT STATIC SIZEOF SIGNED SHORT REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FLOAT ENUM ELSE DOUBLE CONST CHAR CASE BOOLEAN BOOL BEHAVIORS
first(full_zones) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(full_parameters) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(full_parameter) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(full_ne_lexpr_list) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(full_logic_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(full_logic_rt_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT IDENTIFIER FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(full_lexpr) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(full_identifier_or_typename) = TYPENAME IDENTIFIER
first(full_identifier) = IDENTIFIER
first(full_assigns) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(field_path_elt) = DOT
first(field_init_elt) = DOT
first(field_init) = DOT
first(ext_stmt_loop_spec) = TYPENAME SLICE LOOP INVARIANT IMPACT IDENTIFIER FOR CONTRACT ASSERT
first(ext_spec) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
first(ext_module_specs_opt) = FUNCTION EXT_AT CONTRACT
first(ext_module_specs) = FUNCTION
first(ext_module_spec) = FUNCTION
first(ext_module_markup) = MODULE
first(ext_identifier_opt) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(ext_identifier) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(ext_global_specs_opt) = MODULE
first(ext_global_specs) = MODULE
first(ext_global_spec) = MODULE
first(ext_global_clauses_opt) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET AXIOMATIC AXIOM
first(ext_global_clauses) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET AXIOMATIC AXIOM
first(ext_global_clause) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET AXIOMATIC AXIOM
first(ext_function_specs_opt) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET EXT_AT CONTRACT AXIOMATIC AXIOM
first(ext_function_specs) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET EXT_AT CONTRACT AXIOMATIC AXIOM
first(ext_function_spec) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL EXT_LET EXT_AT CONTRACT AXIOMATIC AXIOM
first(ext_function_markup) = FUNCTION
first(ext_fun_specs) = EXT_AT CONTRACT
first(ext_fun_spec) = EXT_AT CONTRACT
first(ext_contract_markup) = CONTRACT
first(ext_at_stmt_markup) = EXT_AT
first(exit_rt_type) = 
first(exit_kw_c_mode) = 
first(enter_rt_type) = 
first(enter_kw_c_mode) = 
first(end_rt_type) = 
first(deprecated_logic_decl) = TYPE PREDICATE LOGIC AXIOM
first(decreases) = DECREASES
first(decl_spec) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(decl_list) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE GLOBAL AXIOMATIC AXIOM
first(decl) = VOLATILE TYPE PREDICATE MODEL LOGIC LEMMA INDUCTIVE GLOBAL AXIOMATIC AXIOM
first(datacons_list) = PIPE
first(datacons) = IDENTIFIER
first(cv) = VOLATILE CONST
first(custom_tree_list) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(custom_tree) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(contract) = WRITES VOID UNSIGNED UNION TYPENAME TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR ASSIGNS ALLOCATES
first(constant_option) = CONSTANT10 CONSTANT
first(constant) = CONSTANT10 CONSTANT
first(complete_or_disjoint) = DISJOINT COMPLETE
first(code_annotation) = SLICE INVARIANT IMPACT FOR ASSERT
first(clause_kw) = RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
first(cast_logic_type) = VOLATILE VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CONST CHAR BOOLEAN BOOL
first(c_keyword) = VOID UNSIGNED UNION STRUCT STATIC SIZEOF SIGNED SHORT LONG INT IF FLOAT ENUM ELSE DOUBLE CONST CHAR CASE BOOLEAN BOOL
first(bs_keyword) = WITH VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNALLOCATED TYPEOF TRUE SEPARATED RESULT REGISTER OLD OFFSET NULL NOTHING LET LAMBDA INTER INITIALIZED FROM FRESH FREEABLE FORALL FALSE EMPTY DYNAMIC DANGLING BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT ALLOCATION ALLOCABLE
first(bounded_var) = TYPENAME IDENTIFIER
first(binders_reentrance) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(binders) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(behaviors) = BEHAVIOR
first(behavior_name_list) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(behavior_name) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(behavior_body) = WRITES VOID UNSIGNED UNION TYPENAME STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS LONG LABEL INTEGER INT IF IDENTIFIER FREES FLOAT EXITS ENUM ENSURES ELSE DOUBLE CONTINUES CONST CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS ASSUMES ASSIGNS ALLOCATES
first(begin_rt_type) = 
first(beg_code_annotation) = SLICE INVARIANT IMPACT FOR ASSERT
first(assumes) = ASSUMES
first(assigns) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
first(array_path_elt) = LSQUARE
first(array_init_elt) = LSQUARE
first(array_init) = LSQUARE
first(any_identifier_non_logic) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(any_identifier) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
first(any) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
first(annotation) = TYPENAME SLICE LOOP INVARIANT IMPACT IDENTIFIER FOR ASSERT
first(annot) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE IMPACT IF IDENTIFIER GLOBAL FREES FOR FLOAT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ASSERT ALLOCATES
first(allocation) = FREES ALLOCATES
first(acsl_c_keyword) = VOLATILE FOR
first(abs_spec_option) = STAR LSQUARE LPAR
first(abs_spec_cv_option) = STAR LSQUARE LPAR
first(abs_spec_cv) = STAR LSQUARE LPAR
first(abs_spec_bis_cv) = LPAR
first(abs_spec_bis) = LPAR
first(abs_spec) = STAR LSQUARE LPAR
first(abs_param_type_list) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(abs_param_list) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
first(abs_param) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
minimal(zones) = (* 1 *) STRING_LITERAL
minimal(wildcard) = (* 1 *) IDENTIFIER
minimal(volatile_opt) = (* 0 *)
minimal(variant) = (* 1 *) STRING_LITERAL
minimal(var_spec_bis) = (* 1 *) IDENTIFIER
minimal(var_spec) = (* 1 *) IDENTIFIER
minimal(update_elt) = (* 4 *) DOT IDENTIFIER EQUAL STRING_LITERAL
minimal(update) = (* 4 *) DOT IDENTIFIER EQUAL STRING_LITERAL
minimal(typedef) = (* 1 *) IDENTIFIER
minimal(type_spec_cv) = (* 1 *) INTEGER
minimal(type_spec) = (* 1 *) INTEGER
minimal(type_annot) = (* 10 *) TYPE INVARIANT IDENTIFIER LPAR INTEGER IDENTIFIER RPAR EQUAL STRING_LITERAL SEMICOLON
minimal(terminates) = (* 0 *)
minimal(tabs) = (* 2 *) LSQUARE RSQUARE
minimal(string) = (* 1 *) STRING_LITERAL
minimal(stmt_markup_attr) = (* 1 *) IDENTIFIER
minimal(stmt_markup) = (* 1 *) IDENTIFIER
minimal(stars_cv) = (* 1 *) STAR
minimal(stars) = (* 1 *) STAR
minimal(spec) = (* 1 *) EOF
minimal(slice_pragma) = (* 4 *) SLICE PRAGMA IDENTIFIER SEMICOLON
minimal(simple_clauses) = (* 0 *)
minimal(requires) = (* 0 *)
minimal(relation) = (* 1 *) LT
minimal(rel_list) = (* 2 *) LT STRING_LITERAL
minimal(reads_clause) = (* 0 *)
minimal(range) = (* 1 *) DOTDOT
minimal(post_cond_kind) = (* 1 *) ENSURES
minimal(post_cond) = (* 1 *) ENSURES
minimal(poly_id_type_add_typename) = (* 1 *) IDENTIFIER
minimal(poly_id_type) = (* 1 *) IDENTIFIER
minimal(poly_id) = (* 1 *) IDENTIFIER
minimal(path_elt) = (* 2 *) DOT IDENTIFIER
minimal(path) = (* 2 *) DOT IDENTIFIER
minimal(parameters) = (* 4 *) LPAR INTEGER IDENTIFIER RPAR
minimal(parameter) = (* 2 *) INTEGER IDENTIFIER
minimal(opt_semicolon) = (* 0 *)
minimal(opt_parameters) = (* 0 *)
minimal(opt_label_list) = (* 0 *)
minimal(opt_label_2) = (* 0 *)
minimal(opt_label_1) = (* 0 *)
minimal(non_logic_keyword) = (* 1 *) CASE
minimal(ne_zones) = (* 1 *) STRING_LITERAL
minimal(ne_type_list) = (* 1 *) INTEGER
minimal(ne_tvar_list) = (* 1 *) IDENTIFIER
minimal(ne_terminates) = (* 3 *) TERMINATES STRING_LITERAL SEMICOLON
minimal(ne_simple_clauses) = (* 3 *) ENSURES STRING_LITERAL SEMICOLON
minimal(ne_requires) = (* 3 *) REQUIRES STRING_LITERAL SEMICOLON
minimal(ne_parameters) = (* 2 *) INTEGER IDENTIFIER
minimal(ne_logic_type_list) = (* 1 *) INTEGER
minimal(ne_lexpr_list) = (* 1 *) STRING_LITERAL
minimal(ne_label_list) = (* 1 *) IDENTIFIER
minimal(ne_label_args) = (* 1 *) IDENTIFIER
minimal(ne_decreases) = (* 3 *) DECREASES STRING_LITERAL SEMICOLON
minimal(ne_datacons_list) = (* 1 *) IDENTIFIER
minimal(ne_complete_or_disjoint) = (* 3 *) COMPLETE BEHAVIORS SEMICOLON
minimal(ne_behaviors) = (* 3 *) BEHAVIOR IDENTIFIER COLON
minimal(ne_behavior_name_list) = (* 1 *) IDENTIFIER
minimal(model_annot) = (* 7 *) MODEL INTEGER LBRACE INTEGER IDENTIFIER RBRACE SEMICOLON
minimal(loop_variant) = (* 4 *) LOOP VARIANT STRING_LITERAL SEMICOLON
minimal(loop_pragma) = (* 5 *) LOOP PRAGMA IDENTIFIER STRING_LITERAL SEMICOLON
minimal(loop_invariant) = (* 4 *) LOOP INVARIANT STRING_LITERAL SEMICOLON
minimal(loop_grammar_extension) = (* 4 *) LOOP IDENTIFIER STRING_LITERAL SEMICOLON
minimal(loop_effects) = (* 4 *) LOOP ASSIGNS STRING_LITERAL SEMICOLON
minimal(loop_annotations) = (* 4 *) LOOP INVARIANT STRING_LITERAL SEMICOLON
minimal(loop_annot_stack) = (* 4 *) LOOP INVARIANT STRING_LITERAL SEMICOLON
minimal(loop_annot_opt) = (* 0 *)
minimal(loop_allocation) = (* 4 *) LOOP ALLOCATES STRING_LITERAL SEMICOLON
minimal(logic_type) = (* 1 *) INTEGER
minimal(logic_rt_type) = (* 1 *) IDENTIFIER
minimal(logic_def) = (* 4 *) AXIOMATIC IDENTIFIER LBRACE RBRACE
minimal(logic_decls) = (* 0 *)
minimal(logic_decl_loc) = (* 3 *) PREDICATE IDENTIFIER SEMICOLON
minimal(logic_decl) = (* 3 *) PREDICATE IDENTIFIER SEMICOLON
minimal(lexpr_rel) = (* 1 *) STRING_LITERAL
minimal(lexpr_option) = (* 0 *)
minimal(lexpr_list) = (* 0 *)
minimal(lexpr_inner) = (* 1 *) STRING_LITERAL
minimal(lexpr_eof) = (* 2 *) STRING_LITERAL EOF
minimal(lexpr_end_rel) = (* 1 *) STRING_LITERAL
minimal(lexpr_binder) = (* 5 *) FORALL INTEGER IDENTIFIER SEMICOLON STRING_LITERAL
minimal(lexpr) = (* 1 *) STRING_LITERAL
minimal(label_name) = (* 1 *) IDENTIFIER
minimal(keyword) = (* 1 *) LOGIC
minimal(is_spec) = (* 1 *) ENSURES
minimal(is_ext_spec) = (* 1 *) CONTRACT
minimal(is_acsl_spec) = (* 1 *) ENSURES
minimal(is_acsl_other) = (* 1 *) BEHAVIORS
minimal(is_acsl_decl_or_code_annot) = (* 1 *) ASSERT
minimal(indcases) = (* 0 *)
minimal(impact_pragma) = (* 4 *) IMPACT PRAGMA IDENTIFIER SEMICOLON
minimal(identifier_or_typename) = (* 1 *) IDENTIFIER
minimal(identifier) = (* 1 *) IDENTIFIER
minimal(id_as_typename) = (* 1 *) IDENTIFIER
minimal(grammar_extension_name) = (* 1 *) IDENTIFIER
minimal(grammar_extension) = (* 2 *) IDENTIFIER STRING_LITERAL
minimal(full_zones) = (* 1 *) STRING_LITERAL
minimal(full_parameters) = (* 2 *) INTEGER IDENTIFIER
minimal(full_parameter) = (* 2 *) INTEGER IDENTIFIER
minimal(full_ne_lexpr_list) = (* 1 *) STRING_LITERAL
minimal(full_logic_type) = (* 1 *) INTEGER
minimal(full_logic_rt_type) = (* 1 *) IDENTIFIER
minimal(full_lexpr) = (* 1 *) STRING_LITERAL
minimal(full_identifier_or_typename) = (* 1 *) IDENTIFIER
minimal(full_identifier) = (* 1 *) IDENTIFIER
minimal(full_assigns) = (* 1 *) STRING_LITERAL
minimal(field_path_elt) = (* 2 *) DOT IDENTIFIER
minimal(field_init_elt) = (* 4 *) DOT IDENTIFIER EQUAL STRING_LITERAL
minimal(field_init) = (* 4 *) DOT IDENTIFIER EQUAL STRING_LITERAL
minimal(ext_stmt_loop_spec) = (* 1 *) IDENTIFIER
minimal(ext_spec) = (* 1 *) EOF
minimal(ext_module_specs_opt) = (* 0 *)
minimal(ext_module_specs) = (* 3 *) FUNCTION IDENTIFIER COLON
minimal(ext_module_spec) = (* 3 *) FUNCTION IDENTIFIER COLON
minimal(ext_module_markup) = (* 3 *) MODULE IDENTIFIER COLON
minimal(ext_identifier_opt) = (* 0 *)
minimal(ext_identifier) = (* 1 *) IDENTIFIER
minimal(ext_global_specs_opt) = (* 0 *)
minimal(ext_global_specs) = (* 3 *) MODULE IDENTIFIER COLON
minimal(ext_global_spec) = (* 3 *) MODULE IDENTIFIER COLON
minimal(ext_global_clauses_opt) = (* 0 *)
minimal(ext_global_clauses) = (* 3 *) VOLATILE STRING_LITERAL SEMICOLON
minimal(ext_global_clause) = (* 3 *) VOLATILE STRING_LITERAL SEMICOLON
minimal(ext_function_specs_opt) = (* 0 *)
minimal(ext_function_specs) = (* 2 *) CONTRACT COLON
minimal(ext_function_spec) = (* 2 *) CONTRACT COLON
minimal(ext_function_markup) = (* 3 *) FUNCTION IDENTIFIER COLON
minimal(ext_fun_specs) = (* 2 *) CONTRACT COLON
minimal(ext_fun_spec) = (* 2 *) CONTRACT COLON
minimal(ext_contract_markup) = (* 2 *) CONTRACT COLON
minimal(ext_at_stmt_markup) = (* 3 *) EXT_AT IDENTIFIER COLON
minimal(exit_rt_type) = (* 0 *)
minimal(exit_kw_c_mode) = (* 0 *)
minimal(enter_rt_type) = (* 0 *)
minimal(enter_kw_c_mode) = (* 0 *)
minimal(end_rt_type) = (* 0 *)
minimal(deprecated_logic_decl) = (* 3 *) PREDICATE IDENTIFIER SEMICOLON
minimal(decreases) = (* 0 *)
minimal(decl_spec) = (* 2 *) INTEGER IDENTIFIER
minimal(decl_list) = (* 3 *) VOLATILE STRING_LITERAL SEMICOLON
minimal(decl) = (* 3 *) VOLATILE STRING_LITERAL SEMICOLON
minimal(datacons_list) = (* 0 *)
minimal(datacons) = (* 1 *) IDENTIFIER
minimal(cv) = (* 1 *) CONST
minimal(custom_tree_list) = (* 1 *) IDENTIFIER
minimal(custom_tree) = (* 1 *) IDENTIFIER
minimal(contract) = (* 0 *)
minimal(constant_option) = (* 0 *)
minimal(constant) = (* 1 *) CONSTANT
minimal(complete_or_disjoint) = (* 0 *)
minimal(code_annotation) = (* 3 *) ASSERT STRING_LITERAL SEMICOLON
minimal(clause_kw) = (* 1 *) REQUIRES
minimal(cast_logic_type) = (* 1 *) INTEGER
minimal(c_keyword) = (* 1 *) CASE
minimal(bs_keyword) = (* 1 *) ALLOCABLE
minimal(bounded_var) = (* 1 *) IDENTIFIER
minimal(binders_reentrance) = (* 2 *) INTEGER IDENTIFIER
minimal(binders) = (* 2 *) INTEGER IDENTIFIER
minimal(behaviors) = (* 0 *)
minimal(behavior_name_list) = (* 0 *)
minimal(behavior_name) = (* 1 *) IDENTIFIER
minimal(behavior_body) = (* 0 *)
minimal(begin_rt_type) = (* 0 *)
minimal(beg_code_annotation) = (* 1 *) IMPACT
minimal(assumes) = (* 0 *)
minimal(assigns) = (* 1 *) STRING_LITERAL
minimal(array_path_elt) = (* 3 *) LSQUARE DOTDOT RSQUARE
minimal(array_init_elt) = (* 5 *) LSQUARE DOTDOT RSQUARE EQUAL STRING_LITERAL
minimal(array_init) = (* 5 *) LSQUARE DOTDOT RSQUARE EQUAL STRING_LITERAL
minimal(any_identifier_non_logic) = (* 1 *) IDENTIFIER
minimal(any_identifier) = (* 1 *) IDENTIFIER
minimal(any) = (* 1 *) IDENTIFIER
minimal(annotation) = (* 1 *) IDENTIFIER
minimal(annot) = (* 2 *) IDENTIFIER EOF
minimal(allocation) = (* 2 *) ALLOCATES STRING_LITERAL
minimal(acsl_c_keyword) = (* 1 *) FOR
minimal(abs_spec_option) = (* 0 *)
minimal(abs_spec_cv_option) = (* 0 *)
minimal(abs_spec_cv) = (* 1 *) STAR
minimal(abs_spec_bis_cv) = (* 3 *) LPAR STAR RPAR
minimal(abs_spec_bis) = (* 3 *) LPAR STAR RPAR
minimal(abs_spec) = (* 1 *) STAR
minimal(abs_param_type_list) = (* 0 *)
minimal(abs_param_list) = (* 1 *) INTEGER
minimal(abs_param) = (* 1 *) INTEGER
follow(zones) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(wildcard) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(volatile_opt) = SEMICOLON
follow(variant) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(var_spec_bis) = SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA
follow(var_spec) = SEMICOLON RPAR RBRACE COMMA
follow(update_elt) = RBRACE COMMA
follow(update) = RBRACE
follow(typedef) = SEMICOLON
follow(type_spec_cv) = STAR RPAR LSQUARE LPAR
follow(type_spec) = WRITES WITH VOLATILE STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(type_annot) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(terminates) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(tabs) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(string) = WRITES WITH STRING_LITERAL STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(stmt_markup_attr) = COLON
follow(stmt_markup) = WRITES VOLATILE VOID VARIANT UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SLICE SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE PRAGMA MODULE MODEL LOOP LONG LOGIC LEMMA LABEL INVARIANT INTEGER INT INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FREES FOR FLOAT EXT_LET EXT_AT EXITS ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CUSTOM CONTRACT CONTINUES CONSTANT10 CONST COMPLETE COLON CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ASSERT ALLOCATES
follow(stars_cv) = STAR RPAR LSQUARE LPAR
follow(stars) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(spec) = #
follow(slice_pragma) = VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT
follow(simple_clauses) = VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES
follow(requires) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES
follow(relation) = VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LSQUAREPIPE LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE
follow(rel_list) = WRITES WITH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES
follow(reads_clause) = SEMICOLON
follow(range) = RSQUARE RPAR
follow(post_cond_kind) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
follow(post_cond) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(poly_id_type_add_typename) = EQUAL
follow(poly_id_type) = SEMICOLON READS LPAR EQUAL COLON
follow(poly_id) = SEMICOLON READS LPAR EQUAL COLON
follow(path_elt) = LSQUARE EQUAL DOT
follow(path) = EQUAL
follow(parameters) = SEMICOLON READS LBRACE EQUAL
follow(parameter) = SEMICOLON RPAR RBRACE COMMA
follow(opt_semicolon) = RBRACE
follow(opt_parameters) = SEMICOLON READS EQUAL
follow(opt_label_list) = LPAR
follow(opt_label_2) = LPAR
follow(opt_label_1) = LPAR
follow(non_logic_keyword) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(ne_zones) = WRITES SEMICOLON RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(ne_type_list) = RPAR
follow(ne_tvar_list) = GT
follow(ne_terminates) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(ne_simple_clauses) = VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES
follow(ne_requires) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES
follow(ne_parameters) = RPAR
follow(ne_logic_type_list) = GT
follow(ne_lexpr_list) = WRITES SEMICOLON RSQUAREPIPE RPAR RETURNS REQUIRES READS RBRACE IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(ne_label_list) = RBRACE
follow(ne_label_args) = RBRACE
follow(ne_decreases) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(ne_datacons_list) = SEMICOLON
follow(ne_complete_or_disjoint) = VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(ne_behaviors) = VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM
follow(ne_behavior_name_list) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(model_annot) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_variant) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_pragma) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_invariant) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_grammar_extension) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_effects) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_annotations) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_annot_stack) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_annot_opt) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(loop_allocation) = VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(logic_type) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(logic_rt_type) = IDENTIFIER
follow(logic_def) = VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(logic_decls) = RBRACE
follow(logic_decl_loc) = TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM
follow(logic_decl) = TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM
follow(lexpr_rel) = WRITES WITH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES
follow(lexpr_option) = RSQUARE RPAR DOTDOT
follow(lexpr_list) = RSQUAREPIPE RPAR RBRACE
follow(lexpr_inner) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(lexpr_eof) = #
follow(lexpr_end_rel) = WRITES WITH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES
follow(lexpr_binder) = WRITES WITH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES
follow(lexpr) = WRITES WITH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES
follow(label_name) = RPAR RBRACE COMMA
follow(keyword) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(is_spec) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(is_ext_spec) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(is_acsl_spec) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(is_acsl_other) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(is_acsl_decl_or_code_annot) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(indcases) = RBRACE
follow(impact_pragma) = VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT
follow(identifier_or_typename) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(identifier) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(id_as_typename) = STAR LPAR IDENTIFIER
follow(grammar_extension_name) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(grammar_extension) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(full_zones) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(full_parameters) = RPAR
follow(full_parameter) = SEMICOLON RPAR RBRACE
follow(full_ne_lexpr_list) = SEMICOLON
follow(full_logic_type) = SEMICOLON RPAR COMMA
follow(full_logic_rt_type) = IDENTIFIER
follow(full_lexpr) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(full_identifier_or_typename) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(full_identifier) = SEMICOLON READS PIPE LT LPAR LBRACE GT EQUAL COMMA COLON
follow(full_assigns) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(field_path_elt) = LSQUARE EQUAL DOT
follow(field_init_elt) = RBRACE COMMA
follow(field_init) = RBRACE
follow(ext_stmt_loop_spec) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(ext_spec) = #
follow(ext_module_specs_opt) = MODULE EOF
follow(ext_module_specs) = MODULE EOF
follow(ext_module_spec) = MODULE FUNCTION EOF
follow(ext_module_markup) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EOF AXIOMATIC AXIOM
follow(ext_identifier_opt) = COLON
follow(ext_identifier) = COLON
follow(ext_global_specs_opt) = EOF
follow(ext_global_specs) = EOF
follow(ext_global_spec) = MODULE EOF
follow(ext_global_clauses_opt) = MODULE FUNCTION EXT_AT EOF CONTRACT
follow(ext_global_clauses) = MODULE FUNCTION EXT_AT EOF CONTRACT
follow(ext_global_clause) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(ext_function_specs_opt) = MODULE FUNCTION EOF
follow(ext_function_specs) = MODULE FUNCTION EOF
follow(ext_function_spec) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(ext_function_markup) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(ext_fun_specs) = MODULE FUNCTION EOF
follow(ext_fun_spec) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(ext_contract_markup) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(ext_at_stmt_markup) = TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT
follow(exit_rt_type) = WRITES WITH VOLATILE TYPENAME STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(exit_kw_c_mode) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(enter_rt_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
follow(enter_kw_c_mode) = WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LSQUAREPIPE LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE
follow(end_rt_type) = IDENTIFIER
follow(deprecated_logic_decl) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(decreases) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(decl_spec) = SEMICOLON RBRACE COMMA
follow(decl_list) = EOF
follow(decl) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(datacons_list) = SEMICOLON
follow(datacons) = SEMICOLON PIPE
follow(cv) = VOID UNSIGNED UNION TYPENAME STRUCT STAR SIGNED SHORT RPAR REAL LSQUARE LPAR LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
follow(custom_tree_list) = RPAR
follow(custom_tree) = RPAR EOF COMMA
follow(contract) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(constant_option) = RSQUARE
follow(constant) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(complete_or_disjoint) = VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(code_annotation) = VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT
follow(clause_kw) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES
follow(cast_logic_type) = RPAR
follow(c_keyword) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(bs_keyword) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(bounded_var) = EQUAL
follow(binders_reentrance) = SEMICOLON RBRACE COMMA
follow(binders) = SEMICOLON RBRACE
follow(behaviors) = VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM
follow(behavior_name_list) = SEMICOLON
follow(behavior_name) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(behavior_body) = VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM
follow(begin_rt_type) = VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL
follow(beg_code_annotation) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(assumes) = WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES
follow(assigns) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(array_path_elt) = LSQUARE EQUAL DOT
follow(array_init_elt) = RBRACE COMMA
follow(array_init) = RBRACE
follow(any_identifier_non_logic) = RPAR LPAR EOF COMMA
follow(any_identifier) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(any) = EOF
follow(annotation) = VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM
follow(annot) = #
follow(allocation) = SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES
follow(acsl_c_keyword) = WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID_FUNCTION VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STARHAT STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUAREPIPE LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE
follow(abs_spec_option) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(abs_spec_cv_option) = RPAR
follow(abs_spec_cv) = RPAR
follow(abs_spec_bis_cv) = RPAR LSQUARE LPAR
follow(abs_spec_bis) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(abs_spec) = WRITES WITH STARHAT STAR SLASH SEMICOLON RSQUAREPIPE RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES
follow(abs_param_type_list) = RPAR
follow(abs_param_list) = RPAR COMMA
follow(abs_param) = RPAR COMMA
Built an LR(0) automaton with 1155 states.
The grammar is not SLR(1) -- 85 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 1155 states.
416 shift/reduce conflicts were silently solved.
610 out of 1155 states have a default reduction.
409 out of 1155 states are represented.
0 out of 349 symbols keep track of their start position.
0 out of 349 symbols keep track of their end position.
417 out of 676 productions exploit shiftreduce optimization.
2024 functions before inlining, 582 functions after inlining.
