State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On WORD shift to state 1
-- On LPAR shift to state 2
-- On word shift to state 3
-- On type_string shift to state 18
-- On main shift to state 20
## Reductions:

State 1:
## Known stack suffix:
## WORD
## LR(1) items:
word -> WORD . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production word -> WORD

State 2:
## Known stack suffix:
## LPAR
## LR(1) items:
type_string -> LPAR . type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR . type_string COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR . type_string COMMA type_string COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On LPAR shift to state 2
-- On word shift to state 3
-- On type_string shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## word
## LR(1) items:
type_string -> word . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production type_string -> word

State 4:
## Known stack suffix:
## LPAR type_string
## LR(1) items:
type_string -> type_string . word [ WORD COMMA ]
type_string -> LPAR type_string . COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string . COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string . COMMA type_string COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On COMMA shift to state 5
-- On word shift to state 17
## Reductions:

State 5:
## Known stack suffix:
## LPAR type_string COMMA
## LR(1) items:
type_string -> LPAR type_string COMMA . type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA . type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA . type_string COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On LPAR shift to state 2
-- On word shift to state 3
-- On type_string shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## LPAR type_string COMMA type_string
## LR(1) items:
type_string -> type_string . word [ WORD RPAR COMMA ]
type_string -> LPAR type_string COMMA type_string . RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA type_string . COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA type_string . COMMA type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On RPAR shift to state 7
-- On COMMA shift to state 9
-- On word shift to state 17
## Reductions:

State 7:
## Known stack suffix:
## LPAR type_string COMMA type_string RPAR
## LR(1) items:
type_string -> LPAR type_string COMMA type_string RPAR . word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On word shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## LPAR type_string COMMA type_string RPAR word
## LR(1) items:
type_string -> LPAR type_string COMMA type_string RPAR word . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production type_string -> LPAR type_string COMMA type_string RPAR word

State 9:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA . type_string RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA type_string COMMA . type_string COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On LPAR shift to state 2
-- On word shift to state 3
-- On type_string shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string
## LR(1) items:
type_string -> type_string . word [ WORD RPAR COMMA ]
type_string -> LPAR type_string COMMA type_string COMMA type_string . RPAR word [ WORD RPAR EOF COMMA ]
type_string -> LPAR type_string COMMA type_string COMMA type_string . COMMA type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On RPAR shift to state 11
-- On COMMA shift to state 13
-- On word shift to state 17
## Reductions:

State 11:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string RPAR
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA type_string RPAR . word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On word shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string RPAR word
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA type_string RPAR word . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production type_string -> LPAR type_string COMMA type_string COMMA type_string RPAR word

State 13:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string COMMA
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA type_string COMMA . type_string RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On LPAR shift to state 2
-- On word shift to state 3
-- On type_string shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string COMMA type_string
## LR(1) items:
type_string -> type_string . word [ WORD RPAR ]
type_string -> LPAR type_string COMMA type_string COMMA type_string COMMA type_string . RPAR word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On RPAR shift to state 15
-- On word shift to state 17
## Reductions:

State 15:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string COMMA type_string RPAR
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA type_string COMMA type_string RPAR . word [ WORD RPAR EOF COMMA ]
## Transitions:
-- On WORD shift to state 1
-- On word shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## LPAR type_string COMMA type_string COMMA type_string COMMA type_string RPAR word
## LR(1) items:
type_string -> LPAR type_string COMMA type_string COMMA type_string COMMA type_string RPAR word . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production type_string -> LPAR type_string COMMA type_string COMMA type_string COMMA type_string RPAR word

State 17:
## Known stack suffix:
## type_string word
## LR(1) items:
type_string -> type_string word . [ WORD RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On WORD RPAR EOF COMMA
--   reduce production type_string -> type_string word

State 18:
## Known stack suffix:
## type_string
## LR(1) items:
main -> type_string . EOF [ # ]
type_string -> type_string . word [ WORD EOF ]
## Transitions:
-- On WORD shift to state 1
-- On EOF shift to state 19
-- On word shift to state 17
## Reductions:

State 19:
## Known stack suffix:
## type_string EOF
## LR(1) items:
main -> type_string EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> type_string EOF

State 20:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

