%{
 %}
%start main
%token COMMA
%token EOF
%token LPAR
%token RPAR
%token <string> WORD
%type <string> main
%%

main:
  _1 = type_string _2 = EOF
    {                                                                                      ( _1 )}

word:
  _1 = WORD
    {                                                                                      ( _1 )}

type_string:
  _1 = word
    {                                                                                      ( _1 )}
| _1 = type_string _2 = word
    {                                                                                      ( "'a "^_2 )}
| _1 = LPAR _2 = type_string _3 = COMMA _4 = type_string _5 = RPAR _6 = word
    {                                                                                      ( "('a,'b) "^_6 )}
| _1 = LPAR _2 = type_string _3 = COMMA _4 = type_string _5 = COMMA _6 = type_string _7 = RPAR _8 = word
    {                                                                                      ( "('a,'b,'c) "^_8 )}
| _1 = LPAR _2 = type_string _3 = COMMA _4 = type_string _5 = COMMA _6 = type_string _7 = COMMA _8 = type_string _9 = RPAR _10 = word
    {                                                                                      ( "('a,'b,'c,'d) "^_10 )}

%%
