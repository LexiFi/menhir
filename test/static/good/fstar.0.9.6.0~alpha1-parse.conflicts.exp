
** Conflict (shift/reduce) in state 678.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
noSeqTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 678, looking ahead at BAR, reducing production
** noSeqTerm -> TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   noSeqTerm // lookahead token is inherited
                                   TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) . 

** In state 678, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   noSeqTerm 
                                   TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 
                                                 reverse_left_flexible_nonempty_list(BAR,patternBranch) . BAR patternBranch 

** Conflict (shift/reduce) in state 654.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_7) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
noSeqTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 654, looking ahead at BAR, reducing production
** noSeqTerm -> MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_7) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   noSeqTerm // lookahead token is inherited
                                   MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_7) . 

** In state 654, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   noSeqTerm 
                                   MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_7) 
                                                   reverse_left_flexible_list(BAR,__anonymous_7) . BAR patternBranch 

** Conflict (shift/reduce) in state 617.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
noSeqTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 617, looking ahead at BAR, reducing production
** noSeqTerm -> FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   noSeqTerm // lookahead token is inherited
                                   FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) . 

** In state 617, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   noSeqTerm 
                                   FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
                                            reverse_left_flexible_nonempty_list(BAR,patternBranch) . BAR patternBranch 

** Conflict (shift/reduce) in state 437.
** Tokens involved: SEMICOLON_SEMICOLON SEMICOLON
** The following explanations concentrate on token SEMICOLON_SEMICOLON.
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow noSeqTerm 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
(?)

** In state 437, looking ahead at SEMICOLON_SEMICOLON, reducing production
** term -> noSeqTerm 
** is permitted because of the following sub-derivation:

noSeqTerm SEMICOLON_SEMICOLON term // lookahead token appears
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) // lookahead token is inherited
         patternBranch // lookahead token is inherited
         disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                            noSeqTerm . 

** In state 437, looking ahead at SEMICOLON_SEMICOLON, shifting is permitted
** because of the following sub-derivation:

noSeqTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         patternBranch 
         disjunctivePattern maybeFocusArrow term 
                                            noSeqTerm . SEMICOLON_SEMICOLON term 
